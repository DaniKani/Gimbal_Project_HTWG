
Test1_Dani.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000089e8  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000884  08008b88  08008b88  00018b88  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800940c  0800940c  00020204  2**0
                  CONTENTS
  4 .ARM          00000000  0800940c  0800940c  00020204  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800940c  0800940c  00020204  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800940c  0800940c  0001940c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009410  08009410  00019410  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000204  20000000  08009414  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000015c  20000208  08009618  00020208  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20000364  08009618  00020364  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006887  00000000  00000000  00020234  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001694  00000000  00000000  00026abb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000004e0  00000000  00000000  00028150  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000408  00000000  00000000  00028630  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00011079  00000000  00000000  00028a38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00007a9e  00000000  00000000  00039ab1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000576a0  00000000  00000000  0004154f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00098bef  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000287c  00000000  00000000  00098c40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000208 	.word	0x20000208
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08008b70 	.word	0x08008b70

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000020c 	.word	0x2000020c
 80001dc:	08008b70 	.word	0x08008b70

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2lz>:
 8000c98:	b538      	push	{r3, r4, r5, lr}
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	4604      	mov	r4, r0
 8000ca0:	460d      	mov	r5, r1
 8000ca2:	f7ff ff23 	bl	8000aec <__aeabi_dcmplt>
 8000ca6:	b928      	cbnz	r0, 8000cb4 <__aeabi_d2lz+0x1c>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	4629      	mov	r1, r5
 8000cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cb0:	f000 b80a 	b.w	8000cc8 <__aeabi_d2ulz>
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cba:	f000 f805 	bl	8000cc8 <__aeabi_d2ulz>
 8000cbe:	4240      	negs	r0, r0
 8000cc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc4:	bd38      	pop	{r3, r4, r5, pc}
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_d2ulz>:
 8000cc8:	b5d0      	push	{r4, r6, r7, lr}
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <__aeabi_d2ulz+0x34>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	4606      	mov	r6, r0
 8000cd0:	460f      	mov	r7, r1
 8000cd2:	f7ff fc99 	bl	8000608 <__aeabi_dmul>
 8000cd6:	f7ff ff6f 	bl	8000bb8 <__aeabi_d2uiz>
 8000cda:	4604      	mov	r4, r0
 8000cdc:	f7ff fc1a 	bl	8000514 <__aeabi_ui2d>
 8000ce0:	4b07      	ldr	r3, [pc, #28]	; (8000d00 <__aeabi_d2ulz+0x38>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	f7ff fc90 	bl	8000608 <__aeabi_dmul>
 8000ce8:	4602      	mov	r2, r0
 8000cea:	460b      	mov	r3, r1
 8000cec:	4630      	mov	r0, r6
 8000cee:	4639      	mov	r1, r7
 8000cf0:	f7ff fad2 	bl	8000298 <__aeabi_dsub>
 8000cf4:	f7ff ff60 	bl	8000bb8 <__aeabi_d2uiz>
 8000cf8:	4621      	mov	r1, r4
 8000cfa:	bdd0      	pop	{r4, r6, r7, pc}
 8000cfc:	3df00000 	.word	0x3df00000
 8000d00:	41f00000 	.word	0x41f00000

08000d04 <EKF_Init>:
float h1;
float h2;

/*--------------------------------------*/

void EKF_Init(EKF *ekf, float P[2], float Q[2], float R[3]) {
 8000d04:	b480      	push	{r7}
 8000d06:	b085      	sub	sp, #20
 8000d08:	af00      	add	r7, sp, #0
 8000d0a:	60f8      	str	r0, [r7, #12]
 8000d0c:	60b9      	str	r1, [r7, #8]
 8000d0e:	607a      	str	r2, [r7, #4]
 8000d10:	603b      	str	r3, [r7, #0]

	/* Reset state estimates */
	ekf->roll_r 	= 0.0f;
 8000d12:	68fb      	ldr	r3, [r7, #12]
 8000d14:	f04f 0200 	mov.w	r2, #0
 8000d18:	601a      	str	r2, [r3, #0]
	ekf->pitch_r 	= 0.0f;
 8000d1a:	68fb      	ldr	r3, [r7, #12]
 8000d1c:	f04f 0200 	mov.w	r2, #0
 8000d20:	605a      	str	r2, [r3, #4]
	ekf->yaw_r		= 0.0f;
 8000d22:	68fb      	ldr	r3, [r7, #12]
 8000d24:	f04f 0200 	mov.w	r2, #0
 8000d28:	609a      	str	r2, [r3, #8]

	/* Initialise state covariance matrix */
	ekf->P[0][0] = P[0]; ekf->P[0][1] = 0.0f;
 8000d2a:	68bb      	ldr	r3, [r7, #8]
 8000d2c:	681a      	ldr	r2, [r3, #0]
 8000d2e:	68fb      	ldr	r3, [r7, #12]
 8000d30:	60da      	str	r2, [r3, #12]
 8000d32:	68fb      	ldr	r3, [r7, #12]
 8000d34:	f04f 0200 	mov.w	r2, #0
 8000d38:	611a      	str	r2, [r3, #16]
	ekf->P[1][0] = 0.0f; ekf->P[1][1] = P[1];
 8000d3a:	68fb      	ldr	r3, [r7, #12]
 8000d3c:	f04f 0200 	mov.w	r2, #0
 8000d40:	615a      	str	r2, [r3, #20]
 8000d42:	68bb      	ldr	r3, [r7, #8]
 8000d44:	685a      	ldr	r2, [r3, #4]
 8000d46:	68fb      	ldr	r3, [r7, #12]
 8000d48:	619a      	str	r2, [r3, #24]

	/* Set process and measurement noise */
	ekf->Q[0] = Q[0];
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	681a      	ldr	r2, [r3, #0]
 8000d4e:	68fb      	ldr	r3, [r7, #12]
 8000d50:	61da      	str	r2, [r3, #28]
	ekf->Q[1] = Q[1];
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	685a      	ldr	r2, [r3, #4]
 8000d56:	68fb      	ldr	r3, [r7, #12]
 8000d58:	621a      	str	r2, [r3, #32]

	ekf->R[0] = R[0];
 8000d5a:	683b      	ldr	r3, [r7, #0]
 8000d5c:	681a      	ldr	r2, [r3, #0]
 8000d5e:	68fb      	ldr	r3, [r7, #12]
 8000d60:	625a      	str	r2, [r3, #36]	; 0x24
	ekf->R[1] = R[1];
 8000d62:	683b      	ldr	r3, [r7, #0]
 8000d64:	685a      	ldr	r2, [r3, #4]
 8000d66:	68fb      	ldr	r3, [r7, #12]
 8000d68:	629a      	str	r2, [r3, #40]	; 0x28
	ekf->R[2] = R[2];
 8000d6a:	683b      	ldr	r3, [r7, #0]
 8000d6c:	689a      	ldr	r2, [r3, #8]
 8000d6e:	68fb      	ldr	r3, [r7, #12]
 8000d70:	62da      	str	r2, [r3, #44]	; 0x2c

}
 8000d72:	bf00      	nop
 8000d74:	3714      	adds	r7, #20
 8000d76:	46bd      	mov	sp, r7
 8000d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7c:	4770      	bx	lr

08000d7e <EKF_Predict>:

void EKF_Predict(EKF *ekf, float p_rps, float q_rps, float r_rps, float sampleTime_s) {
 8000d7e:	b580      	push	{r7, lr}
 8000d80:	b096      	sub	sp, #88	; 0x58
 8000d82:	af00      	add	r7, sp, #0
 8000d84:	6178      	str	r0, [r7, #20]
 8000d86:	ed87 0a04 	vstr	s0, [r7, #16]
 8000d8a:	edc7 0a03 	vstr	s1, [r7, #12]
 8000d8e:	ed87 1a02 	vstr	s2, [r7, #8]
 8000d92:	edc7 1a01 	vstr	s3, [r7, #4]


	/* Pre-compute trigonometric quantities */
	float sin_roll = sinf(ekf->roll_r);
 8000d96:	697b      	ldr	r3, [r7, #20]
 8000d98:	edd3 7a00 	vldr	s15, [r3]
 8000d9c:	eeb0 0a67 	vmov.f32	s0, s15
 8000da0:	f007 f87e 	bl	8007ea0 <sinf>
 8000da4:	ed87 0a15 	vstr	s0, [r7, #84]	; 0x54
	float cos_roll = cosf(ekf->roll_r);
 8000da8:	697b      	ldr	r3, [r7, #20]
 8000daa:	edd3 7a00 	vldr	s15, [r3]
 8000dae:	eeb0 0a67 	vmov.f32	s0, s15
 8000db2:	f007 f831 	bl	8007e18 <cosf>
 8000db6:	ed87 0a14 	vstr	s0, [r7, #80]	; 0x50
	float tan_pitch = tanf(ekf->pitch_r);
 8000dba:	697b      	ldr	r3, [r7, #20]
 8000dbc:	edd3 7a01 	vldr	s15, [r3, #4]
 8000dc0:	eeb0 0a67 	vmov.f32	s0, s15
 8000dc4:	f007 f8b2 	bl	8007f2c <tanf>
 8000dc8:	ed87 0a13 	vstr	s0, [r7, #76]	; 0x4c
	float cos_pitch = cosf(ekf->pitch_r);
 8000dcc:	697b      	ldr	r3, [r7, #20]
 8000dce:	edd3 7a01 	vldr	s15, [r3, #4]
 8000dd2:	eeb0 0a67 	vmov.f32	s0, s15
 8000dd6:	f007 f81f 	bl	8007e18 <cosf>
 8000dda:	ed87 0a12 	vstr	s0, [r7, #72]	; 0x48

	/* Compute state transition function dx/dt = f(x,u) */
	float drolldt	= p_rps + tan_pitch * (q_rps * sin_roll + r_rps * cos_roll);
 8000dde:	ed97 7a03 	vldr	s14, [r7, #12]
 8000de2:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000de6:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000dea:	edd7 6a02 	vldr	s13, [r7, #8]
 8000dee:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000df2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000df6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000dfa:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8000dfe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e02:	ed97 7a04 	vldr	s14, [r7, #16]
 8000e06:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e0a:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
	float dpitchdt	= 					   q_rps * cos_roll - r_rps * sin_roll;
 8000e0e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000e12:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000e16:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e1a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000e1e:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000e22:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e26:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000e2a:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
	float dyawdt	= 		  	q_rps *(sin_roll/cos_pitch)	+ r_rps * (cos_roll/cos_pitch);
 8000e2e:	edd7 6a15 	vldr	s13, [r7, #84]	; 0x54
 8000e32:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8000e36:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8000e3a:	edd7 7a03 	vldr	s15, [r7, #12]
 8000e3e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e42:	ed97 6a14 	vldr	s12, [r7, #80]	; 0x50
 8000e46:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8000e4a:	eec6 6a27 	vdiv.f32	s13, s12, s15
 8000e4e:	edd7 7a02 	vldr	s15, [r7, #8]
 8000e52:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e56:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e5a:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c

	/* Update state estimates (x(n+1) = x(n) + T * dx/dt) */
	ekf->roll_r 	+= sampleTime_s * drolldt;
 8000e5e:	697b      	ldr	r3, [r7, #20]
 8000e60:	ed93 7a00 	vldr	s14, [r3]
 8000e64:	edd7 6a01 	vldr	s13, [r7, #4]
 8000e68:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 8000e6c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e70:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e74:	697b      	ldr	r3, [r7, #20]
 8000e76:	edc3 7a00 	vstr	s15, [r3]
	ekf->pitch_r	+= sampleTime_s * dpitchdt;
 8000e7a:	697b      	ldr	r3, [r7, #20]
 8000e7c:	ed93 7a01 	vldr	s14, [r3, #4]
 8000e80:	edd7 6a01 	vldr	s13, [r7, #4]
 8000e84:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8000e88:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e8c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e90:	697b      	ldr	r3, [r7, #20]
 8000e92:	edc3 7a01 	vstr	s15, [r3, #4]
	ekf->yaw_r		+= sampleTime_s * dyawdt;
 8000e96:	697b      	ldr	r3, [r7, #20]
 8000e98:	ed93 7a02 	vldr	s14, [r3, #8]
 8000e9c:	edd7 6a01 	vldr	s13, [r7, #4]
 8000ea0:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 8000ea4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000ea8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000eac:	697b      	ldr	r3, [r7, #20]
 8000eae:	edc3 7a02 	vstr	s15, [r3, #8]

	/* Re-compute trigonometric quantities */
	sin_roll 			= sinf(ekf->roll_r);
 8000eb2:	697b      	ldr	r3, [r7, #20]
 8000eb4:	edd3 7a00 	vldr	s15, [r3]
 8000eb8:	eeb0 0a67 	vmov.f32	s0, s15
 8000ebc:	f006 fff0 	bl	8007ea0 <sinf>
 8000ec0:	ed87 0a15 	vstr	s0, [r7, #84]	; 0x54
	cos_roll 			= cosf(ekf->roll_r);
 8000ec4:	697b      	ldr	r3, [r7, #20]
 8000ec6:	edd3 7a00 	vldr	s15, [r3]
 8000eca:	eeb0 0a67 	vmov.f32	s0, s15
 8000ece:	f006 ffa3 	bl	8007e18 <cosf>
 8000ed2:	ed87 0a14 	vstr	s0, [r7, #80]	; 0x50
	tan_pitch 			= tanf(ekf->pitch_r);
 8000ed6:	697b      	ldr	r3, [r7, #20]
 8000ed8:	edd3 7a01 	vldr	s15, [r3, #4]
 8000edc:	eeb0 0a67 	vmov.f32	s0, s15
 8000ee0:	f007 f824 	bl	8007f2c <tanf>
 8000ee4:	ed87 0a13 	vstr	s0, [r7, #76]	; 0x4c
	float cos_pitch_inv = 1.0f / cosf(ekf->pitch_r);
 8000ee8:	697b      	ldr	r3, [r7, #20]
 8000eea:	edd3 7a01 	vldr	s15, [r3, #4]
 8000eee:	eeb0 0a67 	vmov.f32	s0, s15
 8000ef2:	f006 ff91 	bl	8007e18 <cosf>
 8000ef6:	eeb0 7a40 	vmov.f32	s14, s0
 8000efa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8000efe:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f02:	edc7 7a0e 	vstr	s15, [r7, #56]	; 0x38

	/* Compute Jacobian of state transition function A(x,u) = df(x,u)/dx */
	float A[2][2] =
	{ 	{ tan_pitch * (q_rps * cos_roll - r_rps * sin_roll) , (q_rps * sin_roll + r_rps * cos_roll) * cos_pitch_inv * cos_pitch_inv },
 8000f06:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f0a:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f0e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f12:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f16:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f1a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f1e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8000f22:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8000f26:	ee67 7a27 	vmul.f32	s15, s14, s15
	float A[2][2] =
 8000f2a:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
	{ 	{ tan_pitch * (q_rps * cos_roll - r_rps * sin_roll) , (q_rps * sin_roll + r_rps * cos_roll) * cos_pitch_inv * cos_pitch_inv },
 8000f2e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f32:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f36:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f3a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f3e:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f42:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f46:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000f4a:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000f4e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f52:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000f56:	ee67 7a27 	vmul.f32	s15, s14, s15
	float A[2][2] =
 8000f5a:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
		{ -(q_rps * sin_roll + r_rps * cos_roll)			, 	  0.0f } };
 8000f5e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f62:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f66:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f6a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f6e:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f72:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f76:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f7a:	eef1 7a67 	vneg.f32	s15, s15
	float A[2][2] =
 8000f7e:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
 8000f82:	f04f 0300 	mov.w	r3, #0
 8000f86:	637b      	str	r3, [r7, #52]	; 0x34

	/* Update state covariance matrix P(n+1) = P(n) + T * (A * P(n) + P(n) * A' + Q) (note that A[1][1] = 0!) */
	float Pnew[2][2] =
	{	{A[0][0] * ekf->P[0][0] + A[0][1] * ekf->P[1][0] + ekf->P[0][0] * A[0][0] + ekf->P[0][1] * A[0][1] + ekf->Q[0], A[0][0] * ekf->P[0][1] + A[0][1] * ekf->P[1][1] + ekf->P[0][0] * A[1][0]},
 8000f88:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 8000f8c:	697b      	ldr	r3, [r7, #20]
 8000f8e:	edd3 7a03 	vldr	s15, [r3, #12]
 8000f92:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f96:	edd7 6a0b 	vldr	s13, [r7, #44]	; 0x2c
 8000f9a:	697b      	ldr	r3, [r7, #20]
 8000f9c:	edd3 7a05 	vldr	s15, [r3, #20]
 8000fa0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fa4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fa8:	697b      	ldr	r3, [r7, #20]
 8000faa:	edd3 6a03 	vldr	s13, [r3, #12]
 8000fae:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8000fb2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fb6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fba:	697b      	ldr	r3, [r7, #20]
 8000fbc:	edd3 6a04 	vldr	s13, [r3, #16]
 8000fc0:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8000fc4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fc8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fcc:	697b      	ldr	r3, [r7, #20]
 8000fce:	edd3 7a07 	vldr	s15, [r3, #28]
 8000fd2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8000fd6:	edc7 7a06 	vstr	s15, [r7, #24]
	{	{A[0][0] * ekf->P[0][0] + A[0][1] * ekf->P[1][0] + ekf->P[0][0] * A[0][0] + ekf->P[0][1] * A[0][1] + ekf->Q[0], A[0][0] * ekf->P[0][1] + A[0][1] * ekf->P[1][1] + ekf->P[0][0] * A[1][0]},
 8000fda:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 8000fde:	697b      	ldr	r3, [r7, #20]
 8000fe0:	edd3 7a04 	vldr	s15, [r3, #16]
 8000fe4:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000fe8:	edd7 6a0b 	vldr	s13, [r7, #44]	; 0x2c
 8000fec:	697b      	ldr	r3, [r7, #20]
 8000fee:	edd3 7a06 	vldr	s15, [r3, #24]
 8000ff2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000ff6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000ffa:	697b      	ldr	r3, [r7, #20]
 8000ffc:	edd3 6a03 	vldr	s13, [r3, #12]
 8001000:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 8001004:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001008:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 800100c:	edc7 7a07 	vstr	s15, [r7, #28]
		{A[1][0] * ekf->P[0][0] + 						   ekf->P[1][0] * A[0][0] + ekf->P[1][1] * A[0][1], 			A[1][0] * ekf->P[0][1] + 						  ekf->P[1][0] * A[1][0] + ekf->Q[1]} };
 8001010:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001014:	697b      	ldr	r3, [r7, #20]
 8001016:	edd3 7a03 	vldr	s15, [r3, #12]
 800101a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800101e:	697b      	ldr	r3, [r7, #20]
 8001020:	edd3 6a05 	vldr	s13, [r3, #20]
 8001024:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001028:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800102c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001030:	697b      	ldr	r3, [r7, #20]
 8001032:	edd3 6a06 	vldr	s13, [r3, #24]
 8001036:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800103a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800103e:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8001042:	edc7 7a08 	vstr	s15, [r7, #32]
		{A[1][0] * ekf->P[0][0] + 						   ekf->P[1][0] * A[0][0] + ekf->P[1][1] * A[0][1], 			A[1][0] * ekf->P[0][1] + 						  ekf->P[1][0] * A[1][0] + ekf->Q[1]} };
 8001046:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800104a:	697b      	ldr	r3, [r7, #20]
 800104c:	edd3 7a04 	vldr	s15, [r3, #16]
 8001050:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001054:	697b      	ldr	r3, [r7, #20]
 8001056:	edd3 6a05 	vldr	s13, [r3, #20]
 800105a:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 800105e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001062:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001066:	697b      	ldr	r3, [r7, #20]
 8001068:	edd3 7a08 	vldr	s15, [r3, #32]
 800106c:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8001070:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24

	ekf->P[0][0] += sampleTime_s * Pnew[0][0]; ekf->P[0][1] += sampleTime_s * Pnew[0][1];
 8001074:	697b      	ldr	r3, [r7, #20]
 8001076:	ed93 7a03 	vldr	s14, [r3, #12]
 800107a:	edd7 6a06 	vldr	s13, [r7, #24]
 800107e:	edd7 7a01 	vldr	s15, [r7, #4]
 8001082:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001086:	ee77 7a27 	vadd.f32	s15, s14, s15
 800108a:	697b      	ldr	r3, [r7, #20]
 800108c:	edc3 7a03 	vstr	s15, [r3, #12]
 8001090:	697b      	ldr	r3, [r7, #20]
 8001092:	ed93 7a04 	vldr	s14, [r3, #16]
 8001096:	edd7 6a07 	vldr	s13, [r7, #28]
 800109a:	edd7 7a01 	vldr	s15, [r7, #4]
 800109e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010a6:	697b      	ldr	r3, [r7, #20]
 80010a8:	edc3 7a04 	vstr	s15, [r3, #16]
	ekf->P[1][0] += sampleTime_s * Pnew[1][0]; ekf->P[1][1] += sampleTime_s * Pnew[1][1];
 80010ac:	697b      	ldr	r3, [r7, #20]
 80010ae:	ed93 7a05 	vldr	s14, [r3, #20]
 80010b2:	edd7 6a08 	vldr	s13, [r7, #32]
 80010b6:	edd7 7a01 	vldr	s15, [r7, #4]
 80010ba:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010c2:	697b      	ldr	r3, [r7, #20]
 80010c4:	edc3 7a05 	vstr	s15, [r3, #20]
 80010c8:	697b      	ldr	r3, [r7, #20]
 80010ca:	ed93 7a06 	vldr	s14, [r3, #24]
 80010ce:	edd7 6a09 	vldr	s13, [r7, #36]	; 0x24
 80010d2:	edd7 7a01 	vldr	s15, [r7, #4]
 80010d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010da:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010de:	697b      	ldr	r3, [r7, #20]
 80010e0:	edc3 7a06 	vstr	s15, [r3, #24]
}
 80010e4:	bf00      	nop
 80010e6:	3758      	adds	r7, #88	; 0x58
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bd80      	pop	{r7, pc}

080010ec <GY511_init>:
lsm303MagData raw;



void GY511_init(uint8_t mode, uint8_t gain, uint8_t rate)
{
 80010ec:	b580      	push	{r7, lr}
 80010ee:	b082      	sub	sp, #8
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	4603      	mov	r3, r0
 80010f4:	71fb      	strb	r3, [r7, #7]
 80010f6:	460b      	mov	r3, r1
 80010f8:	71bb      	strb	r3, [r7, #6]
 80010fa:	4613      	mov	r3, r2
 80010fc:	717b      	strb	r3, [r7, #5]
	switch(gain)
 80010fe:	79bb      	ldrb	r3, [r7, #6]
 8001100:	2be0      	cmp	r3, #224	; 0xe0
 8001102:	d040      	beq.n	8001186 <GY511_init+0x9a>
 8001104:	2be0      	cmp	r3, #224	; 0xe0
 8001106:	dc45      	bgt.n	8001194 <GY511_init+0xa8>
 8001108:	2bc0      	cmp	r3, #192	; 0xc0
 800110a:	d035      	beq.n	8001178 <GY511_init+0x8c>
 800110c:	2bc0      	cmp	r3, #192	; 0xc0
 800110e:	dc41      	bgt.n	8001194 <GY511_init+0xa8>
 8001110:	2ba0      	cmp	r3, #160	; 0xa0
 8001112:	d02a      	beq.n	800116a <GY511_init+0x7e>
 8001114:	2ba0      	cmp	r3, #160	; 0xa0
 8001116:	dc3d      	bgt.n	8001194 <GY511_init+0xa8>
 8001118:	2b80      	cmp	r3, #128	; 0x80
 800111a:	d01f      	beq.n	800115c <GY511_init+0x70>
 800111c:	2b80      	cmp	r3, #128	; 0x80
 800111e:	dc39      	bgt.n	8001194 <GY511_init+0xa8>
 8001120:	2b60      	cmp	r3, #96	; 0x60
 8001122:	d014      	beq.n	800114e <GY511_init+0x62>
 8001124:	2b60      	cmp	r3, #96	; 0x60
 8001126:	dc35      	bgt.n	8001194 <GY511_init+0xa8>
 8001128:	2b20      	cmp	r3, #32
 800112a:	d002      	beq.n	8001132 <GY511_init+0x46>
 800112c:	2b40      	cmp	r3, #64	; 0x40
 800112e:	d007      	beq.n	8001140 <GY511_init+0x54>
			Mag_Gauss_LSB_XY = 230.0f;
			Mag_Gauss_LSB_Z = 205.0f;
			break;

		default:
			break;
 8001130:	e030      	b.n	8001194 <GY511_init+0xa8>
			Mag_Gauss_LSB_XY = 1100.0f;
 8001132:	4b2b      	ldr	r3, [pc, #172]	; (80011e0 <GY511_init+0xf4>)
 8001134:	4a2b      	ldr	r2, [pc, #172]	; (80011e4 <GY511_init+0xf8>)
 8001136:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 980.0f;
 8001138:	4b2b      	ldr	r3, [pc, #172]	; (80011e8 <GY511_init+0xfc>)
 800113a:	4a2c      	ldr	r2, [pc, #176]	; (80011ec <GY511_init+0x100>)
 800113c:	601a      	str	r2, [r3, #0]
			break;
 800113e:	e02a      	b.n	8001196 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 855.0f;
 8001140:	4b27      	ldr	r3, [pc, #156]	; (80011e0 <GY511_init+0xf4>)
 8001142:	4a2b      	ldr	r2, [pc, #172]	; (80011f0 <GY511_init+0x104>)
 8001144:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 760.0f;
 8001146:	4b28      	ldr	r3, [pc, #160]	; (80011e8 <GY511_init+0xfc>)
 8001148:	4a2a      	ldr	r2, [pc, #168]	; (80011f4 <GY511_init+0x108>)
 800114a:	601a      	str	r2, [r3, #0]
			break;
 800114c:	e023      	b.n	8001196 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 670.0f;
 800114e:	4b24      	ldr	r3, [pc, #144]	; (80011e0 <GY511_init+0xf4>)
 8001150:	4a29      	ldr	r2, [pc, #164]	; (80011f8 <GY511_init+0x10c>)
 8001152:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 600.0f;
 8001154:	4b24      	ldr	r3, [pc, #144]	; (80011e8 <GY511_init+0xfc>)
 8001156:	4a29      	ldr	r2, [pc, #164]	; (80011fc <GY511_init+0x110>)
 8001158:	601a      	str	r2, [r3, #0]
			break;
 800115a:	e01c      	b.n	8001196 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 450.0f;
 800115c:	4b20      	ldr	r3, [pc, #128]	; (80011e0 <GY511_init+0xf4>)
 800115e:	4a28      	ldr	r2, [pc, #160]	; (8001200 <GY511_init+0x114>)
 8001160:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 400.0f;
 8001162:	4b21      	ldr	r3, [pc, #132]	; (80011e8 <GY511_init+0xfc>)
 8001164:	4a27      	ldr	r2, [pc, #156]	; (8001204 <GY511_init+0x118>)
 8001166:	601a      	str	r2, [r3, #0]
			break;
 8001168:	e015      	b.n	8001196 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 400.0f;
 800116a:	4b1d      	ldr	r3, [pc, #116]	; (80011e0 <GY511_init+0xf4>)
 800116c:	4a25      	ldr	r2, [pc, #148]	; (8001204 <GY511_init+0x118>)
 800116e:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 355.0f;
 8001170:	4b1d      	ldr	r3, [pc, #116]	; (80011e8 <GY511_init+0xfc>)
 8001172:	4a25      	ldr	r2, [pc, #148]	; (8001208 <GY511_init+0x11c>)
 8001174:	601a      	str	r2, [r3, #0]
			break;
 8001176:	e00e      	b.n	8001196 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 330.0f;
 8001178:	4b19      	ldr	r3, [pc, #100]	; (80011e0 <GY511_init+0xf4>)
 800117a:	4a24      	ldr	r2, [pc, #144]	; (800120c <GY511_init+0x120>)
 800117c:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 295.0f;
 800117e:	4b1a      	ldr	r3, [pc, #104]	; (80011e8 <GY511_init+0xfc>)
 8001180:	4a23      	ldr	r2, [pc, #140]	; (8001210 <GY511_init+0x124>)
 8001182:	601a      	str	r2, [r3, #0]
			break;
 8001184:	e007      	b.n	8001196 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 230.0f;
 8001186:	4b16      	ldr	r3, [pc, #88]	; (80011e0 <GY511_init+0xf4>)
 8001188:	4a22      	ldr	r2, [pc, #136]	; (8001214 <GY511_init+0x128>)
 800118a:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 205.0f;
 800118c:	4b16      	ldr	r3, [pc, #88]	; (80011e8 <GY511_init+0xfc>)
 800118e:	4a22      	ldr	r2, [pc, #136]	; (8001218 <GY511_init+0x12c>)
 8001190:	601a      	str	r2, [r3, #0]
			break;
 8001192:	e000      	b.n	8001196 <GY511_init+0xaa>
			break;
 8001194:	bf00      	nop
	}

	/*Magneto Config*/
	i2c_data_buff[0] = CRA_REG_M;
 8001196:	4b21      	ldr	r3, [pc, #132]	; (800121c <GY511_init+0x130>)
 8001198:	2200      	movs	r2, #0
 800119a:	701a      	strb	r2, [r3, #0]
	i2c_data_buff[1] = rate;
 800119c:	4a1f      	ldr	r2, [pc, #124]	; (800121c <GY511_init+0x130>)
 800119e:	797b      	ldrb	r3, [r7, #5]
 80011a0:	7053      	strb	r3, [r2, #1]
	i2c_dma_write(GY511_addr,i2c_data_buff,I2C_DATA_BUFF_LEN);
 80011a2:	2203      	movs	r2, #3
 80011a4:	491d      	ldr	r1, [pc, #116]	; (800121c <GY511_init+0x130>)
 80011a6:	201e      	movs	r0, #30
 80011a8:	f000 fcfe 	bl	8001ba8 <i2c_dma_write>

	i2c_data_buff[0] = CRB_REG_M;
 80011ac:	4b1b      	ldr	r3, [pc, #108]	; (800121c <GY511_init+0x130>)
 80011ae:	2201      	movs	r2, #1
 80011b0:	701a      	strb	r2, [r3, #0]
	i2c_data_buff[1] = gain;
 80011b2:	4a1a      	ldr	r2, [pc, #104]	; (800121c <GY511_init+0x130>)
 80011b4:	79bb      	ldrb	r3, [r7, #6]
 80011b6:	7053      	strb	r3, [r2, #1]
	i2c_dma_write(GY511_addr,i2c_data_buff,I2C_DATA_BUFF_LEN);
 80011b8:	2203      	movs	r2, #3
 80011ba:	4918      	ldr	r1, [pc, #96]	; (800121c <GY511_init+0x130>)
 80011bc:	201e      	movs	r0, #30
 80011be:	f000 fcf3 	bl	8001ba8 <i2c_dma_write>

	i2c_data_buff[0] = MR_REG_M;
 80011c2:	4b16      	ldr	r3, [pc, #88]	; (800121c <GY511_init+0x130>)
 80011c4:	2202      	movs	r2, #2
 80011c6:	701a      	strb	r2, [r3, #0]
	i2c_data_buff[1] = mode;
 80011c8:	4a14      	ldr	r2, [pc, #80]	; (800121c <GY511_init+0x130>)
 80011ca:	79fb      	ldrb	r3, [r7, #7]
 80011cc:	7053      	strb	r3, [r2, #1]
	i2c_dma_write(GY511_addr,i2c_data_buff,I2C_DATA_BUFF_LEN);
 80011ce:	2203      	movs	r2, #3
 80011d0:	4912      	ldr	r1, [pc, #72]	; (800121c <GY511_init+0x130>)
 80011d2:	201e      	movs	r0, #30
 80011d4:	f000 fce8 	bl	8001ba8 <i2c_dma_write>
}
 80011d8:	bf00      	nop
 80011da:	3708      	adds	r7, #8
 80011dc:	46bd      	mov	sp, r7
 80011de:	bd80      	pop	{r7, pc}
 80011e0:	20000230 	.word	0x20000230
 80011e4:	44898000 	.word	0x44898000
 80011e8:	20000234 	.word	0x20000234
 80011ec:	44750000 	.word	0x44750000
 80011f0:	4455c000 	.word	0x4455c000
 80011f4:	443e0000 	.word	0x443e0000
 80011f8:	44278000 	.word	0x44278000
 80011fc:	44160000 	.word	0x44160000
 8001200:	43e10000 	.word	0x43e10000
 8001204:	43c80000 	.word	0x43c80000
 8001208:	43b18000 	.word	0x43b18000
 800120c:	43a50000 	.word	0x43a50000
 8001210:	43938000 	.word	0x43938000
 8001214:	43660000 	.word	0x43660000
 8001218:	434d0000 	.word	0x434d0000
 800121c:	2000022c 	.word	0x2000022c

08001220 <GY_511_update>:


void GY_511_update(lsm303MagData *data, int8_t *Offset)
{
 8001220:	b580      	push	{r7, lr}
 8001222:	b082      	sub	sp, #8
 8001224:	af00      	add	r7, sp, #0
 8001226:	6078      	str	r0, [r7, #4]
 8001228:	6039      	str	r1, [r7, #0]

	// Data Ready Bit
	i2c_dma_read(GY511_addr,SR_REG_Mg,&DRDY,I2C_DATA_BUFF_LEN);
 800122a:	2303      	movs	r3, #3
 800122c:	4a48      	ldr	r2, [pc, #288]	; (8001350 <GY_511_update+0x130>)
 800122e:	2109      	movs	r1, #9
 8001230:	201e      	movs	r0, #30
 8001232:	f000 fcf1 	bl	8001c18 <i2c_dma_read>



	if(DRDY & 0x01)
 8001236:	4b46      	ldr	r3, [pc, #280]	; (8001350 <GY_511_update+0x130>)
 8001238:	781b      	ldrb	r3, [r3, #0]
 800123a:	f003 0301 	and.w	r3, r3, #1
 800123e:	2b00      	cmp	r3, #0
 8001240:	f000 8081 	beq.w	8001346 <GY_511_update+0x126>
	{
		i2c_dma_read(GY511_addr,GY_511_MAGNETO_OUT_X_H_M,(uint8_t *)magnetometer_buff,MAX_TRANSFER_LEN);
 8001244:	2306      	movs	r3, #6
 8001246:	4a43      	ldr	r2, [pc, #268]	; (8001354 <GY_511_update+0x134>)
 8001248:	2103      	movs	r1, #3
 800124a:	201e      	movs	r0, #30
 800124c:	f000 fce4 	bl	8001c18 <i2c_dma_read>
	{
		return;
	}


	data->Raw_Buffer16[0] = ((int16_t)((magnetometer_buff[0] << 8) | magnetometer_buff[1]))- (int16_t)Offset[0]+(int16_t)108;		//x-Wert
 8001250:	4b40      	ldr	r3, [pc, #256]	; (8001354 <GY_511_update+0x134>)
 8001252:	781b      	ldrb	r3, [r3, #0]
 8001254:	021b      	lsls	r3, r3, #8
 8001256:	b21a      	sxth	r2, r3
 8001258:	4b3e      	ldr	r3, [pc, #248]	; (8001354 <GY_511_update+0x134>)
 800125a:	785b      	ldrb	r3, [r3, #1]
 800125c:	b21b      	sxth	r3, r3
 800125e:	4313      	orrs	r3, r2
 8001260:	b21b      	sxth	r3, r3
 8001262:	b29a      	uxth	r2, r3
 8001264:	683b      	ldr	r3, [r7, #0]
 8001266:	f993 3000 	ldrsb.w	r3, [r3]
 800126a:	b29b      	uxth	r3, r3
 800126c:	1ad3      	subs	r3, r2, r3
 800126e:	b29b      	uxth	r3, r3
 8001270:	336c      	adds	r3, #108	; 0x6c
 8001272:	b29b      	uxth	r3, r3
 8001274:	b21a      	sxth	r2, r3
 8001276:	687b      	ldr	r3, [r7, #4]
 8001278:	80da      	strh	r2, [r3, #6]
	data->Raw_Buffer16[1] = ((int16_t)((magnetometer_buff[2] << 8) | magnetometer_buff[3]))- (int16_t)Offset[2]+(int16_t)100;		//z-Wert
 800127a:	4b36      	ldr	r3, [pc, #216]	; (8001354 <GY_511_update+0x134>)
 800127c:	789b      	ldrb	r3, [r3, #2]
 800127e:	021b      	lsls	r3, r3, #8
 8001280:	b21a      	sxth	r2, r3
 8001282:	4b34      	ldr	r3, [pc, #208]	; (8001354 <GY_511_update+0x134>)
 8001284:	78db      	ldrb	r3, [r3, #3]
 8001286:	b21b      	sxth	r3, r3
 8001288:	4313      	orrs	r3, r2
 800128a:	b21b      	sxth	r3, r3
 800128c:	b29a      	uxth	r2, r3
 800128e:	683b      	ldr	r3, [r7, #0]
 8001290:	3302      	adds	r3, #2
 8001292:	f993 3000 	ldrsb.w	r3, [r3]
 8001296:	b29b      	uxth	r3, r3
 8001298:	1ad3      	subs	r3, r2, r3
 800129a:	b29b      	uxth	r3, r3
 800129c:	3364      	adds	r3, #100	; 0x64
 800129e:	b29b      	uxth	r3, r3
 80012a0:	b21a      	sxth	r2, r3
 80012a2:	687b      	ldr	r3, [r7, #4]
 80012a4:	811a      	strh	r2, [r3, #8]
	data->Raw_Buffer16[2] = ((int16_t)((magnetometer_buff[4] << 8) | magnetometer_buff[5]))- (int16_t)Offset[1]-(int16_t)103;		//y-Wert
 80012a6:	4b2b      	ldr	r3, [pc, #172]	; (8001354 <GY_511_update+0x134>)
 80012a8:	791b      	ldrb	r3, [r3, #4]
 80012aa:	021b      	lsls	r3, r3, #8
 80012ac:	b21a      	sxth	r2, r3
 80012ae:	4b29      	ldr	r3, [pc, #164]	; (8001354 <GY_511_update+0x134>)
 80012b0:	795b      	ldrb	r3, [r3, #5]
 80012b2:	b21b      	sxth	r3, r3
 80012b4:	4313      	orrs	r3, r2
 80012b6:	b21b      	sxth	r3, r3
 80012b8:	b29a      	uxth	r2, r3
 80012ba:	683b      	ldr	r3, [r7, #0]
 80012bc:	3301      	adds	r3, #1
 80012be:	f993 3000 	ldrsb.w	r3, [r3]
 80012c2:	b29b      	uxth	r3, r3
 80012c4:	1ad3      	subs	r3, r2, r3
 80012c6:	b29b      	uxth	r3, r3
 80012c8:	3b67      	subs	r3, #103	; 0x67
 80012ca:	b29b      	uxth	r3, r3
 80012cc:	b21a      	sxth	r2, r3
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	815a      	strh	r2, [r3, #10]



	data->x = ((float)data->Raw_Buffer16[0] / Mag_Gauss_LSB_XY * SENSORS_GAUSS_TO_MICROTESLA);
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80012d8:	ee07 3a90 	vmov	s15, r3
 80012dc:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80012e0:	4b1d      	ldr	r3, [pc, #116]	; (8001358 <GY_511_update+0x138>)
 80012e2:	ed93 7a00 	vldr	s14, [r3]
 80012e6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80012ea:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 800135c <GY_511_update+0x13c>
 80012ee:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	edc3 7a03 	vstr	s15, [r3, #12]
	data->z = ((float)data->Raw_Buffer16[1] / Mag_Gauss_LSB_Z * SENSORS_GAUSS_TO_MICROTESLA);
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80012fe:	ee07 3a90 	vmov	s15, r3
 8001302:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8001306:	4b16      	ldr	r3, [pc, #88]	; (8001360 <GY_511_update+0x140>)
 8001308:	ed93 7a00 	vldr	s14, [r3]
 800130c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001310:	ed9f 7a12 	vldr	s14, [pc, #72]	; 800135c <GY_511_update+0x13c>
 8001314:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001318:	687b      	ldr	r3, [r7, #4]
 800131a:	edc3 7a05 	vstr	s15, [r3, #20]
	data->y = ((float)data->Raw_Buffer16[2] / Mag_Gauss_LSB_XY * SENSORS_GAUSS_TO_MICROTESLA);
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8001324:	ee07 3a90 	vmov	s15, r3
 8001328:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800132c:	4b0a      	ldr	r3, [pc, #40]	; (8001358 <GY_511_update+0x138>)
 800132e:	ed93 7a00 	vldr	s14, [r3]
 8001332:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001336:	ed9f 7a09 	vldr	s14, [pc, #36]	; 800135c <GY_511_update+0x13c>
 800133a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800133e:	687b      	ldr	r3, [r7, #4]
 8001340:	edc3 7a04 	vstr	s15, [r3, #16]
 8001344:	e000      	b.n	8001348 <GY_511_update+0x128>
		return;
 8001346:	bf00      	nop
//	{
//		yawAngle += 2*M_PI; //360.0f;
//	}
//
//	data->yaw = yawAngle;
}
 8001348:	3708      	adds	r7, #8
 800134a:	46bd      	mov	sp, r7
 800134c:	bd80      	pop	{r7, pc}
 800134e:	bf00      	nop
 8001350:	2000022b 	.word	0x2000022b
 8001354:	20000224 	.word	0x20000224
 8001358:	20000230 	.word	0x20000230
 800135c:	3dcccccd 	.word	0x3dcccccd
 8001360:	20000234 	.word	0x20000234

08001364 <Offset_Calibration_gyro>:


}

void Offset_Calibration_gyro(Offset_value_gyro* data, float gyro_x, float gyro_y, float gyro_z, uint16_t cnt_gyro_measure_points, uint16_t Measurement_cnt)
{
 8001364:	b480      	push	{r7}
 8001366:	b087      	sub	sp, #28
 8001368:	af00      	add	r7, sp, #0
 800136a:	6178      	str	r0, [r7, #20]
 800136c:	ed87 0a04 	vstr	s0, [r7, #16]
 8001370:	edc7 0a03 	vstr	s1, [r7, #12]
 8001374:	ed87 1a02 	vstr	s2, [r7, #8]
 8001378:	460b      	mov	r3, r1
 800137a:	80fb      	strh	r3, [r7, #6]
 800137c:	4613      	mov	r3, r2
 800137e:	80bb      	strh	r3, [r7, #4]
	static uint8_t mode = 1;

	switch (mode){
 8001380:	4b3b      	ldr	r3, [pc, #236]	; (8001470 <Offset_Calibration_gyro+0x10c>)
 8001382:	781b      	ldrb	r3, [r3, #0]
 8001384:	2b02      	cmp	r3, #2
 8001386:	d033      	beq.n	80013f0 <Offset_Calibration_gyro+0x8c>
 8001388:	2b02      	cmp	r3, #2
 800138a:	dc6b      	bgt.n	8001464 <Offset_Calibration_gyro+0x100>
 800138c:	2b00      	cmp	r3, #0
 800138e:	d002      	beq.n	8001396 <Offset_Calibration_gyro+0x32>
 8001390:	2b01      	cmp	r3, #1
 8001392:	d004      	beq.n	800139e <Offset_Calibration_gyro+0x3a>

	default:;


	}
}
 8001394:	e066      	b.n	8001464 <Offset_Calibration_gyro+0x100>
			mode=1;
 8001396:	4b36      	ldr	r3, [pc, #216]	; (8001470 <Offset_Calibration_gyro+0x10c>)
 8001398:	2201      	movs	r2, #1
 800139a:	701a      	strb	r2, [r3, #0]
	break;
 800139c:	e062      	b.n	8001464 <Offset_Calibration_gyro+0x100>
			sum_x += gyro_x;
 800139e:	4b35      	ldr	r3, [pc, #212]	; (8001474 <Offset_Calibration_gyro+0x110>)
 80013a0:	ed93 7a00 	vldr	s14, [r3]
 80013a4:	edd7 7a04 	vldr	s15, [r7, #16]
 80013a8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013ac:	4b31      	ldr	r3, [pc, #196]	; (8001474 <Offset_Calibration_gyro+0x110>)
 80013ae:	edc3 7a00 	vstr	s15, [r3]
			sum_y += gyro_y;
 80013b2:	4b31      	ldr	r3, [pc, #196]	; (8001478 <Offset_Calibration_gyro+0x114>)
 80013b4:	ed93 7a00 	vldr	s14, [r3]
 80013b8:	edd7 7a03 	vldr	s15, [r7, #12]
 80013bc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013c0:	4b2d      	ldr	r3, [pc, #180]	; (8001478 <Offset_Calibration_gyro+0x114>)
 80013c2:	edc3 7a00 	vstr	s15, [r3]
			sum_z += gyro_z;
 80013c6:	4b2d      	ldr	r3, [pc, #180]	; (800147c <Offset_Calibration_gyro+0x118>)
 80013c8:	ed93 7a00 	vldr	s14, [r3]
 80013cc:	edd7 7a02 	vldr	s15, [r7, #8]
 80013d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013d4:	4b29      	ldr	r3, [pc, #164]	; (800147c <Offset_Calibration_gyro+0x118>)
 80013d6:	edc3 7a00 	vstr	s15, [r3]
			cnt_gyro_measure_points++;
 80013da:	88fb      	ldrh	r3, [r7, #6]
 80013dc:	3301      	adds	r3, #1
 80013de:	80fb      	strh	r3, [r7, #6]
		if(cnt_gyro_measure_points == Measurement_cnt)
 80013e0:	88fa      	ldrh	r2, [r7, #6]
 80013e2:	88bb      	ldrh	r3, [r7, #4]
 80013e4:	429a      	cmp	r2, r3
 80013e6:	d13c      	bne.n	8001462 <Offset_Calibration_gyro+0xfe>
				mode = 2;
 80013e8:	4b21      	ldr	r3, [pc, #132]	; (8001470 <Offset_Calibration_gyro+0x10c>)
 80013ea:	2202      	movs	r2, #2
 80013ec:	701a      	strb	r2, [r3, #0]
	break;
 80013ee:	e038      	b.n	8001462 <Offset_Calibration_gyro+0xfe>
		 data->x_offset_gyro = sum_x/Measurement_cnt;
 80013f0:	4b20      	ldr	r3, [pc, #128]	; (8001474 <Offset_Calibration_gyro+0x110>)
 80013f2:	edd3 6a00 	vldr	s13, [r3]
 80013f6:	88bb      	ldrh	r3, [r7, #4]
 80013f8:	ee07 3a90 	vmov	s15, r3
 80013fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001400:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001404:	697b      	ldr	r3, [r7, #20]
 8001406:	edc3 7a00 	vstr	s15, [r3]
		 data->y_offset_gyro = sum_y/Measurement_cnt;
 800140a:	4b1b      	ldr	r3, [pc, #108]	; (8001478 <Offset_Calibration_gyro+0x114>)
 800140c:	edd3 6a00 	vldr	s13, [r3]
 8001410:	88bb      	ldrh	r3, [r7, #4]
 8001412:	ee07 3a90 	vmov	s15, r3
 8001416:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800141a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800141e:	697b      	ldr	r3, [r7, #20]
 8001420:	edc3 7a01 	vstr	s15, [r3, #4]
		 data->z_offset_gyro = sum_z/Measurement_cnt;
 8001424:	4b15      	ldr	r3, [pc, #84]	; (800147c <Offset_Calibration_gyro+0x118>)
 8001426:	edd3 6a00 	vldr	s13, [r3]
 800142a:	88bb      	ldrh	r3, [r7, #4]
 800142c:	ee07 3a90 	vmov	s15, r3
 8001430:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001434:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001438:	697b      	ldr	r3, [r7, #20]
 800143a:	edc3 7a02 	vstr	s15, [r3, #8]
		 cnt_gyro_measure_points=0;
 800143e:	2300      	movs	r3, #0
 8001440:	80fb      	strh	r3, [r7, #6]
		 mode = 0;
 8001442:	4b0b      	ldr	r3, [pc, #44]	; (8001470 <Offset_Calibration_gyro+0x10c>)
 8001444:	2200      	movs	r2, #0
 8001446:	701a      	strb	r2, [r3, #0]
		 sum_x=0;
 8001448:	4b0a      	ldr	r3, [pc, #40]	; (8001474 <Offset_Calibration_gyro+0x110>)
 800144a:	f04f 0200 	mov.w	r2, #0
 800144e:	601a      	str	r2, [r3, #0]
		 sum_y=0;
 8001450:	4b09      	ldr	r3, [pc, #36]	; (8001478 <Offset_Calibration_gyro+0x114>)
 8001452:	f04f 0200 	mov.w	r2, #0
 8001456:	601a      	str	r2, [r3, #0]
		 sum_z=0;
 8001458:	4b08      	ldr	r3, [pc, #32]	; (800147c <Offset_Calibration_gyro+0x118>)
 800145a:	f04f 0200 	mov.w	r2, #0
 800145e:	601a      	str	r2, [r3, #0]
	break;
 8001460:	e000      	b.n	8001464 <Offset_Calibration_gyro+0x100>
	break;
 8001462:	bf00      	nop
}
 8001464:	bf00      	nop
 8001466:	371c      	adds	r7, #28
 8001468:	46bd      	mov	sp, r7
 800146a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800146e:	4770      	bx	lr
 8001470:	20000000 	.word	0x20000000
 8001474:	20000238 	.word	0x20000238
 8001478:	2000023c 	.word	0x2000023c
 800147c:	20000240 	.word	0x20000240

08001480 <Offset_Calibration_acc>:

void Offset_Calibration_acc(values_acc* data, Offset_Scale_value_acc* solution, float acc_x, float acc_y, float acc_z, uint16_t number_measure_points)
{
 8001480:	b5b0      	push	{r4, r5, r7, lr}
 8001482:	b086      	sub	sp, #24
 8001484:	af00      	add	r7, sp, #0
 8001486:	6178      	str	r0, [r7, #20]
 8001488:	6139      	str	r1, [r7, #16]
 800148a:	ed87 0a03 	vstr	s0, [r7, #12]
 800148e:	edc7 0a02 	vstr	s1, [r7, #8]
 8001492:	ed87 1a01 	vstr	s2, [r7, #4]
 8001496:	4613      	mov	r3, r2
 8001498:	807b      	strh	r3, [r7, #2]
	switch(start)
 800149a:	4b63      	ldr	r3, [pc, #396]	; (8001628 <Offset_Calibration_acc+0x1a8>)
 800149c:	781b      	ldrb	r3, [r3, #0]
 800149e:	2b02      	cmp	r3, #2
 80014a0:	f000 80ca 	beq.w	8001638 <Offset_Calibration_acc+0x1b8>
 80014a4:	2b02      	cmp	r3, #2
 80014a6:	f300 81b5 	bgt.w	8001814 <Offset_Calibration_acc+0x394>
 80014aa:	2b00      	cmp	r3, #0
 80014ac:	d002      	beq.n	80014b4 <Offset_Calibration_acc+0x34>
 80014ae:	2b01      	cmp	r3, #1
 80014b0:	d00e      	beq.n	80014d0 <Offset_Calibration_acc+0x50>
			break;

		default:

			//do something
			break;
 80014b2:	e1af      	b.n	8001814 <Offset_Calibration_acc+0x394>
			if(!(GPIOC->IDR & BTN_PIN))
 80014b4:	4b5d      	ldr	r3, [pc, #372]	; (800162c <Offset_Calibration_acc+0x1ac>)
 80014b6:	691b      	ldr	r3, [r3, #16]
 80014b8:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80014bc:	2b00      	cmp	r3, #0
 80014be:	f040 81ab 	bne.w	8001818 <Offset_Calibration_acc+0x398>
				start = 1;
 80014c2:	4b59      	ldr	r3, [pc, #356]	; (8001628 <Offset_Calibration_acc+0x1a8>)
 80014c4:	2201      	movs	r2, #1
 80014c6:	701a      	strb	r2, [r3, #0]
				cnt_acc_measure_points=0;
 80014c8:	4b59      	ldr	r3, [pc, #356]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 80014ca:	2200      	movs	r2, #0
 80014cc:	801a      	strh	r2, [r3, #0]
			break;
 80014ce:	e1a3      	b.n	8001818 <Offset_Calibration_acc+0x398>
			cnt_acc_measure_points++;
 80014d0:	4b57      	ldr	r3, [pc, #348]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 80014d2:	881b      	ldrh	r3, [r3, #0]
 80014d4:	3301      	adds	r3, #1
 80014d6:	b29a      	uxth	r2, r3
 80014d8:	4b55      	ldr	r3, [pc, #340]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 80014da:	801a      	strh	r2, [r3, #0]
					switch(axis)
 80014dc:	4b55      	ldr	r3, [pc, #340]	; (8001634 <Offset_Calibration_acc+0x1b4>)
 80014de:	781b      	ldrb	r3, [r3, #0]
 80014e0:	2b05      	cmp	r3, #5
 80014e2:	f200 8093 	bhi.w	800160c <Offset_Calibration_acc+0x18c>
 80014e6:	a201      	add	r2, pc, #4	; (adr r2, 80014ec <Offset_Calibration_acc+0x6c>)
 80014e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014ec:	08001505 	.word	0x08001505
 80014f0:	08001531 	.word	0x08001531
 80014f4:	0800155d 	.word	0x0800155d
 80014f8:	08001589 	.word	0x08001589
 80014fc:	080015b5 	.word	0x080015b5
 8001500:	080015e1 	.word	0x080015e1
								data->x1_data += acc_x ;
 8001504:	697b      	ldr	r3, [r7, #20]
 8001506:	ed93 7a00 	vldr	s14, [r3]
 800150a:	edd7 7a03 	vldr	s15, [r7, #12]
 800150e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001512:	697b      	ldr	r3, [r7, #20]
 8001514:	edc3 7a00 	vstr	s15, [r3]
								if(cnt_acc_measure_points == number_measure_points)
 8001518:	4b45      	ldr	r3, [pc, #276]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 800151a:	881b      	ldrh	r3, [r3, #0]
 800151c:	887a      	ldrh	r2, [r7, #2]
 800151e:	429a      	cmp	r2, r3
 8001520:	d176      	bne.n	8001610 <Offset_Calibration_acc+0x190>
									axis = 1;
 8001522:	4b44      	ldr	r3, [pc, #272]	; (8001634 <Offset_Calibration_acc+0x1b4>)
 8001524:	2201      	movs	r2, #1
 8001526:	701a      	strb	r2, [r3, #0]
									start = 0;
 8001528:	4b3f      	ldr	r3, [pc, #252]	; (8001628 <Offset_Calibration_acc+0x1a8>)
 800152a:	2200      	movs	r2, #0
 800152c:	701a      	strb	r2, [r3, #0]
								break;
 800152e:	e06f      	b.n	8001610 <Offset_Calibration_acc+0x190>
								data->x2_data += acc_x ;
 8001530:	697b      	ldr	r3, [r7, #20]
 8001532:	ed93 7a01 	vldr	s14, [r3, #4]
 8001536:	edd7 7a03 	vldr	s15, [r7, #12]
 800153a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800153e:	697b      	ldr	r3, [r7, #20]
 8001540:	edc3 7a01 	vstr	s15, [r3, #4]
								if(cnt_acc_measure_points == number_measure_points)
 8001544:	4b3a      	ldr	r3, [pc, #232]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 8001546:	881b      	ldrh	r3, [r3, #0]
 8001548:	887a      	ldrh	r2, [r7, #2]
 800154a:	429a      	cmp	r2, r3
 800154c:	d162      	bne.n	8001614 <Offset_Calibration_acc+0x194>
									axis = 2;
 800154e:	4b39      	ldr	r3, [pc, #228]	; (8001634 <Offset_Calibration_acc+0x1b4>)
 8001550:	2202      	movs	r2, #2
 8001552:	701a      	strb	r2, [r3, #0]
									start = 0;
 8001554:	4b34      	ldr	r3, [pc, #208]	; (8001628 <Offset_Calibration_acc+0x1a8>)
 8001556:	2200      	movs	r2, #0
 8001558:	701a      	strb	r2, [r3, #0]
								break;
 800155a:	e05b      	b.n	8001614 <Offset_Calibration_acc+0x194>
								data->y1_data += acc_y ;
 800155c:	697b      	ldr	r3, [r7, #20]
 800155e:	ed93 7a02 	vldr	s14, [r3, #8]
 8001562:	edd7 7a02 	vldr	s15, [r7, #8]
 8001566:	ee77 7a27 	vadd.f32	s15, s14, s15
 800156a:	697b      	ldr	r3, [r7, #20]
 800156c:	edc3 7a02 	vstr	s15, [r3, #8]
								if(cnt_acc_measure_points == number_measure_points)
 8001570:	4b2f      	ldr	r3, [pc, #188]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 8001572:	881b      	ldrh	r3, [r3, #0]
 8001574:	887a      	ldrh	r2, [r7, #2]
 8001576:	429a      	cmp	r2, r3
 8001578:	d14e      	bne.n	8001618 <Offset_Calibration_acc+0x198>
									axis = 3;
 800157a:	4b2e      	ldr	r3, [pc, #184]	; (8001634 <Offset_Calibration_acc+0x1b4>)
 800157c:	2203      	movs	r2, #3
 800157e:	701a      	strb	r2, [r3, #0]
									start = 0;
 8001580:	4b29      	ldr	r3, [pc, #164]	; (8001628 <Offset_Calibration_acc+0x1a8>)
 8001582:	2200      	movs	r2, #0
 8001584:	701a      	strb	r2, [r3, #0]
								break;
 8001586:	e047      	b.n	8001618 <Offset_Calibration_acc+0x198>
								data->y2_data += acc_y ;
 8001588:	697b      	ldr	r3, [r7, #20]
 800158a:	ed93 7a03 	vldr	s14, [r3, #12]
 800158e:	edd7 7a02 	vldr	s15, [r7, #8]
 8001592:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001596:	697b      	ldr	r3, [r7, #20]
 8001598:	edc3 7a03 	vstr	s15, [r3, #12]
								if(cnt_acc_measure_points == number_measure_points)
 800159c:	4b24      	ldr	r3, [pc, #144]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 800159e:	881b      	ldrh	r3, [r3, #0]
 80015a0:	887a      	ldrh	r2, [r7, #2]
 80015a2:	429a      	cmp	r2, r3
 80015a4:	d13a      	bne.n	800161c <Offset_Calibration_acc+0x19c>
									axis = 4;
 80015a6:	4b23      	ldr	r3, [pc, #140]	; (8001634 <Offset_Calibration_acc+0x1b4>)
 80015a8:	2204      	movs	r2, #4
 80015aa:	701a      	strb	r2, [r3, #0]
									start = 0;
 80015ac:	4b1e      	ldr	r3, [pc, #120]	; (8001628 <Offset_Calibration_acc+0x1a8>)
 80015ae:	2200      	movs	r2, #0
 80015b0:	701a      	strb	r2, [r3, #0]
								break;
 80015b2:	e033      	b.n	800161c <Offset_Calibration_acc+0x19c>
								data->z1_data += acc_z ;;
 80015b4:	697b      	ldr	r3, [r7, #20]
 80015b6:	ed93 7a04 	vldr	s14, [r3, #16]
 80015ba:	edd7 7a01 	vldr	s15, [r7, #4]
 80015be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80015c2:	697b      	ldr	r3, [r7, #20]
 80015c4:	edc3 7a04 	vstr	s15, [r3, #16]
								if(cnt_acc_measure_points == number_measure_points)
 80015c8:	4b19      	ldr	r3, [pc, #100]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 80015ca:	881b      	ldrh	r3, [r3, #0]
 80015cc:	887a      	ldrh	r2, [r7, #2]
 80015ce:	429a      	cmp	r2, r3
 80015d0:	d126      	bne.n	8001620 <Offset_Calibration_acc+0x1a0>
									axis = 5;
 80015d2:	4b18      	ldr	r3, [pc, #96]	; (8001634 <Offset_Calibration_acc+0x1b4>)
 80015d4:	2205      	movs	r2, #5
 80015d6:	701a      	strb	r2, [r3, #0]
									start = 0;
 80015d8:	4b13      	ldr	r3, [pc, #76]	; (8001628 <Offset_Calibration_acc+0x1a8>)
 80015da:	2200      	movs	r2, #0
 80015dc:	701a      	strb	r2, [r3, #0]
								break;
 80015de:	e01f      	b.n	8001620 <Offset_Calibration_acc+0x1a0>
								data->z2_data += acc_z ;
 80015e0:	697b      	ldr	r3, [r7, #20]
 80015e2:	ed93 7a05 	vldr	s14, [r3, #20]
 80015e6:	edd7 7a01 	vldr	s15, [r7, #4]
 80015ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 80015ee:	697b      	ldr	r3, [r7, #20]
 80015f0:	edc3 7a05 	vstr	s15, [r3, #20]
								if(cnt_acc_measure_points == number_measure_points)
 80015f4:	4b0e      	ldr	r3, [pc, #56]	; (8001630 <Offset_Calibration_acc+0x1b0>)
 80015f6:	881b      	ldrh	r3, [r3, #0]
 80015f8:	887a      	ldrh	r2, [r7, #2]
 80015fa:	429a      	cmp	r2, r3
 80015fc:	d112      	bne.n	8001624 <Offset_Calibration_acc+0x1a4>
									axis = 0;
 80015fe:	4b0d      	ldr	r3, [pc, #52]	; (8001634 <Offset_Calibration_acc+0x1b4>)
 8001600:	2200      	movs	r2, #0
 8001602:	701a      	strb	r2, [r3, #0]
									start = 2;
 8001604:	4b08      	ldr	r3, [pc, #32]	; (8001628 <Offset_Calibration_acc+0x1a8>)
 8001606:	2202      	movs	r2, #2
 8001608:	701a      	strb	r2, [r3, #0]
								break;
 800160a:	e00b      	b.n	8001624 <Offset_Calibration_acc+0x1a4>
								break;
 800160c:	bf00      	nop
 800160e:	e104      	b.n	800181a <Offset_Calibration_acc+0x39a>
								break;
 8001610:	bf00      	nop
 8001612:	e102      	b.n	800181a <Offset_Calibration_acc+0x39a>
								break;
 8001614:	bf00      	nop
 8001616:	e100      	b.n	800181a <Offset_Calibration_acc+0x39a>
								break;
 8001618:	bf00      	nop
 800161a:	e0fe      	b.n	800181a <Offset_Calibration_acc+0x39a>
								break;
 800161c:	bf00      	nop
 800161e:	e0fc      	b.n	800181a <Offset_Calibration_acc+0x39a>
								break;
 8001620:	bf00      	nop
 8001622:	e0fa      	b.n	800181a <Offset_Calibration_acc+0x39a>
								break;
 8001624:	bf00      	nop
			break;
 8001626:	e0f8      	b.n	800181a <Offset_Calibration_acc+0x39a>
 8001628:	20000244 	.word	0x20000244
 800162c:	40020800 	.word	0x40020800
 8001630:	20000246 	.word	0x20000246
 8001634:	20000245 	.word	0x20000245
			solution->x_offset_acc = (data->x1_data + data->x2_data)/(2*number_measure_points);
 8001638:	697b      	ldr	r3, [r7, #20]
 800163a:	ed93 7a00 	vldr	s14, [r3]
 800163e:	697b      	ldr	r3, [r7, #20]
 8001640:	edd3 7a01 	vldr	s15, [r3, #4]
 8001644:	ee77 6a27 	vadd.f32	s13, s14, s15
 8001648:	887b      	ldrh	r3, [r7, #2]
 800164a:	005b      	lsls	r3, r3, #1
 800164c:	ee07 3a90 	vmov	s15, r3
 8001650:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001654:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001658:	693b      	ldr	r3, [r7, #16]
 800165a:	edc3 7a00 	vstr	s15, [r3]
			solution->y_offset_acc = (data->y1_data + data->y2_data)/(2*number_measure_points);
 800165e:	697b      	ldr	r3, [r7, #20]
 8001660:	ed93 7a02 	vldr	s14, [r3, #8]
 8001664:	697b      	ldr	r3, [r7, #20]
 8001666:	edd3 7a03 	vldr	s15, [r3, #12]
 800166a:	ee77 6a27 	vadd.f32	s13, s14, s15
 800166e:	887b      	ldrh	r3, [r7, #2]
 8001670:	005b      	lsls	r3, r3, #1
 8001672:	ee07 3a90 	vmov	s15, r3
 8001676:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800167a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800167e:	693b      	ldr	r3, [r7, #16]
 8001680:	edc3 7a02 	vstr	s15, [r3, #8]
			solution->z_offset_acc = (data->z1_data + data->z2_data)/(2*number_measure_points);
 8001684:	697b      	ldr	r3, [r7, #20]
 8001686:	ed93 7a04 	vldr	s14, [r3, #16]
 800168a:	697b      	ldr	r3, [r7, #20]
 800168c:	edd3 7a05 	vldr	s15, [r3, #20]
 8001690:	ee77 6a27 	vadd.f32	s13, s14, s15
 8001694:	887b      	ldrh	r3, [r7, #2]
 8001696:	005b      	lsls	r3, r3, #1
 8001698:	ee07 3a90 	vmov	s15, r3
 800169c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80016a0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80016a4:	693b      	ldr	r3, [r7, #16]
 80016a6:	edc3 7a04 	vstr	s15, [r3, #16]
			solution->x_scale_acc = (fabs(data->x1_data) + fabs(data->x2_data))/(2*number_measure_points)/9.81f;
 80016aa:	697b      	ldr	r3, [r7, #20]
 80016ac:	edd3 7a00 	vldr	s15, [r3]
 80016b0:	eef0 7ae7 	vabs.f32	s15, s15
 80016b4:	ee17 0a90 	vmov	r0, s15
 80016b8:	f7fe ff4e 	bl	8000558 <__aeabi_f2d>
 80016bc:	4604      	mov	r4, r0
 80016be:	460d      	mov	r5, r1
 80016c0:	697b      	ldr	r3, [r7, #20]
 80016c2:	edd3 7a01 	vldr	s15, [r3, #4]
 80016c6:	eef0 7ae7 	vabs.f32	s15, s15
 80016ca:	ee17 0a90 	vmov	r0, s15
 80016ce:	f7fe ff43 	bl	8000558 <__aeabi_f2d>
 80016d2:	4602      	mov	r2, r0
 80016d4:	460b      	mov	r3, r1
 80016d6:	4620      	mov	r0, r4
 80016d8:	4629      	mov	r1, r5
 80016da:	f7fe fddf 	bl	800029c <__adddf3>
 80016de:	4602      	mov	r2, r0
 80016e0:	460b      	mov	r3, r1
 80016e2:	4614      	mov	r4, r2
 80016e4:	461d      	mov	r5, r3
 80016e6:	887b      	ldrh	r3, [r7, #2]
 80016e8:	005b      	lsls	r3, r3, #1
 80016ea:	4618      	mov	r0, r3
 80016ec:	f7fe ff22 	bl	8000534 <__aeabi_i2d>
 80016f0:	4602      	mov	r2, r0
 80016f2:	460b      	mov	r3, r1
 80016f4:	4620      	mov	r0, r4
 80016f6:	4629      	mov	r1, r5
 80016f8:	f7ff f8b0 	bl	800085c <__aeabi_ddiv>
 80016fc:	4602      	mov	r2, r0
 80016fe:	460b      	mov	r3, r1
 8001700:	4610      	mov	r0, r2
 8001702:	4619      	mov	r1, r3
 8001704:	a349      	add	r3, pc, #292	; (adr r3, 800182c <Offset_Calibration_acc+0x3ac>)
 8001706:	e9d3 2300 	ldrd	r2, r3, [r3]
 800170a:	f7ff f8a7 	bl	800085c <__aeabi_ddiv>
 800170e:	4602      	mov	r2, r0
 8001710:	460b      	mov	r3, r1
 8001712:	4610      	mov	r0, r2
 8001714:	4619      	mov	r1, r3
 8001716:	f7ff fa6f 	bl	8000bf8 <__aeabi_d2f>
 800171a:	4602      	mov	r2, r0
 800171c:	693b      	ldr	r3, [r7, #16]
 800171e:	605a      	str	r2, [r3, #4]
			solution->y_scale_acc = (fabs(data->y1_data) + fabs(data->y2_data))/(2*number_measure_points)/9.81f;
 8001720:	697b      	ldr	r3, [r7, #20]
 8001722:	edd3 7a02 	vldr	s15, [r3, #8]
 8001726:	eef0 7ae7 	vabs.f32	s15, s15
 800172a:	ee17 0a90 	vmov	r0, s15
 800172e:	f7fe ff13 	bl	8000558 <__aeabi_f2d>
 8001732:	4604      	mov	r4, r0
 8001734:	460d      	mov	r5, r1
 8001736:	697b      	ldr	r3, [r7, #20]
 8001738:	edd3 7a03 	vldr	s15, [r3, #12]
 800173c:	eef0 7ae7 	vabs.f32	s15, s15
 8001740:	ee17 0a90 	vmov	r0, s15
 8001744:	f7fe ff08 	bl	8000558 <__aeabi_f2d>
 8001748:	4602      	mov	r2, r0
 800174a:	460b      	mov	r3, r1
 800174c:	4620      	mov	r0, r4
 800174e:	4629      	mov	r1, r5
 8001750:	f7fe fda4 	bl	800029c <__adddf3>
 8001754:	4602      	mov	r2, r0
 8001756:	460b      	mov	r3, r1
 8001758:	4614      	mov	r4, r2
 800175a:	461d      	mov	r5, r3
 800175c:	887b      	ldrh	r3, [r7, #2]
 800175e:	005b      	lsls	r3, r3, #1
 8001760:	4618      	mov	r0, r3
 8001762:	f7fe fee7 	bl	8000534 <__aeabi_i2d>
 8001766:	4602      	mov	r2, r0
 8001768:	460b      	mov	r3, r1
 800176a:	4620      	mov	r0, r4
 800176c:	4629      	mov	r1, r5
 800176e:	f7ff f875 	bl	800085c <__aeabi_ddiv>
 8001772:	4602      	mov	r2, r0
 8001774:	460b      	mov	r3, r1
 8001776:	4610      	mov	r0, r2
 8001778:	4619      	mov	r1, r3
 800177a:	a32c      	add	r3, pc, #176	; (adr r3, 800182c <Offset_Calibration_acc+0x3ac>)
 800177c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001780:	f7ff f86c 	bl	800085c <__aeabi_ddiv>
 8001784:	4602      	mov	r2, r0
 8001786:	460b      	mov	r3, r1
 8001788:	4610      	mov	r0, r2
 800178a:	4619      	mov	r1, r3
 800178c:	f7ff fa34 	bl	8000bf8 <__aeabi_d2f>
 8001790:	4602      	mov	r2, r0
 8001792:	693b      	ldr	r3, [r7, #16]
 8001794:	60da      	str	r2, [r3, #12]
			solution->z_scale_acc = (fabs(data->z1_data) + fabs(data->z2_data))/(2*number_measure_points)/9.81f;
 8001796:	697b      	ldr	r3, [r7, #20]
 8001798:	edd3 7a04 	vldr	s15, [r3, #16]
 800179c:	eef0 7ae7 	vabs.f32	s15, s15
 80017a0:	ee17 0a90 	vmov	r0, s15
 80017a4:	f7fe fed8 	bl	8000558 <__aeabi_f2d>
 80017a8:	4604      	mov	r4, r0
 80017aa:	460d      	mov	r5, r1
 80017ac:	697b      	ldr	r3, [r7, #20]
 80017ae:	edd3 7a05 	vldr	s15, [r3, #20]
 80017b2:	eef0 7ae7 	vabs.f32	s15, s15
 80017b6:	ee17 0a90 	vmov	r0, s15
 80017ba:	f7fe fecd 	bl	8000558 <__aeabi_f2d>
 80017be:	4602      	mov	r2, r0
 80017c0:	460b      	mov	r3, r1
 80017c2:	4620      	mov	r0, r4
 80017c4:	4629      	mov	r1, r5
 80017c6:	f7fe fd69 	bl	800029c <__adddf3>
 80017ca:	4602      	mov	r2, r0
 80017cc:	460b      	mov	r3, r1
 80017ce:	4614      	mov	r4, r2
 80017d0:	461d      	mov	r5, r3
 80017d2:	887b      	ldrh	r3, [r7, #2]
 80017d4:	005b      	lsls	r3, r3, #1
 80017d6:	4618      	mov	r0, r3
 80017d8:	f7fe feac 	bl	8000534 <__aeabi_i2d>
 80017dc:	4602      	mov	r2, r0
 80017de:	460b      	mov	r3, r1
 80017e0:	4620      	mov	r0, r4
 80017e2:	4629      	mov	r1, r5
 80017e4:	f7ff f83a 	bl	800085c <__aeabi_ddiv>
 80017e8:	4602      	mov	r2, r0
 80017ea:	460b      	mov	r3, r1
 80017ec:	4610      	mov	r0, r2
 80017ee:	4619      	mov	r1, r3
 80017f0:	a30e      	add	r3, pc, #56	; (adr r3, 800182c <Offset_Calibration_acc+0x3ac>)
 80017f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017f6:	f7ff f831 	bl	800085c <__aeabi_ddiv>
 80017fa:	4602      	mov	r2, r0
 80017fc:	460b      	mov	r3, r1
 80017fe:	4610      	mov	r0, r2
 8001800:	4619      	mov	r1, r3
 8001802:	f7ff f9f9 	bl	8000bf8 <__aeabi_d2f>
 8001806:	4602      	mov	r2, r0
 8001808:	693b      	ldr	r3, [r7, #16]
 800180a:	615a      	str	r2, [r3, #20]
			start =0;
 800180c:	4b06      	ldr	r3, [pc, #24]	; (8001828 <Offset_Calibration_acc+0x3a8>)
 800180e:	2200      	movs	r2, #0
 8001810:	701a      	strb	r2, [r3, #0]
			break;
 8001812:	e002      	b.n	800181a <Offset_Calibration_acc+0x39a>
			break;
 8001814:	bf00      	nop
 8001816:	e000      	b.n	800181a <Offset_Calibration_acc+0x39a>
			break;
 8001818:	bf00      	nop
	}
}
 800181a:	bf00      	nop
 800181c:	3718      	adds	r7, #24
 800181e:	46bd      	mov	sp, r7
 8001820:	bdb0      	pop	{r4, r5, r7, pc}
 8001822:	bf00      	nop
 8001824:	f3af 8000 	nop.w
 8001828:	20000244 	.word	0x20000244
 800182c:	60000000 	.word	0x60000000
 8001830:	40239eb8 	.word	0x40239eb8

08001834 <BTN_init>:

void BTN_init(void)
{
 8001834:	b480      	push	{r7}
 8001836:	af00      	add	r7, sp, #0
	/*Set Peripheral bus AHB1*/
	RCC->AHB1ENR |= GPIOCEN;
 8001838:	4b0b      	ldr	r3, [pc, #44]	; (8001868 <BTN_init+0x34>)
 800183a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800183c:	4a0a      	ldr	r2, [pc, #40]	; (8001868 <BTN_init+0x34>)
 800183e:	f043 0304 	orr.w	r3, r3, #4
 8001842:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set Pin13 as Input*/
	GPIOC->MODER &=~(1U<<26);
 8001844:	4b09      	ldr	r3, [pc, #36]	; (800186c <BTN_init+0x38>)
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	4a08      	ldr	r2, [pc, #32]	; (800186c <BTN_init+0x38>)
 800184a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800184e:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U<<27);
 8001850:	4b06      	ldr	r3, [pc, #24]	; (800186c <BTN_init+0x38>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	4a05      	ldr	r2, [pc, #20]	; (800186c <BTN_init+0x38>)
 8001856:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800185a:	6013      	str	r3, [r2, #0]
//	GPIOC->OTYPER |= (1U<<13);
//
//	/*Set Pull-Down*/
//	GPIOC->PUPDR &=~(1U<<26);
//	GPIOC->PUPDR |= (1U<<27);
}
 800185c:	bf00      	nop
 800185e:	46bd      	mov	sp, r7
 8001860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001864:	4770      	bx	lr
 8001866:	bf00      	nop
 8001868:	40023800 	.word	0x40023800
 800186c:	40020800 	.word	0x40020800

08001870 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001870:	b480      	push	{r7}
 8001872:	b083      	sub	sp, #12
 8001874:	af00      	add	r7, sp, #0
 8001876:	4603      	mov	r3, r0
 8001878:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800187a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800187e:	2b00      	cmp	r3, #0
 8001880:	db0b      	blt.n	800189a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001882:	79fb      	ldrb	r3, [r7, #7]
 8001884:	f003 021f 	and.w	r2, r3, #31
 8001888:	4907      	ldr	r1, [pc, #28]	; (80018a8 <__NVIC_EnableIRQ+0x38>)
 800188a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800188e:	095b      	lsrs	r3, r3, #5
 8001890:	2001      	movs	r0, #1
 8001892:	fa00 f202 	lsl.w	r2, r0, r2
 8001896:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800189a:	bf00      	nop
 800189c:	370c      	adds	r7, #12
 800189e:	46bd      	mov	sp, r7
 80018a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a4:	4770      	bx	lr
 80018a6:	bf00      	nop
 80018a8:	e000e100 	.word	0xe000e100

080018ac <i2c1_init>:

uint8_t g_rx__cmplt;
uint8_t g_tx__cmplt;

void i2c1_init(void)
{
 80018ac:	b480      	push	{r7}
 80018ae:	af00      	add	r7, sp, #0
	/********I2C GPIO Configuration*************/
	/*Enable clock access to GPIOB*/
	RCC->AHB1ENR |= GPIOBEN;
 80018b0:	4b4c      	ldr	r3, [pc, #304]	; (80019e4 <i2c1_init+0x138>)
 80018b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018b4:	4a4b      	ldr	r2, [pc, #300]	; (80019e4 <i2c1_init+0x138>)
 80018b6:	f043 0302 	orr.w	r3, r3, #2
 80018ba:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PB8 and PB9 mode to alternate function mode*/
	/*PB8*/
	GPIOB->MODER &= ~(1U<<16);
 80018bc:	4b4a      	ldr	r3, [pc, #296]	; (80019e8 <i2c1_init+0x13c>)
 80018be:	681b      	ldr	r3, [r3, #0]
 80018c0:	4a49      	ldr	r2, [pc, #292]	; (80019e8 <i2c1_init+0x13c>)
 80018c2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80018c6:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (1U<<17);
 80018c8:	4b47      	ldr	r3, [pc, #284]	; (80019e8 <i2c1_init+0x13c>)
 80018ca:	681b      	ldr	r3, [r3, #0]
 80018cc:	4a46      	ldr	r2, [pc, #280]	; (80019e8 <i2c1_init+0x13c>)
 80018ce:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80018d2:	6013      	str	r3, [r2, #0]


	/*PB9*/
	GPIOB->MODER &= ~(1U<<18);
 80018d4:	4b44      	ldr	r3, [pc, #272]	; (80019e8 <i2c1_init+0x13c>)
 80018d6:	681b      	ldr	r3, [r3, #0]
 80018d8:	4a43      	ldr	r2, [pc, #268]	; (80019e8 <i2c1_init+0x13c>)
 80018da:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018de:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (1U<<19);
 80018e0:	4b41      	ldr	r3, [pc, #260]	; (80019e8 <i2c1_init+0x13c>)
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	4a40      	ldr	r2, [pc, #256]	; (80019e8 <i2c1_init+0x13c>)
 80018e6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80018ea:	6013      	str	r3, [r2, #0]


	/*Set PB8 and PB9 alternate function type to I2C1 (AF4)  */
	/*PB8*/
	GPIOB->AFR[1] &=~(1U<<0);
 80018ec:	4b3e      	ldr	r3, [pc, #248]	; (80019e8 <i2c1_init+0x13c>)
 80018ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80018f0:	4a3d      	ldr	r2, [pc, #244]	; (80019e8 <i2c1_init+0x13c>)
 80018f2:	f023 0301 	bic.w	r3, r3, #1
 80018f6:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &=~(1U<<1);
 80018f8:	4b3b      	ldr	r3, [pc, #236]	; (80019e8 <i2c1_init+0x13c>)
 80018fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80018fc:	4a3a      	ldr	r2, [pc, #232]	; (80019e8 <i2c1_init+0x13c>)
 80018fe:	f023 0302 	bic.w	r3, r3, #2
 8001902:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |=(1U<<2);
 8001904:	4b38      	ldr	r3, [pc, #224]	; (80019e8 <i2c1_init+0x13c>)
 8001906:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001908:	4a37      	ldr	r2, [pc, #220]	; (80019e8 <i2c1_init+0x13c>)
 800190a:	f043 0304 	orr.w	r3, r3, #4
 800190e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &=~(1U<<3);
 8001910:	4b35      	ldr	r3, [pc, #212]	; (80019e8 <i2c1_init+0x13c>)
 8001912:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001914:	4a34      	ldr	r2, [pc, #208]	; (80019e8 <i2c1_init+0x13c>)
 8001916:	f023 0308 	bic.w	r3, r3, #8
 800191a:	6253      	str	r3, [r2, #36]	; 0x24

	/*PB9*/
	GPIOB->AFR[1] &=~(1U<<4);
 800191c:	4b32      	ldr	r3, [pc, #200]	; (80019e8 <i2c1_init+0x13c>)
 800191e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001920:	4a31      	ldr	r2, [pc, #196]	; (80019e8 <i2c1_init+0x13c>)
 8001922:	f023 0310 	bic.w	r3, r3, #16
 8001926:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &=~(1U<<5);
 8001928:	4b2f      	ldr	r3, [pc, #188]	; (80019e8 <i2c1_init+0x13c>)
 800192a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800192c:	4a2e      	ldr	r2, [pc, #184]	; (80019e8 <i2c1_init+0x13c>)
 800192e:	f023 0320 	bic.w	r3, r3, #32
 8001932:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |=(1U<<6);
 8001934:	4b2c      	ldr	r3, [pc, #176]	; (80019e8 <i2c1_init+0x13c>)
 8001936:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001938:	4a2b      	ldr	r2, [pc, #172]	; (80019e8 <i2c1_init+0x13c>)
 800193a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800193e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &=~(1U<<7);
 8001940:	4b29      	ldr	r3, [pc, #164]	; (80019e8 <i2c1_init+0x13c>)
 8001942:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001944:	4a28      	ldr	r2, [pc, #160]	; (80019e8 <i2c1_init+0x13c>)
 8001946:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800194a:	6253      	str	r3, [r2, #36]	; 0x24

	/*SCL and SDA respectively*/
	/*Set output type of PB8 and PB9 to open-drain*/
	GPIOB->OTYPER |=(1U<<8);
 800194c:	4b26      	ldr	r3, [pc, #152]	; (80019e8 <i2c1_init+0x13c>)
 800194e:	685b      	ldr	r3, [r3, #4]
 8001950:	4a25      	ldr	r2, [pc, #148]	; (80019e8 <i2c1_init+0x13c>)
 8001952:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001956:	6053      	str	r3, [r2, #4]
	GPIOB->OTYPER |=(1U<<9);
 8001958:	4b23      	ldr	r3, [pc, #140]	; (80019e8 <i2c1_init+0x13c>)
 800195a:	685b      	ldr	r3, [r3, #4]
 800195c:	4a22      	ldr	r2, [pc, #136]	; (80019e8 <i2c1_init+0x13c>)
 800195e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001962:	6053      	str	r3, [r2, #4]

	/********I2C  Configuration*************/
	/*Enable clock access to I2C1*/
	RCC->APB1ENR |= I2C1EN;
 8001964:	4b1f      	ldr	r3, [pc, #124]	; (80019e4 <i2c1_init+0x138>)
 8001966:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001968:	4a1e      	ldr	r2, [pc, #120]	; (80019e4 <i2c1_init+0x138>)
 800196a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800196e:	6413      	str	r3, [r2, #64]	; 0x40

	/*Reset I2C module*/
	I2C1->CR1 = CR1_SWRST;
 8001970:	4b1e      	ldr	r3, [pc, #120]	; (80019ec <i2c1_init+0x140>)
 8001972:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8001976:	601a      	str	r2, [r3, #0]


	/*Release the reset*/
	I2C1->CR1 &= ~CR1_SWRST;
 8001978:	4b1c      	ldr	r3, [pc, #112]	; (80019ec <i2c1_init+0x140>)
 800197a:	681b      	ldr	r3, [r3, #0]
 800197c:	4a1b      	ldr	r2, [pc, #108]	; (80019ec <i2c1_init+0x140>)
 800197e:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001982:	6013      	str	r3, [r2, #0]

	/*Enable clock stretching*/
	I2C1->CR1 &=~CR1_NOSTRETCH;
 8001984:	4b19      	ldr	r3, [pc, #100]	; (80019ec <i2c1_init+0x140>)
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	4a18      	ldr	r2, [pc, #96]	; (80019ec <i2c1_init+0x140>)
 800198a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800198e:	6013      	str	r3, [r2, #0]

	/*Disable General Call*/
	I2C1->CR1 &=~CR1_ENGC;
 8001990:	4b16      	ldr	r3, [pc, #88]	; (80019ec <i2c1_init+0x140>)
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	4a15      	ldr	r2, [pc, #84]	; (80019ec <i2c1_init+0x140>)
 8001996:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800199a:	6013      	str	r3, [r2, #0]

	/*Select to use DMA*/
	I2C1->CR2 |=CR2_DMAEN;
 800199c:	4b13      	ldr	r3, [pc, #76]	; (80019ec <i2c1_init+0x140>)
 800199e:	685b      	ldr	r3, [r3, #4]
 80019a0:	4a12      	ldr	r2, [pc, #72]	; (80019ec <i2c1_init+0x140>)
 80019a2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80019a6:	6053      	str	r3, [r2, #4]

	/*Enable LAST*/
	I2C1->CR2 |=CR2_LAST;
 80019a8:	4b10      	ldr	r3, [pc, #64]	; (80019ec <i2c1_init+0x140>)
 80019aa:	685b      	ldr	r3, [r3, #4]
 80019ac:	4a0f      	ldr	r2, [pc, #60]	; (80019ec <i2c1_init+0x140>)
 80019ae:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80019b2:	6053      	str	r3, [r2, #4]

	/*Set source clock speed*/
	I2C1->CR2 |=PERIPH_CLK;
 80019b4:	4b0d      	ldr	r3, [pc, #52]	; (80019ec <i2c1_init+0x140>)
 80019b6:	685b      	ldr	r3, [r3, #4]
 80019b8:	4a0c      	ldr	r2, [pc, #48]	; (80019ec <i2c1_init+0x140>)
 80019ba:	f043 0310 	orr.w	r3, r3, #16
 80019be:	6053      	str	r3, [r2, #4]

	 /*Set I2C to standard mode, 100kHz clock*/
	I2C1->CCR = I2C_100KHZ; /*Based on Computation*/
 80019c0:	4b0a      	ldr	r3, [pc, #40]	; (80019ec <i2c1_init+0x140>)
 80019c2:	2250      	movs	r2, #80	; 0x50
 80019c4:	61da      	str	r2, [r3, #28]

	I2C1->TRISE = SD_MODE_MAX_RISE_TIME;
 80019c6:	4b09      	ldr	r3, [pc, #36]	; (80019ec <i2c1_init+0x140>)
 80019c8:	2211      	movs	r2, #17
 80019ca:	621a      	str	r2, [r3, #32]

	/*Enable I2C module*/
	I2C1->CR1 |=CR1_PE;
 80019cc:	4b07      	ldr	r3, [pc, #28]	; (80019ec <i2c1_init+0x140>)
 80019ce:	681b      	ldr	r3, [r3, #0]
 80019d0:	4a06      	ldr	r2, [pc, #24]	; (80019ec <i2c1_init+0x140>)
 80019d2:	f043 0301 	orr.w	r3, r3, #1
 80019d6:	6013      	str	r3, [r2, #0]

}
 80019d8:	bf00      	nop
 80019da:	46bd      	mov	sp, r7
 80019dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	40023800 	.word	0x40023800
 80019e8:	40020400 	.word	0x40020400
 80019ec:	40005400 	.word	0x40005400

080019f0 <dma1_stream6_i2c1_tx_init>:


void dma1_stream6_i2c1_tx_init(void)
{
 80019f0:	b580      	push	{r7, lr}
 80019f2:	af00      	add	r7, sp, #0
	/*Enable clock access DMA*/
	RCC->AHB1ENR |=DMA1EN;
 80019f4:	4b1f      	ldr	r3, [pc, #124]	; (8001a74 <dma1_stream6_i2c1_tx_init+0x84>)
 80019f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019f8:	4a1e      	ldr	r2, [pc, #120]	; (8001a74 <dma1_stream6_i2c1_tx_init+0x84>)
 80019fa:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80019fe:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA1_Stream6->CR = 0;
 8001a00:	4b1d      	ldr	r3, [pc, #116]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a02:	2200      	movs	r2, #0
 8001a04:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA1_Stream6->CR & DMA_SCR_EN)){}
 8001a06:	bf00      	nop
 8001a08:	4b1b      	ldr	r3, [pc, #108]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	f003 0301 	and.w	r3, r3, #1
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	d1f9      	bne.n	8001a08 <dma1_stream6_i2c1_tx_init+0x18>


	/*Select DMA channel : CH1*/
	DMA1_Stream6->CR |=(1U<<25);
 8001a14:	4b18      	ldr	r3, [pc, #96]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	4a17      	ldr	r2, [pc, #92]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a1a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001a1e:	6013      	str	r3, [r2, #0]
	DMA1_Stream6->CR &=~(1U<<26);
 8001a20:	4b15      	ldr	r3, [pc, #84]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a22:	681b      	ldr	r3, [r3, #0]
 8001a24:	4a14      	ldr	r2, [pc, #80]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a26:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001a2a:	6013      	str	r3, [r2, #0]
	DMA1_Stream6->CR &=~(1U<<27);
 8001a2c:	4b12      	ldr	r3, [pc, #72]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	4a11      	ldr	r2, [pc, #68]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a32:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8001a36:	6013      	str	r3, [r2, #0]

	/*Enable Mem Addr increment*/
	DMA1_Stream6->CR |=DMA_SCR_MINC;
 8001a38:	4b0f      	ldr	r3, [pc, #60]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a3a:	681b      	ldr	r3, [r3, #0]
 8001a3c:	4a0e      	ldr	r2, [pc, #56]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a3e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001a42:	6013      	str	r3, [r2, #0]

	/*Enable Transfer Complete Interrupt*/
	DMA1_Stream6->CR |=DMA_SCR_TCIE;
 8001a44:	4b0c      	ldr	r3, [pc, #48]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a46:	681b      	ldr	r3, [r3, #0]
 8001a48:	4a0b      	ldr	r2, [pc, #44]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a4a:	f043 0310 	orr.w	r3, r3, #16
 8001a4e:	6013      	str	r3, [r2, #0]

	/*Set Transfer direction :  Mem to Periph*/
	DMA1_Stream6->CR |=(1U<<6);
 8001a50:	4b09      	ldr	r3, [pc, #36]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a52:	681b      	ldr	r3, [r3, #0]
 8001a54:	4a08      	ldr	r2, [pc, #32]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001a5a:	6013      	str	r3, [r2, #0]
	DMA1_Stream6->CR &=~(1U<<7);
 8001a5c:	4b06      	ldr	r3, [pc, #24]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	4a05      	ldr	r2, [pc, #20]	; (8001a78 <dma1_stream6_i2c1_tx_init+0x88>)
 8001a62:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001a66:	6013      	str	r3, [r2, #0]

	/*Enable Stream Interrupt in NVIC*/
	NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 8001a68:	2011      	movs	r0, #17
 8001a6a:	f7ff ff01 	bl	8001870 <__NVIC_EnableIRQ>

}
 8001a6e:	bf00      	nop
 8001a70:	bd80      	pop	{r7, pc}
 8001a72:	bf00      	nop
 8001a74:	40023800 	.word	0x40023800
 8001a78:	400260a0 	.word	0x400260a0

08001a7c <dma1_stream5_i2c1_rx_init>:

void dma1_stream5_i2c1_rx_init(void)
{
 8001a7c:	b580      	push	{r7, lr}
 8001a7e:	af00      	add	r7, sp, #0
	/*Enable clock access DMA*/
	RCC->AHB1ENR |=DMA1EN;
 8001a80:	4b1f      	ldr	r3, [pc, #124]	; (8001b00 <dma1_stream5_i2c1_rx_init+0x84>)
 8001a82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a84:	4a1e      	ldr	r2, [pc, #120]	; (8001b00 <dma1_stream5_i2c1_rx_init+0x84>)
 8001a86:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001a8a:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA1_Stream5->CR = 0;
 8001a8c:	4b1d      	ldr	r3, [pc, #116]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001a8e:	2200      	movs	r2, #0
 8001a90:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA1_Stream5->CR & DMA_SCR_EN)){}
 8001a92:	bf00      	nop
 8001a94:	4b1b      	ldr	r3, [pc, #108]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	f003 0301 	and.w	r3, r3, #1
 8001a9c:	2b00      	cmp	r3, #0
 8001a9e:	d1f9      	bne.n	8001a94 <dma1_stream5_i2c1_rx_init+0x18>

	/*Select DMA channel : CH1*/
	DMA1_Stream5->CR |=(1U<<25);
 8001aa0:	4b18      	ldr	r3, [pc, #96]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	4a17      	ldr	r2, [pc, #92]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001aa6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001aaa:	6013      	str	r3, [r2, #0]
	DMA1_Stream5->CR &=~(1U<<26);
 8001aac:	4b15      	ldr	r3, [pc, #84]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001aae:	681b      	ldr	r3, [r3, #0]
 8001ab0:	4a14      	ldr	r2, [pc, #80]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001ab2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001ab6:	6013      	str	r3, [r2, #0]
	DMA1_Stream5->CR &=~(1U<<27);
 8001ab8:	4b12      	ldr	r3, [pc, #72]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	4a11      	ldr	r2, [pc, #68]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001abe:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8001ac2:	6013      	str	r3, [r2, #0]

	/*Enable Mem Addr increment*/
	DMA1_Stream5->CR |=DMA_SCR_MINC;
 8001ac4:	4b0f      	ldr	r3, [pc, #60]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001ac6:	681b      	ldr	r3, [r3, #0]
 8001ac8:	4a0e      	ldr	r2, [pc, #56]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001aca:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001ace:	6013      	str	r3, [r2, #0]

	/*Enable Transfer Complete Interrupt*/
	DMA1_Stream5->CR |=DMA_SCR_TCIE;
 8001ad0:	4b0c      	ldr	r3, [pc, #48]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	4a0b      	ldr	r2, [pc, #44]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001ad6:	f043 0310 	orr.w	r3, r3, #16
 8001ada:	6013      	str	r3, [r2, #0]

	/*Set Transfer direction :   Periph to Mem*/
	DMA1_Stream5->CR &=~(1U<<6);
 8001adc:	4b09      	ldr	r3, [pc, #36]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001ade:	681b      	ldr	r3, [r3, #0]
 8001ae0:	4a08      	ldr	r2, [pc, #32]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001ae2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001ae6:	6013      	str	r3, [r2, #0]
	DMA1_Stream5->CR &=~(1U<<7);
 8001ae8:	4b06      	ldr	r3, [pc, #24]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001aea:	681b      	ldr	r3, [r3, #0]
 8001aec:	4a05      	ldr	r2, [pc, #20]	; (8001b04 <dma1_stream5_i2c1_rx_init+0x88>)
 8001aee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001af2:	6013      	str	r3, [r2, #0]

	/*Enable Stream Interrupt in NVIC*/
	NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8001af4:	2010      	movs	r0, #16
 8001af6:	f7ff febb 	bl	8001870 <__NVIC_EnableIRQ>

}
 8001afa:	bf00      	nop
 8001afc:	bd80      	pop	{r7, pc}
 8001afe:	bf00      	nop
 8001b00:	40023800 	.word	0x40023800
 8001b04:	40026088 	.word	0x40026088

08001b08 <dma1_stream6_i2c1_transfer>:

void dma1_stream6_i2c1_transfer(uint8_t *msg_to_send, uint32_t msg_len)
{
 8001b08:	b480      	push	{r7}
 8001b0a:	b083      	sub	sp, #12
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	6078      	str	r0, [r7, #4]
 8001b10:	6039      	str	r1, [r7, #0]
	if( NULL != msg_to_send )
 8001b12:	687b      	ldr	r3, [r7, #4]
 8001b14:	2b00      	cmp	r3, #0
 8001b16:	d012      	beq.n	8001b3e <dma1_stream6_i2c1_transfer+0x36>
	{

		/*Clear interrupt flags*/
		DMA1->HIFCR = HIFCR_CTCIF6;
 8001b18:	4b0c      	ldr	r3, [pc, #48]	; (8001b4c <dma1_stream6_i2c1_transfer+0x44>)
 8001b1a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8001b1e:	60da      	str	r2, [r3, #12]

		/*Set Peripheral address*/
		DMA1_Stream6->PAR =	(uint32_t)(&(I2C1->DR));
 8001b20:	4b0b      	ldr	r3, [pc, #44]	; (8001b50 <dma1_stream6_i2c1_transfer+0x48>)
 8001b22:	4a0c      	ldr	r2, [pc, #48]	; (8001b54 <dma1_stream6_i2c1_transfer+0x4c>)
 8001b24:	609a      	str	r2, [r3, #8]

		/*Set Memory address*/
		DMA1_Stream6->M0AR = (uint32_t)msg_to_send;
 8001b26:	4a0a      	ldr	r2, [pc, #40]	; (8001b50 <dma1_stream6_i2c1_transfer+0x48>)
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	60d3      	str	r3, [r2, #12]

		/*Set transfer length*/
		DMA1_Stream6->NDTR = msg_len;
 8001b2c:	4a08      	ldr	r2, [pc, #32]	; (8001b50 <dma1_stream6_i2c1_transfer+0x48>)
 8001b2e:	683b      	ldr	r3, [r7, #0]
 8001b30:	6053      	str	r3, [r2, #4]

		/*Enable the DMA Stream*/
		DMA1_Stream6->CR |= DMA_SCR_EN;
 8001b32:	4b07      	ldr	r3, [pc, #28]	; (8001b50 <dma1_stream6_i2c1_transfer+0x48>)
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	4a06      	ldr	r2, [pc, #24]	; (8001b50 <dma1_stream6_i2c1_transfer+0x48>)
 8001b38:	f043 0301 	orr.w	r3, r3, #1
 8001b3c:	6013      	str	r3, [r2, #0]
	}
	else
	{
		//Do something...
	}
}
 8001b3e:	bf00      	nop
 8001b40:	370c      	adds	r7, #12
 8001b42:	46bd      	mov	sp, r7
 8001b44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b48:	4770      	bx	lr
 8001b4a:	bf00      	nop
 8001b4c:	40026000 	.word	0x40026000
 8001b50:	400260a0 	.word	0x400260a0
 8001b54:	40005410 	.word	0x40005410

08001b58 <dma1_stream5_i2c1_receive>:


void dma1_stream5_i2c1_receive(uint8_t * received_msg, uint32_t msg_len)
{
 8001b58:	b480      	push	{r7}
 8001b5a:	b083      	sub	sp, #12
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	6078      	str	r0, [r7, #4]
 8001b60:	6039      	str	r1, [r7, #0]
	if( NULL != received_msg )
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	2b00      	cmp	r3, #0
 8001b66:	d012      	beq.n	8001b8e <dma1_stream5_i2c1_receive+0x36>
	{

		/*Clear interrupt flags*/
		DMA1->HIFCR = HIFCR_CTCIF5;
 8001b68:	4b0c      	ldr	r3, [pc, #48]	; (8001b9c <dma1_stream5_i2c1_receive+0x44>)
 8001b6a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001b6e:	60da      	str	r2, [r3, #12]

		/*Set Peripheral address*/
		DMA1_Stream5->PAR =	(uint32_t)(&(I2C1->DR));
 8001b70:	4b0b      	ldr	r3, [pc, #44]	; (8001ba0 <dma1_stream5_i2c1_receive+0x48>)
 8001b72:	4a0c      	ldr	r2, [pc, #48]	; (8001ba4 <dma1_stream5_i2c1_receive+0x4c>)
 8001b74:	609a      	str	r2, [r3, #8]

		/*Set Memory address*/
		DMA1_Stream5->M0AR = (uint32_t)received_msg;
 8001b76:	4a0a      	ldr	r2, [pc, #40]	; (8001ba0 <dma1_stream5_i2c1_receive+0x48>)
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	60d3      	str	r3, [r2, #12]

		/*Set transfer length*/
		DMA1_Stream5->NDTR = msg_len;
 8001b7c:	4a08      	ldr	r2, [pc, #32]	; (8001ba0 <dma1_stream5_i2c1_receive+0x48>)
 8001b7e:	683b      	ldr	r3, [r7, #0]
 8001b80:	6053      	str	r3, [r2, #4]

		/*Enable the DMA Stream*/
		DMA1_Stream5->CR |= DMA_SCR_EN;
 8001b82:	4b07      	ldr	r3, [pc, #28]	; (8001ba0 <dma1_stream5_i2c1_receive+0x48>)
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	4a06      	ldr	r2, [pc, #24]	; (8001ba0 <dma1_stream5_i2c1_receive+0x48>)
 8001b88:	f043 0301 	orr.w	r3, r3, #1
 8001b8c:	6013      	str	r3, [r2, #0]

	else
	{
		//Do something...
	}
}
 8001b8e:	bf00      	nop
 8001b90:	370c      	adds	r7, #12
 8001b92:	46bd      	mov	sp, r7
 8001b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b98:	4770      	bx	lr
 8001b9a:	bf00      	nop
 8001b9c:	40026000 	.word	0x40026000
 8001ba0:	40026088 	.word	0x40026088
 8001ba4:	40005410 	.word	0x40005410

08001ba8 <i2c_dma_write>:


void i2c_dma_write(uint8_t slave_addr, uint8_t *p_write_buff, uint16_t num_of_bytes)
{
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	b082      	sub	sp, #8
 8001bac:	af00      	add	r7, sp, #0
 8001bae:	4603      	mov	r3, r0
 8001bb0:	6039      	str	r1, [r7, #0]
 8001bb2:	71fb      	strb	r3, [r7, #7]
 8001bb4:	4613      	mov	r3, r2
 8001bb6:	80bb      	strh	r3, [r7, #4]
	/*Wait while BUSY flag is set*/
	while((I2C1->SR2 & SR2_BUSY)){}
 8001bb8:	bf00      	nop
 8001bba:	4b16      	ldr	r3, [pc, #88]	; (8001c14 <i2c_dma_write+0x6c>)
 8001bbc:	699b      	ldr	r3, [r3, #24]
 8001bbe:	f003 0302 	and.w	r3, r3, #2
 8001bc2:	2b00      	cmp	r3, #0
 8001bc4:	d1f9      	bne.n	8001bba <i2c_dma_write+0x12>

	/*Generate START condition*/
	I2C1->CR1 |= CR1_START;
 8001bc6:	4b13      	ldr	r3, [pc, #76]	; (8001c14 <i2c_dma_write+0x6c>)
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	4a12      	ldr	r2, [pc, #72]	; (8001c14 <i2c_dma_write+0x6c>)
 8001bcc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001bd0:	6013      	str	r3, [r2, #0]

	/*Wait until the SB flag  is set*/
	while(!(I2C1->SR1 & SR1_SB)){}
 8001bd2:	bf00      	nop
 8001bd4:	4b0f      	ldr	r3, [pc, #60]	; (8001c14 <i2c_dma_write+0x6c>)
 8001bd6:	695b      	ldr	r3, [r3, #20]
 8001bd8:	f003 0301 	and.w	r3, r3, #1
 8001bdc:	2b00      	cmp	r3, #0
 8001bde:	d0f9      	beq.n	8001bd4 <i2c_dma_write+0x2c>

	/*Read SR1*/
	 I2C1->SR1;
 8001be0:	4b0c      	ldr	r3, [pc, #48]	; (8001c14 <i2c_dma_write+0x6c>)
 8001be2:	695b      	ldr	r3, [r3, #20]

	/*Send Slave Addr "Write"*/
	 I2C1->DR = (slave_addr<<1|0);
 8001be4:	79fb      	ldrb	r3, [r7, #7]
 8001be6:	005a      	lsls	r2, r3, #1
 8001be8:	4b0a      	ldr	r3, [pc, #40]	; (8001c14 <i2c_dma_write+0x6c>)
 8001bea:	611a      	str	r2, [r3, #16]

	/*Wait for Addr Flag to be set*/
	 while(!((I2C1->SR1)& SR1_ADDR)){}
 8001bec:	bf00      	nop
 8001bee:	4b09      	ldr	r3, [pc, #36]	; (8001c14 <i2c_dma_write+0x6c>)
 8001bf0:	695b      	ldr	r3, [r3, #20]
 8001bf2:	f003 0302 	and.w	r3, r3, #2
 8001bf6:	2b00      	cmp	r3, #0
 8001bf8:	d0f9      	beq.n	8001bee <i2c_dma_write+0x46>

	/*Call DMA transfer function*/
	 dma1_stream6_i2c1_transfer(p_write_buff,num_of_bytes);
 8001bfa:	88bb      	ldrh	r3, [r7, #4]
 8001bfc:	4619      	mov	r1, r3
 8001bfe:	6838      	ldr	r0, [r7, #0]
 8001c00:	f7ff ff82 	bl	8001b08 <dma1_stream6_i2c1_transfer>

	/*Read SR1*/
	 I2C1->SR1;
 8001c04:	4b03      	ldr	r3, [pc, #12]	; (8001c14 <i2c_dma_write+0x6c>)
 8001c06:	695b      	ldr	r3, [r3, #20]

	/*Read SR2*/
	 I2C1->SR2;
 8001c08:	4b02      	ldr	r3, [pc, #8]	; (8001c14 <i2c_dma_write+0x6c>)
 8001c0a:	699b      	ldr	r3, [r3, #24]


}
 8001c0c:	bf00      	nop
 8001c0e:	3708      	adds	r7, #8
 8001c10:	46bd      	mov	sp, r7
 8001c12:	bd80      	pop	{r7, pc}
 8001c14:	40005400 	.word	0x40005400

08001c18 <i2c_dma_read>:

void i2c_dma_read(uint8_t slave_addr, uint8_t reg_addr, uint8_t *p_read_buff, uint16_t num_of_bytes)
{
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	b082      	sub	sp, #8
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	603a      	str	r2, [r7, #0]
 8001c20:	461a      	mov	r2, r3
 8001c22:	4603      	mov	r3, r0
 8001c24:	71fb      	strb	r3, [r7, #7]
 8001c26:	460b      	mov	r3, r1
 8001c28:	71bb      	strb	r3, [r7, #6]
 8001c2a:	4613      	mov	r3, r2
 8001c2c:	80bb      	strh	r3, [r7, #4]
	/*Wait while BUSY flag is set*/
	while((I2C1->SR2 & SR2_BUSY)){}
 8001c2e:	bf00      	nop
 8001c30:	4b38      	ldr	r3, [pc, #224]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c32:	699b      	ldr	r3, [r3, #24]
 8001c34:	f003 0302 	and.w	r3, r3, #2
 8001c38:	2b00      	cmp	r3, #0
 8001c3a:	d1f9      	bne.n	8001c30 <i2c_dma_read+0x18>

	/*Generate START condition*/
	I2C1->CR1 |= CR1_START;
 8001c3c:	4b35      	ldr	r3, [pc, #212]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c3e:	681b      	ldr	r3, [r3, #0]
 8001c40:	4a34      	ldr	r2, [pc, #208]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c42:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c46:	6013      	str	r3, [r2, #0]

	/*Wait until the SB flag  is set*/
	while(!(I2C1->SR1 & SR1_SB)){}
 8001c48:	bf00      	nop
 8001c4a:	4b32      	ldr	r3, [pc, #200]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c4c:	695b      	ldr	r3, [r3, #20]
 8001c4e:	f003 0301 	and.w	r3, r3, #1
 8001c52:	2b00      	cmp	r3, #0
 8001c54:	d0f9      	beq.n	8001c4a <i2c_dma_read+0x32>

	/*Read SR1*/
	 I2C1->SR1;
 8001c56:	4b2f      	ldr	r3, [pc, #188]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c58:	695b      	ldr	r3, [r3, #20]

	/*Send Slave Addr "Write"*/
	 I2C1->DR = (slave_addr<<1|0);
 8001c5a:	79fb      	ldrb	r3, [r7, #7]
 8001c5c:	005a      	lsls	r2, r3, #1
 8001c5e:	4b2d      	ldr	r3, [pc, #180]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c60:	611a      	str	r2, [r3, #16]

	/*Wait for Addr Flag to be set*/
	 while(!((I2C1->SR1)& SR1_ADDR)){}
 8001c62:	bf00      	nop
 8001c64:	4b2b      	ldr	r3, [pc, #172]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c66:	695b      	ldr	r3, [r3, #20]
 8001c68:	f003 0302 	and.w	r3, r3, #2
 8001c6c:	2b00      	cmp	r3, #0
 8001c6e:	d0f9      	beq.n	8001c64 <i2c_dma_read+0x4c>

	/*Read SR1*/
	 I2C1->SR1;
 8001c70:	4b28      	ldr	r3, [pc, #160]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c72:	695b      	ldr	r3, [r3, #20]

    /*Read SR2*/
	 I2C1->SR2;
 8001c74:	4b27      	ldr	r3, [pc, #156]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c76:	699b      	ldr	r3, [r3, #24]

	/*Wait for TXE flag to be set*/
	while(!(I2C1->SR1 & SR1_TXE)){}
 8001c78:	bf00      	nop
 8001c7a:	4b26      	ldr	r3, [pc, #152]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c7c:	695b      	ldr	r3, [r3, #20]
 8001c7e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001c82:	2b00      	cmp	r3, #0
 8001c84:	d0f9      	beq.n	8001c7a <i2c_dma_read+0x62>

	/*Send RegAddr*/
	if(num_of_bytes >= 2)
 8001c86:	88bb      	ldrh	r3, [r7, #4]
 8001c88:	2b01      	cmp	r3, #1
 8001c8a:	d909      	bls.n	8001ca0 <i2c_dma_read+0x88>
	{
		/*Enable ACK*/
		I2C1->CR1 |=CR1_ACK;
 8001c8c:	4b21      	ldr	r3, [pc, #132]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	4a20      	ldr	r2, [pc, #128]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c92:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001c96:	6013      	str	r3, [r2, #0]

		/*Send register address to read*/
		I2C1->DR = reg_addr;
 8001c98:	4a1e      	ldr	r2, [pc, #120]	; (8001d14 <i2c_dma_read+0xfc>)
 8001c9a:	79bb      	ldrb	r3, [r7, #6]
 8001c9c:	6113      	str	r3, [r2, #16]
 8001c9e:	e008      	b.n	8001cb2 <i2c_dma_read+0x9a>

	}
	else
	{
		/*Disable ACK*/
		I2C1->CR1 &=~CR1_ACK;
 8001ca0:	4b1c      	ldr	r3, [pc, #112]	; (8001d14 <i2c_dma_read+0xfc>)
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	4a1b      	ldr	r2, [pc, #108]	; (8001d14 <i2c_dma_read+0xfc>)
 8001ca6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001caa:	6013      	str	r3, [r2, #0]

		/*Send register address to read*/
		I2C1->DR = reg_addr;
 8001cac:	4a19      	ldr	r2, [pc, #100]	; (8001d14 <i2c_dma_read+0xfc>)
 8001cae:	79bb      	ldrb	r3, [r7, #6]
 8001cb0:	6113      	str	r3, [r2, #16]
	}

	/*Wait for BTF flag*/
	while(!(I2C1->SR1 & SR1_BTF)){}
 8001cb2:	bf00      	nop
 8001cb4:	4b17      	ldr	r3, [pc, #92]	; (8001d14 <i2c_dma_read+0xfc>)
 8001cb6:	695b      	ldr	r3, [r3, #20]
 8001cb8:	f003 0304 	and.w	r3, r3, #4
 8001cbc:	2b00      	cmp	r3, #0
 8001cbe:	d0f9      	beq.n	8001cb4 <i2c_dma_read+0x9c>

	/*Generate RESTART*/
	I2C1->CR1 |= CR1_START;
 8001cc0:	4b14      	ldr	r3, [pc, #80]	; (8001d14 <i2c_dma_read+0xfc>)
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	4a13      	ldr	r2, [pc, #76]	; (8001d14 <i2c_dma_read+0xfc>)
 8001cc6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001cca:	6013      	str	r3, [r2, #0]

	/*Wait until the SB flag is set*/
	while(!(I2C1->SR1 & SR1_SB)){}
 8001ccc:	bf00      	nop
 8001cce:	4b11      	ldr	r3, [pc, #68]	; (8001d14 <i2c_dma_read+0xfc>)
 8001cd0:	695b      	ldr	r3, [r3, #20]
 8001cd2:	f003 0301 	and.w	r3, r3, #1
 8001cd6:	2b00      	cmp	r3, #0
 8001cd8:	d0f9      	beq.n	8001cce <i2c_dma_read+0xb6>

	/*Read SR1*/
	I2C1->SR1;
 8001cda:	4b0e      	ldr	r3, [pc, #56]	; (8001d14 <i2c_dma_read+0xfc>)
 8001cdc:	695b      	ldr	r3, [r3, #20]

	/*Send Slave Addr with "read"*/
	 I2C1->DR = (slave_addr<<1|1);
 8001cde:	79fb      	ldrb	r3, [r7, #7]
 8001ce0:	005b      	lsls	r3, r3, #1
 8001ce2:	f043 0201 	orr.w	r2, r3, #1
 8001ce6:	4b0b      	ldr	r3, [pc, #44]	; (8001d14 <i2c_dma_read+0xfc>)
 8001ce8:	611a      	str	r2, [r3, #16]

	/*Wait for the Addr flag to be set*/
	 while(!((I2C1->SR1)& SR1_ADDR)){}
 8001cea:	bf00      	nop
 8001cec:	4b09      	ldr	r3, [pc, #36]	; (8001d14 <i2c_dma_read+0xfc>)
 8001cee:	695b      	ldr	r3, [r3, #20]
 8001cf0:	f003 0302 	and.w	r3, r3, #2
 8001cf4:	2b00      	cmp	r3, #0
 8001cf6:	d0f9      	beq.n	8001cec <i2c_dma_read+0xd4>

	/*Call DMA receive function*/
	 dma1_stream5_i2c1_receive(p_read_buff,num_of_bytes);
 8001cf8:	88bb      	ldrh	r3, [r7, #4]
 8001cfa:	4619      	mov	r1, r3
 8001cfc:	6838      	ldr	r0, [r7, #0]
 8001cfe:	f7ff ff2b 	bl	8001b58 <dma1_stream5_i2c1_receive>

	/*Read SR1*/
	I2C1->SR1;
 8001d02:	4b04      	ldr	r3, [pc, #16]	; (8001d14 <i2c_dma_read+0xfc>)
 8001d04:	695b      	ldr	r3, [r3, #20]

	/*Read SR2*/
	I2C1->SR2;
 8001d06:	4b03      	ldr	r3, [pc, #12]	; (8001d14 <i2c_dma_read+0xfc>)
 8001d08:	699b      	ldr	r3, [r3, #24]

}
 8001d0a:	bf00      	nop
 8001d0c:	3708      	adds	r7, #8
 8001d0e:	46bd      	mov	sp, r7
 8001d10:	bd80      	pop	{r7, pc}
 8001d12:	bf00      	nop
 8001d14:	40005400 	.word	0x40005400

08001d18 <DMA1_Stream6_IRQHandler>:


void DMA1_Stream6_IRQHandler(void)
{
 8001d18:	b480      	push	{r7}
 8001d1a:	af00      	add	r7, sp, #0
	if((DMA1->HISR) & HIFSR_TCIF6)
 8001d1c:	4b0c      	ldr	r3, [pc, #48]	; (8001d50 <DMA1_Stream6_IRQHandler+0x38>)
 8001d1e:	685b      	ldr	r3, [r3, #4]
 8001d20:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d24:	2b00      	cmp	r3, #0
 8001d26:	d00e      	beq.n	8001d46 <DMA1_Stream6_IRQHandler+0x2e>
	{
		//do_ssomething
		g_tx__cmplt = 1;
 8001d28:	4b0a      	ldr	r3, [pc, #40]	; (8001d54 <DMA1_Stream6_IRQHandler+0x3c>)
 8001d2a:	2201      	movs	r2, #1
 8001d2c:	701a      	strb	r2, [r3, #0]

		/*Generate STOP condition*/
		 I2C1->CR1 |= CR1_STOP;
 8001d2e:	4b0a      	ldr	r3, [pc, #40]	; (8001d58 <DMA1_Stream6_IRQHandler+0x40>)
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	4a09      	ldr	r2, [pc, #36]	; (8001d58 <DMA1_Stream6_IRQHandler+0x40>)
 8001d34:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001d38:	6013      	str	r3, [r2, #0]

		/*Clear the flag*/
		DMA1->HIFCR |= HIFCR_CTCIF6;
 8001d3a:	4b05      	ldr	r3, [pc, #20]	; (8001d50 <DMA1_Stream6_IRQHandler+0x38>)
 8001d3c:	68db      	ldr	r3, [r3, #12]
 8001d3e:	4a04      	ldr	r2, [pc, #16]	; (8001d50 <DMA1_Stream6_IRQHandler+0x38>)
 8001d40:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001d44:	60d3      	str	r3, [r2, #12]
	}
}
 8001d46:	bf00      	nop
 8001d48:	46bd      	mov	sp, r7
 8001d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d4e:	4770      	bx	lr
 8001d50:	40026000 	.word	0x40026000
 8001d54:	20000249 	.word	0x20000249
 8001d58:	40005400 	.word	0x40005400

08001d5c <DMA1_Stream5_IRQHandler>:

void DMA1_Stream5_IRQHandler(void)
{
 8001d5c:	b480      	push	{r7}
 8001d5e:	af00      	add	r7, sp, #0
	if((DMA1->HISR) & HIFSR_TCIF5)
 8001d60:	4b0c      	ldr	r3, [pc, #48]	; (8001d94 <DMA1_Stream5_IRQHandler+0x38>)
 8001d62:	685b      	ldr	r3, [r3, #4]
 8001d64:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001d68:	2b00      	cmp	r3, #0
 8001d6a:	d00e      	beq.n	8001d8a <DMA1_Stream5_IRQHandler+0x2e>
	{

		g_rx__cmplt = 1;
 8001d6c:	4b0a      	ldr	r3, [pc, #40]	; (8001d98 <DMA1_Stream5_IRQHandler+0x3c>)
 8001d6e:	2201      	movs	r2, #1
 8001d70:	701a      	strb	r2, [r3, #0]

		//do_ssomething

		/*Generate STOP condition*/
		I2C1->CR1 |= CR1_STOP;
 8001d72:	4b0a      	ldr	r3, [pc, #40]	; (8001d9c <DMA1_Stream5_IRQHandler+0x40>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	4a09      	ldr	r2, [pc, #36]	; (8001d9c <DMA1_Stream5_IRQHandler+0x40>)
 8001d78:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001d7c:	6013      	str	r3, [r2, #0]

		/*Clear the flag*/
		DMA1->HIFCR |= HIFCR_CTCIF5;
 8001d7e:	4b05      	ldr	r3, [pc, #20]	; (8001d94 <DMA1_Stream5_IRQHandler+0x38>)
 8001d80:	68db      	ldr	r3, [r3, #12]
 8001d82:	4a04      	ldr	r2, [pc, #16]	; (8001d94 <DMA1_Stream5_IRQHandler+0x38>)
 8001d84:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001d88:	60d3      	str	r3, [r2, #12]

	}
}
 8001d8a:	bf00      	nop
 8001d8c:	46bd      	mov	sp, r7
 8001d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d92:	4770      	bx	lr
 8001d94:	40026000 	.word	0x40026000
 8001d98:	20000248 	.word	0x20000248
 8001d9c:	40005400 	.word	0x40005400

08001da0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001da0:	b480      	push	{r7}
 8001da2:	b083      	sub	sp, #12
 8001da4:	af00      	add	r7, sp, #0
 8001da6:	4603      	mov	r3, r0
 8001da8:	6039      	str	r1, [r7, #0]
 8001daa:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001dac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	db0a      	blt.n	8001dca <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001db4:	683b      	ldr	r3, [r7, #0]
 8001db6:	b2da      	uxtb	r2, r3
 8001db8:	490c      	ldr	r1, [pc, #48]	; (8001dec <__NVIC_SetPriority+0x4c>)
 8001dba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dbe:	0112      	lsls	r2, r2, #4
 8001dc0:	b2d2      	uxtb	r2, r2
 8001dc2:	440b      	add	r3, r1
 8001dc4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001dc8:	e00a      	b.n	8001de0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001dca:	683b      	ldr	r3, [r7, #0]
 8001dcc:	b2da      	uxtb	r2, r3
 8001dce:	4908      	ldr	r1, [pc, #32]	; (8001df0 <__NVIC_SetPriority+0x50>)
 8001dd0:	79fb      	ldrb	r3, [r7, #7]
 8001dd2:	f003 030f 	and.w	r3, r3, #15
 8001dd6:	3b04      	subs	r3, #4
 8001dd8:	0112      	lsls	r2, r2, #4
 8001dda:	b2d2      	uxtb	r2, r2
 8001ddc:	440b      	add	r3, r1
 8001dde:	761a      	strb	r2, [r3, #24]
}
 8001de0:	bf00      	nop
 8001de2:	370c      	adds	r7, #12
 8001de4:	46bd      	mov	sp, r7
 8001de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dea:	4770      	bx	lr
 8001dec:	e000e100 	.word	0xe000e100
 8001df0:	e000ed00 	.word	0xe000ed00

08001df4 <GPIO_PA8_Init>:
int8_t Magneto_offset[3]={0, 0, 0};
uint8_t r = 0;

float yaw_raw = 0;

void GPIO_PA8_Init(void){
 8001df4:	b480      	push	{r7}
 8001df6:	af00      	add	r7, sp, #0

	/*1.Enable clk to PORT A*/
	RCC->AHB1ENR |= 1U<<0;
 8001df8:	4b0d      	ldr	r3, [pc, #52]	; (8001e30 <GPIO_PA8_Init+0x3c>)
 8001dfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dfc:	4a0c      	ldr	r2, [pc, #48]	; (8001e30 <GPIO_PA8_Init+0x3c>)
 8001dfe:	f043 0301 	orr.w	r3, r3, #1
 8001e02:	6313      	str	r3, [r2, #48]	; 0x30

	/*2. Set PIN to Output*/
	GPIOA->MODER |= (1U<<16);
 8001e04:	4b0b      	ldr	r3, [pc, #44]	; (8001e34 <GPIO_PA8_Init+0x40>)
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	4a0a      	ldr	r2, [pc, #40]	; (8001e34 <GPIO_PA8_Init+0x40>)
 8001e0a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001e0e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U<<17);
 8001e10:	4b08      	ldr	r3, [pc, #32]	; (8001e34 <GPIO_PA8_Init+0x40>)
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	4a07      	ldr	r2, [pc, #28]	; (8001e34 <GPIO_PA8_Init+0x40>)
 8001e16:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001e1a:	6013      	str	r3, [r2, #0]
	GPIOA->BSRR = (1U<<24);		//Reset PA8
 8001e1c:	4b05      	ldr	r3, [pc, #20]	; (8001e34 <GPIO_PA8_Init+0x40>)
 8001e1e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001e22:	619a      	str	r2, [r3, #24]
}
 8001e24:	bf00      	nop
 8001e26:	46bd      	mov	sp, r7
 8001e28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e2c:	4770      	bx	lr
 8001e2e:	bf00      	nop
 8001e30:	40023800 	.word	0x40023800
 8001e34:	40020000 	.word	0x40020000

08001e38 <main>:


int main(void)
{
 8001e38:	b5b0      	push	{r4, r5, r7, lr}
 8001e3a:	b088      	sub	sp, #32
 8001e3c:	af00      	add	r7, sp, #0
	GPIO_PA8_Init();
 8001e3e:	f7ff ffd9 	bl	8001df4 <GPIO_PA8_Init>

	/*create start conditions for the Kalman-Filter*/
	float P[2]={KALMAN_P_INIT, KALMAN_P_INIT};			//Kovarianzmatrix
 8001e42:	4b2f      	ldr	r3, [pc, #188]	; (8001f00 <main+0xc8>)
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	61bb      	str	r3, [r7, #24]
 8001e48:	4b2d      	ldr	r3, [pc, #180]	; (8001f00 <main+0xc8>)
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	61fb      	str	r3, [r7, #28]
	float Q[2]={KALMAN_Q, KALMAN_Q}; 					//Kovarianzmatrix Prozessrauschen
 8001e4e:	4b2d      	ldr	r3, [pc, #180]	; (8001f04 <main+0xcc>)
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	613b      	str	r3, [r7, #16]
 8001e54:	4b2b      	ldr	r3, [pc, #172]	; (8001f04 <main+0xcc>)
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	617b      	str	r3, [r7, #20]
	float R[3]={KALMAN_R,KALMAN_R,KALMAN_R};			//Kovarianzmatrix Messrauschen
 8001e5a:	4b2b      	ldr	r3, [pc, #172]	; (8001f08 <main+0xd0>)
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	607b      	str	r3, [r7, #4]
 8001e60:	4b29      	ldr	r3, [pc, #164]	; (8001f08 <main+0xd0>)
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	60bb      	str	r3, [r7, #8]
 8001e66:	4b28      	ldr	r3, [pc, #160]	; (8001f08 <main+0xd0>)
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	60fb      	str	r3, [r7, #12]
	/*create start conditions for the Kalman-Filter*/
//	float P_Yaw[2]={KALMAN_P_INIT, KALMAN_P_INIT};			//Kovarianzmatrix
//	float Q_Yaw[2]={KALMAN_Q, KALMAN_Q, KALMAN_Q}; 			//Kovarianzmatrix Prozessrauschen
//	float R_Yaw[3]={KALMAN_R,KALMAN_R,KALMAN_R};			//Kovarianzmatrix Messrauschen

	EKF_Init(&Start_Conditions, P, Q, R);
 8001e6c:	1d3b      	adds	r3, r7, #4
 8001e6e:	f107 0210 	add.w	r2, r7, #16
 8001e72:	f107 0118 	add.w	r1, r7, #24
 8001e76:	4825      	ldr	r0, [pc, #148]	; (8001f0c <main+0xd4>)
 8001e78:	f7fe ff44 	bl	8000d04 <EKF_Init>
	//Offset_value_gyro  measurements_gyro_mpu9250 = {-0.17926,0.06552,0.01092};
	//Offset_value_gyro  measurements_gyro_mpu9250 = {0,0,0};	//calibration gets executed at the beginning
	//Offset_Scale_value_acc measurements_acc_mpu9250 = {0.03552, 9.81508/9.81f,0.01730,9.82851/9.81f,0.08203,9.97796/9.81f};

	/*Enable User Button*/
	BTN_init();
 8001e7c:	f7ff fcda 	bl	8001834 <BTN_init>

	/*SysTick Timer init*/
	systick_counter_init();
 8001e80:	f001 f954 	bl	800312c <systick_counter_init>

	/***MPU*config***************************************/
	/*Enable SPI*/
	spi1_dma_init();
 8001e84:	f000 fe40 	bl	8002b08 <spi1_dma_init>

	/*Enable Floating Point Unit*/
	SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));
 8001e88:	4b21      	ldr	r3, [pc, #132]	; (8001f10 <main+0xd8>)
 8001e8a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001e8e:	4a20      	ldr	r2, [pc, #128]	; (8001f10 <main+0xd8>)
 8001e90:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001e94:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

	/*Config NCS pin*/
	mpu9250_ncs_pin_config();
 8001e98:	f000 fb10 	bl	80024bc <mpu9250_ncs_pin_config>

	/*Enable tx stream*/
	dma2_stream3_spi_tx_init();
 8001e9c:	f000 feea 	bl	8002c74 <dma2_stream3_spi_tx_init>

	/*Enable rx stream*/
	dma2_stream2_spi_rx_init();
 8001ea0:	f000 ff46 	bl	8002d30 <dma2_stream2_spi_rx_init>
	/******************************************************/

	/*ACCELEROMETER+Gyroskope****START SPI********/
	/*Reset NCS pin*/
	mpu9250_ncs_pin_reset();
 8001ea4:	f000 fb38 	bl	8002518 <mpu9250_ncs_pin_reset>

	/*Config accel & gyro*/
	mpu9250_accel_config(ACC_FULL_SCALE_2_G);
 8001ea8:	2000      	movs	r0, #0
 8001eaa:	f000 fb45 	bl	8002538 <mpu9250_accel_config>

	mpu9250_gyro_config(GYRO_FULL_SCALE_250);
 8001eae:	2000      	movs	r0, #0
 8001eb0:	f000 fcfa 	bl	80028a8 <mpu9250_gyro_config>

	/*Set NCS pin to high-level*/
	mpu9250_ncs_pin_set();
 8001eb4:	f000 fb20 	bl	80024f8 <mpu9250_ncs_pin_set>
// delta_t_gyro = tim2_500hz_interrupt_init();
//	delta_t_gyro = tim2_100hz_interrupt_init();


	//SystemClock_Config();
	SystemCoreClockUpdate(); //Used to read the HCLK frequency
 8001eb8:	f001 f8b8 	bl	800302c <SystemCoreClockUpdate>

	 core_clock = SystemCoreClock;
 8001ebc:	4b15      	ldr	r3, [pc, #84]	; (8001f14 <main+0xdc>)
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	2200      	movs	r2, #0
 8001ec2:	461c      	mov	r4, r3
 8001ec4:	4615      	mov	r5, r2
 8001ec6:	4b14      	ldr	r3, [pc, #80]	; (8001f18 <main+0xe0>)
 8001ec8:	e9c3 4500 	strd	r4, r5, [r3]

	/***Magnetometer*config********************************/
	/*Enable I2C*/
	i2c1_init();
 8001ecc:	f7ff fcee 	bl	80018ac <i2c1_init>

	/*Enable Floating Point Unit*/
	//SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));

	/*Enable tx stream*/
	dma1_stream6_i2c1_tx_init();
 8001ed0:	f7ff fd8e 	bl	80019f0 <dma1_stream6_i2c1_tx_init>

	/*Enable rx stream*/
	dma1_stream5_i2c1_rx_init();
 8001ed4:	f7ff fdd2 	bl	8001a7c <dma1_stream5_i2c1_rx_init>
	/*******************************************************/
	/*Config Magnetometer*/
	GY511_init(LSM303_CONTIMODE, LSM303_MAGGAIN_8_1, LSM303_MAGRATE_220);
 8001ed8:	221c      	movs	r2, #28
 8001eda:	21e0      	movs	r1, #224	; 0xe0
 8001edc:	2000      	movs	r0, #0
 8001ede:	f7ff f905 	bl	80010ec <GY511_init>
	uart2_rx_interrupt_init();
 8001ee2:	f001 f9b1 	bl	8003248 <uart2_rx_interrupt_init>
	/******************************************************/

	/*Enable Timer 1kHz*/
	delta_t_gyro = tim2_1khz_interrupt_init();
 8001ee6:	f001 f955 	bl	8003194 <tim2_1khz_interrupt_init>
 8001eea:	eef0 7a40 	vmov.f32	s15, s0
 8001eee:	4b0b      	ldr	r3, [pc, #44]	; (8001f1c <main+0xe4>)
 8001ef0:	edc3 7a00 	vstr	s15, [r3]
	NVIC_SetPriority(TIM2_IRQn,70);
 8001ef4:	2146      	movs	r1, #70	; 0x46
 8001ef6:	201c      	movs	r0, #28
 8001ef8:	f7ff ff52 	bl	8001da0 <__NVIC_SetPriority>



	while(1)
 8001efc:	e7fe      	b.n	8001efc <main+0xc4>
 8001efe:	bf00      	nop
 8001f00:	20000004 	.word	0x20000004
 8001f04:	20000008 	.word	0x20000008
 8001f08:	2000000c 	.word	0x2000000c
 8001f0c:	200002b8 	.word	0x200002b8
 8001f10:	e000ed00 	.word	0xe000ed00
 8001f14:	2000002c 	.word	0x2000002c
 8001f18:	20000268 	.word	0x20000268
 8001f1c:	200002b4 	.word	0x200002b4

08001f20 <TIM2_IRQHandler>:
/*FUNCTIONS***********************************/


/*INTERRUPTS**********************************/
void TIM2_IRQHandler(void) // jede 1ms Interrupt
{
 8001f20:	b580      	push	{r7, lr}
 8001f22:	b082      	sub	sp, #8
 8001f24:	af00      	add	r7, sp, #0
	/*Clear update interrupt flag*/
	TIM2->SR &=~SR_UIF;
 8001f26:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f2a:	691b      	ldr	r3, [r3, #16]
 8001f2c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f30:	f023 0301 	bic.w	r3, r3, #1
 8001f34:	6113      	str	r3, [r2, #16]
	static uint8_t g = 0;
	static uint16_t calibration_cycles = 1000;



	switch(Zustand){
 8001f36:	4b57      	ldr	r3, [pc, #348]	; (8002094 <TIM2_IRQHandler+0x174>)
 8001f38:	781b      	ldrb	r3, [r3, #0]
 8001f3a:	2b04      	cmp	r3, #4
 8001f3c:	f200 80a5 	bhi.w	800208a <TIM2_IRQHandler+0x16a>
 8001f40:	a201      	add	r2, pc, #4	; (adr r2, 8001f48 <TIM2_IRQHandler+0x28>)
 8001f42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f46:	bf00      	nop
 8001f48:	08001f5d 	.word	0x08001f5d
 8001f4c:	08001fcd 	.word	0x08001fcd
 8001f50:	08002017 	.word	0x08002017
 8001f54:	08002047 	.word	0x08002047
 8001f58:	08002077 	.word	0x08002077

		case 0:
			timer_cnt_Z0++;
 8001f5c:	4b4e      	ldr	r3, [pc, #312]	; (8002098 <TIM2_IRQHandler+0x178>)
 8001f5e:	edd3 7a00 	vldr	s15, [r3]
 8001f62:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001f66:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001f6a:	4b4b      	ldr	r3, [pc, #300]	; (8002098 <TIM2_IRQHandler+0x178>)
 8001f6c:	edc3 7a00 	vstr	s15, [r3]
			res_time_Z0 = delta_t_gyro*timer_cnt_Z0;
 8001f70:	4b4a      	ldr	r3, [pc, #296]	; (800209c <TIM2_IRQHandler+0x17c>)
 8001f72:	ed93 7a00 	vldr	s14, [r3]
 8001f76:	4b48      	ldr	r3, [pc, #288]	; (8002098 <TIM2_IRQHandler+0x178>)
 8001f78:	edd3 7a00 	vldr	s15, [r3]
 8001f7c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f80:	4b47      	ldr	r3, [pc, #284]	; (80020a0 <TIM2_IRQHandler+0x180>)
 8001f82:	edc3 7a00 	vstr	s15, [r3]

			if(!(GPIOC->IDR & BTN_PIN) && res_time_Z0 < 5)
 8001f86:	4b47      	ldr	r3, [pc, #284]	; (80020a4 <TIM2_IRQHandler+0x184>)
 8001f88:	691b      	ldr	r3, [r3, #16]
 8001f8a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d10c      	bne.n	8001fac <TIM2_IRQHandler+0x8c>
 8001f92:	4b43      	ldr	r3, [pc, #268]	; (80020a0 <TIM2_IRQHandler+0x180>)
 8001f94:	edd3 7a00 	vldr	s15, [r3]
 8001f98:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8001f9c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001fa0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fa4:	d502      	bpl.n	8001fac <TIM2_IRQHandler+0x8c>
			{
				Zustand = 4;
 8001fa6:	4b3b      	ldr	r3, [pc, #236]	; (8002094 <TIM2_IRQHandler+0x174>)
 8001fa8:	2204      	movs	r2, #4
 8001faa:	701a      	strb	r2, [r3, #0]
			}

			if (res_time_Z0 >= 5)
 8001fac:	4b3c      	ldr	r3, [pc, #240]	; (80020a0 <TIM2_IRQHandler+0x180>)
 8001fae:	edd3 7a00 	vldr	s15, [r3]
 8001fb2:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8001fb6:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001fba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fbe:	da00      	bge.n	8001fc2 <TIM2_IRQHandler+0xa2>
			{
				timer_cnt_Z0 = 0;
				//Zustand = 4; //direkt zur EKF Berechnung
			}

		break;
 8001fc0:	e063      	b.n	800208a <TIM2_IRQHandler+0x16a>
				timer_cnt_Z0 = 0;
 8001fc2:	4b35      	ldr	r3, [pc, #212]	; (8002098 <TIM2_IRQHandler+0x178>)
 8001fc4:	f04f 0200 	mov.w	r2, #0
 8001fc8:	601a      	str	r2, [r3, #0]
		break;
 8001fca:	e05e      	b.n	800208a <TIM2_IRQHandler+0x16a>
		case 1:															// Magnetometer Kalibrierung
			// Zuerst GUI starten
//			if((!(GPIOC->IDR & BTN_PIN)) || g==1)
//			{
//				g = 1;
				GY_511_update(&MagnetometerData, Magneto_offset);
 8001fcc:	4936      	ldr	r1, [pc, #216]	; (80020a8 <TIM2_IRQHandler+0x188>)
 8001fce:	4837      	ldr	r0, [pc, #220]	; (80020ac <TIM2_IRQHandler+0x18c>)
 8001fd0:	f7ff f926 	bl	8001220 <GY_511_update>
				uart_send_Magneto(&MagnetometerData);
 8001fd4:	4835      	ldr	r0, [pc, #212]	; (80020ac <TIM2_IRQHandler+0x18c>)
 8001fd6:	f001 f9ef 	bl	80033b8 <uart_send_Magneto>
				uart_send_yaw(&MagnetometerData);
 8001fda:	4834      	ldr	r0, [pc, #208]	; (80020ac <TIM2_IRQHandler+0x18c>)
 8001fdc:	f001 fa24 	bl	8003428 <uart_send_yaw>

				int allNonZero = 1;  // Annahme, dass alle Werte ungleich Null sind
 8001fe0:	2301      	movs	r3, #1
 8001fe2:	607b      	str	r3, [r7, #4]

				    for(int i = 0; i < 3; i++)
 8001fe4:	2300      	movs	r3, #0
 8001fe6:	603b      	str	r3, [r7, #0]
 8001fe8:	e00b      	b.n	8002002 <TIM2_IRQHandler+0xe2>
				    {
				        if(Magneto_offset[i] == 0)
 8001fea:	4a2f      	ldr	r2, [pc, #188]	; (80020a8 <TIM2_IRQHandler+0x188>)
 8001fec:	683b      	ldr	r3, [r7, #0]
 8001fee:	4413      	add	r3, r2
 8001ff0:	f993 3000 	ldrsb.w	r3, [r3]
 8001ff4:	2b00      	cmp	r3, #0
 8001ff6:	d101      	bne.n	8001ffc <TIM2_IRQHandler+0xdc>
				        {
				            allNonZero = 0;  // Wenn ein Wert gleich Null ist, setzen Sie allNonZero auf 0
 8001ff8:	2300      	movs	r3, #0
 8001ffa:	607b      	str	r3, [r7, #4]
				    for(int i = 0; i < 3; i++)
 8001ffc:	683b      	ldr	r3, [r7, #0]
 8001ffe:	3301      	adds	r3, #1
 8002000:	603b      	str	r3, [r7, #0]
 8002002:	683b      	ldr	r3, [r7, #0]
 8002004:	2b02      	cmp	r3, #2
 8002006:	ddf0      	ble.n	8001fea <TIM2_IRQHandler+0xca>

				        }
				    }


				if(allNonZero)
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	2b00      	cmp	r3, #0
 800200c:	d03a      	beq.n	8002084 <TIM2_IRQHandler+0x164>
				{
					Zustand = 2;
 800200e:	4b21      	ldr	r3, [pc, #132]	; (8002094 <TIM2_IRQHandler+0x174>)
 8002010:	2202      	movs	r2, #2
 8002012:	701a      	strb	r2, [r3, #0]
				}
//			}

			break;
 8002014:	e036      	b.n	8002084 <TIM2_IRQHandler+0x164>

		case 2:	//Gyro Kalibrierung
			set_gyro_offset(cnt_gyro_cali, calibration_cycles);
 8002016:	4b26      	ldr	r3, [pc, #152]	; (80020b0 <TIM2_IRQHandler+0x190>)
 8002018:	881b      	ldrh	r3, [r3, #0]
 800201a:	4a26      	ldr	r2, [pc, #152]	; (80020b4 <TIM2_IRQHandler+0x194>)
 800201c:	8812      	ldrh	r2, [r2, #0]
 800201e:	4611      	mov	r1, r2
 8002020:	4618      	mov	r0, r3
 8002022:	f000 f9c3 	bl	80023ac <set_gyro_offset>

			cnt_gyro_cali++;
 8002026:	4b22      	ldr	r3, [pc, #136]	; (80020b0 <TIM2_IRQHandler+0x190>)
 8002028:	881b      	ldrh	r3, [r3, #0]
 800202a:	3301      	adds	r3, #1
 800202c:	b29a      	uxth	r2, r3
 800202e:	4b20      	ldr	r3, [pc, #128]	; (80020b0 <TIM2_IRQHandler+0x190>)
 8002030:	801a      	strh	r2, [r3, #0]

			if(cnt_gyro_cali > calibration_cycles)
 8002032:	4b1f      	ldr	r3, [pc, #124]	; (80020b0 <TIM2_IRQHandler+0x190>)
 8002034:	881a      	ldrh	r2, [r3, #0]
 8002036:	4b1f      	ldr	r3, [pc, #124]	; (80020b4 <TIM2_IRQHandler+0x194>)
 8002038:	881b      	ldrh	r3, [r3, #0]
 800203a:	429a      	cmp	r2, r3
 800203c:	d924      	bls.n	8002088 <TIM2_IRQHandler+0x168>
			{
				//Zustand = 3;
//				Start_Conditions.pitch_r = pitch_avg;
//				Start_Conditions.roll_r = roll_avg;
				Zustand = 4;
 800203e:	4b15      	ldr	r3, [pc, #84]	; (8002094 <TIM2_IRQHandler+0x174>)
 8002040:	2204      	movs	r2, #4
 8002042:	701a      	strb	r2, [r3, #0]
			}

			break;
 8002044:	e020      	b.n	8002088 <TIM2_IRQHandler+0x168>

		case 3:	//Acc Kalibrierung

			get_camera_position_calibration();
 8002046:	f000 f98b 	bl	8002360 <get_camera_position_calibration>
			Offset_Calibration_acc(&Values_acc,&measurements_acc_mpu9250, acc_x, acc_y, acc_z, (uint16_t) 1000);
 800204a:	4b1b      	ldr	r3, [pc, #108]	; (80020b8 <TIM2_IRQHandler+0x198>)
 800204c:	edd3 7a00 	vldr	s15, [r3]
 8002050:	4b1a      	ldr	r3, [pc, #104]	; (80020bc <TIM2_IRQHandler+0x19c>)
 8002052:	ed93 7a00 	vldr	s14, [r3]
 8002056:	4b1a      	ldr	r3, [pc, #104]	; (80020c0 <TIM2_IRQHandler+0x1a0>)
 8002058:	edd3 6a00 	vldr	s13, [r3]
 800205c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8002060:	eeb0 1a66 	vmov.f32	s2, s13
 8002064:	eef0 0a47 	vmov.f32	s1, s14
 8002068:	eeb0 0a67 	vmov.f32	s0, s15
 800206c:	4915      	ldr	r1, [pc, #84]	; (80020c4 <TIM2_IRQHandler+0x1a4>)
 800206e:	4816      	ldr	r0, [pc, #88]	; (80020c8 <TIM2_IRQHandler+0x1a8>)
 8002070:	f7ff fa06 	bl	8001480 <Offset_Calibration_acc>

			break;
 8002074:	e009      	b.n	800208a <TIM2_IRQHandler+0x16a>

		case 4: //EKF mit Complementary Filter
			get_camera_position(&MagnetometerData, &measurements_acc_mpu9250, &measurements_gyro_mpu9250, Magneto_offset);
 8002076:	4b0c      	ldr	r3, [pc, #48]	; (80020a8 <TIM2_IRQHandler+0x188>)
 8002078:	4a14      	ldr	r2, [pc, #80]	; (80020cc <TIM2_IRQHandler+0x1ac>)
 800207a:	4912      	ldr	r1, [pc, #72]	; (80020c4 <TIM2_IRQHandler+0x1a4>)
 800207c:	480b      	ldr	r0, [pc, #44]	; (80020ac <TIM2_IRQHandler+0x18c>)
 800207e:	f000 f827 	bl	80020d0 <get_camera_position>

			break;
 8002082:	e002      	b.n	800208a <TIM2_IRQHandler+0x16a>
			break;
 8002084:	bf00      	nop
 8002086:	e000      	b.n	800208a <TIM2_IRQHandler+0x16a>
			break;
 8002088:	bf00      	nop
	}


}
 800208a:	bf00      	nop
 800208c:	3708      	adds	r7, #8
 800208e:	46bd      	mov	sp, r7
 8002090:	bd80      	pop	{r7, pc}
 8002092:	bf00      	nop
 8002094:	20000028 	.word	0x20000028
 8002098:	20000308 	.word	0x20000308
 800209c:	200002b4 	.word	0x200002b4
 80020a0:	2000030c 	.word	0x2000030c
 80020a4:	40020800 	.word	0x40020800
 80020a8:	20000304 	.word	0x20000304
 80020ac:	200002e8 	.word	0x200002e8
 80020b0:	200002b0 	.word	0x200002b0
 80020b4:	2000002a 	.word	0x2000002a
 80020b8:	2000024c 	.word	0x2000024c
 80020bc:	20000250 	.word	0x20000250
 80020c0:	20000254 	.word	0x20000254
 80020c4:	20000010 	.word	0x20000010
 80020c8:	2000028c 	.word	0x2000028c
 80020cc:	200002a4 	.word	0x200002a4

080020d0 <get_camera_position>:



void static get_camera_position(lsm303MagData *MagnetometerData,Offset_Scale_value_acc* acc_offset_scale, Offset_value_gyro* gyro_offset, int8_t *Magneto_offset)
{
 80020d0:	b580      	push	{r7, lr}
 80020d2:	b084      	sub	sp, #16
 80020d4:	af00      	add	r7, sp, #0
 80020d6:	60f8      	str	r0, [r7, #12]
 80020d8:	60b9      	str	r1, [r7, #8]
 80020da:	607a      	str	r2, [r7, #4]
 80020dc:	603b      	str	r3, [r7, #0]
		static uint8_t enable = 0;
		/*Set NCS pin to low-level*/
		mpu9250_ncs_pin_reset();
 80020de:	f000 fa1b 	bl	8002518 <mpu9250_ncs_pin_reset>
		/*Update accel values*/
		mpu9250_accel_gyro_update();
 80020e2:	f000 fae5 	bl	80026b0 <mpu9250_accel_gyro_update>
		/*Set NCS pin to high-level*/
		mpu9250_ncs_pin_set();
 80020e6:	f000 fa07 	bl	80024f8 <mpu9250_ncs_pin_set>

		/*Get accel data*/
		acc_x =  mpu9250_get_acc_x()/acc_offset_scale->x_scale_acc - acc_offset_scale->x_offset_acc;
 80020ea:	f000 fbbb 	bl	8002864 <mpu9250_get_acc_x>
 80020ee:	eef0 6a40 	vmov.f32	s13, s0
 80020f2:	68bb      	ldr	r3, [r7, #8]
 80020f4:	edd3 7a01 	vldr	s15, [r3, #4]
 80020f8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80020fc:	68bb      	ldr	r3, [r7, #8]
 80020fe:	edd3 7a00 	vldr	s15, [r3]
 8002102:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002106:	4b86      	ldr	r3, [pc, #536]	; (8002320 <get_camera_position+0x250>)
 8002108:	edc3 7a00 	vstr	s15, [r3]
		acc_y =  mpu9250_get_acc_y()/acc_offset_scale->y_scale_acc - acc_offset_scale->y_offset_acc;
 800210c:	f000 fbb5 	bl	800287a <mpu9250_get_acc_y>
 8002110:	eef0 6a40 	vmov.f32	s13, s0
 8002114:	68bb      	ldr	r3, [r7, #8]
 8002116:	edd3 7a03 	vldr	s15, [r3, #12]
 800211a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800211e:	68bb      	ldr	r3, [r7, #8]
 8002120:	edd3 7a02 	vldr	s15, [r3, #8]
 8002124:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002128:	4b7e      	ldr	r3, [pc, #504]	; (8002324 <get_camera_position+0x254>)
 800212a:	edc3 7a00 	vstr	s15, [r3]
		acc_z =  mpu9250_get_acc_z()/acc_offset_scale->z_scale_acc - acc_offset_scale->z_offset_acc;
 800212e:	f000 fbaf 	bl	8002890 <mpu9250_get_acc_z>
 8002132:	eef0 6a40 	vmov.f32	s13, s0
 8002136:	68bb      	ldr	r3, [r7, #8]
 8002138:	edd3 7a05 	vldr	s15, [r3, #20]
 800213c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8002140:	68bb      	ldr	r3, [r7, #8]
 8002142:	edd3 7a04 	vldr	s15, [r3, #16]
 8002146:	ee77 7a67 	vsub.f32	s15, s14, s15
 800214a:	4b77      	ldr	r3, [pc, #476]	; (8002328 <get_camera_position+0x258>)
 800214c:	edc3 7a00 	vstr	s15, [r3]

		/*Get accel data*/
		gyro_x =  mpu9250_get_gyro_x()-gyro_offset->x_offset_gyro;
 8002150:	f000 fc2a 	bl	80029a8 <mpu9250_get_gyro_x>
 8002154:	eeb0 7a40 	vmov.f32	s14, s0
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	edd3 7a00 	vldr	s15, [r3]
 800215e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002162:	4b72      	ldr	r3, [pc, #456]	; (800232c <get_camera_position+0x25c>)
 8002164:	edc3 7a00 	vstr	s15, [r3]
		gyro_y =  mpu9250_get_gyro_y()-gyro_offset->y_offset_gyro;
 8002168:	f000 fc29 	bl	80029be <mpu9250_get_gyro_y>
 800216c:	eeb0 7a40 	vmov.f32	s14, s0
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	edd3 7a01 	vldr	s15, [r3, #4]
 8002176:	ee77 7a67 	vsub.f32	s15, s14, s15
 800217a:	4b6d      	ldr	r3, [pc, #436]	; (8002330 <get_camera_position+0x260>)
 800217c:	edc3 7a00 	vstr	s15, [r3]
		gyro_z =  mpu9250_get_gyro_z()-gyro_offset->z_offset_gyro;
 8002180:	f000 fc28 	bl	80029d4 <mpu9250_get_gyro_z>
 8002184:	eeb0 7a40 	vmov.f32	s14, s0
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	edd3 7a02 	vldr	s15, [r3, #8]
 800218e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002192:	4b68      	ldr	r3, [pc, #416]	; (8002334 <get_camera_position+0x264>)
 8002194:	edc3 7a00 	vstr	s15, [r3]
//		Start_Conditions.yaw_r = MagnetometerData->yaw; // in Radiant
//		//Start_Conditions.roll_r
//		//Start_Conditions.pitch_r
//		enable = 1;
//		}
		EKF_Predict(&Start_Conditions, gyro_x, gyro_y, gyro_z, delta_t_gyro);
 8002198:	4b64      	ldr	r3, [pc, #400]	; (800232c <get_camera_position+0x25c>)
 800219a:	edd3 7a00 	vldr	s15, [r3]
 800219e:	4b64      	ldr	r3, [pc, #400]	; (8002330 <get_camera_position+0x260>)
 80021a0:	ed93 7a00 	vldr	s14, [r3]
 80021a4:	4b63      	ldr	r3, [pc, #396]	; (8002334 <get_camera_position+0x264>)
 80021a6:	edd3 6a00 	vldr	s13, [r3]
 80021aa:	4b63      	ldr	r3, [pc, #396]	; (8002338 <get_camera_position+0x268>)
 80021ac:	ed93 6a00 	vldr	s12, [r3]
 80021b0:	eef0 1a46 	vmov.f32	s3, s12
 80021b4:	eeb0 1a66 	vmov.f32	s2, s13
 80021b8:	eef0 0a47 	vmov.f32	s1, s14
 80021bc:	eeb0 0a67 	vmov.f32	s0, s15
 80021c0:	485e      	ldr	r0, [pc, #376]	; (800233c <get_camera_position+0x26c>)
 80021c2:	f7fe fddc 	bl	8000d7e <EKF_Predict>

		roll_angle_pr	= Start_Conditions.roll_r 	*180.0f/M_PI;
 80021c6:	4b5d      	ldr	r3, [pc, #372]	; (800233c <get_camera_position+0x26c>)
 80021c8:	edd3 7a00 	vldr	s15, [r3]
 80021cc:	ed9f 7a5c 	vldr	s14, [pc, #368]	; 8002340 <get_camera_position+0x270>
 80021d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80021d4:	ee17 0a90 	vmov	r0, s15
 80021d8:	f7fe f9be 	bl	8000558 <__aeabi_f2d>
 80021dc:	a34e      	add	r3, pc, #312	; (adr r3, 8002318 <get_camera_position+0x248>)
 80021de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021e2:	f7fe fb3b 	bl	800085c <__aeabi_ddiv>
 80021e6:	4602      	mov	r2, r0
 80021e8:	460b      	mov	r3, r1
 80021ea:	4610      	mov	r0, r2
 80021ec:	4619      	mov	r1, r3
 80021ee:	f7fe fd03 	bl	8000bf8 <__aeabi_d2f>
 80021f2:	4603      	mov	r3, r0
 80021f4:	4a53      	ldr	r2, [pc, #332]	; (8002344 <get_camera_position+0x274>)
 80021f6:	6013      	str	r3, [r2, #0]
		pitch_angle_pr	= Start_Conditions.pitch_r 	*180.0f/M_PI;
 80021f8:	4b50      	ldr	r3, [pc, #320]	; (800233c <get_camera_position+0x26c>)
 80021fa:	edd3 7a01 	vldr	s15, [r3, #4]
 80021fe:	ed9f 7a50 	vldr	s14, [pc, #320]	; 8002340 <get_camera_position+0x270>
 8002202:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002206:	ee17 0a90 	vmov	r0, s15
 800220a:	f7fe f9a5 	bl	8000558 <__aeabi_f2d>
 800220e:	a342      	add	r3, pc, #264	; (adr r3, 8002318 <get_camera_position+0x248>)
 8002210:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002214:	f7fe fb22 	bl	800085c <__aeabi_ddiv>
 8002218:	4602      	mov	r2, r0
 800221a:	460b      	mov	r3, r1
 800221c:	4610      	mov	r0, r2
 800221e:	4619      	mov	r1, r3
 8002220:	f7fe fcea 	bl	8000bf8 <__aeabi_d2f>
 8002224:	4603      	mov	r3, r0
 8002226:	4a48      	ldr	r2, [pc, #288]	; (8002348 <get_camera_position+0x278>)
 8002228:	6013      	str	r3, [r2, #0]
		yaw_angle_pr	= Start_Conditions.yaw_r 	*180.0f/M_PI;
 800222a:	4b44      	ldr	r3, [pc, #272]	; (800233c <get_camera_position+0x26c>)
 800222c:	edd3 7a02 	vldr	s15, [r3, #8]
 8002230:	ed9f 7a43 	vldr	s14, [pc, #268]	; 8002340 <get_camera_position+0x270>
 8002234:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002238:	ee17 0a90 	vmov	r0, s15
 800223c:	f7fe f98c 	bl	8000558 <__aeabi_f2d>
 8002240:	a335      	add	r3, pc, #212	; (adr r3, 8002318 <get_camera_position+0x248>)
 8002242:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002246:	f7fe fb09 	bl	800085c <__aeabi_ddiv>
 800224a:	4602      	mov	r2, r0
 800224c:	460b      	mov	r3, r1
 800224e:	4610      	mov	r0, r2
 8002250:	4619      	mov	r1, r3
 8002252:	f7fe fcd1 	bl	8000bf8 <__aeabi_d2f>
 8002256:	4603      	mov	r3, r0
 8002258:	4a3c      	ldr	r2, [pc, #240]	; (800234c <get_camera_position+0x27c>)
 800225a:	6013      	str	r3, [r2, #0]
//		after = SysTick->VAL;
//		time_taken = (before - after)*0.0000000625;

		if (ii==10)
 800225c:	4b3c      	ldr	r3, [pc, #240]	; (8002350 <get_camera_position+0x280>)
 800225e:	881b      	ldrh	r3, [r3, #0]
 8002260:	2b0a      	cmp	r3, #10
 8002262:	d14d      	bne.n	8002300 <get_camera_position+0x230>
		{
			// update Roll, Pitch
			//EKF_Update(&Start_Conditions, acc_x, acc_y, acc_z);
			roll_angle_up	= Start_Conditions.roll_r 	*180.0f/M_PI;
 8002264:	4b35      	ldr	r3, [pc, #212]	; (800233c <get_camera_position+0x26c>)
 8002266:	edd3 7a00 	vldr	s15, [r3]
 800226a:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8002340 <get_camera_position+0x270>
 800226e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002272:	ee17 0a90 	vmov	r0, s15
 8002276:	f7fe f96f 	bl	8000558 <__aeabi_f2d>
 800227a:	a327      	add	r3, pc, #156	; (adr r3, 8002318 <get_camera_position+0x248>)
 800227c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002280:	f7fe faec 	bl	800085c <__aeabi_ddiv>
 8002284:	4602      	mov	r2, r0
 8002286:	460b      	mov	r3, r1
 8002288:	4610      	mov	r0, r2
 800228a:	4619      	mov	r1, r3
 800228c:	f7fe fcb4 	bl	8000bf8 <__aeabi_d2f>
 8002290:	4603      	mov	r3, r0
 8002292:	4a30      	ldr	r2, [pc, #192]	; (8002354 <get_camera_position+0x284>)
 8002294:	6013      	str	r3, [r2, #0]
			pitch_angle_up	= Start_Conditions.pitch_r 	*180.0f/M_PI;
 8002296:	4b29      	ldr	r3, [pc, #164]	; (800233c <get_camera_position+0x26c>)
 8002298:	edd3 7a01 	vldr	s15, [r3, #4]
 800229c:	ed9f 7a28 	vldr	s14, [pc, #160]	; 8002340 <get_camera_position+0x270>
 80022a0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80022a4:	ee17 0a90 	vmov	r0, s15
 80022a8:	f7fe f956 	bl	8000558 <__aeabi_f2d>
 80022ac:	a31a      	add	r3, pc, #104	; (adr r3, 8002318 <get_camera_position+0x248>)
 80022ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022b2:	f7fe fad3 	bl	800085c <__aeabi_ddiv>
 80022b6:	4602      	mov	r2, r0
 80022b8:	460b      	mov	r3, r1
 80022ba:	4610      	mov	r0, r2
 80022bc:	4619      	mov	r1, r3
 80022be:	f7fe fc9b 	bl	8000bf8 <__aeabi_d2f>
 80022c2:	4603      	mov	r3, r0
 80022c4:	4a24      	ldr	r2, [pc, #144]	; (8002358 <get_camera_position+0x288>)
 80022c6:	6013      	str	r3, [r2, #0]
			// update Yaw
			//GY_511_update(MagnetometerData, Magneto_offset);
			//MagYaw_RollKompensated(&Start_Conditions, MagnetometerData->x, MagnetometerData->y, MagnetometerData->z);
			//MagYaw_to_RefKoordinate(&Start_Conditions,MagnetometerData);
			//YAW_Complementary(&Start_Conditions, 0.02);
			yaw_angle_up	= Start_Conditions.yaw_r *180.0f/M_PI;
 80022c8:	4b1c      	ldr	r3, [pc, #112]	; (800233c <get_camera_position+0x26c>)
 80022ca:	edd3 7a02 	vldr	s15, [r3, #8]
 80022ce:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8002340 <get_camera_position+0x270>
 80022d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80022d6:	ee17 0a90 	vmov	r0, s15
 80022da:	f7fe f93d 	bl	8000558 <__aeabi_f2d>
 80022de:	a30e      	add	r3, pc, #56	; (adr r3, 8002318 <get_camera_position+0x248>)
 80022e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022e4:	f7fe faba 	bl	800085c <__aeabi_ddiv>
 80022e8:	4602      	mov	r2, r0
 80022ea:	460b      	mov	r3, r1
 80022ec:	4610      	mov	r0, r2
 80022ee:	4619      	mov	r1, r3
 80022f0:	f7fe fc82 	bl	8000bf8 <__aeabi_d2f>
 80022f4:	4603      	mov	r3, r0
 80022f6:	4a19      	ldr	r2, [pc, #100]	; (800235c <get_camera_position+0x28c>)
 80022f8:	6013      	str	r3, [r2, #0]

			ii=0;
 80022fa:	4b15      	ldr	r3, [pc, #84]	; (8002350 <get_camera_position+0x280>)
 80022fc:	2200      	movs	r2, #0
 80022fe:	801a      	strh	r2, [r3, #0]
		}
		ii++;
 8002300:	4b13      	ldr	r3, [pc, #76]	; (8002350 <get_camera_position+0x280>)
 8002302:	881b      	ldrh	r3, [r3, #0]
 8002304:	3301      	adds	r3, #1
 8002306:	b29a      	uxth	r2, r3
 8002308:	4b11      	ldr	r3, [pc, #68]	; (8002350 <get_camera_position+0x280>)
 800230a:	801a      	strh	r2, [r3, #0]
}
 800230c:	bf00      	nop
 800230e:	3710      	adds	r7, #16
 8002310:	46bd      	mov	sp, r7
 8002312:	bd80      	pop	{r7, pc}
 8002314:	f3af 8000 	nop.w
 8002318:	54442d18 	.word	0x54442d18
 800231c:	400921fb 	.word	0x400921fb
 8002320:	2000024c 	.word	0x2000024c
 8002324:	20000250 	.word	0x20000250
 8002328:	20000254 	.word	0x20000254
 800232c:	20000258 	.word	0x20000258
 8002330:	2000025c 	.word	0x2000025c
 8002334:	20000260 	.word	0x20000260
 8002338:	200002b4 	.word	0x200002b4
 800233c:	200002b8 	.word	0x200002b8
 8002340:	43340000 	.word	0x43340000
 8002344:	20000280 	.word	0x20000280
 8002348:	20000284 	.word	0x20000284
 800234c:	20000288 	.word	0x20000288
 8002350:	20000270 	.word	0x20000270
 8002354:	20000274 	.word	0x20000274
 8002358:	20000278 	.word	0x20000278
 800235c:	2000027c 	.word	0x2000027c

08002360 <get_camera_position_calibration>:

void static get_camera_position_calibration(void)
{
 8002360:	b580      	push	{r7, lr}
 8002362:	af00      	add	r7, sp, #0
		/*Set NCS pin to low-level*/
		mpu9250_ncs_pin_reset();
 8002364:	f000 f8d8 	bl	8002518 <mpu9250_ncs_pin_reset>
		/*Update accel values*/
		mpu9250_accel_gyro_update();
 8002368:	f000 f9a2 	bl	80026b0 <mpu9250_accel_gyro_update>
		/*Set NCS pin to high-level*/
		mpu9250_ncs_pin_set();
 800236c:	f000 f8c4 	bl	80024f8 <mpu9250_ncs_pin_set>

		/*Get accel data*/
		acc_x =  mpu9250_get_acc_x();
 8002370:	f000 fa78 	bl	8002864 <mpu9250_get_acc_x>
 8002374:	eef0 7a40 	vmov.f32	s15, s0
 8002378:	4b09      	ldr	r3, [pc, #36]	; (80023a0 <get_camera_position_calibration+0x40>)
 800237a:	edc3 7a00 	vstr	s15, [r3]
		acc_y =  mpu9250_get_acc_y();
 800237e:	f000 fa7c 	bl	800287a <mpu9250_get_acc_y>
 8002382:	eef0 7a40 	vmov.f32	s15, s0
 8002386:	4b07      	ldr	r3, [pc, #28]	; (80023a4 <get_camera_position_calibration+0x44>)
 8002388:	edc3 7a00 	vstr	s15, [r3]
		acc_z =  mpu9250_get_acc_z();
 800238c:	f000 fa80 	bl	8002890 <mpu9250_get_acc_z>
 8002390:	eef0 7a40 	vmov.f32	s15, s0
 8002394:	4b04      	ldr	r3, [pc, #16]	; (80023a8 <get_camera_position_calibration+0x48>)
 8002396:	edc3 7a00 	vstr	s15, [r3]

}
 800239a:	bf00      	nop
 800239c:	bd80      	pop	{r7, pc}
 800239e:	bf00      	nop
 80023a0:	2000024c 	.word	0x2000024c
 80023a4:	20000250 	.word	0x20000250
 80023a8:	20000254 	.word	0x20000254

080023ac <set_gyro_offset>:

void static set_gyro_offset(uint16_t counter, uint16_t cycle_times)
{
 80023ac:	b580      	push	{r7, lr}
 80023ae:	b082      	sub	sp, #8
 80023b0:	af00      	add	r7, sp, #0
 80023b2:	4603      	mov	r3, r0
 80023b4:	460a      	mov	r2, r1
 80023b6:	80fb      	strh	r3, [r7, #6]
 80023b8:	4613      	mov	r3, r2
 80023ba:	80bb      	strh	r3, [r7, #4]
		/*Set NCS pin to low-level*/
		mpu9250_ncs_pin_reset();
 80023bc:	f000 f8ac 	bl	8002518 <mpu9250_ncs_pin_reset>
		/*Update accel values*/
		mpu9250_accel_gyro_update();
 80023c0:	f000 f976 	bl	80026b0 <mpu9250_accel_gyro_update>
		/*Set NCS pin to high-level*/
		mpu9250_ncs_pin_set();
 80023c4:	f000 f898 	bl	80024f8 <mpu9250_ncs_pin_set>
		counter_pb++;
 80023c8:	4b24      	ldr	r3, [pc, #144]	; (800245c <set_gyro_offset+0xb0>)
 80023ca:	881b      	ldrh	r3, [r3, #0]
 80023cc:	3301      	adds	r3, #1
 80023ce:	b29a      	uxth	r2, r3
 80023d0:	4b22      	ldr	r3, [pc, #136]	; (800245c <set_gyro_offset+0xb0>)
 80023d2:	801a      	strh	r2, [r3, #0]
		/*Get accel data*/
		gyro_x =  mpu9250_get_gyro_x();
 80023d4:	f000 fae8 	bl	80029a8 <mpu9250_get_gyro_x>
 80023d8:	eef0 7a40 	vmov.f32	s15, s0
 80023dc:	4b20      	ldr	r3, [pc, #128]	; (8002460 <set_gyro_offset+0xb4>)
 80023de:	edc3 7a00 	vstr	s15, [r3]
		gyro_y =  mpu9250_get_gyro_y();
 80023e2:	f000 faec 	bl	80029be <mpu9250_get_gyro_y>
 80023e6:	eef0 7a40 	vmov.f32	s15, s0
 80023ea:	4b1e      	ldr	r3, [pc, #120]	; (8002464 <set_gyro_offset+0xb8>)
 80023ec:	edc3 7a00 	vstr	s15, [r3]
		gyro_z =  mpu9250_get_gyro_z();
 80023f0:	f000 faf0 	bl	80029d4 <mpu9250_get_gyro_z>
 80023f4:	eef0 7a40 	vmov.f32	s15, s0
 80023f8:	4b1b      	ldr	r3, [pc, #108]	; (8002468 <set_gyro_offset+0xbc>)
 80023fa:	edc3 7a00 	vstr	s15, [r3]

		acc_x =  mpu9250_get_acc_x();
 80023fe:	f000 fa31 	bl	8002864 <mpu9250_get_acc_x>
 8002402:	eef0 7a40 	vmov.f32	s15, s0
 8002406:	4b19      	ldr	r3, [pc, #100]	; (800246c <set_gyro_offset+0xc0>)
 8002408:	edc3 7a00 	vstr	s15, [r3]
		acc_y =  mpu9250_get_acc_y();
 800240c:	f000 fa35 	bl	800287a <mpu9250_get_acc_y>
 8002410:	eef0 7a40 	vmov.f32	s15, s0
 8002414:	4b16      	ldr	r3, [pc, #88]	; (8002470 <set_gyro_offset+0xc4>)
 8002416:	edc3 7a00 	vstr	s15, [r3]
		acc_z =  mpu9250_get_acc_z();
 800241a:	f000 fa39 	bl	8002890 <mpu9250_get_acc_z>
 800241e:	eef0 7a40 	vmov.f32	s15, s0
 8002422:	4b14      	ldr	r3, [pc, #80]	; (8002474 <set_gyro_offset+0xc8>)
 8002424:	edc3 7a00 	vstr	s15, [r3]

		Offset_Calibration_gyro(&measurements_gyro_mpu9250, gyro_x, gyro_y, gyro_z, counter, cycle_times);
 8002428:	4b0d      	ldr	r3, [pc, #52]	; (8002460 <set_gyro_offset+0xb4>)
 800242a:	edd3 7a00 	vldr	s15, [r3]
 800242e:	4b0d      	ldr	r3, [pc, #52]	; (8002464 <set_gyro_offset+0xb8>)
 8002430:	ed93 7a00 	vldr	s14, [r3]
 8002434:	4b0c      	ldr	r3, [pc, #48]	; (8002468 <set_gyro_offset+0xbc>)
 8002436:	edd3 6a00 	vldr	s13, [r3]
 800243a:	88ba      	ldrh	r2, [r7, #4]
 800243c:	88fb      	ldrh	r3, [r7, #6]
 800243e:	4619      	mov	r1, r3
 8002440:	eeb0 1a66 	vmov.f32	s2, s13
 8002444:	eef0 0a47 	vmov.f32	s1, s14
 8002448:	eeb0 0a67 	vmov.f32	s0, s15
 800244c:	480a      	ldr	r0, [pc, #40]	; (8002478 <set_gyro_offset+0xcc>)
 800244e:	f7fe ff89 	bl	8001364 <Offset_Calibration_gyro>
		//PitchRollInit(acc_x, acc_y, acc_z, counter, cycle_times);
}
 8002452:	bf00      	nop
 8002454:	3708      	adds	r7, #8
 8002456:	46bd      	mov	sp, r7
 8002458:	bd80      	pop	{r7, pc}
 800245a:	bf00      	nop
 800245c:	200002b2 	.word	0x200002b2
 8002460:	20000258 	.word	0x20000258
 8002464:	2000025c 	.word	0x2000025c
 8002468:	20000260 	.word	0x20000260
 800246c:	2000024c 	.word	0x2000024c
 8002470:	20000250 	.word	0x20000250
 8002474:	20000254 	.word	0x20000254
 8002478:	200002a4 	.word	0x200002a4

0800247c <USART2_IRQHandler>:

void USART2_IRQHandler(void)
{
 800247c:	b598      	push	{r3, r4, r7, lr}
 800247e:	af00      	add	r7, sp, #0
	/*ChecK if RXNE is set*/
	if(USART2->SR & SR_RXNE)
 8002480:	4b0b      	ldr	r3, [pc, #44]	; (80024b0 <USART2_IRQHandler+0x34>)
 8002482:	681b      	ldr	r3, [r3, #0]
 8002484:	f003 0320 	and.w	r3, r3, #32
 8002488:	2b00      	cmp	r3, #0
 800248a:	d00e      	beq.n	80024aa <USART2_IRQHandler+0x2e>
	{
		Magneto_offset[r] = uart2_read();
 800248c:	4b09      	ldr	r3, [pc, #36]	; (80024b4 <USART2_IRQHandler+0x38>)
 800248e:	781b      	ldrb	r3, [r3, #0]
 8002490:	461c      	mov	r4, r3
 8002492:	f000 ffe9 	bl	8003468 <uart2_read>
 8002496:	4603      	mov	r3, r0
 8002498:	461a      	mov	r2, r3
 800249a:	4b07      	ldr	r3, [pc, #28]	; (80024b8 <USART2_IRQHandler+0x3c>)
 800249c:	551a      	strb	r2, [r3, r4]
		r++;
 800249e:	4b05      	ldr	r3, [pc, #20]	; (80024b4 <USART2_IRQHandler+0x38>)
 80024a0:	781b      	ldrb	r3, [r3, #0]
 80024a2:	3301      	adds	r3, #1
 80024a4:	b2da      	uxtb	r2, r3
 80024a6:	4b03      	ldr	r3, [pc, #12]	; (80024b4 <USART2_IRQHandler+0x38>)
 80024a8:	701a      	strb	r2, [r3, #0]
	}
}
 80024aa:	bf00      	nop
 80024ac:	bd98      	pop	{r3, r4, r7, pc}
 80024ae:	bf00      	nop
 80024b0:	40004400 	.word	0x40004400
 80024b4:	20000307 	.word	0x20000307
 80024b8:	20000304 	.word	0x20000304

080024bc <mpu9250_ncs_pin_config>:




void mpu9250_ncs_pin_config(void)
{
 80024bc:	b480      	push	{r7}
 80024be:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;
 80024c0:	4b0b      	ldr	r3, [pc, #44]	; (80024f0 <mpu9250_ncs_pin_config+0x34>)
 80024c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024c4:	4a0a      	ldr	r2, [pc, #40]	; (80024f0 <mpu9250_ncs_pin_config+0x34>)
 80024c6:	f043 0301 	orr.w	r3, r3, #1
 80024ca:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PA0 as output pin*/
	GPIOA->MODER |= (1U<<0);
 80024cc:	4b09      	ldr	r3, [pc, #36]	; (80024f4 <mpu9250_ncs_pin_config+0x38>)
 80024ce:	681b      	ldr	r3, [r3, #0]
 80024d0:	4a08      	ldr	r2, [pc, #32]	; (80024f4 <mpu9250_ncs_pin_config+0x38>)
 80024d2:	f043 0301 	orr.w	r3, r3, #1
 80024d6:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U<<1);
 80024d8:	4b06      	ldr	r3, [pc, #24]	; (80024f4 <mpu9250_ncs_pin_config+0x38>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	4a05      	ldr	r2, [pc, #20]	; (80024f4 <mpu9250_ncs_pin_config+0x38>)
 80024de:	f023 0302 	bic.w	r3, r3, #2
 80024e2:	6013      	str	r3, [r2, #0]
}
 80024e4:	bf00      	nop
 80024e6:	46bd      	mov	sp, r7
 80024e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ec:	4770      	bx	lr
 80024ee:	bf00      	nop
 80024f0:	40023800 	.word	0x40023800
 80024f4:	40020000 	.word	0x40020000

080024f8 <mpu9250_ncs_pin_set>:

void mpu9250_ncs_pin_set(void)
{
 80024f8:	b480      	push	{r7}
 80024fa:	af00      	add	r7, sp, #0
	GPIOA->ODR |=(1U<<0);
 80024fc:	4b05      	ldr	r3, [pc, #20]	; (8002514 <mpu9250_ncs_pin_set+0x1c>)
 80024fe:	695b      	ldr	r3, [r3, #20]
 8002500:	4a04      	ldr	r2, [pc, #16]	; (8002514 <mpu9250_ncs_pin_set+0x1c>)
 8002502:	f043 0301 	orr.w	r3, r3, #1
 8002506:	6153      	str	r3, [r2, #20]
}
 8002508:	bf00      	nop
 800250a:	46bd      	mov	sp, r7
 800250c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002510:	4770      	bx	lr
 8002512:	bf00      	nop
 8002514:	40020000 	.word	0x40020000

08002518 <mpu9250_ncs_pin_reset>:

void mpu9250_ncs_pin_reset(void)
{
 8002518:	b480      	push	{r7}
 800251a:	af00      	add	r7, sp, #0
	GPIOA->ODR &= ~(1U<<0);
 800251c:	4b05      	ldr	r3, [pc, #20]	; (8002534 <mpu9250_ncs_pin_reset+0x1c>)
 800251e:	695b      	ldr	r3, [r3, #20]
 8002520:	4a04      	ldr	r2, [pc, #16]	; (8002534 <mpu9250_ncs_pin_reset+0x1c>)
 8002522:	f023 0301 	bic.w	r3, r3, #1
 8002526:	6153      	str	r3, [r2, #20]
}
 8002528:	bf00      	nop
 800252a:	46bd      	mov	sp, r7
 800252c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002530:	4770      	bx	lr
 8002532:	bf00      	nop
 8002534:	40020000 	.word	0x40020000

08002538 <mpu9250_accel_config>:
}


/******************ACCEL**********************/
void mpu9250_accel_config(uint8_t mode)
{
 8002538:	b580      	push	{r7, lr}
 800253a:	b082      	sub	sp, #8
 800253c:	af00      	add	r7, sp, #0
 800253e:	4603      	mov	r3, r0
 8002540:	71fb      	strb	r3, [r7, #7]

	switch(mode)
 8002542:	79fb      	ldrb	r3, [r7, #7]
 8002544:	2b18      	cmp	r3, #24
 8002546:	d852      	bhi.n	80025ee <mpu9250_accel_config+0xb6>
 8002548:	a201      	add	r2, pc, #4	; (adr r2, 8002550 <mpu9250_accel_config+0x18>)
 800254a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800254e:	bf00      	nop
 8002550:	080025b5 	.word	0x080025b5
 8002554:	080025ef 	.word	0x080025ef
 8002558:	080025ef 	.word	0x080025ef
 800255c:	080025ef 	.word	0x080025ef
 8002560:	080025ef 	.word	0x080025ef
 8002564:	080025ef 	.word	0x080025ef
 8002568:	080025ef 	.word	0x080025ef
 800256c:	080025ef 	.word	0x080025ef
 8002570:	080025c5 	.word	0x080025c5
 8002574:	080025ef 	.word	0x080025ef
 8002578:	080025ef 	.word	0x080025ef
 800257c:	080025ef 	.word	0x080025ef
 8002580:	080025ef 	.word	0x080025ef
 8002584:	080025ef 	.word	0x080025ef
 8002588:	080025ef 	.word	0x080025ef
 800258c:	080025ef 	.word	0x080025ef
 8002590:	080025d3 	.word	0x080025d3
 8002594:	080025ef 	.word	0x080025ef
 8002598:	080025ef 	.word	0x080025ef
 800259c:	080025ef 	.word	0x080025ef
 80025a0:	080025ef 	.word	0x080025ef
 80025a4:	080025ef 	.word	0x080025ef
 80025a8:	080025ef 	.word	0x080025ef
 80025ac:	080025ef 	.word	0x080025ef
 80025b0:	080025e1 	.word	0x080025e1
	{
		case ACC_FULL_SCALE_2_G:
			g_accel_range = 2.0;
 80025b4:	4938      	ldr	r1, [pc, #224]	; (8002698 <mpu9250_accel_config+0x160>)
 80025b6:	f04f 0200 	mov.w	r2, #0
 80025ba:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80025be:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 80025c2:	e015      	b.n	80025f0 <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_4_G:
			g_accel_range = 4.0;
 80025c4:	4934      	ldr	r1, [pc, #208]	; (8002698 <mpu9250_accel_config+0x160>)
 80025c6:	f04f 0200 	mov.w	r2, #0
 80025ca:	4b34      	ldr	r3, [pc, #208]	; (800269c <mpu9250_accel_config+0x164>)
 80025cc:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 80025d0:	e00e      	b.n	80025f0 <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_8_G:
			g_accel_range = 8.0;
 80025d2:	4931      	ldr	r1, [pc, #196]	; (8002698 <mpu9250_accel_config+0x160>)
 80025d4:	f04f 0200 	mov.w	r2, #0
 80025d8:	4b31      	ldr	r3, [pc, #196]	; (80026a0 <mpu9250_accel_config+0x168>)
 80025da:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 80025de:	e007      	b.n	80025f0 <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_16_G:
			g_accel_range = 16.0;
 80025e0:	492d      	ldr	r1, [pc, #180]	; (8002698 <mpu9250_accel_config+0x160>)
 80025e2:	f04f 0200 	mov.w	r2, #0
 80025e6:	4b2f      	ldr	r3, [pc, #188]	; (80026a4 <mpu9250_accel_config+0x16c>)
 80025e8:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 80025ec:	e000      	b.n	80025f0 <mpu9250_accel_config+0xb8>
		default:
			break;
 80025ee:	bf00      	nop
	}
	/************************************/
		//Ab hier eingefügter CODE

		/*H_RESET: Reset the PWR_MGMT_1 Register */
		spi_data_buff[0] = 0x6B;
 80025f0:	4b2d      	ldr	r3, [pc, #180]	; (80026a8 <mpu9250_accel_config+0x170>)
 80025f2:	226b      	movs	r2, #107	; 0x6b
 80025f4:	701a      	strb	r2, [r3, #0]
		spi_data_buff[1] = (1U<<7);
 80025f6:	4b2c      	ldr	r3, [pc, #176]	; (80026a8 <mpu9250_accel_config+0x170>)
 80025f8:	2280      	movs	r2, #128	; 0x80
 80025fa:	705a      	strb	r2, [r3, #1]

		dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 80025fc:	4b2a      	ldr	r3, [pc, #168]	; (80026a8 <mpu9250_accel_config+0x170>)
 80025fe:	2102      	movs	r1, #2
 8002600:	4618      	mov	r0, r3
 8002602:	f000 fbf3 	bl	8002dec <dma2_stream3_spi_transfer>

		/*Wait for transfer completion*/
		while(!g_tx_cmplt){}
 8002606:	bf00      	nop
 8002608:	4b28      	ldr	r3, [pc, #160]	; (80026ac <mpu9250_accel_config+0x174>)
 800260a:	781b      	ldrb	r3, [r3, #0]
 800260c:	2b00      	cmp	r3, #0
 800260e:	d0fb      	beq.n	8002608 <mpu9250_accel_config+0xd0>

		/*Reset flag*/
		g_tx_cmplt = 0;
 8002610:	4b26      	ldr	r3, [pc, #152]	; (80026ac <mpu9250_accel_config+0x174>)
 8002612:	2200      	movs	r2, #0
 8002614:	701a      	strb	r2, [r3, #0]

		/*Disable Sleep Mode */
		spi_data_buff[0] = 0x6B;
 8002616:	4b24      	ldr	r3, [pc, #144]	; (80026a8 <mpu9250_accel_config+0x170>)
 8002618:	226b      	movs	r2, #107	; 0x6b
 800261a:	701a      	strb	r2, [r3, #0]
		spi_data_buff[1] &= ~(1U<<6);
 800261c:	4b22      	ldr	r3, [pc, #136]	; (80026a8 <mpu9250_accel_config+0x170>)
 800261e:	785b      	ldrb	r3, [r3, #1]
 8002620:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002624:	b2da      	uxtb	r2, r3
 8002626:	4b20      	ldr	r3, [pc, #128]	; (80026a8 <mpu9250_accel_config+0x170>)
 8002628:	705a      	strb	r2, [r3, #1]

		dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 800262a:	4b1f      	ldr	r3, [pc, #124]	; (80026a8 <mpu9250_accel_config+0x170>)
 800262c:	2102      	movs	r1, #2
 800262e:	4618      	mov	r0, r3
 8002630:	f000 fbdc 	bl	8002dec <dma2_stream3_spi_transfer>

		/*Wait for transfer completion*/
		while(!g_tx_cmplt){}
 8002634:	bf00      	nop
 8002636:	4b1d      	ldr	r3, [pc, #116]	; (80026ac <mpu9250_accel_config+0x174>)
 8002638:	781b      	ldrb	r3, [r3, #0]
 800263a:	2b00      	cmp	r3, #0
 800263c:	d0fb      	beq.n	8002636 <mpu9250_accel_config+0xfe>

		/*Reset flag*/
		g_tx_cmplt = 0;
 800263e:	4b1b      	ldr	r3, [pc, #108]	; (80026ac <mpu9250_accel_config+0x174>)
 8002640:	2200      	movs	r2, #0
 8002642:	701a      	strb	r2, [r3, #0]
	/************************************/

	/*Set to SPI mode only*/
	spi_data_buff[0] = MPU9250_ADDR_USER_CTRL;
 8002644:	4b18      	ldr	r3, [pc, #96]	; (80026a8 <mpu9250_accel_config+0x170>)
 8002646:	226a      	movs	r2, #106	; 0x6a
 8002648:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = USER_CTRL_I2C_IF_DIS;
 800264a:	4b17      	ldr	r3, [pc, #92]	; (80026a8 <mpu9250_accel_config+0x170>)
 800264c:	2210      	movs	r2, #16
 800264e:	705a      	strb	r2, [r3, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 8002650:	4b15      	ldr	r3, [pc, #84]	; (80026a8 <mpu9250_accel_config+0x170>)
 8002652:	2102      	movs	r1, #2
 8002654:	4618      	mov	r0, r3
 8002656:	f000 fbc9 	bl	8002dec <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 800265a:	bf00      	nop
 800265c:	4b13      	ldr	r3, [pc, #76]	; (80026ac <mpu9250_accel_config+0x174>)
 800265e:	781b      	ldrb	r3, [r3, #0]
 8002660:	2b00      	cmp	r3, #0
 8002662:	d0fb      	beq.n	800265c <mpu9250_accel_config+0x124>

	/*Reset flag*/
	g_tx_cmplt = 0;
 8002664:	4b11      	ldr	r3, [pc, #68]	; (80026ac <mpu9250_accel_config+0x174>)
 8002666:	2200      	movs	r2, #0
 8002668:	701a      	strb	r2, [r3, #0]


	/*Configure the ACCEL Range*/
	spi_data_buff[0] = MPU9250_ADDR_ACCELCONFIG;
 800266a:	4b0f      	ldr	r3, [pc, #60]	; (80026a8 <mpu9250_accel_config+0x170>)
 800266c:	221c      	movs	r2, #28
 800266e:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = mode;
 8002670:	4a0d      	ldr	r2, [pc, #52]	; (80026a8 <mpu9250_accel_config+0x170>)
 8002672:	79fb      	ldrb	r3, [r7, #7]
 8002674:	7053      	strb	r3, [r2, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 8002676:	4b0c      	ldr	r3, [pc, #48]	; (80026a8 <mpu9250_accel_config+0x170>)
 8002678:	2102      	movs	r1, #2
 800267a:	4618      	mov	r0, r3
 800267c:	f000 fbb6 	bl	8002dec <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 8002680:	bf00      	nop
 8002682:	4b0a      	ldr	r3, [pc, #40]	; (80026ac <mpu9250_accel_config+0x174>)
 8002684:	781b      	ldrb	r3, [r3, #0]
 8002686:	2b00      	cmp	r3, #0
 8002688:	d0fb      	beq.n	8002682 <mpu9250_accel_config+0x14a>

	/*Reset flag*/
	g_tx_cmplt = 0;
 800268a:	4b08      	ldr	r3, [pc, #32]	; (80026ac <mpu9250_accel_config+0x174>)
 800268c:	2200      	movs	r2, #0
 800268e:	701a      	strb	r2, [r3, #0]
}
 8002690:	bf00      	nop
 8002692:	3708      	adds	r7, #8
 8002694:	46bd      	mov	sp, r7
 8002696:	bd80      	pop	{r7, pc}
 8002698:	20000340 	.word	0x20000340
 800269c:	40100000 	.word	0x40100000
 80026a0:	40200000 	.word	0x40200000
 80026a4:	40300000 	.word	0x40300000
 80026a8:	20000334 	.word	0x20000334
 80026ac:	20000336 	.word	0x20000336

080026b0 <mpu9250_accel_gyro_update>:

void mpu9250_accel_gyro_update(void)
{
 80026b0:	b580      	push	{r7, lr}
 80026b2:	af00      	add	r7, sp, #0
	dummy_buff[0] =  MPU9250_ACCEL_XOUT_H |READ_FLAG;
 80026b4:	4b0e      	ldr	r3, [pc, #56]	; (80026f0 <mpu9250_accel_gyro_update+0x40>)
 80026b6:	22bb      	movs	r2, #187	; 0xbb
 80026b8:	701a      	strb	r2, [r3, #0]

	dma2_stream3_spi_transfer((uint32_t) dummy_buff, (uint32_t)(MAX_TRANSFER_LEN + 1));
 80026ba:	4b0d      	ldr	r3, [pc, #52]	; (80026f0 <mpu9250_accel_gyro_update+0x40>)
 80026bc:	210f      	movs	r1, #15
 80026be:	4618      	mov	r0, r3
 80026c0:	f000 fb94 	bl	8002dec <dma2_stream3_spi_transfer>

	dma2_stream2_spi_receive((uint32_t)accel_gyro_buff,(uint32_t)(MAX_TRANSFER_LEN + 1));
 80026c4:	4b0b      	ldr	r3, [pc, #44]	; (80026f4 <mpu9250_accel_gyro_update+0x44>)
 80026c6:	210f      	movs	r1, #15
 80026c8:	4618      	mov	r0, r3
 80026ca:	f000 fbb3 	bl	8002e34 <dma2_stream2_spi_receive>

	Array_len_accel = sizeof(accel_gyro_buff)/sizeof(uint8_t);
 80026ce:	4b0a      	ldr	r3, [pc, #40]	; (80026f8 <mpu9250_accel_gyro_update+0x48>)
 80026d0:	220f      	movs	r2, #15
 80026d2:	701a      	strb	r2, [r3, #0]
	Array_len_dummy =  sizeof(dummy_buff)/sizeof(uint8_t);
 80026d4:	4b09      	ldr	r3, [pc, #36]	; (80026fc <mpu9250_accel_gyro_update+0x4c>)
 80026d6:	220f      	movs	r2, #15
 80026d8:	701a      	strb	r2, [r3, #0]

	/*Wait for reception completion*/
	while(!g_rx_cmplt){}
 80026da:	bf00      	nop
 80026dc:	4b08      	ldr	r3, [pc, #32]	; (8002700 <mpu9250_accel_gyro_update+0x50>)
 80026de:	781b      	ldrb	r3, [r3, #0]
 80026e0:	2b00      	cmp	r3, #0
 80026e2:	d0fb      	beq.n	80026dc <mpu9250_accel_gyro_update+0x2c>

	/*Reset flag*/
	g_rx_cmplt = 0;
 80026e4:	4b06      	ldr	r3, [pc, #24]	; (8002700 <mpu9250_accel_gyro_update+0x50>)
 80026e6:	2200      	movs	r2, #0
 80026e8:	701a      	strb	r2, [r3, #0]
}
 80026ea:	bf00      	nop
 80026ec:	bd80      	pop	{r7, pc}
 80026ee:	bf00      	nop
 80026f0:	20000310 	.word	0x20000310
 80026f4:	20000320 	.word	0x20000320
 80026f8:	2000032f 	.word	0x2000032f
 80026fc:	20000330 	.word	0x20000330
 8002700:	20000337 	.word	0x20000337
 8002704:	00000000 	.word	0x00000000

08002708 <mpu9250_accel_get>:

float mpu9250_accel_get(uint8_t high_idx, uint8_t low_idx)
{
 8002708:	b580      	push	{r7, lr}
 800270a:	b084      	sub	sp, #16
 800270c:	af00      	add	r7, sp, #0
 800270e:	4603      	mov	r3, r0
 8002710:	460a      	mov	r2, r1
 8002712:	71fb      	strb	r3, [r7, #7]
 8002714:	4613      	mov	r3, r2
 8002716:	71bb      	strb	r3, [r7, #6]
	int16_t rslt;
	rslt  =  accel_gyro_buff[high_idx] << 8 | accel_gyro_buff[low_idx];
 8002718:	79fb      	ldrb	r3, [r7, #7]
 800271a:	4a23      	ldr	r2, [pc, #140]	; (80027a8 <mpu9250_accel_get+0xa0>)
 800271c:	5cd3      	ldrb	r3, [r2, r3]
 800271e:	021b      	lsls	r3, r3, #8
 8002720:	b21a      	sxth	r2, r3
 8002722:	79bb      	ldrb	r3, [r7, #6]
 8002724:	4920      	ldr	r1, [pc, #128]	; (80027a8 <mpu9250_accel_get+0xa0>)
 8002726:	5ccb      	ldrb	r3, [r1, r3]
 8002728:	b21b      	sxth	r3, r3
 800272a:	4313      	orrs	r3, r2
 800272c:	81fb      	strh	r3, [r7, #14]

	if(rslt)
 800272e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002732:	2b00      	cmp	r3, #0
 8002734:	d029      	beq.n	800278a <mpu9250_accel_get+0x82>
	{
		return ((float)- rslt) * g_accel_range / (float)0x8000 *9.81f;
 8002736:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800273a:	425b      	negs	r3, r3
 800273c:	ee07 3a90 	vmov	s15, r3
 8002740:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002744:	ee17 0a90 	vmov	r0, s15
 8002748:	f7fd ff06 	bl	8000558 <__aeabi_f2d>
 800274c:	4b17      	ldr	r3, [pc, #92]	; (80027ac <mpu9250_accel_get+0xa4>)
 800274e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002752:	f7fd ff59 	bl	8000608 <__aeabi_dmul>
 8002756:	4602      	mov	r2, r0
 8002758:	460b      	mov	r3, r1
 800275a:	4610      	mov	r0, r2
 800275c:	4619      	mov	r1, r3
 800275e:	f04f 0200 	mov.w	r2, #0
 8002762:	4b13      	ldr	r3, [pc, #76]	; (80027b0 <mpu9250_accel_get+0xa8>)
 8002764:	f7fe f87a 	bl	800085c <__aeabi_ddiv>
 8002768:	4602      	mov	r2, r0
 800276a:	460b      	mov	r3, r1
 800276c:	4610      	mov	r0, r2
 800276e:	4619      	mov	r1, r3
 8002770:	a30b      	add	r3, pc, #44	; (adr r3, 80027a0 <mpu9250_accel_get+0x98>)
 8002772:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002776:	f7fd ff47 	bl	8000608 <__aeabi_dmul>
 800277a:	4602      	mov	r2, r0
 800277c:	460b      	mov	r3, r1
 800277e:	4610      	mov	r0, r2
 8002780:	4619      	mov	r1, r3
 8002782:	f7fe fa39 	bl	8000bf8 <__aeabi_d2f>
 8002786:	4603      	mov	r3, r0
 8002788:	e001      	b.n	800278e <mpu9250_accel_get+0x86>
	}
	else
	{
		return 0.0;
 800278a:	f04f 0300 	mov.w	r3, #0
	}
}
 800278e:	ee07 3a90 	vmov	s15, r3
 8002792:	eeb0 0a67 	vmov.f32	s0, s15
 8002796:	3710      	adds	r7, #16
 8002798:	46bd      	mov	sp, r7
 800279a:	bd80      	pop	{r7, pc}
 800279c:	f3af 8000 	nop.w
 80027a0:	60000000 	.word	0x60000000
 80027a4:	40239eb8 	.word	0x40239eb8
 80027a8:	20000320 	.word	0x20000320
 80027ac:	20000340 	.word	0x20000340
 80027b0:	40e00000 	.word	0x40e00000
 80027b4:	00000000 	.word	0x00000000

080027b8 <mpu9250_gyro_get>:

float mpu9250_gyro_get(uint8_t high_idx, uint8_t low_idx)
{
 80027b8:	b580      	push	{r7, lr}
 80027ba:	b084      	sub	sp, #16
 80027bc:	af00      	add	r7, sp, #0
 80027be:	4603      	mov	r3, r0
 80027c0:	460a      	mov	r2, r1
 80027c2:	71fb      	strb	r3, [r7, #7]
 80027c4:	4613      	mov	r3, r2
 80027c6:	71bb      	strb	r3, [r7, #6]
	int16_t rslt;
	rslt  =  accel_gyro_buff[high_idx] << 8 | accel_gyro_buff[low_idx];
 80027c8:	79fb      	ldrb	r3, [r7, #7]
 80027ca:	4a23      	ldr	r2, [pc, #140]	; (8002858 <mpu9250_gyro_get+0xa0>)
 80027cc:	5cd3      	ldrb	r3, [r2, r3]
 80027ce:	021b      	lsls	r3, r3, #8
 80027d0:	b21a      	sxth	r2, r3
 80027d2:	79bb      	ldrb	r3, [r7, #6]
 80027d4:	4920      	ldr	r1, [pc, #128]	; (8002858 <mpu9250_gyro_get+0xa0>)
 80027d6:	5ccb      	ldrb	r3, [r1, r3]
 80027d8:	b21b      	sxth	r3, r3
 80027da:	4313      	orrs	r3, r2
 80027dc:	81fb      	strh	r3, [r7, #14]

	if(rslt)
 80027de:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d029      	beq.n	800283a <mpu9250_gyro_get+0x82>
	{
		return ((float)- rslt) * g_gyro_range / (float)0x8000 *(M_PI/180);
 80027e6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80027ea:	425b      	negs	r3, r3
 80027ec:	ee07 3a90 	vmov	s15, r3
 80027f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80027f4:	ee17 0a90 	vmov	r0, s15
 80027f8:	f7fd feae 	bl	8000558 <__aeabi_f2d>
 80027fc:	4b17      	ldr	r3, [pc, #92]	; (800285c <mpu9250_gyro_get+0xa4>)
 80027fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002802:	f7fd ff01 	bl	8000608 <__aeabi_dmul>
 8002806:	4602      	mov	r2, r0
 8002808:	460b      	mov	r3, r1
 800280a:	4610      	mov	r0, r2
 800280c:	4619      	mov	r1, r3
 800280e:	f04f 0200 	mov.w	r2, #0
 8002812:	4b13      	ldr	r3, [pc, #76]	; (8002860 <mpu9250_gyro_get+0xa8>)
 8002814:	f7fe f822 	bl	800085c <__aeabi_ddiv>
 8002818:	4602      	mov	r2, r0
 800281a:	460b      	mov	r3, r1
 800281c:	4610      	mov	r0, r2
 800281e:	4619      	mov	r1, r3
 8002820:	a30b      	add	r3, pc, #44	; (adr r3, 8002850 <mpu9250_gyro_get+0x98>)
 8002822:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002826:	f7fd feef 	bl	8000608 <__aeabi_dmul>
 800282a:	4602      	mov	r2, r0
 800282c:	460b      	mov	r3, r1
 800282e:	4610      	mov	r0, r2
 8002830:	4619      	mov	r1, r3
 8002832:	f7fe f9e1 	bl	8000bf8 <__aeabi_d2f>
 8002836:	4603      	mov	r3, r0
 8002838:	e001      	b.n	800283e <mpu9250_gyro_get+0x86>
	}
	else
	{
		return 0.0;
 800283a:	f04f 0300 	mov.w	r3, #0
	}
}
 800283e:	ee07 3a90 	vmov	s15, r3
 8002842:	eeb0 0a67 	vmov.f32	s0, s15
 8002846:	3710      	adds	r7, #16
 8002848:	46bd      	mov	sp, r7
 800284a:	bd80      	pop	{r7, pc}
 800284c:	f3af 8000 	nop.w
 8002850:	a2529d39 	.word	0xa2529d39
 8002854:	3f91df46 	.word	0x3f91df46
 8002858:	20000320 	.word	0x20000320
 800285c:	20000348 	.word	0x20000348
 8002860:	40e00000 	.word	0x40e00000

08002864 <mpu9250_get_acc_x>:
}



float mpu9250_get_acc_x(void)
{
 8002864:	b580      	push	{r7, lr}
 8002866:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(1,2);
 8002868:	2102      	movs	r1, #2
 800286a:	2001      	movs	r0, #1
 800286c:	f7ff ff4c 	bl	8002708 <mpu9250_accel_get>
 8002870:	eef0 7a40 	vmov.f32	s15, s0
}
 8002874:	eeb0 0a67 	vmov.f32	s0, s15
 8002878:	bd80      	pop	{r7, pc}

0800287a <mpu9250_get_acc_y>:

float mpu9250_get_acc_y(void)
{
 800287a:	b580      	push	{r7, lr}
 800287c:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(3,4);
 800287e:	2104      	movs	r1, #4
 8002880:	2003      	movs	r0, #3
 8002882:	f7ff ff41 	bl	8002708 <mpu9250_accel_get>
 8002886:	eef0 7a40 	vmov.f32	s15, s0
}
 800288a:	eeb0 0a67 	vmov.f32	s0, s15
 800288e:	bd80      	pop	{r7, pc}

08002890 <mpu9250_get_acc_z>:

float mpu9250_get_acc_z(void)
{
 8002890:	b580      	push	{r7, lr}
 8002892:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(5,6);
 8002894:	2106      	movs	r1, #6
 8002896:	2005      	movs	r0, #5
 8002898:	f7ff ff36 	bl	8002708 <mpu9250_accel_get>
 800289c:	eef0 7a40 	vmov.f32	s15, s0
}
 80028a0:	eeb0 0a67 	vmov.f32	s0, s15
 80028a4:	bd80      	pop	{r7, pc}
	...

080028a8 <mpu9250_gyro_config>:
	return mpu9250_accel_get(7,8);
}

/******************GYRO**********************/
void mpu9250_gyro_config(uint8_t mode)
{
 80028a8:	b580      	push	{r7, lr}
 80028aa:	b082      	sub	sp, #8
 80028ac:	af00      	add	r7, sp, #0
 80028ae:	4603      	mov	r3, r0
 80028b0:	71fb      	strb	r3, [r7, #7]

	switch(mode)
 80028b2:	79fb      	ldrb	r3, [r7, #7]
 80028b4:	2b18      	cmp	r3, #24
 80028b6:	d851      	bhi.n	800295c <mpu9250_gyro_config+0xb4>
 80028b8:	a201      	add	r2, pc, #4	; (adr r2, 80028c0 <mpu9250_gyro_config+0x18>)
 80028ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028be:	bf00      	nop
 80028c0:	08002925 	.word	0x08002925
 80028c4:	0800295d 	.word	0x0800295d
 80028c8:	0800295d 	.word	0x0800295d
 80028cc:	0800295d 	.word	0x0800295d
 80028d0:	0800295d 	.word	0x0800295d
 80028d4:	0800295d 	.word	0x0800295d
 80028d8:	0800295d 	.word	0x0800295d
 80028dc:	0800295d 	.word	0x0800295d
 80028e0:	08002933 	.word	0x08002933
 80028e4:	0800295d 	.word	0x0800295d
 80028e8:	0800295d 	.word	0x0800295d
 80028ec:	0800295d 	.word	0x0800295d
 80028f0:	0800295d 	.word	0x0800295d
 80028f4:	0800295d 	.word	0x0800295d
 80028f8:	0800295d 	.word	0x0800295d
 80028fc:	0800295d 	.word	0x0800295d
 8002900:	08002941 	.word	0x08002941
 8002904:	0800295d 	.word	0x0800295d
 8002908:	0800295d 	.word	0x0800295d
 800290c:	0800295d 	.word	0x0800295d
 8002910:	0800295d 	.word	0x0800295d
 8002914:	0800295d 	.word	0x0800295d
 8002918:	0800295d 	.word	0x0800295d
 800291c:	0800295d 	.word	0x0800295d
 8002920:	0800294f 	.word	0x0800294f
	{
		case GYRO_FULL_SCALE_250:
			g_gyro_range = 250;
 8002924:	4919      	ldr	r1, [pc, #100]	; (800298c <mpu9250_gyro_config+0xe4>)
 8002926:	f04f 0200 	mov.w	r2, #0
 800292a:	4b19      	ldr	r3, [pc, #100]	; (8002990 <mpu9250_gyro_config+0xe8>)
 800292c:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002930:	e015      	b.n	800295e <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_500:
			g_gyro_range = 500;
 8002932:	4916      	ldr	r1, [pc, #88]	; (800298c <mpu9250_gyro_config+0xe4>)
 8002934:	f04f 0200 	mov.w	r2, #0
 8002938:	4b16      	ldr	r3, [pc, #88]	; (8002994 <mpu9250_gyro_config+0xec>)
 800293a:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 800293e:	e00e      	b.n	800295e <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_1000:
			g_gyro_range = 1000;
 8002940:	4912      	ldr	r1, [pc, #72]	; (800298c <mpu9250_gyro_config+0xe4>)
 8002942:	f04f 0200 	mov.w	r2, #0
 8002946:	4b14      	ldr	r3, [pc, #80]	; (8002998 <mpu9250_gyro_config+0xf0>)
 8002948:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 800294c:	e007      	b.n	800295e <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_2000:
			g_gyro_range = 2000;
 800294e:	490f      	ldr	r1, [pc, #60]	; (800298c <mpu9250_gyro_config+0xe4>)
 8002950:	f04f 0200 	mov.w	r2, #0
 8002954:	4b11      	ldr	r3, [pc, #68]	; (800299c <mpu9250_gyro_config+0xf4>)
 8002956:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 800295a:	e000      	b.n	800295e <mpu9250_gyro_config+0xb6>
		default:
			break;
 800295c:	bf00      	nop
	}
	/*Configure the GYRO Range*/
	spi_data_buff[0] = MPU9250_ADDR_GYROCONFIG;
 800295e:	4b10      	ldr	r3, [pc, #64]	; (80029a0 <mpu9250_gyro_config+0xf8>)
 8002960:	221b      	movs	r2, #27
 8002962:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = mode;
 8002964:	4a0e      	ldr	r2, [pc, #56]	; (80029a0 <mpu9250_gyro_config+0xf8>)
 8002966:	79fb      	ldrb	r3, [r7, #7]
 8002968:	7053      	strb	r3, [r2, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 800296a:	4b0d      	ldr	r3, [pc, #52]	; (80029a0 <mpu9250_gyro_config+0xf8>)
 800296c:	2102      	movs	r1, #2
 800296e:	4618      	mov	r0, r3
 8002970:	f000 fa3c 	bl	8002dec <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 8002974:	bf00      	nop
 8002976:	4b0b      	ldr	r3, [pc, #44]	; (80029a4 <mpu9250_gyro_config+0xfc>)
 8002978:	781b      	ldrb	r3, [r3, #0]
 800297a:	2b00      	cmp	r3, #0
 800297c:	d0fb      	beq.n	8002976 <mpu9250_gyro_config+0xce>

	/*Reset flag*/
	g_tx_cmplt = 0;
 800297e:	4b09      	ldr	r3, [pc, #36]	; (80029a4 <mpu9250_gyro_config+0xfc>)
 8002980:	2200      	movs	r2, #0
 8002982:	701a      	strb	r2, [r3, #0]

}
 8002984:	bf00      	nop
 8002986:	3708      	adds	r7, #8
 8002988:	46bd      	mov	sp, r7
 800298a:	bd80      	pop	{r7, pc}
 800298c:	20000348 	.word	0x20000348
 8002990:	406f4000 	.word	0x406f4000
 8002994:	407f4000 	.word	0x407f4000
 8002998:	408f4000 	.word	0x408f4000
 800299c:	409f4000 	.word	0x409f4000
 80029a0:	20000334 	.word	0x20000334
 80029a4:	20000336 	.word	0x20000336

080029a8 <mpu9250_get_gyro_x>:
	Array_len_dummy =  sizeof(dummy_buff)/sizeof(uint8_t);

}

float mpu9250_get_gyro_x(void)
{
 80029a8:	b580      	push	{r7, lr}
 80029aa:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(9,10);
 80029ac:	210a      	movs	r1, #10
 80029ae:	2009      	movs	r0, #9
 80029b0:	f7ff ff02 	bl	80027b8 <mpu9250_gyro_get>
 80029b4:	eef0 7a40 	vmov.f32	s15, s0
}
 80029b8:	eeb0 0a67 	vmov.f32	s0, s15
 80029bc:	bd80      	pop	{r7, pc}

080029be <mpu9250_get_gyro_y>:

float mpu9250_get_gyro_y(void)
{
 80029be:	b580      	push	{r7, lr}
 80029c0:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(11,12);
 80029c2:	210c      	movs	r1, #12
 80029c4:	200b      	movs	r0, #11
 80029c6:	f7ff fef7 	bl	80027b8 <mpu9250_gyro_get>
 80029ca:	eef0 7a40 	vmov.f32	s15, s0
}
 80029ce:	eeb0 0a67 	vmov.f32	s0, s15
 80029d2:	bd80      	pop	{r7, pc}

080029d4 <mpu9250_get_gyro_z>:

float mpu9250_get_gyro_z(void)
{
 80029d4:	b580      	push	{r7, lr}
 80029d6:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(13,14);
 80029d8:	210e      	movs	r1, #14
 80029da:	200d      	movs	r0, #13
 80029dc:	f7ff feec 	bl	80027b8 <mpu9250_gyro_get>
 80029e0:	eef0 7a40 	vmov.f32	s15, s0
}
 80029e4:	eeb0 0a67 	vmov.f32	s0, s15
 80029e8:	bd80      	pop	{r7, pc}
	...

080029ec <DMA2_Stream3_IRQHandler>:

/********************************************/

/*****************ISR************************/
void DMA2_Stream3_IRQHandler(void)
{
 80029ec:	b480      	push	{r7}
 80029ee:	af00      	add	r7, sp, #0
	if((DMA2->LISR) & LISR_TCIF3)
 80029f0:	4b16      	ldr	r3, [pc, #88]	; (8002a4c <DMA2_Stream3_IRQHandler+0x60>)
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	d00f      	beq.n	8002a1c <DMA2_Stream3_IRQHandler+0x30>
	{
		//do something...
		g_tx_cmplt = 1;
 80029fc:	4b14      	ldr	r3, [pc, #80]	; (8002a50 <DMA2_Stream3_IRQHandler+0x64>)
 80029fe:	2201      	movs	r2, #1
 8002a00:	701a      	strb	r2, [r3, #0]
		//DMA2_Stream3->CR &= ~DMA_SxCR_EN;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTCIF3;
 8002a02:	4b12      	ldr	r3, [pc, #72]	; (8002a4c <DMA2_Stream3_IRQHandler+0x60>)
 8002a04:	689b      	ldr	r3, [r3, #8]
 8002a06:	4a11      	ldr	r2, [pc, #68]	; (8002a4c <DMA2_Stream3_IRQHandler+0x60>)
 8002a08:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8002a0c:	6093      	str	r3, [r2, #8]
		data_tx++;
 8002a0e:	4b11      	ldr	r3, [pc, #68]	; (8002a54 <DMA2_Stream3_IRQHandler+0x68>)
 8002a10:	881b      	ldrh	r3, [r3, #0]
 8002a12:	3301      	adds	r3, #1
 8002a14:	b29a      	uxth	r2, r3
 8002a16:	4b0f      	ldr	r3, [pc, #60]	; (8002a54 <DMA2_Stream3_IRQHandler+0x68>)
 8002a18:	801a      	strh	r2, [r3, #0]
        //do something...
		error_tx++;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTEIF3;
	}
}
 8002a1a:	e011      	b.n	8002a40 <DMA2_Stream3_IRQHandler+0x54>
	else if((DMA2->LISR) & LISR_TEIF3)
 8002a1c:	4b0b      	ldr	r3, [pc, #44]	; (8002a4c <DMA2_Stream3_IRQHandler+0x60>)
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002a24:	2b00      	cmp	r3, #0
 8002a26:	d00b      	beq.n	8002a40 <DMA2_Stream3_IRQHandler+0x54>
		error_tx++;
 8002a28:	4b0b      	ldr	r3, [pc, #44]	; (8002a58 <DMA2_Stream3_IRQHandler+0x6c>)
 8002a2a:	781b      	ldrb	r3, [r3, #0]
 8002a2c:	3301      	adds	r3, #1
 8002a2e:	b2da      	uxtb	r2, r3
 8002a30:	4b09      	ldr	r3, [pc, #36]	; (8002a58 <DMA2_Stream3_IRQHandler+0x6c>)
 8002a32:	701a      	strb	r2, [r3, #0]
		DMA2->LIFCR |=LIFCR_CTEIF3;
 8002a34:	4b05      	ldr	r3, [pc, #20]	; (8002a4c <DMA2_Stream3_IRQHandler+0x60>)
 8002a36:	689b      	ldr	r3, [r3, #8]
 8002a38:	4a04      	ldr	r2, [pc, #16]	; (8002a4c <DMA2_Stream3_IRQHandler+0x60>)
 8002a3a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002a3e:	6093      	str	r3, [r2, #8]
}
 8002a40:	bf00      	nop
 8002a42:	46bd      	mov	sp, r7
 8002a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a48:	4770      	bx	lr
 8002a4a:	bf00      	nop
 8002a4c:	40026400 	.word	0x40026400
 8002a50:	20000336 	.word	0x20000336
 8002a54:	20000338 	.word	0x20000338
 8002a58:	2000033c 	.word	0x2000033c

08002a5c <DMA2_Stream2_IRQHandler>:

void DMA2_Stream2_IRQHandler(void)
{
 8002a5c:	b480      	push	{r7}
 8002a5e:	af00      	add	r7, sp, #0
	if((DMA2->LISR) & LISR_TCIF2)
 8002a60:	4b16      	ldr	r3, [pc, #88]	; (8002abc <DMA2_Stream2_IRQHandler+0x60>)
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002a68:	2b00      	cmp	r3, #0
 8002a6a:	d00f      	beq.n	8002a8c <DMA2_Stream2_IRQHandler+0x30>
	{
		//do something...
		g_rx_cmplt = 1;
 8002a6c:	4b14      	ldr	r3, [pc, #80]	; (8002ac0 <DMA2_Stream2_IRQHandler+0x64>)
 8002a6e:	2201      	movs	r2, #1
 8002a70:	701a      	strb	r2, [r3, #0]
		//DMA2_Stream2->CR&=~DMA_SxCR_EN;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTCIF2;
 8002a72:	4b12      	ldr	r3, [pc, #72]	; (8002abc <DMA2_Stream2_IRQHandler+0x60>)
 8002a74:	689b      	ldr	r3, [r3, #8]
 8002a76:	4a11      	ldr	r2, [pc, #68]	; (8002abc <DMA2_Stream2_IRQHandler+0x60>)
 8002a78:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002a7c:	6093      	str	r3, [r2, #8]
		data_rx++;
 8002a7e:	4b11      	ldr	r3, [pc, #68]	; (8002ac4 <DMA2_Stream2_IRQHandler+0x68>)
 8002a80:	881b      	ldrh	r3, [r3, #0]
 8002a82:	3301      	adds	r3, #1
 8002a84:	b29a      	uxth	r2, r3
 8002a86:	4b0f      	ldr	r3, [pc, #60]	; (8002ac4 <DMA2_Stream2_IRQHandler+0x68>)
 8002a88:	801a      	strh	r2, [r3, #0]
        //do something...
		error_rx++;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTEIF2;
	}
}
 8002a8a:	e011      	b.n	8002ab0 <DMA2_Stream2_IRQHandler+0x54>
	else if((DMA2->LISR) & LISR_TEIF2)
 8002a8c:	4b0b      	ldr	r3, [pc, #44]	; (8002abc <DMA2_Stream2_IRQHandler+0x60>)
 8002a8e:	681b      	ldr	r3, [r3, #0]
 8002a90:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002a94:	2b00      	cmp	r3, #0
 8002a96:	d00b      	beq.n	8002ab0 <DMA2_Stream2_IRQHandler+0x54>
		error_rx++;
 8002a98:	4b0b      	ldr	r3, [pc, #44]	; (8002ac8 <DMA2_Stream2_IRQHandler+0x6c>)
 8002a9a:	781b      	ldrb	r3, [r3, #0]
 8002a9c:	3301      	adds	r3, #1
 8002a9e:	b2da      	uxtb	r2, r3
 8002aa0:	4b09      	ldr	r3, [pc, #36]	; (8002ac8 <DMA2_Stream2_IRQHandler+0x6c>)
 8002aa2:	701a      	strb	r2, [r3, #0]
		DMA2->LIFCR |=LIFCR_CTEIF2;
 8002aa4:	4b05      	ldr	r3, [pc, #20]	; (8002abc <DMA2_Stream2_IRQHandler+0x60>)
 8002aa6:	689b      	ldr	r3, [r3, #8]
 8002aa8:	4a04      	ldr	r2, [pc, #16]	; (8002abc <DMA2_Stream2_IRQHandler+0x60>)
 8002aaa:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8002aae:	6093      	str	r3, [r2, #8]
}
 8002ab0:	bf00      	nop
 8002ab2:	46bd      	mov	sp, r7
 8002ab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ab8:	4770      	bx	lr
 8002aba:	bf00      	nop
 8002abc:	40026400 	.word	0x40026400
 8002ac0:	20000337 	.word	0x20000337
 8002ac4:	2000033a 	.word	0x2000033a
 8002ac8:	2000033d 	.word	0x2000033d

08002acc <__NVIC_EnableIRQ>:
{
 8002acc:	b480      	push	{r7}
 8002ace:	b083      	sub	sp, #12
 8002ad0:	af00      	add	r7, sp, #0
 8002ad2:	4603      	mov	r3, r0
 8002ad4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002ad6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ada:	2b00      	cmp	r3, #0
 8002adc:	db0b      	blt.n	8002af6 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002ade:	79fb      	ldrb	r3, [r7, #7]
 8002ae0:	f003 021f 	and.w	r2, r3, #31
 8002ae4:	4907      	ldr	r1, [pc, #28]	; (8002b04 <__NVIC_EnableIRQ+0x38>)
 8002ae6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002aea:	095b      	lsrs	r3, r3, #5
 8002aec:	2001      	movs	r0, #1
 8002aee:	fa00 f202 	lsl.w	r2, r0, r2
 8002af2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8002af6:	bf00      	nop
 8002af8:	370c      	adds	r7, #12
 8002afa:	46bd      	mov	sp, r7
 8002afc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b00:	4770      	bx	lr
 8002b02:	bf00      	nop
 8002b04:	e000e100 	.word	0xe000e100

08002b08 <spi1_dma_init>:
#define HIFSR_TCIF5		(1U<<11)
#define HIFSR_TCIF6		(1U<<21)


void spi1_dma_init(void)
{
 8002b08:	b480      	push	{r7}
 8002b0a:	af00      	add	r7, sp, #0

	/*************GPIO Configuration*****************/
	/*Enable clock to PORT of SPI pins*/
	RCC->AHB1ENR |= GPIOAEN;
 8002b0c:	4b56      	ldr	r3, [pc, #344]	; (8002c68 <spi1_dma_init+0x160>)
 8002b0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b10:	4a55      	ldr	r2, [pc, #340]	; (8002c68 <spi1_dma_init+0x160>)
 8002b12:	f043 0301 	orr.w	r3, r3, #1
 8002b16:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set SPI pins mode to alternate function mode*/
	/*PA5*/
	GPIOA->MODER &=~(1U<<10);
 8002b18:	4b54      	ldr	r3, [pc, #336]	; (8002c6c <spi1_dma_init+0x164>)
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	4a53      	ldr	r2, [pc, #332]	; (8002c6c <spi1_dma_init+0x164>)
 8002b1e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8002b22:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<11);
 8002b24:	4b51      	ldr	r3, [pc, #324]	; (8002c6c <spi1_dma_init+0x164>)
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	4a50      	ldr	r2, [pc, #320]	; (8002c6c <spi1_dma_init+0x164>)
 8002b2a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002b2e:	6013      	str	r3, [r2, #0]

	/*PA6*/
	GPIOA->MODER &=~(1U<<12);
 8002b30:	4b4e      	ldr	r3, [pc, #312]	; (8002c6c <spi1_dma_init+0x164>)
 8002b32:	681b      	ldr	r3, [r3, #0]
 8002b34:	4a4d      	ldr	r2, [pc, #308]	; (8002c6c <spi1_dma_init+0x164>)
 8002b36:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002b3a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<13);
 8002b3c:	4b4b      	ldr	r3, [pc, #300]	; (8002c6c <spi1_dma_init+0x164>)
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	4a4a      	ldr	r2, [pc, #296]	; (8002c6c <spi1_dma_init+0x164>)
 8002b42:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002b46:	6013      	str	r3, [r2, #0]

	/*PA7*/
	GPIOA->MODER &=~(1U<<14);
 8002b48:	4b48      	ldr	r3, [pc, #288]	; (8002c6c <spi1_dma_init+0x164>)
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	4a47      	ldr	r2, [pc, #284]	; (8002c6c <spi1_dma_init+0x164>)
 8002b4e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002b52:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<15);
 8002b54:	4b45      	ldr	r3, [pc, #276]	; (8002c6c <spi1_dma_init+0x164>)
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	4a44      	ldr	r2, [pc, #272]	; (8002c6c <spi1_dma_init+0x164>)
 8002b5a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002b5e:	6013      	str	r3, [r2, #0]

	/*Set alternate type to AF5(SPI1)*/
	/*PA5*/
	GPIOA->AFR[0]  |= (1U<<20);
 8002b60:	4b42      	ldr	r3, [pc, #264]	; (8002c6c <spi1_dma_init+0x164>)
 8002b62:	6a1b      	ldr	r3, [r3, #32]
 8002b64:	4a41      	ldr	r2, [pc, #260]	; (8002c6c <spi1_dma_init+0x164>)
 8002b66:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002b6a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<21);
 8002b6c:	4b3f      	ldr	r3, [pc, #252]	; (8002c6c <spi1_dma_init+0x164>)
 8002b6e:	6a1b      	ldr	r3, [r3, #32]
 8002b70:	4a3e      	ldr	r2, [pc, #248]	; (8002c6c <spi1_dma_init+0x164>)
 8002b72:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002b76:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<22);
 8002b78:	4b3c      	ldr	r3, [pc, #240]	; (8002c6c <spi1_dma_init+0x164>)
 8002b7a:	6a1b      	ldr	r3, [r3, #32]
 8002b7c:	4a3b      	ldr	r2, [pc, #236]	; (8002c6c <spi1_dma_init+0x164>)
 8002b7e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002b82:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<23);
 8002b84:	4b39      	ldr	r3, [pc, #228]	; (8002c6c <spi1_dma_init+0x164>)
 8002b86:	6a1b      	ldr	r3, [r3, #32]
 8002b88:	4a38      	ldr	r2, [pc, #224]	; (8002c6c <spi1_dma_init+0x164>)
 8002b8a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002b8e:	6213      	str	r3, [r2, #32]

	/*PA6*/
	GPIOA->AFR[0]  |= (1U<<24);
 8002b90:	4b36      	ldr	r3, [pc, #216]	; (8002c6c <spi1_dma_init+0x164>)
 8002b92:	6a1b      	ldr	r3, [r3, #32]
 8002b94:	4a35      	ldr	r2, [pc, #212]	; (8002c6c <spi1_dma_init+0x164>)
 8002b96:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002b9a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<25);
 8002b9c:	4b33      	ldr	r3, [pc, #204]	; (8002c6c <spi1_dma_init+0x164>)
 8002b9e:	6a1b      	ldr	r3, [r3, #32]
 8002ba0:	4a32      	ldr	r2, [pc, #200]	; (8002c6c <spi1_dma_init+0x164>)
 8002ba2:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 8002ba6:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<26);
 8002ba8:	4b30      	ldr	r3, [pc, #192]	; (8002c6c <spi1_dma_init+0x164>)
 8002baa:	6a1b      	ldr	r3, [r3, #32]
 8002bac:	4a2f      	ldr	r2, [pc, #188]	; (8002c6c <spi1_dma_init+0x164>)
 8002bae:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8002bb2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<27);
 8002bb4:	4b2d      	ldr	r3, [pc, #180]	; (8002c6c <spi1_dma_init+0x164>)
 8002bb6:	6a1b      	ldr	r3, [r3, #32]
 8002bb8:	4a2c      	ldr	r2, [pc, #176]	; (8002c6c <spi1_dma_init+0x164>)
 8002bba:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8002bbe:	6213      	str	r3, [r2, #32]

	/*PA7*/
	GPIOA->AFR[0]  |= (1U<<28);
 8002bc0:	4b2a      	ldr	r3, [pc, #168]	; (8002c6c <spi1_dma_init+0x164>)
 8002bc2:	6a1b      	ldr	r3, [r3, #32]
 8002bc4:	4a29      	ldr	r2, [pc, #164]	; (8002c6c <spi1_dma_init+0x164>)
 8002bc6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002bca:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<29);
 8002bcc:	4b27      	ldr	r3, [pc, #156]	; (8002c6c <spi1_dma_init+0x164>)
 8002bce:	6a1b      	ldr	r3, [r3, #32]
 8002bd0:	4a26      	ldr	r2, [pc, #152]	; (8002c6c <spi1_dma_init+0x164>)
 8002bd2:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 8002bd6:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<30);
 8002bd8:	4b24      	ldr	r3, [pc, #144]	; (8002c6c <spi1_dma_init+0x164>)
 8002bda:	6a1b      	ldr	r3, [r3, #32]
 8002bdc:	4a23      	ldr	r2, [pc, #140]	; (8002c6c <spi1_dma_init+0x164>)
 8002bde:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8002be2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<31);
 8002be4:	4b21      	ldr	r3, [pc, #132]	; (8002c6c <spi1_dma_init+0x164>)
 8002be6:	6a1b      	ldr	r3, [r3, #32]
 8002be8:	4a20      	ldr	r2, [pc, #128]	; (8002c6c <spi1_dma_init+0x164>)
 8002bea:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002bee:	6213      	str	r3, [r2, #32]

	/*************SPI Configuration*****************/

	/*Enable clock access to SPI1 module*/
	RCC->APB2ENR |=SPI1EN;
 8002bf0:	4b1d      	ldr	r3, [pc, #116]	; (8002c68 <spi1_dma_init+0x160>)
 8002bf2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002bf4:	4a1c      	ldr	r2, [pc, #112]	; (8002c68 <spi1_dma_init+0x160>)
 8002bf6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002bfa:	6453      	str	r3, [r2, #68]	; 0x44

	/*Set software slave management*/
	SPI1->CR1 |= CR1_SSM|CR1_SSI;
 8002bfc:	4b1c      	ldr	r3, [pc, #112]	; (8002c70 <spi1_dma_init+0x168>)
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	4a1b      	ldr	r2, [pc, #108]	; (8002c70 <spi1_dma_init+0x168>)
 8002c02:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8002c06:	6013      	str	r3, [r2, #0]

	/*Set SPI to master mode*/
	SPI1->CR1 |=CR1_MSTR;
 8002c08:	4b19      	ldr	r3, [pc, #100]	; (8002c70 <spi1_dma_init+0x168>)
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	4a18      	ldr	r2, [pc, #96]	; (8002c70 <spi1_dma_init+0x168>)
 8002c0e:	f043 0304 	orr.w	r3, r3, #4
 8002c12:	6013      	str	r3, [r2, #0]

	/*Set CPHA and CPOL*/
	SPI1->CR1 |=SPI_CR1_BR_0|CR1_PHA|CR1_CPOL;
 8002c14:	4b16      	ldr	r3, [pc, #88]	; (8002c70 <spi1_dma_init+0x168>)
 8002c16:	681b      	ldr	r3, [r3, #0]
 8002c18:	4a15      	ldr	r2, [pc, #84]	; (8002c70 <spi1_dma_init+0x168>)
 8002c1a:	f043 030b 	orr.w	r3, r3, #11
 8002c1e:	6013      	str	r3, [r2, #0]

	/*Set clock divider : PCLCK/4*/
	SPI1->CR1 |=(1U<<3);
 8002c20:	4b13      	ldr	r3, [pc, #76]	; (8002c70 <spi1_dma_init+0x168>)
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	4a12      	ldr	r2, [pc, #72]	; (8002c70 <spi1_dma_init+0x168>)
 8002c26:	f043 0308 	orr.w	r3, r3, #8
 8002c2a:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1U<<4);
 8002c2c:	4b10      	ldr	r3, [pc, #64]	; (8002c70 <spi1_dma_init+0x168>)
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	4a0f      	ldr	r2, [pc, #60]	; (8002c70 <spi1_dma_init+0x168>)
 8002c32:	f023 0310 	bic.w	r3, r3, #16
 8002c36:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1U<<5);
 8002c38:	4b0d      	ldr	r3, [pc, #52]	; (8002c70 <spi1_dma_init+0x168>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4a0c      	ldr	r2, [pc, #48]	; (8002c70 <spi1_dma_init+0x168>)
 8002c3e:	f023 0320 	bic.w	r3, r3, #32
 8002c42:	6013      	str	r3, [r2, #0]
//	SPI1->CR1 |= (1U<<3);
//	SPI1->CR1 |= (1U<<4);
//	SPI1->CR1 &=~(1U<<5);

	/*Select to use DMA*/
	SPI1->CR2 |=CR2_RXDMAEN|CR2_TXDMAEN;
 8002c44:	4b0a      	ldr	r3, [pc, #40]	; (8002c70 <spi1_dma_init+0x168>)
 8002c46:	685b      	ldr	r3, [r3, #4]
 8002c48:	4a09      	ldr	r2, [pc, #36]	; (8002c70 <spi1_dma_init+0x168>)
 8002c4a:	f043 0303 	orr.w	r3, r3, #3
 8002c4e:	6053      	str	r3, [r2, #4]

    /*Enable SPI*/
	SPI1->CR1 |=CR1_SPE;
 8002c50:	4b07      	ldr	r3, [pc, #28]	; (8002c70 <spi1_dma_init+0x168>)
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	4a06      	ldr	r2, [pc, #24]	; (8002c70 <spi1_dma_init+0x168>)
 8002c56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002c5a:	6013      	str	r3, [r2, #0]
}
 8002c5c:	bf00      	nop
 8002c5e:	46bd      	mov	sp, r7
 8002c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c64:	4770      	bx	lr
 8002c66:	bf00      	nop
 8002c68:	40023800 	.word	0x40023800
 8002c6c:	40020000 	.word	0x40020000
 8002c70:	40013000 	.word	0x40013000

08002c74 <dma2_stream3_spi_tx_init>:

void dma2_stream3_spi_tx_init(void)
{
 8002c74:	b580      	push	{r7, lr}
 8002c76:	af00      	add	r7, sp, #0
	/************DMA Configuration**********/
	/*Enable clock access to DMA*/
	RCC->AHB1ENR |= DMA2EN;
 8002c78:	4b2b      	ldr	r3, [pc, #172]	; (8002d28 <dma2_stream3_spi_tx_init+0xb4>)
 8002c7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c7c:	4a2a      	ldr	r2, [pc, #168]	; (8002d28 <dma2_stream3_spi_tx_init+0xb4>)
 8002c7e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002c82:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA2_Stream3->CR = 0;
 8002c84:	4b29      	ldr	r3, [pc, #164]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002c86:	2200      	movs	r2, #0
 8002c88:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA2_Stream3->CR & DMA_SCR_EN)){}
 8002c8a:	bf00      	nop
 8002c8c:	4b27      	ldr	r3, [pc, #156]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	f003 0301 	and.w	r3, r3, #1
 8002c94:	2b00      	cmp	r3, #0
 8002c96:	d1f9      	bne.n	8002c8c <dma2_stream3_spi_tx_init+0x18>

    /*******Configure DMA Stream parameters************/
	/*Enable memory addr increment*/
	DMA2_Stream3->CR |= DMA_SCR_MINC;
 8002c98:	4b24      	ldr	r3, [pc, #144]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4a23      	ldr	r2, [pc, #140]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002c9e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002ca2:	6013      	str	r3, [r2, #0]

	/*Select Channel :  CH3*/
	DMA2_Stream3->CR |= (1U<<25);
 8002ca4:	4b21      	ldr	r3, [pc, #132]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	4a20      	ldr	r2, [pc, #128]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002caa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002cae:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR |= (1U<<26);
 8002cb0:	4b1e      	ldr	r3, [pc, #120]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	4a1d      	ldr	r2, [pc, #116]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cb6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8002cba:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR &= ~(1U<<27);
 8002cbc:	4b1b      	ldr	r3, [pc, #108]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	4a1a      	ldr	r2, [pc, #104]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cc2:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8002cc6:	6013      	str	r3, [r2, #0]

	/*Set transfer direction : Memory to Peripheral*/
	DMA2_Stream3->CR |=(1U<<6);
 8002cc8:	4b18      	ldr	r3, [pc, #96]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	4a17      	ldr	r2, [pc, #92]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002cd2:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR &=~(1U<<7);
 8002cd4:	4b15      	ldr	r3, [pc, #84]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	4a14      	ldr	r2, [pc, #80]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cda:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002cde:	6013      	str	r3, [r2, #0]

	/*Enable transfer complete interrupt*/
	DMA2_Stream3->CR |= DMA_SCR_TCIE;
 8002ce0:	4b12      	ldr	r3, [pc, #72]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	4a11      	ldr	r2, [pc, #68]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002ce6:	f043 0310 	orr.w	r3, r3, #16
 8002cea:	6013      	str	r3, [r2, #0]

	/*Enable transfer error interrupt*/
	DMA2_Stream3->CR |= DMA_SCR_TEIE;
 8002cec:	4b0f      	ldr	r3, [pc, #60]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	4a0e      	ldr	r2, [pc, #56]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cf2:	f043 0304 	orr.w	r3, r3, #4
 8002cf6:	6013      	str	r3, [r2, #0]

	/*Disable direct mode*/
	DMA2_Stream3->FCR |=DMA_SFCR_DMDIS;
 8002cf8:	4b0c      	ldr	r3, [pc, #48]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cfa:	695b      	ldr	r3, [r3, #20]
 8002cfc:	4a0b      	ldr	r2, [pc, #44]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002cfe:	f043 0304 	orr.w	r3, r3, #4
 8002d02:	6153      	str	r3, [r2, #20]

	/*Set DMA FIFO threshold*/
	DMA2_Stream3->FCR |=(1U<<0);
 8002d04:	4b09      	ldr	r3, [pc, #36]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002d06:	695b      	ldr	r3, [r3, #20]
 8002d08:	4a08      	ldr	r2, [pc, #32]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002d0a:	f043 0301 	orr.w	r3, r3, #1
 8002d0e:	6153      	str	r3, [r2, #20]
	DMA2_Stream3->FCR |=(1U<<1);
 8002d10:	4b06      	ldr	r3, [pc, #24]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002d12:	695b      	ldr	r3, [r3, #20]
 8002d14:	4a05      	ldr	r2, [pc, #20]	; (8002d2c <dma2_stream3_spi_tx_init+0xb8>)
 8002d16:	f043 0302 	orr.w	r3, r3, #2
 8002d1a:	6153      	str	r3, [r2, #20]

	/*Enable DMA Stream interrupt in the NVIC*/
	NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 8002d1c:	203b      	movs	r0, #59	; 0x3b
 8002d1e:	f7ff fed5 	bl	8002acc <__NVIC_EnableIRQ>

}
 8002d22:	bf00      	nop
 8002d24:	bd80      	pop	{r7, pc}
 8002d26:	bf00      	nop
 8002d28:	40023800 	.word	0x40023800
 8002d2c:	40026458 	.word	0x40026458

08002d30 <dma2_stream2_spi_rx_init>:

void dma2_stream2_spi_rx_init(void)
{
 8002d30:	b580      	push	{r7, lr}
 8002d32:	af00      	add	r7, sp, #0
	/************DMA Configuration**********/
	/*Enable clock access to DMA*/
	RCC->AHB1ENR |= DMA2EN;
 8002d34:	4b2b      	ldr	r3, [pc, #172]	; (8002de4 <dma2_stream2_spi_rx_init+0xb4>)
 8002d36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d38:	4a2a      	ldr	r2, [pc, #168]	; (8002de4 <dma2_stream2_spi_rx_init+0xb4>)
 8002d3a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002d3e:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA2_Stream2->CR = 0;
 8002d40:	4b29      	ldr	r3, [pc, #164]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d42:	2200      	movs	r2, #0
 8002d44:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA2_Stream2->CR & DMA_SCR_EN)){}
 8002d46:	bf00      	nop
 8002d48:	4b27      	ldr	r3, [pc, #156]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	f003 0301 	and.w	r3, r3, #1
 8002d50:	2b00      	cmp	r3, #0
 8002d52:	d1f9      	bne.n	8002d48 <dma2_stream2_spi_rx_init+0x18>

    /*******Configure DMA Stream parameters************/
	/*Enable memory addr increment*/
	DMA2_Stream2->CR |= DMA_SCR_MINC;
 8002d54:	4b24      	ldr	r3, [pc, #144]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	4a23      	ldr	r2, [pc, #140]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d5a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002d5e:	6013      	str	r3, [r2, #0]

	/*Select Channel :  CH3*/
	DMA2_Stream2->CR |= (1U<<25);
 8002d60:	4b21      	ldr	r3, [pc, #132]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	4a20      	ldr	r2, [pc, #128]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d66:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002d6a:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR |= (1U<<26);
 8002d6c:	4b1e      	ldr	r3, [pc, #120]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	4a1d      	ldr	r2, [pc, #116]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d72:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8002d76:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR &= ~(1U<<27);
 8002d78:	4b1b      	ldr	r3, [pc, #108]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	4a1a      	ldr	r2, [pc, #104]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d7e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8002d82:	6013      	str	r3, [r2, #0]

	/*Set transfer direction : Peripheral to Memory*/
	DMA2_Stream2->CR &=~(1U<<6);
 8002d84:	4b18      	ldr	r3, [pc, #96]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	4a17      	ldr	r2, [pc, #92]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d8a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002d8e:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR &=~(1U<<7);
 8002d90:	4b15      	ldr	r3, [pc, #84]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	4a14      	ldr	r2, [pc, #80]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d96:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002d9a:	6013      	str	r3, [r2, #0]

	/*Enable transfer complete interrupt*/
	DMA2_Stream2->CR |= DMA_SCR_TCIE;
 8002d9c:	4b12      	ldr	r3, [pc, #72]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	4a11      	ldr	r2, [pc, #68]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002da2:	f043 0310 	orr.w	r3, r3, #16
 8002da6:	6013      	str	r3, [r2, #0]

	/*Enable transfer error interrupt*/
	DMA2_Stream2->CR |= DMA_SCR_TEIE;
 8002da8:	4b0f      	ldr	r3, [pc, #60]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	4a0e      	ldr	r2, [pc, #56]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002dae:	f043 0304 	orr.w	r3, r3, #4
 8002db2:	6013      	str	r3, [r2, #0]

	/*Disable direct mode*/
	DMA2_Stream2->FCR |=DMA_SFCR_DMDIS;
 8002db4:	4b0c      	ldr	r3, [pc, #48]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002db6:	695b      	ldr	r3, [r3, #20]
 8002db8:	4a0b      	ldr	r2, [pc, #44]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002dba:	f043 0304 	orr.w	r3, r3, #4
 8002dbe:	6153      	str	r3, [r2, #20]

	/*Set DMA FIFO threshold :  Full*/
	DMA2_Stream2->FCR |=(1U<<0);
 8002dc0:	4b09      	ldr	r3, [pc, #36]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002dc2:	695b      	ldr	r3, [r3, #20]
 8002dc4:	4a08      	ldr	r2, [pc, #32]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002dc6:	f043 0301 	orr.w	r3, r3, #1
 8002dca:	6153      	str	r3, [r2, #20]
	DMA2_Stream2->FCR |=(1U<<1);
 8002dcc:	4b06      	ldr	r3, [pc, #24]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002dce:	695b      	ldr	r3, [r3, #20]
 8002dd0:	4a05      	ldr	r2, [pc, #20]	; (8002de8 <dma2_stream2_spi_rx_init+0xb8>)
 8002dd2:	f043 0302 	orr.w	r3, r3, #2
 8002dd6:	6153      	str	r3, [r2, #20]

	/*Enable DMA Stream interrupt in the NVIC*/
	NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8002dd8:	203a      	movs	r0, #58	; 0x3a
 8002dda:	f7ff fe77 	bl	8002acc <__NVIC_EnableIRQ>


}
 8002dde:	bf00      	nop
 8002de0:	bd80      	pop	{r7, pc}
 8002de2:	bf00      	nop
 8002de4:	40023800 	.word	0x40023800
 8002de8:	40026440 	.word	0x40026440

08002dec <dma2_stream3_spi_transfer>:

void dma2_stream3_spi_transfer(uint32_t msg_to_send, uint32_t msg_len)
{
 8002dec:	b480      	push	{r7}
 8002dee:	b083      	sub	sp, #12
 8002df0:	af00      	add	r7, sp, #0
 8002df2:	6078      	str	r0, [r7, #4]
 8002df4:	6039      	str	r1, [r7, #0]
	/*Clear interrupt flags*/
	DMA2->LIFCR = LIFCR_CTCIF3 |LIFCR_CTEIF3;
 8002df6:	4b0c      	ldr	r3, [pc, #48]	; (8002e28 <dma2_stream3_spi_transfer+0x3c>)
 8002df8:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8002dfc:	609a      	str	r2, [r3, #8]

	/*Set Peripheral address*/
	DMA2_Stream3->PAR =	(uint32_t)(&(SPI1->DR));
 8002dfe:	4b0b      	ldr	r3, [pc, #44]	; (8002e2c <dma2_stream3_spi_transfer+0x40>)
 8002e00:	4a0b      	ldr	r2, [pc, #44]	; (8002e30 <dma2_stream3_spi_transfer+0x44>)
 8002e02:	609a      	str	r2, [r3, #8]

	/*Set Memory address*/
	DMA2_Stream3->M0AR = msg_to_send;
 8002e04:	4a09      	ldr	r2, [pc, #36]	; (8002e2c <dma2_stream3_spi_transfer+0x40>)
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	60d3      	str	r3, [r2, #12]

	/*Set transfer length*/
	DMA2_Stream3->NDTR = msg_len;
 8002e0a:	4a08      	ldr	r2, [pc, #32]	; (8002e2c <dma2_stream3_spi_transfer+0x40>)
 8002e0c:	683b      	ldr	r3, [r7, #0]
 8002e0e:	6053      	str	r3, [r2, #4]

	/*Enable the DMA Stream*/
	DMA2_Stream3->CR |= DMA_SCR_EN;
 8002e10:	4b06      	ldr	r3, [pc, #24]	; (8002e2c <dma2_stream3_spi_transfer+0x40>)
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	4a05      	ldr	r2, [pc, #20]	; (8002e2c <dma2_stream3_spi_transfer+0x40>)
 8002e16:	f043 0301 	orr.w	r3, r3, #1
 8002e1a:	6013      	str	r3, [r2, #0]
}
 8002e1c:	bf00      	nop
 8002e1e:	370c      	adds	r7, #12
 8002e20:	46bd      	mov	sp, r7
 8002e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e26:	4770      	bx	lr
 8002e28:	40026400 	.word	0x40026400
 8002e2c:	40026458 	.word	0x40026458
 8002e30:	4001300c 	.word	0x4001300c

08002e34 <dma2_stream2_spi_receive>:

void dma2_stream2_spi_receive(uint32_t received_msg, uint32_t msg_len)
{
 8002e34:	b480      	push	{r7}
 8002e36:	b083      	sub	sp, #12
 8002e38:	af00      	add	r7, sp, #0
 8002e3a:	6078      	str	r0, [r7, #4]
 8002e3c:	6039      	str	r1, [r7, #0]
	/*Clear interrupt flags*/
	DMA2->LIFCR = LIFCR_CTCIF2 |LIFCR_CTEIF2;
 8002e3e:	4b0c      	ldr	r3, [pc, #48]	; (8002e70 <dma2_stream2_spi_receive+0x3c>)
 8002e40:	f44f 1220 	mov.w	r2, #2621440	; 0x280000
 8002e44:	609a      	str	r2, [r3, #8]

	/*Set Peripheral address*/
	DMA2_Stream2->PAR =	(uint32_t)(&(SPI1->DR));
 8002e46:	4b0b      	ldr	r3, [pc, #44]	; (8002e74 <dma2_stream2_spi_receive+0x40>)
 8002e48:	4a0b      	ldr	r2, [pc, #44]	; (8002e78 <dma2_stream2_spi_receive+0x44>)
 8002e4a:	609a      	str	r2, [r3, #8]

	/*Set Memory address*/
	DMA2_Stream2->M0AR = received_msg;
 8002e4c:	4a09      	ldr	r2, [pc, #36]	; (8002e74 <dma2_stream2_spi_receive+0x40>)
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	60d3      	str	r3, [r2, #12]

	/*Set transfer length*/
	DMA2_Stream2->NDTR = msg_len;
 8002e52:	4a08      	ldr	r2, [pc, #32]	; (8002e74 <dma2_stream2_spi_receive+0x40>)
 8002e54:	683b      	ldr	r3, [r7, #0]
 8002e56:	6053      	str	r3, [r2, #4]

	/*Enable the DMA Stream*/
	DMA2_Stream2->CR |= DMA_SCR_EN;
 8002e58:	4b06      	ldr	r3, [pc, #24]	; (8002e74 <dma2_stream2_spi_receive+0x40>)
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	4a05      	ldr	r2, [pc, #20]	; (8002e74 <dma2_stream2_spi_receive+0x40>)
 8002e5e:	f043 0301 	orr.w	r3, r3, #1
 8002e62:	6013      	str	r3, [r2, #0]

}
 8002e64:	bf00      	nop
 8002e66:	370c      	adds	r7, #12
 8002e68:	46bd      	mov	sp, r7
 8002e6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e6e:	4770      	bx	lr
 8002e70:	40026400 	.word	0x40026400
 8002e74:	40026440 	.word	0x40026440
 8002e78:	4001300c 	.word	0x4001300c

08002e7c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002e7c:	b480      	push	{r7}
 8002e7e:	af00      	add	r7, sp, #0
	return 1;
 8002e80:	2301      	movs	r3, #1
}
 8002e82:	4618      	mov	r0, r3
 8002e84:	46bd      	mov	sp, r7
 8002e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e8a:	4770      	bx	lr

08002e8c <_kill>:

int _kill(int pid, int sig)
{
 8002e8c:	b580      	push	{r7, lr}
 8002e8e:	b082      	sub	sp, #8
 8002e90:	af00      	add	r7, sp, #0
 8002e92:	6078      	str	r0, [r7, #4]
 8002e94:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002e96:	f000 fb1d 	bl	80034d4 <__errno>
 8002e9a:	4603      	mov	r3, r0
 8002e9c:	2216      	movs	r2, #22
 8002e9e:	601a      	str	r2, [r3, #0]
	return -1;
 8002ea0:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002ea4:	4618      	mov	r0, r3
 8002ea6:	3708      	adds	r7, #8
 8002ea8:	46bd      	mov	sp, r7
 8002eaa:	bd80      	pop	{r7, pc}

08002eac <_exit>:

void _exit (int status)
{
 8002eac:	b580      	push	{r7, lr}
 8002eae:	b082      	sub	sp, #8
 8002eb0:	af00      	add	r7, sp, #0
 8002eb2:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002eb4:	f04f 31ff 	mov.w	r1, #4294967295
 8002eb8:	6878      	ldr	r0, [r7, #4]
 8002eba:	f7ff ffe7 	bl	8002e8c <_kill>
	while (1) {}		/* Make sure we hang here */
 8002ebe:	e7fe      	b.n	8002ebe <_exit+0x12>

08002ec0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002ec0:	b580      	push	{r7, lr}
 8002ec2:	b086      	sub	sp, #24
 8002ec4:	af00      	add	r7, sp, #0
 8002ec6:	60f8      	str	r0, [r7, #12]
 8002ec8:	60b9      	str	r1, [r7, #8]
 8002eca:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002ecc:	2300      	movs	r3, #0
 8002ece:	617b      	str	r3, [r7, #20]
 8002ed0:	e00a      	b.n	8002ee8 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002ed2:	f3af 8000 	nop.w
 8002ed6:	4601      	mov	r1, r0
 8002ed8:	68bb      	ldr	r3, [r7, #8]
 8002eda:	1c5a      	adds	r2, r3, #1
 8002edc:	60ba      	str	r2, [r7, #8]
 8002ede:	b2ca      	uxtb	r2, r1
 8002ee0:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002ee2:	697b      	ldr	r3, [r7, #20]
 8002ee4:	3301      	adds	r3, #1
 8002ee6:	617b      	str	r3, [r7, #20]
 8002ee8:	697a      	ldr	r2, [r7, #20]
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	429a      	cmp	r2, r3
 8002eee:	dbf0      	blt.n	8002ed2 <_read+0x12>
	}

return len;
 8002ef0:	687b      	ldr	r3, [r7, #4]
}
 8002ef2:	4618      	mov	r0, r3
 8002ef4:	3718      	adds	r7, #24
 8002ef6:	46bd      	mov	sp, r7
 8002ef8:	bd80      	pop	{r7, pc}

08002efa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002efa:	b580      	push	{r7, lr}
 8002efc:	b086      	sub	sp, #24
 8002efe:	af00      	add	r7, sp, #0
 8002f00:	60f8      	str	r0, [r7, #12]
 8002f02:	60b9      	str	r1, [r7, #8]
 8002f04:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002f06:	2300      	movs	r3, #0
 8002f08:	617b      	str	r3, [r7, #20]
 8002f0a:	e009      	b.n	8002f20 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002f0c:	68bb      	ldr	r3, [r7, #8]
 8002f0e:	1c5a      	adds	r2, r3, #1
 8002f10:	60ba      	str	r2, [r7, #8]
 8002f12:	781b      	ldrb	r3, [r3, #0]
 8002f14:	4618      	mov	r0, r3
 8002f16:	f000 f989 	bl	800322c <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002f1a:	697b      	ldr	r3, [r7, #20]
 8002f1c:	3301      	adds	r3, #1
 8002f1e:	617b      	str	r3, [r7, #20]
 8002f20:	697a      	ldr	r2, [r7, #20]
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	429a      	cmp	r2, r3
 8002f26:	dbf1      	blt.n	8002f0c <_write+0x12>
	}
	return len;
 8002f28:	687b      	ldr	r3, [r7, #4]
}
 8002f2a:	4618      	mov	r0, r3
 8002f2c:	3718      	adds	r7, #24
 8002f2e:	46bd      	mov	sp, r7
 8002f30:	bd80      	pop	{r7, pc}

08002f32 <_close>:

int _close(int file)
{
 8002f32:	b480      	push	{r7}
 8002f34:	b083      	sub	sp, #12
 8002f36:	af00      	add	r7, sp, #0
 8002f38:	6078      	str	r0, [r7, #4]
	return -1;
 8002f3a:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002f3e:	4618      	mov	r0, r3
 8002f40:	370c      	adds	r7, #12
 8002f42:	46bd      	mov	sp, r7
 8002f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f48:	4770      	bx	lr

08002f4a <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002f4a:	b480      	push	{r7}
 8002f4c:	b083      	sub	sp, #12
 8002f4e:	af00      	add	r7, sp, #0
 8002f50:	6078      	str	r0, [r7, #4]
 8002f52:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002f54:	683b      	ldr	r3, [r7, #0]
 8002f56:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002f5a:	605a      	str	r2, [r3, #4]
	return 0;
 8002f5c:	2300      	movs	r3, #0
}
 8002f5e:	4618      	mov	r0, r3
 8002f60:	370c      	adds	r7, #12
 8002f62:	46bd      	mov	sp, r7
 8002f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f68:	4770      	bx	lr

08002f6a <_isatty>:

int _isatty(int file)
{
 8002f6a:	b480      	push	{r7}
 8002f6c:	b083      	sub	sp, #12
 8002f6e:	af00      	add	r7, sp, #0
 8002f70:	6078      	str	r0, [r7, #4]
	return 1;
 8002f72:	2301      	movs	r3, #1
}
 8002f74:	4618      	mov	r0, r3
 8002f76:	370c      	adds	r7, #12
 8002f78:	46bd      	mov	sp, r7
 8002f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f7e:	4770      	bx	lr

08002f80 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002f80:	b480      	push	{r7}
 8002f82:	b085      	sub	sp, #20
 8002f84:	af00      	add	r7, sp, #0
 8002f86:	60f8      	str	r0, [r7, #12]
 8002f88:	60b9      	str	r1, [r7, #8]
 8002f8a:	607a      	str	r2, [r7, #4]
	return 0;
 8002f8c:	2300      	movs	r3, #0
}
 8002f8e:	4618      	mov	r0, r3
 8002f90:	3714      	adds	r7, #20
 8002f92:	46bd      	mov	sp, r7
 8002f94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f98:	4770      	bx	lr
	...

08002f9c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002f9c:	b580      	push	{r7, lr}
 8002f9e:	b086      	sub	sp, #24
 8002fa0:	af00      	add	r7, sp, #0
 8002fa2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002fa4:	4a14      	ldr	r2, [pc, #80]	; (8002ff8 <_sbrk+0x5c>)
 8002fa6:	4b15      	ldr	r3, [pc, #84]	; (8002ffc <_sbrk+0x60>)
 8002fa8:	1ad3      	subs	r3, r2, r3
 8002faa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002fac:	697b      	ldr	r3, [r7, #20]
 8002fae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002fb0:	4b13      	ldr	r3, [pc, #76]	; (8003000 <_sbrk+0x64>)
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d102      	bne.n	8002fbe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002fb8:	4b11      	ldr	r3, [pc, #68]	; (8003000 <_sbrk+0x64>)
 8002fba:	4a12      	ldr	r2, [pc, #72]	; (8003004 <_sbrk+0x68>)
 8002fbc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002fbe:	4b10      	ldr	r3, [pc, #64]	; (8003000 <_sbrk+0x64>)
 8002fc0:	681a      	ldr	r2, [r3, #0]
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	4413      	add	r3, r2
 8002fc6:	693a      	ldr	r2, [r7, #16]
 8002fc8:	429a      	cmp	r2, r3
 8002fca:	d207      	bcs.n	8002fdc <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002fcc:	f000 fa82 	bl	80034d4 <__errno>
 8002fd0:	4603      	mov	r3, r0
 8002fd2:	220c      	movs	r2, #12
 8002fd4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002fd6:	f04f 33ff 	mov.w	r3, #4294967295
 8002fda:	e009      	b.n	8002ff0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002fdc:	4b08      	ldr	r3, [pc, #32]	; (8003000 <_sbrk+0x64>)
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002fe2:	4b07      	ldr	r3, [pc, #28]	; (8003000 <_sbrk+0x64>)
 8002fe4:	681a      	ldr	r2, [r3, #0]
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	4413      	add	r3, r2
 8002fea:	4a05      	ldr	r2, [pc, #20]	; (8003000 <_sbrk+0x64>)
 8002fec:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002fee:	68fb      	ldr	r3, [r7, #12]
}
 8002ff0:	4618      	mov	r0, r3
 8002ff2:	3718      	adds	r7, #24
 8002ff4:	46bd      	mov	sp, r7
 8002ff6:	bd80      	pop	{r7, pc}
 8002ff8:	20020000 	.word	0x20020000
 8002ffc:	00000400 	.word	0x00000400
 8003000:	20000350 	.word	0x20000350
 8003004:	20000368 	.word	0x20000368

08003008 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8003008:	b480      	push	{r7}
 800300a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800300c:	4b06      	ldr	r3, [pc, #24]	; (8003028 <SystemInit+0x20>)
 800300e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003012:	4a05      	ldr	r2, [pc, #20]	; (8003028 <SystemInit+0x20>)
 8003014:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003018:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800301c:	bf00      	nop
 800301e:	46bd      	mov	sp, r7
 8003020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003024:	4770      	bx	lr
 8003026:	bf00      	nop
 8003028:	e000ed00 	.word	0xe000ed00

0800302c <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 800302c:	b480      	push	{r7}
 800302e:	b087      	sub	sp, #28
 8003030:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8003032:	2300      	movs	r3, #0
 8003034:	613b      	str	r3, [r7, #16]
 8003036:	2300      	movs	r3, #0
 8003038:	617b      	str	r3, [r7, #20]
 800303a:	2302      	movs	r3, #2
 800303c:	60fb      	str	r3, [r7, #12]
 800303e:	2300      	movs	r3, #0
 8003040:	60bb      	str	r3, [r7, #8]
 8003042:	2302      	movs	r3, #2
 8003044:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8003046:	4b34      	ldr	r3, [pc, #208]	; (8003118 <SystemCoreClockUpdate+0xec>)
 8003048:	689b      	ldr	r3, [r3, #8]
 800304a:	f003 030c 	and.w	r3, r3, #12
 800304e:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8003050:	693b      	ldr	r3, [r7, #16]
 8003052:	2b08      	cmp	r3, #8
 8003054:	d011      	beq.n	800307a <SystemCoreClockUpdate+0x4e>
 8003056:	693b      	ldr	r3, [r7, #16]
 8003058:	2b08      	cmp	r3, #8
 800305a:	d844      	bhi.n	80030e6 <SystemCoreClockUpdate+0xba>
 800305c:	693b      	ldr	r3, [r7, #16]
 800305e:	2b00      	cmp	r3, #0
 8003060:	d003      	beq.n	800306a <SystemCoreClockUpdate+0x3e>
 8003062:	693b      	ldr	r3, [r7, #16]
 8003064:	2b04      	cmp	r3, #4
 8003066:	d004      	beq.n	8003072 <SystemCoreClockUpdate+0x46>
 8003068:	e03d      	b.n	80030e6 <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 800306a:	4b2c      	ldr	r3, [pc, #176]	; (800311c <SystemCoreClockUpdate+0xf0>)
 800306c:	4a2c      	ldr	r2, [pc, #176]	; (8003120 <SystemCoreClockUpdate+0xf4>)
 800306e:	601a      	str	r2, [r3, #0]
      break;
 8003070:	e03d      	b.n	80030ee <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 8003072:	4b2a      	ldr	r3, [pc, #168]	; (800311c <SystemCoreClockUpdate+0xf0>)
 8003074:	4a2b      	ldr	r2, [pc, #172]	; (8003124 <SystemCoreClockUpdate+0xf8>)
 8003076:	601a      	str	r2, [r3, #0]
      break;
 8003078:	e039      	b.n	80030ee <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 800307a:	4b27      	ldr	r3, [pc, #156]	; (8003118 <SystemCoreClockUpdate+0xec>)
 800307c:	685b      	ldr	r3, [r3, #4]
 800307e:	0d9b      	lsrs	r3, r3, #22
 8003080:	f003 0301 	and.w	r3, r3, #1
 8003084:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8003086:	4b24      	ldr	r3, [pc, #144]	; (8003118 <SystemCoreClockUpdate+0xec>)
 8003088:	685b      	ldr	r3, [r3, #4]
 800308a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800308e:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 8003090:	68bb      	ldr	r3, [r7, #8]
 8003092:	2b00      	cmp	r3, #0
 8003094:	d00c      	beq.n	80030b0 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8003096:	4a23      	ldr	r2, [pc, #140]	; (8003124 <SystemCoreClockUpdate+0xf8>)
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	fbb2 f3f3 	udiv	r3, r2, r3
 800309e:	4a1e      	ldr	r2, [pc, #120]	; (8003118 <SystemCoreClockUpdate+0xec>)
 80030a0:	6852      	ldr	r2, [r2, #4]
 80030a2:	0992      	lsrs	r2, r2, #6
 80030a4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80030a8:	fb02 f303 	mul.w	r3, r2, r3
 80030ac:	617b      	str	r3, [r7, #20]
 80030ae:	e00b      	b.n	80030c8 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80030b0:	4a1b      	ldr	r2, [pc, #108]	; (8003120 <SystemCoreClockUpdate+0xf4>)
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80030b8:	4a17      	ldr	r2, [pc, #92]	; (8003118 <SystemCoreClockUpdate+0xec>)
 80030ba:	6852      	ldr	r2, [r2, #4]
 80030bc:	0992      	lsrs	r2, r2, #6
 80030be:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80030c2:	fb02 f303 	mul.w	r3, r2, r3
 80030c6:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 80030c8:	4b13      	ldr	r3, [pc, #76]	; (8003118 <SystemCoreClockUpdate+0xec>)
 80030ca:	685b      	ldr	r3, [r3, #4]
 80030cc:	0c1b      	lsrs	r3, r3, #16
 80030ce:	f003 0303 	and.w	r3, r3, #3
 80030d2:	3301      	adds	r3, #1
 80030d4:	005b      	lsls	r3, r3, #1
 80030d6:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 80030d8:	697a      	ldr	r2, [r7, #20]
 80030da:	68fb      	ldr	r3, [r7, #12]
 80030dc:	fbb2 f3f3 	udiv	r3, r2, r3
 80030e0:	4a0e      	ldr	r2, [pc, #56]	; (800311c <SystemCoreClockUpdate+0xf0>)
 80030e2:	6013      	str	r3, [r2, #0]
      break;
 80030e4:	e003      	b.n	80030ee <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 80030e6:	4b0d      	ldr	r3, [pc, #52]	; (800311c <SystemCoreClockUpdate+0xf0>)
 80030e8:	4a0d      	ldr	r2, [pc, #52]	; (8003120 <SystemCoreClockUpdate+0xf4>)
 80030ea:	601a      	str	r2, [r3, #0]
      break;
 80030ec:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80030ee:	4b0a      	ldr	r3, [pc, #40]	; (8003118 <SystemCoreClockUpdate+0xec>)
 80030f0:	689b      	ldr	r3, [r3, #8]
 80030f2:	091b      	lsrs	r3, r3, #4
 80030f4:	f003 030f 	and.w	r3, r3, #15
 80030f8:	4a0b      	ldr	r2, [pc, #44]	; (8003128 <SystemCoreClockUpdate+0xfc>)
 80030fa:	5cd3      	ldrb	r3, [r2, r3]
 80030fc:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80030fe:	4b07      	ldr	r3, [pc, #28]	; (800311c <SystemCoreClockUpdate+0xf0>)
 8003100:	681a      	ldr	r2, [r3, #0]
 8003102:	693b      	ldr	r3, [r7, #16]
 8003104:	fa22 f303 	lsr.w	r3, r2, r3
 8003108:	4a04      	ldr	r2, [pc, #16]	; (800311c <SystemCoreClockUpdate+0xf0>)
 800310a:	6013      	str	r3, [r2, #0]
}
 800310c:	bf00      	nop
 800310e:	371c      	adds	r7, #28
 8003110:	46bd      	mov	sp, r7
 8003112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003116:	4770      	bx	lr
 8003118:	40023800 	.word	0x40023800
 800311c:	2000002c 	.word	0x2000002c
 8003120:	00f42400 	.word	0x00f42400
 8003124:	017d7840 	.word	0x017d7840
 8003128:	08008b88 	.word	0x08008b88

0800312c <systick_counter_init>:
#define CTRL_ENABLE		(1U<<0)
#define CTRL_TICKINT	(1U<<1)
#define CTRL_CLKSRC		(1U<<2)

void systick_counter_init(void)
{
 800312c:	b480      	push	{r7}
 800312e:	af00      	add	r7, sp, #0
	/*Disable systick before setup*/
	SysTick->CTRL = 0;
 8003130:	4b08      	ldr	r3, [pc, #32]	; (8003154 <systick_counter_init+0x28>)
 8003132:	2200      	movs	r2, #0
 8003134:	601a      	str	r2, [r3, #0]

	/*Load Systick reload register with maximum value*/
	SysTick->LOAD = 0x00FFFFFF;
 8003136:	4b07      	ldr	r3, [pc, #28]	; (8003154 <systick_counter_init+0x28>)
 8003138:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 800313c:	605a      	str	r2, [r3, #4]

	/*Clear Systick current value register*/
	SysTick->VAL = 0;
 800313e:	4b05      	ldr	r3, [pc, #20]	; (8003154 <systick_counter_init+0x28>)
 8003140:	2200      	movs	r2, #0
 8003142:	609a      	str	r2, [r3, #8]

	/*Select internal clock source and enable SysTick*/
	SysTick->CTRL = CTRL_CLKSRC | CTRL_ENABLE;
 8003144:	4b03      	ldr	r3, [pc, #12]	; (8003154 <systick_counter_init+0x28>)
 8003146:	2205      	movs	r2, #5
 8003148:	601a      	str	r2, [r3, #0]


}
 800314a:	bf00      	nop
 800314c:	46bd      	mov	sp, r7
 800314e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003152:	4770      	bx	lr
 8003154:	e000e010 	.word	0xe000e010

08003158 <__NVIC_EnableIRQ>:
{
 8003158:	b480      	push	{r7}
 800315a:	b083      	sub	sp, #12
 800315c:	af00      	add	r7, sp, #0
 800315e:	4603      	mov	r3, r0
 8003160:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003162:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003166:	2b00      	cmp	r3, #0
 8003168:	db0b      	blt.n	8003182 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800316a:	79fb      	ldrb	r3, [r7, #7]
 800316c:	f003 021f 	and.w	r2, r3, #31
 8003170:	4907      	ldr	r1, [pc, #28]	; (8003190 <__NVIC_EnableIRQ+0x38>)
 8003172:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003176:	095b      	lsrs	r3, r3, #5
 8003178:	2001      	movs	r0, #1
 800317a:	fa00 f202 	lsl.w	r2, r0, r2
 800317e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8003182:	bf00      	nop
 8003184:	370c      	adds	r7, #12
 8003186:	46bd      	mov	sp, r7
 8003188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800318c:	4770      	bx	lr
 800318e:	bf00      	nop
 8003190:	e000e100 	.word	0xe000e100

08003194 <tim2_1khz_interrupt_init>:
	return 1;
}


float tim2_1khz_interrupt_init(void)
{
 8003194:	b580      	push	{r7, lr}
 8003196:	af00      	add	r7, sp, #0
	/*enable clock access to tim2*/
	RCC->APB1ENR |= TIM2EN;
 8003198:	4b13      	ldr	r3, [pc, #76]	; (80031e8 <tim2_1khz_interrupt_init+0x54>)
 800319a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800319c:	4a12      	ldr	r2, [pc, #72]	; (80031e8 <tim2_1khz_interrupt_init+0x54>)
 800319e:	f043 0301 	orr.w	r3, r3, #1
 80031a2:	6413      	str	r3, [r2, #64]	; 0x40

	/*Set prescaler value*/
	TIM2->PSC = 16-1;  // (clk_freq) 16 000 000/ (prescaler) 16 = 1 000 000 (1MHz)
 80031a4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031a8:	220f      	movs	r2, #15
 80031aa:	629a      	str	r2, [r3, #40]	; 0x28

	/*Set auto-reload value*/
	TIM2->ARR = 1000-1;  // 1 000 / 1 000 000 = 1e-3s = 1 ms
 80031ac:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031b0:	f240 32e7 	movw	r2, #999	; 0x3e7
 80031b4:	62da      	str	r2, [r3, #44]	; 0x2c

	/*Clear counter*/
	TIM2->CNT = 0;	// komplettes Register Null-setzen
 80031b6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031ba:	2200      	movs	r2, #0
 80031bc:	625a      	str	r2, [r3, #36]	; 0x24

	/*Enable timer*/
	TIM2->CR1 = CR1_CEN;
 80031be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031c2:	2201      	movs	r2, #1
 80031c4:	601a      	str	r2, [r3, #0]

	/*Enable TIM interrupt*/
	TIM2->DIER |= DIER_UIE;
 80031c6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031ca:	68db      	ldr	r3, [r3, #12]
 80031cc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80031d0:	f043 0301 	orr.w	r3, r3, #1
 80031d4:	60d3      	str	r3, [r2, #12]

	/*Enable TIM interrupt in NVIC*/
	NVIC_EnableIRQ(TIM2_IRQn);
 80031d6:	201c      	movs	r0, #28
 80031d8:	f7ff ffbe 	bl	8003158 <__NVIC_EnableIRQ>

	return 0.001;
 80031dc:	4b03      	ldr	r3, [pc, #12]	; (80031ec <tim2_1khz_interrupt_init+0x58>)
 80031de:	ee07 3a90 	vmov	s15, r3
}
 80031e2:	eeb0 0a67 	vmov.f32	s0, s15
 80031e6:	bd80      	pop	{r7, pc}
 80031e8:	40023800 	.word	0x40023800
 80031ec:	3a83126f 	.word	0x3a83126f

080031f0 <__NVIC_EnableIRQ>:
{
 80031f0:	b480      	push	{r7}
 80031f2:	b083      	sub	sp, #12
 80031f4:	af00      	add	r7, sp, #0
 80031f6:	4603      	mov	r3, r0
 80031f8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80031fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80031fe:	2b00      	cmp	r3, #0
 8003200:	db0b      	blt.n	800321a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003202:	79fb      	ldrb	r3, [r7, #7]
 8003204:	f003 021f 	and.w	r2, r3, #31
 8003208:	4907      	ldr	r1, [pc, #28]	; (8003228 <__NVIC_EnableIRQ+0x38>)
 800320a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800320e:	095b      	lsrs	r3, r3, #5
 8003210:	2001      	movs	r0, #1
 8003212:	fa00 f202 	lsl.w	r2, r0, r2
 8003216:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800321a:	bf00      	nop
 800321c:	370c      	adds	r7, #12
 800321e:	46bd      	mov	sp, r7
 8003220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003224:	4770      	bx	lr
 8003226:	bf00      	nop
 8003228:	e000e100 	.word	0xe000e100

0800322c <__io_putchar>:
static void uart_set_baudrate(uint32_t periph_clk, uint32_t baudrate);



int __io_putchar(int ch)
{
 800322c:	b580      	push	{r7, lr}
 800322e:	b082      	sub	sp, #8
 8003230:	af00      	add	r7, sp, #0
 8003232:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	b2db      	uxtb	r3, r3
 8003238:	4618      	mov	r0, r3
 800323a:	f000 f8a5 	bl	8003388 <uart2_write>
	return ch;
 800323e:	687b      	ldr	r3, [r7, #4]
}
 8003240:	4618      	mov	r0, r3
 8003242:	3708      	adds	r7, #8
 8003244:	46bd      	mov	sp, r7
 8003246:	bd80      	pop	{r7, pc}

08003248 <uart2_rx_interrupt_init>:
	/*Enable uart module*/
	 USART2->CR1 |= CR1_UE;
}

void uart2_rx_interrupt_init(void)
{
 8003248:	b580      	push	{r7, lr}
 800324a:	af00      	add	r7, sp, #0
	/****************Configure uart gpio pin***************/
	/*Enable clock access to gpioa */
	RCC->AHB1ENR |= GPIOAEN;
 800324c:	4b36      	ldr	r3, [pc, #216]	; (8003328 <uart2_rx_interrupt_init+0xe0>)
 800324e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003250:	4a35      	ldr	r2, [pc, #212]	; (8003328 <uart2_rx_interrupt_init+0xe0>)
 8003252:	f043 0301 	orr.w	r3, r3, #1
 8003256:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PA2 mode to alternate function mode*/
	GPIOA->MODER &=~(1U<<4);
 8003258:	4b34      	ldr	r3, [pc, #208]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	4a33      	ldr	r2, [pc, #204]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 800325e:	f023 0310 	bic.w	r3, r3, #16
 8003262:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<5);
 8003264:	4b31      	ldr	r3, [pc, #196]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	4a30      	ldr	r2, [pc, #192]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 800326a:	f043 0320 	orr.w	r3, r3, #32
 800326e:	6013      	str	r3, [r2, #0]

	/*Set PA2 alternate function type to UART_TX (AF07)*/
	GPIOA->AFR[0] |= (1U<<8);
 8003270:	4b2e      	ldr	r3, [pc, #184]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 8003272:	6a1b      	ldr	r3, [r3, #32]
 8003274:	4a2d      	ldr	r2, [pc, #180]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 8003276:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800327a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 800327c:	4b2b      	ldr	r3, [pc, #172]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 800327e:	6a1b      	ldr	r3, [r3, #32]
 8003280:	4a2a      	ldr	r2, [pc, #168]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 8003282:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003286:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 8003288:	4b28      	ldr	r3, [pc, #160]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 800328a:	6a1b      	ldr	r3, [r3, #32]
 800328c:	4a27      	ldr	r2, [pc, #156]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 800328e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003292:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<11);
 8003294:	4b25      	ldr	r3, [pc, #148]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 8003296:	6a1b      	ldr	r3, [r3, #32]
 8003298:	4a24      	ldr	r2, [pc, #144]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 800329a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800329e:	6213      	str	r3, [r2, #32]


	/*Set PA3 mode to alternate function mode*/
	GPIOA->MODER &=~(1U<<6);
 80032a0:	4b22      	ldr	r3, [pc, #136]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	4a21      	ldr	r2, [pc, #132]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032a6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80032aa:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<7);
 80032ac:	4b1f      	ldr	r3, [pc, #124]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	4a1e      	ldr	r2, [pc, #120]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80032b6:	6013      	str	r3, [r2, #0]

	/*Set PA3 alternate function type to UART_RX (AF07)*/
	GPIOA->AFR[0] |= (1U<<12);
 80032b8:	4b1c      	ldr	r3, [pc, #112]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032ba:	6a1b      	ldr	r3, [r3, #32]
 80032bc:	4a1b      	ldr	r2, [pc, #108]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032be:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80032c2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<13);
 80032c4:	4b19      	ldr	r3, [pc, #100]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032c6:	6a1b      	ldr	r3, [r3, #32]
 80032c8:	4a18      	ldr	r2, [pc, #96]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032ca:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80032ce:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<14);
 80032d0:	4b16      	ldr	r3, [pc, #88]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032d2:	6a1b      	ldr	r3, [r3, #32]
 80032d4:	4a15      	ldr	r2, [pc, #84]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032d6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80032da:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<15);
 80032dc:	4b13      	ldr	r3, [pc, #76]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032de:	6a1b      	ldr	r3, [r3, #32]
 80032e0:	4a12      	ldr	r2, [pc, #72]	; (800332c <uart2_rx_interrupt_init+0xe4>)
 80032e2:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80032e6:	6213      	str	r3, [r2, #32]


	/****************Configure uart module ***************/
	/*Enable clock access to uart2 */
	RCC->APB1ENR |= UART2EN;
 80032e8:	4b0f      	ldr	r3, [pc, #60]	; (8003328 <uart2_rx_interrupt_init+0xe0>)
 80032ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032ec:	4a0e      	ldr	r2, [pc, #56]	; (8003328 <uart2_rx_interrupt_init+0xe0>)
 80032ee:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80032f2:	6413      	str	r3, [r2, #64]	; 0x40

	/*Configure baudrate*/
	uart_set_baudrate(CLK,UART_BAUDRATE);
 80032f4:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 80032f8:	480d      	ldr	r0, [pc, #52]	; (8003330 <uart2_rx_interrupt_init+0xe8>)
 80032fa:	f000 f831 	bl	8003360 <uart_set_baudrate>

	/*Configure the transfer direction*/
	 USART2->CR1 =  (CR1_TE | CR1_RE);
 80032fe:	4b0d      	ldr	r3, [pc, #52]	; (8003334 <uart2_rx_interrupt_init+0xec>)
 8003300:	220c      	movs	r2, #12
 8003302:	60da      	str	r2, [r3, #12]

	 /*Enable RXNE inteerupt*/
	 USART2->CR1 |= CR1_RXNEIE;
 8003304:	4b0b      	ldr	r3, [pc, #44]	; (8003334 <uart2_rx_interrupt_init+0xec>)
 8003306:	68db      	ldr	r3, [r3, #12]
 8003308:	4a0a      	ldr	r2, [pc, #40]	; (8003334 <uart2_rx_interrupt_init+0xec>)
 800330a:	f043 0320 	orr.w	r3, r3, #32
 800330e:	60d3      	str	r3, [r2, #12]
	 //USART2->CR1 |=CR1_TXNEIE;

	 /*Enable UART2 interrupt in NVIC*/
	 NVIC_EnableIRQ(USART2_IRQn);
 8003310:	2026      	movs	r0, #38	; 0x26
 8003312:	f7ff ff6d 	bl	80031f0 <__NVIC_EnableIRQ>

	/*Enable uart module*/
	 USART2->CR1 |= CR1_UE;
 8003316:	4b07      	ldr	r3, [pc, #28]	; (8003334 <uart2_rx_interrupt_init+0xec>)
 8003318:	68db      	ldr	r3, [r3, #12]
 800331a:	4a06      	ldr	r2, [pc, #24]	; (8003334 <uart2_rx_interrupt_init+0xec>)
 800331c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8003320:	60d3      	str	r3, [r2, #12]
}
 8003322:	bf00      	nop
 8003324:	bd80      	pop	{r7, pc}
 8003326:	bf00      	nop
 8003328:	40023800 	.word	0x40023800
 800332c:	40020000 	.word	0x40020000
 8003330:	00f42400 	.word	0x00f42400
 8003334:	40004400 	.word	0x40004400

08003338 <compute_uart_bd>:


static uint16_t compute_uart_bd(uint32_t periph_clk, uint32_t baudrate)
{
 8003338:	b480      	push	{r7}
 800333a:	b083      	sub	sp, #12
 800333c:	af00      	add	r7, sp, #0
 800333e:	6078      	str	r0, [r7, #4]
 8003340:	6039      	str	r1, [r7, #0]
	return ((periph_clk +( baudrate/2U ))/baudrate);
 8003342:	683b      	ldr	r3, [r7, #0]
 8003344:	085a      	lsrs	r2, r3, #1
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	441a      	add	r2, r3
 800334a:	683b      	ldr	r3, [r7, #0]
 800334c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003350:	b29b      	uxth	r3, r3
}
 8003352:	4618      	mov	r0, r3
 8003354:	370c      	adds	r7, #12
 8003356:	46bd      	mov	sp, r7
 8003358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800335c:	4770      	bx	lr
	...

08003360 <uart_set_baudrate>:


static void uart_set_baudrate(uint32_t periph_clk, uint32_t baudrate)
{
 8003360:	b580      	push	{r7, lr}
 8003362:	b082      	sub	sp, #8
 8003364:	af00      	add	r7, sp, #0
 8003366:	6078      	str	r0, [r7, #4]
 8003368:	6039      	str	r1, [r7, #0]
	USART2->BRR  = compute_uart_bd(periph_clk,baudrate);
 800336a:	6839      	ldr	r1, [r7, #0]
 800336c:	6878      	ldr	r0, [r7, #4]
 800336e:	f7ff ffe3 	bl	8003338 <compute_uart_bd>
 8003372:	4603      	mov	r3, r0
 8003374:	461a      	mov	r2, r3
 8003376:	4b03      	ldr	r3, [pc, #12]	; (8003384 <uart_set_baudrate+0x24>)
 8003378:	609a      	str	r2, [r3, #8]
}
 800337a:	bf00      	nop
 800337c:	3708      	adds	r7, #8
 800337e:	46bd      	mov	sp, r7
 8003380:	bd80      	pop	{r7, pc}
 8003382:	bf00      	nop
 8003384:	40004400 	.word	0x40004400

08003388 <uart2_write>:
    }
}


void uart2_write(uint8_t ch)
{
 8003388:	b480      	push	{r7}
 800338a:	b083      	sub	sp, #12
 800338c:	af00      	add	r7, sp, #0
 800338e:	4603      	mov	r3, r0
 8003390:	71fb      	strb	r3, [r7, #7]
    // Warten, bis der Sendepuffer leer ist
    while (!(USART2->SR & SR_TXE)) {}
 8003392:	bf00      	nop
 8003394:	4b07      	ldr	r3, [pc, #28]	; (80033b4 <uart2_write+0x2c>)
 8003396:	681b      	ldr	r3, [r3, #0]
 8003398:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800339c:	2b00      	cmp	r3, #0
 800339e:	d0f9      	beq.n	8003394 <uart2_write+0xc>

    // Zeichen in den Sendepuffer schreiben
    USART2->DR = ch;
 80033a0:	4a04      	ldr	r2, [pc, #16]	; (80033b4 <uart2_write+0x2c>)
 80033a2:	79fb      	ldrb	r3, [r7, #7]
 80033a4:	6053      	str	r3, [r2, #4]
}
 80033a6:	bf00      	nop
 80033a8:	370c      	adds	r7, #12
 80033aa:	46bd      	mov	sp, r7
 80033ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033b0:	4770      	bx	lr
 80033b2:	bf00      	nop
 80033b4:	40004400 	.word	0x40004400

080033b8 <uart_send_Magneto>:

void uart_send_Magneto(lsm303MagData *data)
{
 80033b8:	b580      	push	{r7, lr}
 80033ba:	b084      	sub	sp, #16
 80033bc:	af00      	add	r7, sp, #0
 80033be:	6078      	str	r0, [r7, #4]
	if (data == NULL)return;
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d02c      	beq.n	8003420 <uart_send_Magneto+0x68>

	for(uint8_t i=0; i<(sizeof(data->Raw_Buffer16)/sizeof(data->Raw_Buffer16[0]));i++)
 80033c6:	2300      	movs	r3, #0
 80033c8:	73fb      	strb	r3, [r7, #15]
 80033ca:	e025      	b.n	8003418 <uart_send_Magneto+0x60>
	{
		uint8_t buff[2];
			buff[0] = ((data->Raw_Buffer16[i])>>8)&0xFF;	//high
 80033cc:	7bfb      	ldrb	r3, [r7, #15]
 80033ce:	687a      	ldr	r2, [r7, #4]
 80033d0:	005b      	lsls	r3, r3, #1
 80033d2:	4413      	add	r3, r2
 80033d4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80033d8:	121b      	asrs	r3, r3, #8
 80033da:	b21b      	sxth	r3, r3
 80033dc:	b2db      	uxtb	r3, r3
 80033de:	733b      	strb	r3, [r7, #12]
			buff[1] = (data->Raw_Buffer16[i])&0xFF;		//low
 80033e0:	7bfb      	ldrb	r3, [r7, #15]
 80033e2:	687a      	ldr	r2, [r7, #4]
 80033e4:	005b      	lsls	r3, r3, #1
 80033e6:	4413      	add	r3, r2
 80033e8:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80033ec:	b2db      	uxtb	r3, r3
 80033ee:	737b      	strb	r3, [r7, #13]

		    for(uint8_t n=0; n<sizeof(buff);n++)
 80033f0:	2300      	movs	r3, #0
 80033f2:	73bb      	strb	r3, [r7, #14]
 80033f4:	e00a      	b.n	800340c <uart_send_Magneto+0x54>
		    {
		    	uart2_write(buff[n]);
 80033f6:	7bbb      	ldrb	r3, [r7, #14]
 80033f8:	3310      	adds	r3, #16
 80033fa:	443b      	add	r3, r7
 80033fc:	f813 3c04 	ldrb.w	r3, [r3, #-4]
 8003400:	4618      	mov	r0, r3
 8003402:	f7ff ffc1 	bl	8003388 <uart2_write>
		    for(uint8_t n=0; n<sizeof(buff);n++)
 8003406:	7bbb      	ldrb	r3, [r7, #14]
 8003408:	3301      	adds	r3, #1
 800340a:	73bb      	strb	r3, [r7, #14]
 800340c:	7bbb      	ldrb	r3, [r7, #14]
 800340e:	2b01      	cmp	r3, #1
 8003410:	d9f1      	bls.n	80033f6 <uart_send_Magneto+0x3e>
	for(uint8_t i=0; i<(sizeof(data->Raw_Buffer16)/sizeof(data->Raw_Buffer16[0]));i++)
 8003412:	7bfb      	ldrb	r3, [r7, #15]
 8003414:	3301      	adds	r3, #1
 8003416:	73fb      	strb	r3, [r7, #15]
 8003418:	7bfb      	ldrb	r3, [r7, #15]
 800341a:	2b02      	cmp	r3, #2
 800341c:	d9d6      	bls.n	80033cc <uart_send_Magneto+0x14>
 800341e:	e000      	b.n	8003422 <uart_send_Magneto+0x6a>
	if (data == NULL)return;
 8003420:	bf00      	nop
		    }
	}
}
 8003422:	3710      	adds	r7, #16
 8003424:	46bd      	mov	sp, r7
 8003426:	bd80      	pop	{r7, pc}

08003428 <uart_send_yaw>:


void uart_send_yaw(lsm303MagData *data)
{
 8003428:	b580      	push	{r7, lr}
 800342a:	b084      	sub	sp, #16
 800342c:	af00      	add	r7, sp, #0
 800342e:	6078      	str	r0, [r7, #4]
    if (data == NULL) {
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	2b00      	cmp	r3, #0
 8003434:	d014      	beq.n	8003460 <uart_send_yaw+0x38>
        // Handle error
        return;
    }

    union float_bytes yaw;
    yaw.value = data->yaw;
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	699b      	ldr	r3, [r3, #24]
 800343a:	60bb      	str	r3, [r7, #8]

    for(uint8_t i=0; i<sizeof(yaw.bytes); i++)
 800343c:	2300      	movs	r3, #0
 800343e:	73fb      	strb	r3, [r7, #15]
 8003440:	e00a      	b.n	8003458 <uart_send_yaw+0x30>
    {
        uart2_write(yaw.bytes[i]);
 8003442:	7bfb      	ldrb	r3, [r7, #15]
 8003444:	3310      	adds	r3, #16
 8003446:	443b      	add	r3, r7
 8003448:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 800344c:	4618      	mov	r0, r3
 800344e:	f7ff ff9b 	bl	8003388 <uart2_write>
    for(uint8_t i=0; i<sizeof(yaw.bytes); i++)
 8003452:	7bfb      	ldrb	r3, [r7, #15]
 8003454:	3301      	adds	r3, #1
 8003456:	73fb      	strb	r3, [r7, #15]
 8003458:	7bfb      	ldrb	r3, [r7, #15]
 800345a:	2b03      	cmp	r3, #3
 800345c:	d9f1      	bls.n	8003442 <uart_send_yaw+0x1a>
 800345e:	e000      	b.n	8003462 <uart_send_yaw+0x3a>
        return;
 8003460:	bf00      	nop
    }
}
 8003462:	3710      	adds	r7, #16
 8003464:	46bd      	mov	sp, r7
 8003466:	bd80      	pop	{r7, pc}

08003468 <uart2_read>:


int8_t uart2_read(void)
{
 8003468:	b480      	push	{r7}
 800346a:	af00      	add	r7, sp, #0
    // Gelesenes Zeichen zurückgeben
    return (int8_t)(USART2->DR);
 800346c:	4b03      	ldr	r3, [pc, #12]	; (800347c <uart2_read+0x14>)
 800346e:	685b      	ldr	r3, [r3, #4]
 8003470:	b25b      	sxtb	r3, r3
}
 8003472:	4618      	mov	r0, r3
 8003474:	46bd      	mov	sp, r7
 8003476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800347a:	4770      	bx	lr
 800347c:	40004400 	.word	0x40004400

08003480 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003480:	480d      	ldr	r0, [pc, #52]	; (80034b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8003482:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8003484:	f7ff fdc0 	bl	8003008 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003488:	480c      	ldr	r0, [pc, #48]	; (80034bc <LoopForever+0x6>)
  ldr r1, =_edata
 800348a:	490d      	ldr	r1, [pc, #52]	; (80034c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800348c:	4a0d      	ldr	r2, [pc, #52]	; (80034c4 <LoopForever+0xe>)
  movs r3, #0
 800348e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003490:	e002      	b.n	8003498 <LoopCopyDataInit>

08003492 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003492:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003494:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003496:	3304      	adds	r3, #4

08003498 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003498:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800349a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800349c:	d3f9      	bcc.n	8003492 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800349e:	4a0a      	ldr	r2, [pc, #40]	; (80034c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80034a0:	4c0a      	ldr	r4, [pc, #40]	; (80034cc <LoopForever+0x16>)
  movs r3, #0
 80034a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80034a4:	e001      	b.n	80034aa <LoopFillZerobss>

080034a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80034a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80034a8:	3204      	adds	r2, #4

080034aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80034aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80034ac:	d3fb      	bcc.n	80034a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80034ae:	f000 f817 	bl	80034e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80034b2:	f7fe fcc1 	bl	8001e38 <main>

080034b6 <LoopForever>:

LoopForever:
    b LoopForever
 80034b6:	e7fe      	b.n	80034b6 <LoopForever>
  ldr   r0, =_estack
 80034b8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80034bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80034c0:	20000204 	.word	0x20000204
  ldr r2, =_sidata
 80034c4:	08009414 	.word	0x08009414
  ldr r2, =_sbss
 80034c8:	20000208 	.word	0x20000208
  ldr r4, =_ebss
 80034cc:	20000364 	.word	0x20000364

080034d0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80034d0:	e7fe      	b.n	80034d0 <ADC_IRQHandler>
	...

080034d4 <__errno>:
 80034d4:	4b01      	ldr	r3, [pc, #4]	; (80034dc <__errno+0x8>)
 80034d6:	6818      	ldr	r0, [r3, #0]
 80034d8:	4770      	bx	lr
 80034da:	bf00      	nop
 80034dc:	20000030 	.word	0x20000030

080034e0 <__libc_init_array>:
 80034e0:	b570      	push	{r4, r5, r6, lr}
 80034e2:	4d0d      	ldr	r5, [pc, #52]	; (8003518 <__libc_init_array+0x38>)
 80034e4:	4c0d      	ldr	r4, [pc, #52]	; (800351c <__libc_init_array+0x3c>)
 80034e6:	1b64      	subs	r4, r4, r5
 80034e8:	10a4      	asrs	r4, r4, #2
 80034ea:	2600      	movs	r6, #0
 80034ec:	42a6      	cmp	r6, r4
 80034ee:	d109      	bne.n	8003504 <__libc_init_array+0x24>
 80034f0:	4d0b      	ldr	r5, [pc, #44]	; (8003520 <__libc_init_array+0x40>)
 80034f2:	4c0c      	ldr	r4, [pc, #48]	; (8003524 <__libc_init_array+0x44>)
 80034f4:	f005 fb3c 	bl	8008b70 <_init>
 80034f8:	1b64      	subs	r4, r4, r5
 80034fa:	10a4      	asrs	r4, r4, #2
 80034fc:	2600      	movs	r6, #0
 80034fe:	42a6      	cmp	r6, r4
 8003500:	d105      	bne.n	800350e <__libc_init_array+0x2e>
 8003502:	bd70      	pop	{r4, r5, r6, pc}
 8003504:	f855 3b04 	ldr.w	r3, [r5], #4
 8003508:	4798      	blx	r3
 800350a:	3601      	adds	r6, #1
 800350c:	e7ee      	b.n	80034ec <__libc_init_array+0xc>
 800350e:	f855 3b04 	ldr.w	r3, [r5], #4
 8003512:	4798      	blx	r3
 8003514:	3601      	adds	r6, #1
 8003516:	e7f2      	b.n	80034fe <__libc_init_array+0x1e>
 8003518:	0800940c 	.word	0x0800940c
 800351c:	0800940c 	.word	0x0800940c
 8003520:	0800940c 	.word	0x0800940c
 8003524:	08009410 	.word	0x08009410

08003528 <memset>:
 8003528:	4402      	add	r2, r0
 800352a:	4603      	mov	r3, r0
 800352c:	4293      	cmp	r3, r2
 800352e:	d100      	bne.n	8003532 <memset+0xa>
 8003530:	4770      	bx	lr
 8003532:	f803 1b01 	strb.w	r1, [r3], #1
 8003536:	e7f9      	b.n	800352c <memset+0x4>

08003538 <__cvt>:
 8003538:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800353c:	ec55 4b10 	vmov	r4, r5, d0
 8003540:	2d00      	cmp	r5, #0
 8003542:	460e      	mov	r6, r1
 8003544:	4619      	mov	r1, r3
 8003546:	462b      	mov	r3, r5
 8003548:	bfbb      	ittet	lt
 800354a:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800354e:	461d      	movlt	r5, r3
 8003550:	2300      	movge	r3, #0
 8003552:	232d      	movlt	r3, #45	; 0x2d
 8003554:	700b      	strb	r3, [r1, #0]
 8003556:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003558:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800355c:	4691      	mov	r9, r2
 800355e:	f023 0820 	bic.w	r8, r3, #32
 8003562:	bfbc      	itt	lt
 8003564:	4622      	movlt	r2, r4
 8003566:	4614      	movlt	r4, r2
 8003568:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800356c:	d005      	beq.n	800357a <__cvt+0x42>
 800356e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8003572:	d100      	bne.n	8003576 <__cvt+0x3e>
 8003574:	3601      	adds	r6, #1
 8003576:	2102      	movs	r1, #2
 8003578:	e000      	b.n	800357c <__cvt+0x44>
 800357a:	2103      	movs	r1, #3
 800357c:	ab03      	add	r3, sp, #12
 800357e:	9301      	str	r3, [sp, #4]
 8003580:	ab02      	add	r3, sp, #8
 8003582:	9300      	str	r3, [sp, #0]
 8003584:	ec45 4b10 	vmov	d0, r4, r5
 8003588:	4653      	mov	r3, sl
 800358a:	4632      	mov	r2, r6
 800358c:	f001 fdac 	bl	80050e8 <_dtoa_r>
 8003590:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8003594:	4607      	mov	r7, r0
 8003596:	d102      	bne.n	800359e <__cvt+0x66>
 8003598:	f019 0f01 	tst.w	r9, #1
 800359c:	d022      	beq.n	80035e4 <__cvt+0xac>
 800359e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80035a2:	eb07 0906 	add.w	r9, r7, r6
 80035a6:	d110      	bne.n	80035ca <__cvt+0x92>
 80035a8:	783b      	ldrb	r3, [r7, #0]
 80035aa:	2b30      	cmp	r3, #48	; 0x30
 80035ac:	d10a      	bne.n	80035c4 <__cvt+0x8c>
 80035ae:	2200      	movs	r2, #0
 80035b0:	2300      	movs	r3, #0
 80035b2:	4620      	mov	r0, r4
 80035b4:	4629      	mov	r1, r5
 80035b6:	f7fd fa8f 	bl	8000ad8 <__aeabi_dcmpeq>
 80035ba:	b918      	cbnz	r0, 80035c4 <__cvt+0x8c>
 80035bc:	f1c6 0601 	rsb	r6, r6, #1
 80035c0:	f8ca 6000 	str.w	r6, [sl]
 80035c4:	f8da 3000 	ldr.w	r3, [sl]
 80035c8:	4499      	add	r9, r3
 80035ca:	2200      	movs	r2, #0
 80035cc:	2300      	movs	r3, #0
 80035ce:	4620      	mov	r0, r4
 80035d0:	4629      	mov	r1, r5
 80035d2:	f7fd fa81 	bl	8000ad8 <__aeabi_dcmpeq>
 80035d6:	b108      	cbz	r0, 80035dc <__cvt+0xa4>
 80035d8:	f8cd 900c 	str.w	r9, [sp, #12]
 80035dc:	2230      	movs	r2, #48	; 0x30
 80035de:	9b03      	ldr	r3, [sp, #12]
 80035e0:	454b      	cmp	r3, r9
 80035e2:	d307      	bcc.n	80035f4 <__cvt+0xbc>
 80035e4:	9b03      	ldr	r3, [sp, #12]
 80035e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80035e8:	1bdb      	subs	r3, r3, r7
 80035ea:	4638      	mov	r0, r7
 80035ec:	6013      	str	r3, [r2, #0]
 80035ee:	b004      	add	sp, #16
 80035f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80035f4:	1c59      	adds	r1, r3, #1
 80035f6:	9103      	str	r1, [sp, #12]
 80035f8:	701a      	strb	r2, [r3, #0]
 80035fa:	e7f0      	b.n	80035de <__cvt+0xa6>

080035fc <__exponent>:
 80035fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80035fe:	4603      	mov	r3, r0
 8003600:	2900      	cmp	r1, #0
 8003602:	bfb8      	it	lt
 8003604:	4249      	neglt	r1, r1
 8003606:	f803 2b02 	strb.w	r2, [r3], #2
 800360a:	bfb4      	ite	lt
 800360c:	222d      	movlt	r2, #45	; 0x2d
 800360e:	222b      	movge	r2, #43	; 0x2b
 8003610:	2909      	cmp	r1, #9
 8003612:	7042      	strb	r2, [r0, #1]
 8003614:	dd2a      	ble.n	800366c <__exponent+0x70>
 8003616:	f10d 0407 	add.w	r4, sp, #7
 800361a:	46a4      	mov	ip, r4
 800361c:	270a      	movs	r7, #10
 800361e:	46a6      	mov	lr, r4
 8003620:	460a      	mov	r2, r1
 8003622:	fb91 f6f7 	sdiv	r6, r1, r7
 8003626:	fb07 1516 	mls	r5, r7, r6, r1
 800362a:	3530      	adds	r5, #48	; 0x30
 800362c:	2a63      	cmp	r2, #99	; 0x63
 800362e:	f104 34ff 	add.w	r4, r4, #4294967295
 8003632:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8003636:	4631      	mov	r1, r6
 8003638:	dcf1      	bgt.n	800361e <__exponent+0x22>
 800363a:	3130      	adds	r1, #48	; 0x30
 800363c:	f1ae 0502 	sub.w	r5, lr, #2
 8003640:	f804 1c01 	strb.w	r1, [r4, #-1]
 8003644:	1c44      	adds	r4, r0, #1
 8003646:	4629      	mov	r1, r5
 8003648:	4561      	cmp	r1, ip
 800364a:	d30a      	bcc.n	8003662 <__exponent+0x66>
 800364c:	f10d 0209 	add.w	r2, sp, #9
 8003650:	eba2 020e 	sub.w	r2, r2, lr
 8003654:	4565      	cmp	r5, ip
 8003656:	bf88      	it	hi
 8003658:	2200      	movhi	r2, #0
 800365a:	4413      	add	r3, r2
 800365c:	1a18      	subs	r0, r3, r0
 800365e:	b003      	add	sp, #12
 8003660:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003662:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003666:	f804 2f01 	strb.w	r2, [r4, #1]!
 800366a:	e7ed      	b.n	8003648 <__exponent+0x4c>
 800366c:	2330      	movs	r3, #48	; 0x30
 800366e:	3130      	adds	r1, #48	; 0x30
 8003670:	7083      	strb	r3, [r0, #2]
 8003672:	70c1      	strb	r1, [r0, #3]
 8003674:	1d03      	adds	r3, r0, #4
 8003676:	e7f1      	b.n	800365c <__exponent+0x60>

08003678 <_printf_float>:
 8003678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800367c:	ed2d 8b02 	vpush	{d8}
 8003680:	b08d      	sub	sp, #52	; 0x34
 8003682:	460c      	mov	r4, r1
 8003684:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8003688:	4616      	mov	r6, r2
 800368a:	461f      	mov	r7, r3
 800368c:	4605      	mov	r5, r0
 800368e:	f002 fe89 	bl	80063a4 <_localeconv_r>
 8003692:	f8d0 a000 	ldr.w	sl, [r0]
 8003696:	4650      	mov	r0, sl
 8003698:	f7fc fda2 	bl	80001e0 <strlen>
 800369c:	2300      	movs	r3, #0
 800369e:	930a      	str	r3, [sp, #40]	; 0x28
 80036a0:	6823      	ldr	r3, [r4, #0]
 80036a2:	9305      	str	r3, [sp, #20]
 80036a4:	f8d8 3000 	ldr.w	r3, [r8]
 80036a8:	f894 b018 	ldrb.w	fp, [r4, #24]
 80036ac:	3307      	adds	r3, #7
 80036ae:	f023 0307 	bic.w	r3, r3, #7
 80036b2:	f103 0208 	add.w	r2, r3, #8
 80036b6:	f8c8 2000 	str.w	r2, [r8]
 80036ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036be:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80036c2:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 80036c6:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80036ca:	9307      	str	r3, [sp, #28]
 80036cc:	f8cd 8018 	str.w	r8, [sp, #24]
 80036d0:	ee08 0a10 	vmov	s16, r0
 80036d4:	4b9f      	ldr	r3, [pc, #636]	; (8003954 <_printf_float+0x2dc>)
 80036d6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80036da:	f04f 32ff 	mov.w	r2, #4294967295
 80036de:	f7fd fa2d 	bl	8000b3c <__aeabi_dcmpun>
 80036e2:	bb88      	cbnz	r0, 8003748 <_printf_float+0xd0>
 80036e4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80036e8:	4b9a      	ldr	r3, [pc, #616]	; (8003954 <_printf_float+0x2dc>)
 80036ea:	f04f 32ff 	mov.w	r2, #4294967295
 80036ee:	f7fd fa07 	bl	8000b00 <__aeabi_dcmple>
 80036f2:	bb48      	cbnz	r0, 8003748 <_printf_float+0xd0>
 80036f4:	2200      	movs	r2, #0
 80036f6:	2300      	movs	r3, #0
 80036f8:	4640      	mov	r0, r8
 80036fa:	4649      	mov	r1, r9
 80036fc:	f7fd f9f6 	bl	8000aec <__aeabi_dcmplt>
 8003700:	b110      	cbz	r0, 8003708 <_printf_float+0x90>
 8003702:	232d      	movs	r3, #45	; 0x2d
 8003704:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003708:	4b93      	ldr	r3, [pc, #588]	; (8003958 <_printf_float+0x2e0>)
 800370a:	4894      	ldr	r0, [pc, #592]	; (800395c <_printf_float+0x2e4>)
 800370c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8003710:	bf94      	ite	ls
 8003712:	4698      	movls	r8, r3
 8003714:	4680      	movhi	r8, r0
 8003716:	2303      	movs	r3, #3
 8003718:	6123      	str	r3, [r4, #16]
 800371a:	9b05      	ldr	r3, [sp, #20]
 800371c:	f023 0204 	bic.w	r2, r3, #4
 8003720:	6022      	str	r2, [r4, #0]
 8003722:	f04f 0900 	mov.w	r9, #0
 8003726:	9700      	str	r7, [sp, #0]
 8003728:	4633      	mov	r3, r6
 800372a:	aa0b      	add	r2, sp, #44	; 0x2c
 800372c:	4621      	mov	r1, r4
 800372e:	4628      	mov	r0, r5
 8003730:	f000 f9d8 	bl	8003ae4 <_printf_common>
 8003734:	3001      	adds	r0, #1
 8003736:	f040 8090 	bne.w	800385a <_printf_float+0x1e2>
 800373a:	f04f 30ff 	mov.w	r0, #4294967295
 800373e:	b00d      	add	sp, #52	; 0x34
 8003740:	ecbd 8b02 	vpop	{d8}
 8003744:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003748:	4642      	mov	r2, r8
 800374a:	464b      	mov	r3, r9
 800374c:	4640      	mov	r0, r8
 800374e:	4649      	mov	r1, r9
 8003750:	f7fd f9f4 	bl	8000b3c <__aeabi_dcmpun>
 8003754:	b140      	cbz	r0, 8003768 <_printf_float+0xf0>
 8003756:	464b      	mov	r3, r9
 8003758:	2b00      	cmp	r3, #0
 800375a:	bfbc      	itt	lt
 800375c:	232d      	movlt	r3, #45	; 0x2d
 800375e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8003762:	487f      	ldr	r0, [pc, #508]	; (8003960 <_printf_float+0x2e8>)
 8003764:	4b7f      	ldr	r3, [pc, #508]	; (8003964 <_printf_float+0x2ec>)
 8003766:	e7d1      	b.n	800370c <_printf_float+0x94>
 8003768:	6863      	ldr	r3, [r4, #4]
 800376a:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800376e:	9206      	str	r2, [sp, #24]
 8003770:	1c5a      	adds	r2, r3, #1
 8003772:	d13f      	bne.n	80037f4 <_printf_float+0x17c>
 8003774:	2306      	movs	r3, #6
 8003776:	6063      	str	r3, [r4, #4]
 8003778:	9b05      	ldr	r3, [sp, #20]
 800377a:	6861      	ldr	r1, [r4, #4]
 800377c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8003780:	2300      	movs	r3, #0
 8003782:	9303      	str	r3, [sp, #12]
 8003784:	ab0a      	add	r3, sp, #40	; 0x28
 8003786:	e9cd b301 	strd	fp, r3, [sp, #4]
 800378a:	ab09      	add	r3, sp, #36	; 0x24
 800378c:	ec49 8b10 	vmov	d0, r8, r9
 8003790:	9300      	str	r3, [sp, #0]
 8003792:	6022      	str	r2, [r4, #0]
 8003794:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8003798:	4628      	mov	r0, r5
 800379a:	f7ff fecd 	bl	8003538 <__cvt>
 800379e:	9b06      	ldr	r3, [sp, #24]
 80037a0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80037a2:	2b47      	cmp	r3, #71	; 0x47
 80037a4:	4680      	mov	r8, r0
 80037a6:	d108      	bne.n	80037ba <_printf_float+0x142>
 80037a8:	1cc8      	adds	r0, r1, #3
 80037aa:	db02      	blt.n	80037b2 <_printf_float+0x13a>
 80037ac:	6863      	ldr	r3, [r4, #4]
 80037ae:	4299      	cmp	r1, r3
 80037b0:	dd41      	ble.n	8003836 <_printf_float+0x1be>
 80037b2:	f1ab 0b02 	sub.w	fp, fp, #2
 80037b6:	fa5f fb8b 	uxtb.w	fp, fp
 80037ba:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80037be:	d820      	bhi.n	8003802 <_printf_float+0x18a>
 80037c0:	3901      	subs	r1, #1
 80037c2:	465a      	mov	r2, fp
 80037c4:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80037c8:	9109      	str	r1, [sp, #36]	; 0x24
 80037ca:	f7ff ff17 	bl	80035fc <__exponent>
 80037ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80037d0:	1813      	adds	r3, r2, r0
 80037d2:	2a01      	cmp	r2, #1
 80037d4:	4681      	mov	r9, r0
 80037d6:	6123      	str	r3, [r4, #16]
 80037d8:	dc02      	bgt.n	80037e0 <_printf_float+0x168>
 80037da:	6822      	ldr	r2, [r4, #0]
 80037dc:	07d2      	lsls	r2, r2, #31
 80037de:	d501      	bpl.n	80037e4 <_printf_float+0x16c>
 80037e0:	3301      	adds	r3, #1
 80037e2:	6123      	str	r3, [r4, #16]
 80037e4:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	d09c      	beq.n	8003726 <_printf_float+0xae>
 80037ec:	232d      	movs	r3, #45	; 0x2d
 80037ee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80037f2:	e798      	b.n	8003726 <_printf_float+0xae>
 80037f4:	9a06      	ldr	r2, [sp, #24]
 80037f6:	2a47      	cmp	r2, #71	; 0x47
 80037f8:	d1be      	bne.n	8003778 <_printf_float+0x100>
 80037fa:	2b00      	cmp	r3, #0
 80037fc:	d1bc      	bne.n	8003778 <_printf_float+0x100>
 80037fe:	2301      	movs	r3, #1
 8003800:	e7b9      	b.n	8003776 <_printf_float+0xfe>
 8003802:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8003806:	d118      	bne.n	800383a <_printf_float+0x1c2>
 8003808:	2900      	cmp	r1, #0
 800380a:	6863      	ldr	r3, [r4, #4]
 800380c:	dd0b      	ble.n	8003826 <_printf_float+0x1ae>
 800380e:	6121      	str	r1, [r4, #16]
 8003810:	b913      	cbnz	r3, 8003818 <_printf_float+0x1a0>
 8003812:	6822      	ldr	r2, [r4, #0]
 8003814:	07d0      	lsls	r0, r2, #31
 8003816:	d502      	bpl.n	800381e <_printf_float+0x1a6>
 8003818:	3301      	adds	r3, #1
 800381a:	440b      	add	r3, r1
 800381c:	6123      	str	r3, [r4, #16]
 800381e:	65a1      	str	r1, [r4, #88]	; 0x58
 8003820:	f04f 0900 	mov.w	r9, #0
 8003824:	e7de      	b.n	80037e4 <_printf_float+0x16c>
 8003826:	b913      	cbnz	r3, 800382e <_printf_float+0x1b6>
 8003828:	6822      	ldr	r2, [r4, #0]
 800382a:	07d2      	lsls	r2, r2, #31
 800382c:	d501      	bpl.n	8003832 <_printf_float+0x1ba>
 800382e:	3302      	adds	r3, #2
 8003830:	e7f4      	b.n	800381c <_printf_float+0x1a4>
 8003832:	2301      	movs	r3, #1
 8003834:	e7f2      	b.n	800381c <_printf_float+0x1a4>
 8003836:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800383a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800383c:	4299      	cmp	r1, r3
 800383e:	db05      	blt.n	800384c <_printf_float+0x1d4>
 8003840:	6823      	ldr	r3, [r4, #0]
 8003842:	6121      	str	r1, [r4, #16]
 8003844:	07d8      	lsls	r0, r3, #31
 8003846:	d5ea      	bpl.n	800381e <_printf_float+0x1a6>
 8003848:	1c4b      	adds	r3, r1, #1
 800384a:	e7e7      	b.n	800381c <_printf_float+0x1a4>
 800384c:	2900      	cmp	r1, #0
 800384e:	bfd4      	ite	le
 8003850:	f1c1 0202 	rsble	r2, r1, #2
 8003854:	2201      	movgt	r2, #1
 8003856:	4413      	add	r3, r2
 8003858:	e7e0      	b.n	800381c <_printf_float+0x1a4>
 800385a:	6823      	ldr	r3, [r4, #0]
 800385c:	055a      	lsls	r2, r3, #21
 800385e:	d407      	bmi.n	8003870 <_printf_float+0x1f8>
 8003860:	6923      	ldr	r3, [r4, #16]
 8003862:	4642      	mov	r2, r8
 8003864:	4631      	mov	r1, r6
 8003866:	4628      	mov	r0, r5
 8003868:	47b8      	blx	r7
 800386a:	3001      	adds	r0, #1
 800386c:	d12c      	bne.n	80038c8 <_printf_float+0x250>
 800386e:	e764      	b.n	800373a <_printf_float+0xc2>
 8003870:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8003874:	f240 80e0 	bls.w	8003a38 <_printf_float+0x3c0>
 8003878:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800387c:	2200      	movs	r2, #0
 800387e:	2300      	movs	r3, #0
 8003880:	f7fd f92a 	bl	8000ad8 <__aeabi_dcmpeq>
 8003884:	2800      	cmp	r0, #0
 8003886:	d034      	beq.n	80038f2 <_printf_float+0x27a>
 8003888:	4a37      	ldr	r2, [pc, #220]	; (8003968 <_printf_float+0x2f0>)
 800388a:	2301      	movs	r3, #1
 800388c:	4631      	mov	r1, r6
 800388e:	4628      	mov	r0, r5
 8003890:	47b8      	blx	r7
 8003892:	3001      	adds	r0, #1
 8003894:	f43f af51 	beq.w	800373a <_printf_float+0xc2>
 8003898:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800389c:	429a      	cmp	r2, r3
 800389e:	db02      	blt.n	80038a6 <_printf_float+0x22e>
 80038a0:	6823      	ldr	r3, [r4, #0]
 80038a2:	07d8      	lsls	r0, r3, #31
 80038a4:	d510      	bpl.n	80038c8 <_printf_float+0x250>
 80038a6:	ee18 3a10 	vmov	r3, s16
 80038aa:	4652      	mov	r2, sl
 80038ac:	4631      	mov	r1, r6
 80038ae:	4628      	mov	r0, r5
 80038b0:	47b8      	blx	r7
 80038b2:	3001      	adds	r0, #1
 80038b4:	f43f af41 	beq.w	800373a <_printf_float+0xc2>
 80038b8:	f04f 0800 	mov.w	r8, #0
 80038bc:	f104 091a 	add.w	r9, r4, #26
 80038c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80038c2:	3b01      	subs	r3, #1
 80038c4:	4543      	cmp	r3, r8
 80038c6:	dc09      	bgt.n	80038dc <_printf_float+0x264>
 80038c8:	6823      	ldr	r3, [r4, #0]
 80038ca:	079b      	lsls	r3, r3, #30
 80038cc:	f100 8105 	bmi.w	8003ada <_printf_float+0x462>
 80038d0:	68e0      	ldr	r0, [r4, #12]
 80038d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80038d4:	4298      	cmp	r0, r3
 80038d6:	bfb8      	it	lt
 80038d8:	4618      	movlt	r0, r3
 80038da:	e730      	b.n	800373e <_printf_float+0xc6>
 80038dc:	2301      	movs	r3, #1
 80038de:	464a      	mov	r2, r9
 80038e0:	4631      	mov	r1, r6
 80038e2:	4628      	mov	r0, r5
 80038e4:	47b8      	blx	r7
 80038e6:	3001      	adds	r0, #1
 80038e8:	f43f af27 	beq.w	800373a <_printf_float+0xc2>
 80038ec:	f108 0801 	add.w	r8, r8, #1
 80038f0:	e7e6      	b.n	80038c0 <_printf_float+0x248>
 80038f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	dc39      	bgt.n	800396c <_printf_float+0x2f4>
 80038f8:	4a1b      	ldr	r2, [pc, #108]	; (8003968 <_printf_float+0x2f0>)
 80038fa:	2301      	movs	r3, #1
 80038fc:	4631      	mov	r1, r6
 80038fe:	4628      	mov	r0, r5
 8003900:	47b8      	blx	r7
 8003902:	3001      	adds	r0, #1
 8003904:	f43f af19 	beq.w	800373a <_printf_float+0xc2>
 8003908:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800390c:	4313      	orrs	r3, r2
 800390e:	d102      	bne.n	8003916 <_printf_float+0x29e>
 8003910:	6823      	ldr	r3, [r4, #0]
 8003912:	07d9      	lsls	r1, r3, #31
 8003914:	d5d8      	bpl.n	80038c8 <_printf_float+0x250>
 8003916:	ee18 3a10 	vmov	r3, s16
 800391a:	4652      	mov	r2, sl
 800391c:	4631      	mov	r1, r6
 800391e:	4628      	mov	r0, r5
 8003920:	47b8      	blx	r7
 8003922:	3001      	adds	r0, #1
 8003924:	f43f af09 	beq.w	800373a <_printf_float+0xc2>
 8003928:	f04f 0900 	mov.w	r9, #0
 800392c:	f104 0a1a 	add.w	sl, r4, #26
 8003930:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003932:	425b      	negs	r3, r3
 8003934:	454b      	cmp	r3, r9
 8003936:	dc01      	bgt.n	800393c <_printf_float+0x2c4>
 8003938:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800393a:	e792      	b.n	8003862 <_printf_float+0x1ea>
 800393c:	2301      	movs	r3, #1
 800393e:	4652      	mov	r2, sl
 8003940:	4631      	mov	r1, r6
 8003942:	4628      	mov	r0, r5
 8003944:	47b8      	blx	r7
 8003946:	3001      	adds	r0, #1
 8003948:	f43f aef7 	beq.w	800373a <_printf_float+0xc2>
 800394c:	f109 0901 	add.w	r9, r9, #1
 8003950:	e7ee      	b.n	8003930 <_printf_float+0x2b8>
 8003952:	bf00      	nop
 8003954:	7fefffff 	.word	0x7fefffff
 8003958:	08008b9c 	.word	0x08008b9c
 800395c:	08008ba0 	.word	0x08008ba0
 8003960:	08008ba8 	.word	0x08008ba8
 8003964:	08008ba4 	.word	0x08008ba4
 8003968:	08008bac 	.word	0x08008bac
 800396c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800396e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003970:	429a      	cmp	r2, r3
 8003972:	bfa8      	it	ge
 8003974:	461a      	movge	r2, r3
 8003976:	2a00      	cmp	r2, #0
 8003978:	4691      	mov	r9, r2
 800397a:	dc37      	bgt.n	80039ec <_printf_float+0x374>
 800397c:	f04f 0b00 	mov.w	fp, #0
 8003980:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003984:	f104 021a 	add.w	r2, r4, #26
 8003988:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800398a:	9305      	str	r3, [sp, #20]
 800398c:	eba3 0309 	sub.w	r3, r3, r9
 8003990:	455b      	cmp	r3, fp
 8003992:	dc33      	bgt.n	80039fc <_printf_float+0x384>
 8003994:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003998:	429a      	cmp	r2, r3
 800399a:	db3b      	blt.n	8003a14 <_printf_float+0x39c>
 800399c:	6823      	ldr	r3, [r4, #0]
 800399e:	07da      	lsls	r2, r3, #31
 80039a0:	d438      	bmi.n	8003a14 <_printf_float+0x39c>
 80039a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80039a4:	9a05      	ldr	r2, [sp, #20]
 80039a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80039a8:	1a9a      	subs	r2, r3, r2
 80039aa:	eba3 0901 	sub.w	r9, r3, r1
 80039ae:	4591      	cmp	r9, r2
 80039b0:	bfa8      	it	ge
 80039b2:	4691      	movge	r9, r2
 80039b4:	f1b9 0f00 	cmp.w	r9, #0
 80039b8:	dc35      	bgt.n	8003a26 <_printf_float+0x3ae>
 80039ba:	f04f 0800 	mov.w	r8, #0
 80039be:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80039c2:	f104 0a1a 	add.w	sl, r4, #26
 80039c6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80039ca:	1a9b      	subs	r3, r3, r2
 80039cc:	eba3 0309 	sub.w	r3, r3, r9
 80039d0:	4543      	cmp	r3, r8
 80039d2:	f77f af79 	ble.w	80038c8 <_printf_float+0x250>
 80039d6:	2301      	movs	r3, #1
 80039d8:	4652      	mov	r2, sl
 80039da:	4631      	mov	r1, r6
 80039dc:	4628      	mov	r0, r5
 80039de:	47b8      	blx	r7
 80039e0:	3001      	adds	r0, #1
 80039e2:	f43f aeaa 	beq.w	800373a <_printf_float+0xc2>
 80039e6:	f108 0801 	add.w	r8, r8, #1
 80039ea:	e7ec      	b.n	80039c6 <_printf_float+0x34e>
 80039ec:	4613      	mov	r3, r2
 80039ee:	4631      	mov	r1, r6
 80039f0:	4642      	mov	r2, r8
 80039f2:	4628      	mov	r0, r5
 80039f4:	47b8      	blx	r7
 80039f6:	3001      	adds	r0, #1
 80039f8:	d1c0      	bne.n	800397c <_printf_float+0x304>
 80039fa:	e69e      	b.n	800373a <_printf_float+0xc2>
 80039fc:	2301      	movs	r3, #1
 80039fe:	4631      	mov	r1, r6
 8003a00:	4628      	mov	r0, r5
 8003a02:	9205      	str	r2, [sp, #20]
 8003a04:	47b8      	blx	r7
 8003a06:	3001      	adds	r0, #1
 8003a08:	f43f ae97 	beq.w	800373a <_printf_float+0xc2>
 8003a0c:	9a05      	ldr	r2, [sp, #20]
 8003a0e:	f10b 0b01 	add.w	fp, fp, #1
 8003a12:	e7b9      	b.n	8003988 <_printf_float+0x310>
 8003a14:	ee18 3a10 	vmov	r3, s16
 8003a18:	4652      	mov	r2, sl
 8003a1a:	4631      	mov	r1, r6
 8003a1c:	4628      	mov	r0, r5
 8003a1e:	47b8      	blx	r7
 8003a20:	3001      	adds	r0, #1
 8003a22:	d1be      	bne.n	80039a2 <_printf_float+0x32a>
 8003a24:	e689      	b.n	800373a <_printf_float+0xc2>
 8003a26:	9a05      	ldr	r2, [sp, #20]
 8003a28:	464b      	mov	r3, r9
 8003a2a:	4442      	add	r2, r8
 8003a2c:	4631      	mov	r1, r6
 8003a2e:	4628      	mov	r0, r5
 8003a30:	47b8      	blx	r7
 8003a32:	3001      	adds	r0, #1
 8003a34:	d1c1      	bne.n	80039ba <_printf_float+0x342>
 8003a36:	e680      	b.n	800373a <_printf_float+0xc2>
 8003a38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003a3a:	2a01      	cmp	r2, #1
 8003a3c:	dc01      	bgt.n	8003a42 <_printf_float+0x3ca>
 8003a3e:	07db      	lsls	r3, r3, #31
 8003a40:	d538      	bpl.n	8003ab4 <_printf_float+0x43c>
 8003a42:	2301      	movs	r3, #1
 8003a44:	4642      	mov	r2, r8
 8003a46:	4631      	mov	r1, r6
 8003a48:	4628      	mov	r0, r5
 8003a4a:	47b8      	blx	r7
 8003a4c:	3001      	adds	r0, #1
 8003a4e:	f43f ae74 	beq.w	800373a <_printf_float+0xc2>
 8003a52:	ee18 3a10 	vmov	r3, s16
 8003a56:	4652      	mov	r2, sl
 8003a58:	4631      	mov	r1, r6
 8003a5a:	4628      	mov	r0, r5
 8003a5c:	47b8      	blx	r7
 8003a5e:	3001      	adds	r0, #1
 8003a60:	f43f ae6b 	beq.w	800373a <_printf_float+0xc2>
 8003a64:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003a68:	2200      	movs	r2, #0
 8003a6a:	2300      	movs	r3, #0
 8003a6c:	f7fd f834 	bl	8000ad8 <__aeabi_dcmpeq>
 8003a70:	b9d8      	cbnz	r0, 8003aaa <_printf_float+0x432>
 8003a72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003a74:	f108 0201 	add.w	r2, r8, #1
 8003a78:	3b01      	subs	r3, #1
 8003a7a:	4631      	mov	r1, r6
 8003a7c:	4628      	mov	r0, r5
 8003a7e:	47b8      	blx	r7
 8003a80:	3001      	adds	r0, #1
 8003a82:	d10e      	bne.n	8003aa2 <_printf_float+0x42a>
 8003a84:	e659      	b.n	800373a <_printf_float+0xc2>
 8003a86:	2301      	movs	r3, #1
 8003a88:	4652      	mov	r2, sl
 8003a8a:	4631      	mov	r1, r6
 8003a8c:	4628      	mov	r0, r5
 8003a8e:	47b8      	blx	r7
 8003a90:	3001      	adds	r0, #1
 8003a92:	f43f ae52 	beq.w	800373a <_printf_float+0xc2>
 8003a96:	f108 0801 	add.w	r8, r8, #1
 8003a9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003a9c:	3b01      	subs	r3, #1
 8003a9e:	4543      	cmp	r3, r8
 8003aa0:	dcf1      	bgt.n	8003a86 <_printf_float+0x40e>
 8003aa2:	464b      	mov	r3, r9
 8003aa4:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8003aa8:	e6dc      	b.n	8003864 <_printf_float+0x1ec>
 8003aaa:	f04f 0800 	mov.w	r8, #0
 8003aae:	f104 0a1a 	add.w	sl, r4, #26
 8003ab2:	e7f2      	b.n	8003a9a <_printf_float+0x422>
 8003ab4:	2301      	movs	r3, #1
 8003ab6:	4642      	mov	r2, r8
 8003ab8:	e7df      	b.n	8003a7a <_printf_float+0x402>
 8003aba:	2301      	movs	r3, #1
 8003abc:	464a      	mov	r2, r9
 8003abe:	4631      	mov	r1, r6
 8003ac0:	4628      	mov	r0, r5
 8003ac2:	47b8      	blx	r7
 8003ac4:	3001      	adds	r0, #1
 8003ac6:	f43f ae38 	beq.w	800373a <_printf_float+0xc2>
 8003aca:	f108 0801 	add.w	r8, r8, #1
 8003ace:	68e3      	ldr	r3, [r4, #12]
 8003ad0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003ad2:	1a5b      	subs	r3, r3, r1
 8003ad4:	4543      	cmp	r3, r8
 8003ad6:	dcf0      	bgt.n	8003aba <_printf_float+0x442>
 8003ad8:	e6fa      	b.n	80038d0 <_printf_float+0x258>
 8003ada:	f04f 0800 	mov.w	r8, #0
 8003ade:	f104 0919 	add.w	r9, r4, #25
 8003ae2:	e7f4      	b.n	8003ace <_printf_float+0x456>

08003ae4 <_printf_common>:
 8003ae4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ae8:	4616      	mov	r6, r2
 8003aea:	4699      	mov	r9, r3
 8003aec:	688a      	ldr	r2, [r1, #8]
 8003aee:	690b      	ldr	r3, [r1, #16]
 8003af0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003af4:	4293      	cmp	r3, r2
 8003af6:	bfb8      	it	lt
 8003af8:	4613      	movlt	r3, r2
 8003afa:	6033      	str	r3, [r6, #0]
 8003afc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003b00:	4607      	mov	r7, r0
 8003b02:	460c      	mov	r4, r1
 8003b04:	b10a      	cbz	r2, 8003b0a <_printf_common+0x26>
 8003b06:	3301      	adds	r3, #1
 8003b08:	6033      	str	r3, [r6, #0]
 8003b0a:	6823      	ldr	r3, [r4, #0]
 8003b0c:	0699      	lsls	r1, r3, #26
 8003b0e:	bf42      	ittt	mi
 8003b10:	6833      	ldrmi	r3, [r6, #0]
 8003b12:	3302      	addmi	r3, #2
 8003b14:	6033      	strmi	r3, [r6, #0]
 8003b16:	6825      	ldr	r5, [r4, #0]
 8003b18:	f015 0506 	ands.w	r5, r5, #6
 8003b1c:	d106      	bne.n	8003b2c <_printf_common+0x48>
 8003b1e:	f104 0a19 	add.w	sl, r4, #25
 8003b22:	68e3      	ldr	r3, [r4, #12]
 8003b24:	6832      	ldr	r2, [r6, #0]
 8003b26:	1a9b      	subs	r3, r3, r2
 8003b28:	42ab      	cmp	r3, r5
 8003b2a:	dc26      	bgt.n	8003b7a <_printf_common+0x96>
 8003b2c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003b30:	1e13      	subs	r3, r2, #0
 8003b32:	6822      	ldr	r2, [r4, #0]
 8003b34:	bf18      	it	ne
 8003b36:	2301      	movne	r3, #1
 8003b38:	0692      	lsls	r2, r2, #26
 8003b3a:	d42b      	bmi.n	8003b94 <_printf_common+0xb0>
 8003b3c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003b40:	4649      	mov	r1, r9
 8003b42:	4638      	mov	r0, r7
 8003b44:	47c0      	blx	r8
 8003b46:	3001      	adds	r0, #1
 8003b48:	d01e      	beq.n	8003b88 <_printf_common+0xa4>
 8003b4a:	6823      	ldr	r3, [r4, #0]
 8003b4c:	68e5      	ldr	r5, [r4, #12]
 8003b4e:	6832      	ldr	r2, [r6, #0]
 8003b50:	f003 0306 	and.w	r3, r3, #6
 8003b54:	2b04      	cmp	r3, #4
 8003b56:	bf08      	it	eq
 8003b58:	1aad      	subeq	r5, r5, r2
 8003b5a:	68a3      	ldr	r3, [r4, #8]
 8003b5c:	6922      	ldr	r2, [r4, #16]
 8003b5e:	bf0c      	ite	eq
 8003b60:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003b64:	2500      	movne	r5, #0
 8003b66:	4293      	cmp	r3, r2
 8003b68:	bfc4      	itt	gt
 8003b6a:	1a9b      	subgt	r3, r3, r2
 8003b6c:	18ed      	addgt	r5, r5, r3
 8003b6e:	2600      	movs	r6, #0
 8003b70:	341a      	adds	r4, #26
 8003b72:	42b5      	cmp	r5, r6
 8003b74:	d11a      	bne.n	8003bac <_printf_common+0xc8>
 8003b76:	2000      	movs	r0, #0
 8003b78:	e008      	b.n	8003b8c <_printf_common+0xa8>
 8003b7a:	2301      	movs	r3, #1
 8003b7c:	4652      	mov	r2, sl
 8003b7e:	4649      	mov	r1, r9
 8003b80:	4638      	mov	r0, r7
 8003b82:	47c0      	blx	r8
 8003b84:	3001      	adds	r0, #1
 8003b86:	d103      	bne.n	8003b90 <_printf_common+0xac>
 8003b88:	f04f 30ff 	mov.w	r0, #4294967295
 8003b8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003b90:	3501      	adds	r5, #1
 8003b92:	e7c6      	b.n	8003b22 <_printf_common+0x3e>
 8003b94:	18e1      	adds	r1, r4, r3
 8003b96:	1c5a      	adds	r2, r3, #1
 8003b98:	2030      	movs	r0, #48	; 0x30
 8003b9a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003b9e:	4422      	add	r2, r4
 8003ba0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003ba4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003ba8:	3302      	adds	r3, #2
 8003baa:	e7c7      	b.n	8003b3c <_printf_common+0x58>
 8003bac:	2301      	movs	r3, #1
 8003bae:	4622      	mov	r2, r4
 8003bb0:	4649      	mov	r1, r9
 8003bb2:	4638      	mov	r0, r7
 8003bb4:	47c0      	blx	r8
 8003bb6:	3001      	adds	r0, #1
 8003bb8:	d0e6      	beq.n	8003b88 <_printf_common+0xa4>
 8003bba:	3601      	adds	r6, #1
 8003bbc:	e7d9      	b.n	8003b72 <_printf_common+0x8e>
	...

08003bc0 <_printf_i>:
 8003bc0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003bc4:	7e0f      	ldrb	r7, [r1, #24]
 8003bc6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003bc8:	2f78      	cmp	r7, #120	; 0x78
 8003bca:	4691      	mov	r9, r2
 8003bcc:	4680      	mov	r8, r0
 8003bce:	460c      	mov	r4, r1
 8003bd0:	469a      	mov	sl, r3
 8003bd2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003bd6:	d807      	bhi.n	8003be8 <_printf_i+0x28>
 8003bd8:	2f62      	cmp	r7, #98	; 0x62
 8003bda:	d80a      	bhi.n	8003bf2 <_printf_i+0x32>
 8003bdc:	2f00      	cmp	r7, #0
 8003bde:	f000 80d8 	beq.w	8003d92 <_printf_i+0x1d2>
 8003be2:	2f58      	cmp	r7, #88	; 0x58
 8003be4:	f000 80a3 	beq.w	8003d2e <_printf_i+0x16e>
 8003be8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003bec:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003bf0:	e03a      	b.n	8003c68 <_printf_i+0xa8>
 8003bf2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003bf6:	2b15      	cmp	r3, #21
 8003bf8:	d8f6      	bhi.n	8003be8 <_printf_i+0x28>
 8003bfa:	a101      	add	r1, pc, #4	; (adr r1, 8003c00 <_printf_i+0x40>)
 8003bfc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003c00:	08003c59 	.word	0x08003c59
 8003c04:	08003c6d 	.word	0x08003c6d
 8003c08:	08003be9 	.word	0x08003be9
 8003c0c:	08003be9 	.word	0x08003be9
 8003c10:	08003be9 	.word	0x08003be9
 8003c14:	08003be9 	.word	0x08003be9
 8003c18:	08003c6d 	.word	0x08003c6d
 8003c1c:	08003be9 	.word	0x08003be9
 8003c20:	08003be9 	.word	0x08003be9
 8003c24:	08003be9 	.word	0x08003be9
 8003c28:	08003be9 	.word	0x08003be9
 8003c2c:	08003d79 	.word	0x08003d79
 8003c30:	08003c9d 	.word	0x08003c9d
 8003c34:	08003d5b 	.word	0x08003d5b
 8003c38:	08003be9 	.word	0x08003be9
 8003c3c:	08003be9 	.word	0x08003be9
 8003c40:	08003d9b 	.word	0x08003d9b
 8003c44:	08003be9 	.word	0x08003be9
 8003c48:	08003c9d 	.word	0x08003c9d
 8003c4c:	08003be9 	.word	0x08003be9
 8003c50:	08003be9 	.word	0x08003be9
 8003c54:	08003d63 	.word	0x08003d63
 8003c58:	682b      	ldr	r3, [r5, #0]
 8003c5a:	1d1a      	adds	r2, r3, #4
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	602a      	str	r2, [r5, #0]
 8003c60:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003c64:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003c68:	2301      	movs	r3, #1
 8003c6a:	e0a3      	b.n	8003db4 <_printf_i+0x1f4>
 8003c6c:	6820      	ldr	r0, [r4, #0]
 8003c6e:	6829      	ldr	r1, [r5, #0]
 8003c70:	0606      	lsls	r6, r0, #24
 8003c72:	f101 0304 	add.w	r3, r1, #4
 8003c76:	d50a      	bpl.n	8003c8e <_printf_i+0xce>
 8003c78:	680e      	ldr	r6, [r1, #0]
 8003c7a:	602b      	str	r3, [r5, #0]
 8003c7c:	2e00      	cmp	r6, #0
 8003c7e:	da03      	bge.n	8003c88 <_printf_i+0xc8>
 8003c80:	232d      	movs	r3, #45	; 0x2d
 8003c82:	4276      	negs	r6, r6
 8003c84:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003c88:	485e      	ldr	r0, [pc, #376]	; (8003e04 <_printf_i+0x244>)
 8003c8a:	230a      	movs	r3, #10
 8003c8c:	e019      	b.n	8003cc2 <_printf_i+0x102>
 8003c8e:	680e      	ldr	r6, [r1, #0]
 8003c90:	602b      	str	r3, [r5, #0]
 8003c92:	f010 0f40 	tst.w	r0, #64	; 0x40
 8003c96:	bf18      	it	ne
 8003c98:	b236      	sxthne	r6, r6
 8003c9a:	e7ef      	b.n	8003c7c <_printf_i+0xbc>
 8003c9c:	682b      	ldr	r3, [r5, #0]
 8003c9e:	6820      	ldr	r0, [r4, #0]
 8003ca0:	1d19      	adds	r1, r3, #4
 8003ca2:	6029      	str	r1, [r5, #0]
 8003ca4:	0601      	lsls	r1, r0, #24
 8003ca6:	d501      	bpl.n	8003cac <_printf_i+0xec>
 8003ca8:	681e      	ldr	r6, [r3, #0]
 8003caa:	e002      	b.n	8003cb2 <_printf_i+0xf2>
 8003cac:	0646      	lsls	r6, r0, #25
 8003cae:	d5fb      	bpl.n	8003ca8 <_printf_i+0xe8>
 8003cb0:	881e      	ldrh	r6, [r3, #0]
 8003cb2:	4854      	ldr	r0, [pc, #336]	; (8003e04 <_printf_i+0x244>)
 8003cb4:	2f6f      	cmp	r7, #111	; 0x6f
 8003cb6:	bf0c      	ite	eq
 8003cb8:	2308      	moveq	r3, #8
 8003cba:	230a      	movne	r3, #10
 8003cbc:	2100      	movs	r1, #0
 8003cbe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003cc2:	6865      	ldr	r5, [r4, #4]
 8003cc4:	60a5      	str	r5, [r4, #8]
 8003cc6:	2d00      	cmp	r5, #0
 8003cc8:	bfa2      	ittt	ge
 8003cca:	6821      	ldrge	r1, [r4, #0]
 8003ccc:	f021 0104 	bicge.w	r1, r1, #4
 8003cd0:	6021      	strge	r1, [r4, #0]
 8003cd2:	b90e      	cbnz	r6, 8003cd8 <_printf_i+0x118>
 8003cd4:	2d00      	cmp	r5, #0
 8003cd6:	d04d      	beq.n	8003d74 <_printf_i+0x1b4>
 8003cd8:	4615      	mov	r5, r2
 8003cda:	fbb6 f1f3 	udiv	r1, r6, r3
 8003cde:	fb03 6711 	mls	r7, r3, r1, r6
 8003ce2:	5dc7      	ldrb	r7, [r0, r7]
 8003ce4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003ce8:	4637      	mov	r7, r6
 8003cea:	42bb      	cmp	r3, r7
 8003cec:	460e      	mov	r6, r1
 8003cee:	d9f4      	bls.n	8003cda <_printf_i+0x11a>
 8003cf0:	2b08      	cmp	r3, #8
 8003cf2:	d10b      	bne.n	8003d0c <_printf_i+0x14c>
 8003cf4:	6823      	ldr	r3, [r4, #0]
 8003cf6:	07de      	lsls	r6, r3, #31
 8003cf8:	d508      	bpl.n	8003d0c <_printf_i+0x14c>
 8003cfa:	6923      	ldr	r3, [r4, #16]
 8003cfc:	6861      	ldr	r1, [r4, #4]
 8003cfe:	4299      	cmp	r1, r3
 8003d00:	bfde      	ittt	le
 8003d02:	2330      	movle	r3, #48	; 0x30
 8003d04:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003d08:	f105 35ff 	addle.w	r5, r5, #4294967295
 8003d0c:	1b52      	subs	r2, r2, r5
 8003d0e:	6122      	str	r2, [r4, #16]
 8003d10:	f8cd a000 	str.w	sl, [sp]
 8003d14:	464b      	mov	r3, r9
 8003d16:	aa03      	add	r2, sp, #12
 8003d18:	4621      	mov	r1, r4
 8003d1a:	4640      	mov	r0, r8
 8003d1c:	f7ff fee2 	bl	8003ae4 <_printf_common>
 8003d20:	3001      	adds	r0, #1
 8003d22:	d14c      	bne.n	8003dbe <_printf_i+0x1fe>
 8003d24:	f04f 30ff 	mov.w	r0, #4294967295
 8003d28:	b004      	add	sp, #16
 8003d2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d2e:	4835      	ldr	r0, [pc, #212]	; (8003e04 <_printf_i+0x244>)
 8003d30:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8003d34:	6829      	ldr	r1, [r5, #0]
 8003d36:	6823      	ldr	r3, [r4, #0]
 8003d38:	f851 6b04 	ldr.w	r6, [r1], #4
 8003d3c:	6029      	str	r1, [r5, #0]
 8003d3e:	061d      	lsls	r5, r3, #24
 8003d40:	d514      	bpl.n	8003d6c <_printf_i+0x1ac>
 8003d42:	07df      	lsls	r7, r3, #31
 8003d44:	bf44      	itt	mi
 8003d46:	f043 0320 	orrmi.w	r3, r3, #32
 8003d4a:	6023      	strmi	r3, [r4, #0]
 8003d4c:	b91e      	cbnz	r6, 8003d56 <_printf_i+0x196>
 8003d4e:	6823      	ldr	r3, [r4, #0]
 8003d50:	f023 0320 	bic.w	r3, r3, #32
 8003d54:	6023      	str	r3, [r4, #0]
 8003d56:	2310      	movs	r3, #16
 8003d58:	e7b0      	b.n	8003cbc <_printf_i+0xfc>
 8003d5a:	6823      	ldr	r3, [r4, #0]
 8003d5c:	f043 0320 	orr.w	r3, r3, #32
 8003d60:	6023      	str	r3, [r4, #0]
 8003d62:	2378      	movs	r3, #120	; 0x78
 8003d64:	4828      	ldr	r0, [pc, #160]	; (8003e08 <_printf_i+0x248>)
 8003d66:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003d6a:	e7e3      	b.n	8003d34 <_printf_i+0x174>
 8003d6c:	0659      	lsls	r1, r3, #25
 8003d6e:	bf48      	it	mi
 8003d70:	b2b6      	uxthmi	r6, r6
 8003d72:	e7e6      	b.n	8003d42 <_printf_i+0x182>
 8003d74:	4615      	mov	r5, r2
 8003d76:	e7bb      	b.n	8003cf0 <_printf_i+0x130>
 8003d78:	682b      	ldr	r3, [r5, #0]
 8003d7a:	6826      	ldr	r6, [r4, #0]
 8003d7c:	6961      	ldr	r1, [r4, #20]
 8003d7e:	1d18      	adds	r0, r3, #4
 8003d80:	6028      	str	r0, [r5, #0]
 8003d82:	0635      	lsls	r5, r6, #24
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	d501      	bpl.n	8003d8c <_printf_i+0x1cc>
 8003d88:	6019      	str	r1, [r3, #0]
 8003d8a:	e002      	b.n	8003d92 <_printf_i+0x1d2>
 8003d8c:	0670      	lsls	r0, r6, #25
 8003d8e:	d5fb      	bpl.n	8003d88 <_printf_i+0x1c8>
 8003d90:	8019      	strh	r1, [r3, #0]
 8003d92:	2300      	movs	r3, #0
 8003d94:	6123      	str	r3, [r4, #16]
 8003d96:	4615      	mov	r5, r2
 8003d98:	e7ba      	b.n	8003d10 <_printf_i+0x150>
 8003d9a:	682b      	ldr	r3, [r5, #0]
 8003d9c:	1d1a      	adds	r2, r3, #4
 8003d9e:	602a      	str	r2, [r5, #0]
 8003da0:	681d      	ldr	r5, [r3, #0]
 8003da2:	6862      	ldr	r2, [r4, #4]
 8003da4:	2100      	movs	r1, #0
 8003da6:	4628      	mov	r0, r5
 8003da8:	f7fc fa22 	bl	80001f0 <memchr>
 8003dac:	b108      	cbz	r0, 8003db2 <_printf_i+0x1f2>
 8003dae:	1b40      	subs	r0, r0, r5
 8003db0:	6060      	str	r0, [r4, #4]
 8003db2:	6863      	ldr	r3, [r4, #4]
 8003db4:	6123      	str	r3, [r4, #16]
 8003db6:	2300      	movs	r3, #0
 8003db8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003dbc:	e7a8      	b.n	8003d10 <_printf_i+0x150>
 8003dbe:	6923      	ldr	r3, [r4, #16]
 8003dc0:	462a      	mov	r2, r5
 8003dc2:	4649      	mov	r1, r9
 8003dc4:	4640      	mov	r0, r8
 8003dc6:	47d0      	blx	sl
 8003dc8:	3001      	adds	r0, #1
 8003dca:	d0ab      	beq.n	8003d24 <_printf_i+0x164>
 8003dcc:	6823      	ldr	r3, [r4, #0]
 8003dce:	079b      	lsls	r3, r3, #30
 8003dd0:	d413      	bmi.n	8003dfa <_printf_i+0x23a>
 8003dd2:	68e0      	ldr	r0, [r4, #12]
 8003dd4:	9b03      	ldr	r3, [sp, #12]
 8003dd6:	4298      	cmp	r0, r3
 8003dd8:	bfb8      	it	lt
 8003dda:	4618      	movlt	r0, r3
 8003ddc:	e7a4      	b.n	8003d28 <_printf_i+0x168>
 8003dde:	2301      	movs	r3, #1
 8003de0:	4632      	mov	r2, r6
 8003de2:	4649      	mov	r1, r9
 8003de4:	4640      	mov	r0, r8
 8003de6:	47d0      	blx	sl
 8003de8:	3001      	adds	r0, #1
 8003dea:	d09b      	beq.n	8003d24 <_printf_i+0x164>
 8003dec:	3501      	adds	r5, #1
 8003dee:	68e3      	ldr	r3, [r4, #12]
 8003df0:	9903      	ldr	r1, [sp, #12]
 8003df2:	1a5b      	subs	r3, r3, r1
 8003df4:	42ab      	cmp	r3, r5
 8003df6:	dcf2      	bgt.n	8003dde <_printf_i+0x21e>
 8003df8:	e7eb      	b.n	8003dd2 <_printf_i+0x212>
 8003dfa:	2500      	movs	r5, #0
 8003dfc:	f104 0619 	add.w	r6, r4, #25
 8003e00:	e7f5      	b.n	8003dee <_printf_i+0x22e>
 8003e02:	bf00      	nop
 8003e04:	08008bae 	.word	0x08008bae
 8003e08:	08008bbf 	.word	0x08008bbf

08003e0c <_scanf_float>:
 8003e0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e10:	b087      	sub	sp, #28
 8003e12:	4617      	mov	r7, r2
 8003e14:	9303      	str	r3, [sp, #12]
 8003e16:	688b      	ldr	r3, [r1, #8]
 8003e18:	1e5a      	subs	r2, r3, #1
 8003e1a:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8003e1e:	bf83      	ittte	hi
 8003e20:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8003e24:	195b      	addhi	r3, r3, r5
 8003e26:	9302      	strhi	r3, [sp, #8]
 8003e28:	2300      	movls	r3, #0
 8003e2a:	bf86      	itte	hi
 8003e2c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8003e30:	608b      	strhi	r3, [r1, #8]
 8003e32:	9302      	strls	r3, [sp, #8]
 8003e34:	680b      	ldr	r3, [r1, #0]
 8003e36:	468b      	mov	fp, r1
 8003e38:	2500      	movs	r5, #0
 8003e3a:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8003e3e:	f84b 3b1c 	str.w	r3, [fp], #28
 8003e42:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8003e46:	4680      	mov	r8, r0
 8003e48:	460c      	mov	r4, r1
 8003e4a:	465e      	mov	r6, fp
 8003e4c:	46aa      	mov	sl, r5
 8003e4e:	46a9      	mov	r9, r5
 8003e50:	9501      	str	r5, [sp, #4]
 8003e52:	68a2      	ldr	r2, [r4, #8]
 8003e54:	b152      	cbz	r2, 8003e6c <_scanf_float+0x60>
 8003e56:	683b      	ldr	r3, [r7, #0]
 8003e58:	781b      	ldrb	r3, [r3, #0]
 8003e5a:	2b4e      	cmp	r3, #78	; 0x4e
 8003e5c:	d864      	bhi.n	8003f28 <_scanf_float+0x11c>
 8003e5e:	2b40      	cmp	r3, #64	; 0x40
 8003e60:	d83c      	bhi.n	8003edc <_scanf_float+0xd0>
 8003e62:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8003e66:	b2c8      	uxtb	r0, r1
 8003e68:	280e      	cmp	r0, #14
 8003e6a:	d93a      	bls.n	8003ee2 <_scanf_float+0xd6>
 8003e6c:	f1b9 0f00 	cmp.w	r9, #0
 8003e70:	d003      	beq.n	8003e7a <_scanf_float+0x6e>
 8003e72:	6823      	ldr	r3, [r4, #0]
 8003e74:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003e78:	6023      	str	r3, [r4, #0]
 8003e7a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003e7e:	f1ba 0f01 	cmp.w	sl, #1
 8003e82:	f200 8113 	bhi.w	80040ac <_scanf_float+0x2a0>
 8003e86:	455e      	cmp	r6, fp
 8003e88:	f200 8105 	bhi.w	8004096 <_scanf_float+0x28a>
 8003e8c:	2501      	movs	r5, #1
 8003e8e:	4628      	mov	r0, r5
 8003e90:	b007      	add	sp, #28
 8003e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e96:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8003e9a:	2a0d      	cmp	r2, #13
 8003e9c:	d8e6      	bhi.n	8003e6c <_scanf_float+0x60>
 8003e9e:	a101      	add	r1, pc, #4	; (adr r1, 8003ea4 <_scanf_float+0x98>)
 8003ea0:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003ea4:	08003fe3 	.word	0x08003fe3
 8003ea8:	08003e6d 	.word	0x08003e6d
 8003eac:	08003e6d 	.word	0x08003e6d
 8003eb0:	08003e6d 	.word	0x08003e6d
 8003eb4:	08004043 	.word	0x08004043
 8003eb8:	0800401b 	.word	0x0800401b
 8003ebc:	08003e6d 	.word	0x08003e6d
 8003ec0:	08003e6d 	.word	0x08003e6d
 8003ec4:	08003ff1 	.word	0x08003ff1
 8003ec8:	08003e6d 	.word	0x08003e6d
 8003ecc:	08003e6d 	.word	0x08003e6d
 8003ed0:	08003e6d 	.word	0x08003e6d
 8003ed4:	08003e6d 	.word	0x08003e6d
 8003ed8:	08003fa9 	.word	0x08003fa9
 8003edc:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003ee0:	e7db      	b.n	8003e9a <_scanf_float+0x8e>
 8003ee2:	290e      	cmp	r1, #14
 8003ee4:	d8c2      	bhi.n	8003e6c <_scanf_float+0x60>
 8003ee6:	a001      	add	r0, pc, #4	; (adr r0, 8003eec <_scanf_float+0xe0>)
 8003ee8:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003eec:	08003f9b 	.word	0x08003f9b
 8003ef0:	08003e6d 	.word	0x08003e6d
 8003ef4:	08003f9b 	.word	0x08003f9b
 8003ef8:	0800402f 	.word	0x0800402f
 8003efc:	08003e6d 	.word	0x08003e6d
 8003f00:	08003f49 	.word	0x08003f49
 8003f04:	08003f85 	.word	0x08003f85
 8003f08:	08003f85 	.word	0x08003f85
 8003f0c:	08003f85 	.word	0x08003f85
 8003f10:	08003f85 	.word	0x08003f85
 8003f14:	08003f85 	.word	0x08003f85
 8003f18:	08003f85 	.word	0x08003f85
 8003f1c:	08003f85 	.word	0x08003f85
 8003f20:	08003f85 	.word	0x08003f85
 8003f24:	08003f85 	.word	0x08003f85
 8003f28:	2b6e      	cmp	r3, #110	; 0x6e
 8003f2a:	d809      	bhi.n	8003f40 <_scanf_float+0x134>
 8003f2c:	2b60      	cmp	r3, #96	; 0x60
 8003f2e:	d8b2      	bhi.n	8003e96 <_scanf_float+0x8a>
 8003f30:	2b54      	cmp	r3, #84	; 0x54
 8003f32:	d077      	beq.n	8004024 <_scanf_float+0x218>
 8003f34:	2b59      	cmp	r3, #89	; 0x59
 8003f36:	d199      	bne.n	8003e6c <_scanf_float+0x60>
 8003f38:	2d07      	cmp	r5, #7
 8003f3a:	d197      	bne.n	8003e6c <_scanf_float+0x60>
 8003f3c:	2508      	movs	r5, #8
 8003f3e:	e029      	b.n	8003f94 <_scanf_float+0x188>
 8003f40:	2b74      	cmp	r3, #116	; 0x74
 8003f42:	d06f      	beq.n	8004024 <_scanf_float+0x218>
 8003f44:	2b79      	cmp	r3, #121	; 0x79
 8003f46:	e7f6      	b.n	8003f36 <_scanf_float+0x12a>
 8003f48:	6821      	ldr	r1, [r4, #0]
 8003f4a:	05c8      	lsls	r0, r1, #23
 8003f4c:	d51a      	bpl.n	8003f84 <_scanf_float+0x178>
 8003f4e:	9b02      	ldr	r3, [sp, #8]
 8003f50:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8003f54:	6021      	str	r1, [r4, #0]
 8003f56:	f109 0901 	add.w	r9, r9, #1
 8003f5a:	b11b      	cbz	r3, 8003f64 <_scanf_float+0x158>
 8003f5c:	3b01      	subs	r3, #1
 8003f5e:	3201      	adds	r2, #1
 8003f60:	9302      	str	r3, [sp, #8]
 8003f62:	60a2      	str	r2, [r4, #8]
 8003f64:	68a3      	ldr	r3, [r4, #8]
 8003f66:	3b01      	subs	r3, #1
 8003f68:	60a3      	str	r3, [r4, #8]
 8003f6a:	6923      	ldr	r3, [r4, #16]
 8003f6c:	3301      	adds	r3, #1
 8003f6e:	6123      	str	r3, [r4, #16]
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	3b01      	subs	r3, #1
 8003f74:	2b00      	cmp	r3, #0
 8003f76:	607b      	str	r3, [r7, #4]
 8003f78:	f340 8084 	ble.w	8004084 <_scanf_float+0x278>
 8003f7c:	683b      	ldr	r3, [r7, #0]
 8003f7e:	3301      	adds	r3, #1
 8003f80:	603b      	str	r3, [r7, #0]
 8003f82:	e766      	b.n	8003e52 <_scanf_float+0x46>
 8003f84:	eb1a 0f05 	cmn.w	sl, r5
 8003f88:	f47f af70 	bne.w	8003e6c <_scanf_float+0x60>
 8003f8c:	6822      	ldr	r2, [r4, #0]
 8003f8e:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8003f92:	6022      	str	r2, [r4, #0]
 8003f94:	f806 3b01 	strb.w	r3, [r6], #1
 8003f98:	e7e4      	b.n	8003f64 <_scanf_float+0x158>
 8003f9a:	6822      	ldr	r2, [r4, #0]
 8003f9c:	0610      	lsls	r0, r2, #24
 8003f9e:	f57f af65 	bpl.w	8003e6c <_scanf_float+0x60>
 8003fa2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003fa6:	e7f4      	b.n	8003f92 <_scanf_float+0x186>
 8003fa8:	f1ba 0f00 	cmp.w	sl, #0
 8003fac:	d10e      	bne.n	8003fcc <_scanf_float+0x1c0>
 8003fae:	f1b9 0f00 	cmp.w	r9, #0
 8003fb2:	d10e      	bne.n	8003fd2 <_scanf_float+0x1c6>
 8003fb4:	6822      	ldr	r2, [r4, #0]
 8003fb6:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003fba:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003fbe:	d108      	bne.n	8003fd2 <_scanf_float+0x1c6>
 8003fc0:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003fc4:	6022      	str	r2, [r4, #0]
 8003fc6:	f04f 0a01 	mov.w	sl, #1
 8003fca:	e7e3      	b.n	8003f94 <_scanf_float+0x188>
 8003fcc:	f1ba 0f02 	cmp.w	sl, #2
 8003fd0:	d055      	beq.n	800407e <_scanf_float+0x272>
 8003fd2:	2d01      	cmp	r5, #1
 8003fd4:	d002      	beq.n	8003fdc <_scanf_float+0x1d0>
 8003fd6:	2d04      	cmp	r5, #4
 8003fd8:	f47f af48 	bne.w	8003e6c <_scanf_float+0x60>
 8003fdc:	3501      	adds	r5, #1
 8003fde:	b2ed      	uxtb	r5, r5
 8003fe0:	e7d8      	b.n	8003f94 <_scanf_float+0x188>
 8003fe2:	f1ba 0f01 	cmp.w	sl, #1
 8003fe6:	f47f af41 	bne.w	8003e6c <_scanf_float+0x60>
 8003fea:	f04f 0a02 	mov.w	sl, #2
 8003fee:	e7d1      	b.n	8003f94 <_scanf_float+0x188>
 8003ff0:	b97d      	cbnz	r5, 8004012 <_scanf_float+0x206>
 8003ff2:	f1b9 0f00 	cmp.w	r9, #0
 8003ff6:	f47f af3c 	bne.w	8003e72 <_scanf_float+0x66>
 8003ffa:	6822      	ldr	r2, [r4, #0]
 8003ffc:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8004000:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8004004:	f47f af39 	bne.w	8003e7a <_scanf_float+0x6e>
 8004008:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800400c:	6022      	str	r2, [r4, #0]
 800400e:	2501      	movs	r5, #1
 8004010:	e7c0      	b.n	8003f94 <_scanf_float+0x188>
 8004012:	2d03      	cmp	r5, #3
 8004014:	d0e2      	beq.n	8003fdc <_scanf_float+0x1d0>
 8004016:	2d05      	cmp	r5, #5
 8004018:	e7de      	b.n	8003fd8 <_scanf_float+0x1cc>
 800401a:	2d02      	cmp	r5, #2
 800401c:	f47f af26 	bne.w	8003e6c <_scanf_float+0x60>
 8004020:	2503      	movs	r5, #3
 8004022:	e7b7      	b.n	8003f94 <_scanf_float+0x188>
 8004024:	2d06      	cmp	r5, #6
 8004026:	f47f af21 	bne.w	8003e6c <_scanf_float+0x60>
 800402a:	2507      	movs	r5, #7
 800402c:	e7b2      	b.n	8003f94 <_scanf_float+0x188>
 800402e:	6822      	ldr	r2, [r4, #0]
 8004030:	0591      	lsls	r1, r2, #22
 8004032:	f57f af1b 	bpl.w	8003e6c <_scanf_float+0x60>
 8004036:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800403a:	6022      	str	r2, [r4, #0]
 800403c:	f8cd 9004 	str.w	r9, [sp, #4]
 8004040:	e7a8      	b.n	8003f94 <_scanf_float+0x188>
 8004042:	6822      	ldr	r2, [r4, #0]
 8004044:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8004048:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800404c:	d006      	beq.n	800405c <_scanf_float+0x250>
 800404e:	0550      	lsls	r0, r2, #21
 8004050:	f57f af0c 	bpl.w	8003e6c <_scanf_float+0x60>
 8004054:	f1b9 0f00 	cmp.w	r9, #0
 8004058:	f43f af0f 	beq.w	8003e7a <_scanf_float+0x6e>
 800405c:	0591      	lsls	r1, r2, #22
 800405e:	bf58      	it	pl
 8004060:	9901      	ldrpl	r1, [sp, #4]
 8004062:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8004066:	bf58      	it	pl
 8004068:	eba9 0101 	subpl.w	r1, r9, r1
 800406c:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8004070:	bf58      	it	pl
 8004072:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8004076:	6022      	str	r2, [r4, #0]
 8004078:	f04f 0900 	mov.w	r9, #0
 800407c:	e78a      	b.n	8003f94 <_scanf_float+0x188>
 800407e:	f04f 0a03 	mov.w	sl, #3
 8004082:	e787      	b.n	8003f94 <_scanf_float+0x188>
 8004084:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8004088:	4639      	mov	r1, r7
 800408a:	4640      	mov	r0, r8
 800408c:	4798      	blx	r3
 800408e:	2800      	cmp	r0, #0
 8004090:	f43f aedf 	beq.w	8003e52 <_scanf_float+0x46>
 8004094:	e6ea      	b.n	8003e6c <_scanf_float+0x60>
 8004096:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800409a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800409e:	463a      	mov	r2, r7
 80040a0:	4640      	mov	r0, r8
 80040a2:	4798      	blx	r3
 80040a4:	6923      	ldr	r3, [r4, #16]
 80040a6:	3b01      	subs	r3, #1
 80040a8:	6123      	str	r3, [r4, #16]
 80040aa:	e6ec      	b.n	8003e86 <_scanf_float+0x7a>
 80040ac:	1e6b      	subs	r3, r5, #1
 80040ae:	2b06      	cmp	r3, #6
 80040b0:	d825      	bhi.n	80040fe <_scanf_float+0x2f2>
 80040b2:	2d02      	cmp	r5, #2
 80040b4:	d836      	bhi.n	8004124 <_scanf_float+0x318>
 80040b6:	455e      	cmp	r6, fp
 80040b8:	f67f aee8 	bls.w	8003e8c <_scanf_float+0x80>
 80040bc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80040c0:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80040c4:	463a      	mov	r2, r7
 80040c6:	4640      	mov	r0, r8
 80040c8:	4798      	blx	r3
 80040ca:	6923      	ldr	r3, [r4, #16]
 80040cc:	3b01      	subs	r3, #1
 80040ce:	6123      	str	r3, [r4, #16]
 80040d0:	e7f1      	b.n	80040b6 <_scanf_float+0x2aa>
 80040d2:	9802      	ldr	r0, [sp, #8]
 80040d4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80040d8:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 80040dc:	9002      	str	r0, [sp, #8]
 80040de:	463a      	mov	r2, r7
 80040e0:	4640      	mov	r0, r8
 80040e2:	4798      	blx	r3
 80040e4:	6923      	ldr	r3, [r4, #16]
 80040e6:	3b01      	subs	r3, #1
 80040e8:	6123      	str	r3, [r4, #16]
 80040ea:	f10a 3aff 	add.w	sl, sl, #4294967295
 80040ee:	fa5f fa8a 	uxtb.w	sl, sl
 80040f2:	f1ba 0f02 	cmp.w	sl, #2
 80040f6:	d1ec      	bne.n	80040d2 <_scanf_float+0x2c6>
 80040f8:	3d03      	subs	r5, #3
 80040fa:	b2ed      	uxtb	r5, r5
 80040fc:	1b76      	subs	r6, r6, r5
 80040fe:	6823      	ldr	r3, [r4, #0]
 8004100:	05da      	lsls	r2, r3, #23
 8004102:	d52f      	bpl.n	8004164 <_scanf_float+0x358>
 8004104:	055b      	lsls	r3, r3, #21
 8004106:	d510      	bpl.n	800412a <_scanf_float+0x31e>
 8004108:	455e      	cmp	r6, fp
 800410a:	f67f aebf 	bls.w	8003e8c <_scanf_float+0x80>
 800410e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004112:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8004116:	463a      	mov	r2, r7
 8004118:	4640      	mov	r0, r8
 800411a:	4798      	blx	r3
 800411c:	6923      	ldr	r3, [r4, #16]
 800411e:	3b01      	subs	r3, #1
 8004120:	6123      	str	r3, [r4, #16]
 8004122:	e7f1      	b.n	8004108 <_scanf_float+0x2fc>
 8004124:	46aa      	mov	sl, r5
 8004126:	9602      	str	r6, [sp, #8]
 8004128:	e7df      	b.n	80040ea <_scanf_float+0x2de>
 800412a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800412e:	6923      	ldr	r3, [r4, #16]
 8004130:	2965      	cmp	r1, #101	; 0x65
 8004132:	f103 33ff 	add.w	r3, r3, #4294967295
 8004136:	f106 35ff 	add.w	r5, r6, #4294967295
 800413a:	6123      	str	r3, [r4, #16]
 800413c:	d00c      	beq.n	8004158 <_scanf_float+0x34c>
 800413e:	2945      	cmp	r1, #69	; 0x45
 8004140:	d00a      	beq.n	8004158 <_scanf_float+0x34c>
 8004142:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004146:	463a      	mov	r2, r7
 8004148:	4640      	mov	r0, r8
 800414a:	4798      	blx	r3
 800414c:	6923      	ldr	r3, [r4, #16]
 800414e:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8004152:	3b01      	subs	r3, #1
 8004154:	1eb5      	subs	r5, r6, #2
 8004156:	6123      	str	r3, [r4, #16]
 8004158:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800415c:	463a      	mov	r2, r7
 800415e:	4640      	mov	r0, r8
 8004160:	4798      	blx	r3
 8004162:	462e      	mov	r6, r5
 8004164:	6825      	ldr	r5, [r4, #0]
 8004166:	f015 0510 	ands.w	r5, r5, #16
 800416a:	d159      	bne.n	8004220 <_scanf_float+0x414>
 800416c:	7035      	strb	r5, [r6, #0]
 800416e:	6823      	ldr	r3, [r4, #0]
 8004170:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004174:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004178:	d11b      	bne.n	80041b2 <_scanf_float+0x3a6>
 800417a:	9b01      	ldr	r3, [sp, #4]
 800417c:	454b      	cmp	r3, r9
 800417e:	eba3 0209 	sub.w	r2, r3, r9
 8004182:	d123      	bne.n	80041cc <_scanf_float+0x3c0>
 8004184:	2200      	movs	r2, #0
 8004186:	4659      	mov	r1, fp
 8004188:	4640      	mov	r0, r8
 800418a:	f000 fe97 	bl	8004ebc <_strtod_r>
 800418e:	6822      	ldr	r2, [r4, #0]
 8004190:	9b03      	ldr	r3, [sp, #12]
 8004192:	f012 0f02 	tst.w	r2, #2
 8004196:	ec57 6b10 	vmov	r6, r7, d0
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	d021      	beq.n	80041e2 <_scanf_float+0x3d6>
 800419e:	9903      	ldr	r1, [sp, #12]
 80041a0:	1d1a      	adds	r2, r3, #4
 80041a2:	600a      	str	r2, [r1, #0]
 80041a4:	681b      	ldr	r3, [r3, #0]
 80041a6:	e9c3 6700 	strd	r6, r7, [r3]
 80041aa:	68e3      	ldr	r3, [r4, #12]
 80041ac:	3301      	adds	r3, #1
 80041ae:	60e3      	str	r3, [r4, #12]
 80041b0:	e66d      	b.n	8003e8e <_scanf_float+0x82>
 80041b2:	9b04      	ldr	r3, [sp, #16]
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	d0e5      	beq.n	8004184 <_scanf_float+0x378>
 80041b8:	9905      	ldr	r1, [sp, #20]
 80041ba:	230a      	movs	r3, #10
 80041bc:	462a      	mov	r2, r5
 80041be:	3101      	adds	r1, #1
 80041c0:	4640      	mov	r0, r8
 80041c2:	f000 ff03 	bl	8004fcc <_strtol_r>
 80041c6:	9b04      	ldr	r3, [sp, #16]
 80041c8:	9e05      	ldr	r6, [sp, #20]
 80041ca:	1ac2      	subs	r2, r0, r3
 80041cc:	f204 136f 	addw	r3, r4, #367	; 0x16f
 80041d0:	429e      	cmp	r6, r3
 80041d2:	bf28      	it	cs
 80041d4:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 80041d8:	4912      	ldr	r1, [pc, #72]	; (8004224 <_scanf_float+0x418>)
 80041da:	4630      	mov	r0, r6
 80041dc:	f000 f82c 	bl	8004238 <siprintf>
 80041e0:	e7d0      	b.n	8004184 <_scanf_float+0x378>
 80041e2:	9903      	ldr	r1, [sp, #12]
 80041e4:	f012 0f04 	tst.w	r2, #4
 80041e8:	f103 0204 	add.w	r2, r3, #4
 80041ec:	600a      	str	r2, [r1, #0]
 80041ee:	d1d9      	bne.n	80041a4 <_scanf_float+0x398>
 80041f0:	f8d3 8000 	ldr.w	r8, [r3]
 80041f4:	ee10 2a10 	vmov	r2, s0
 80041f8:	ee10 0a10 	vmov	r0, s0
 80041fc:	463b      	mov	r3, r7
 80041fe:	4639      	mov	r1, r7
 8004200:	f7fc fc9c 	bl	8000b3c <__aeabi_dcmpun>
 8004204:	b128      	cbz	r0, 8004212 <_scanf_float+0x406>
 8004206:	4808      	ldr	r0, [pc, #32]	; (8004228 <_scanf_float+0x41c>)
 8004208:	f000 f810 	bl	800422c <nanf>
 800420c:	ed88 0a00 	vstr	s0, [r8]
 8004210:	e7cb      	b.n	80041aa <_scanf_float+0x39e>
 8004212:	4630      	mov	r0, r6
 8004214:	4639      	mov	r1, r7
 8004216:	f7fc fcef 	bl	8000bf8 <__aeabi_d2f>
 800421a:	f8c8 0000 	str.w	r0, [r8]
 800421e:	e7c4      	b.n	80041aa <_scanf_float+0x39e>
 8004220:	2500      	movs	r5, #0
 8004222:	e634      	b.n	8003e8e <_scanf_float+0x82>
 8004224:	08008bd0 	.word	0x08008bd0
 8004228:	08008fd8 	.word	0x08008fd8

0800422c <nanf>:
 800422c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8004234 <nanf+0x8>
 8004230:	4770      	bx	lr
 8004232:	bf00      	nop
 8004234:	7fc00000 	.word	0x7fc00000

08004238 <siprintf>:
 8004238:	b40e      	push	{r1, r2, r3}
 800423a:	b500      	push	{lr}
 800423c:	b09c      	sub	sp, #112	; 0x70
 800423e:	ab1d      	add	r3, sp, #116	; 0x74
 8004240:	9002      	str	r0, [sp, #8]
 8004242:	9006      	str	r0, [sp, #24]
 8004244:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004248:	4809      	ldr	r0, [pc, #36]	; (8004270 <siprintf+0x38>)
 800424a:	9107      	str	r1, [sp, #28]
 800424c:	9104      	str	r1, [sp, #16]
 800424e:	4909      	ldr	r1, [pc, #36]	; (8004274 <siprintf+0x3c>)
 8004250:	f853 2b04 	ldr.w	r2, [r3], #4
 8004254:	9105      	str	r1, [sp, #20]
 8004256:	6800      	ldr	r0, [r0, #0]
 8004258:	9301      	str	r3, [sp, #4]
 800425a:	a902      	add	r1, sp, #8
 800425c:	f002 fee2 	bl	8007024 <_svfiprintf_r>
 8004260:	9b02      	ldr	r3, [sp, #8]
 8004262:	2200      	movs	r2, #0
 8004264:	701a      	strb	r2, [r3, #0]
 8004266:	b01c      	add	sp, #112	; 0x70
 8004268:	f85d eb04 	ldr.w	lr, [sp], #4
 800426c:	b003      	add	sp, #12
 800426e:	4770      	bx	lr
 8004270:	20000030 	.word	0x20000030
 8004274:	ffff0208 	.word	0xffff0208

08004278 <sulp>:
 8004278:	b570      	push	{r4, r5, r6, lr}
 800427a:	4604      	mov	r4, r0
 800427c:	460d      	mov	r5, r1
 800427e:	ec45 4b10 	vmov	d0, r4, r5
 8004282:	4616      	mov	r6, r2
 8004284:	f002 fc2c 	bl	8006ae0 <__ulp>
 8004288:	ec51 0b10 	vmov	r0, r1, d0
 800428c:	b17e      	cbz	r6, 80042ae <sulp+0x36>
 800428e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8004292:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004296:	2b00      	cmp	r3, #0
 8004298:	dd09      	ble.n	80042ae <sulp+0x36>
 800429a:	051b      	lsls	r3, r3, #20
 800429c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80042a0:	2400      	movs	r4, #0
 80042a2:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80042a6:	4622      	mov	r2, r4
 80042a8:	462b      	mov	r3, r5
 80042aa:	f7fc f9ad 	bl	8000608 <__aeabi_dmul>
 80042ae:	bd70      	pop	{r4, r5, r6, pc}

080042b0 <_strtod_l>:
 80042b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042b4:	ed2d 8b02 	vpush	{d8}
 80042b8:	b09d      	sub	sp, #116	; 0x74
 80042ba:	461f      	mov	r7, r3
 80042bc:	2300      	movs	r3, #0
 80042be:	9318      	str	r3, [sp, #96]	; 0x60
 80042c0:	4ba2      	ldr	r3, [pc, #648]	; (800454c <_strtod_l+0x29c>)
 80042c2:	9213      	str	r2, [sp, #76]	; 0x4c
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	9305      	str	r3, [sp, #20]
 80042c8:	4604      	mov	r4, r0
 80042ca:	4618      	mov	r0, r3
 80042cc:	4688      	mov	r8, r1
 80042ce:	f7fb ff87 	bl	80001e0 <strlen>
 80042d2:	f04f 0a00 	mov.w	sl, #0
 80042d6:	4605      	mov	r5, r0
 80042d8:	f04f 0b00 	mov.w	fp, #0
 80042dc:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80042e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80042e2:	781a      	ldrb	r2, [r3, #0]
 80042e4:	2a2b      	cmp	r2, #43	; 0x2b
 80042e6:	d04e      	beq.n	8004386 <_strtod_l+0xd6>
 80042e8:	d83b      	bhi.n	8004362 <_strtod_l+0xb2>
 80042ea:	2a0d      	cmp	r2, #13
 80042ec:	d834      	bhi.n	8004358 <_strtod_l+0xa8>
 80042ee:	2a08      	cmp	r2, #8
 80042f0:	d834      	bhi.n	800435c <_strtod_l+0xac>
 80042f2:	2a00      	cmp	r2, #0
 80042f4:	d03e      	beq.n	8004374 <_strtod_l+0xc4>
 80042f6:	2300      	movs	r3, #0
 80042f8:	930a      	str	r3, [sp, #40]	; 0x28
 80042fa:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80042fc:	7833      	ldrb	r3, [r6, #0]
 80042fe:	2b30      	cmp	r3, #48	; 0x30
 8004300:	f040 80b0 	bne.w	8004464 <_strtod_l+0x1b4>
 8004304:	7873      	ldrb	r3, [r6, #1]
 8004306:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800430a:	2b58      	cmp	r3, #88	; 0x58
 800430c:	d168      	bne.n	80043e0 <_strtod_l+0x130>
 800430e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004310:	9301      	str	r3, [sp, #4]
 8004312:	ab18      	add	r3, sp, #96	; 0x60
 8004314:	9702      	str	r7, [sp, #8]
 8004316:	9300      	str	r3, [sp, #0]
 8004318:	4a8d      	ldr	r2, [pc, #564]	; (8004550 <_strtod_l+0x2a0>)
 800431a:	ab19      	add	r3, sp, #100	; 0x64
 800431c:	a917      	add	r1, sp, #92	; 0x5c
 800431e:	4620      	mov	r0, r4
 8004320:	f001 fd38 	bl	8005d94 <__gethex>
 8004324:	f010 0707 	ands.w	r7, r0, #7
 8004328:	4605      	mov	r5, r0
 800432a:	d005      	beq.n	8004338 <_strtod_l+0x88>
 800432c:	2f06      	cmp	r7, #6
 800432e:	d12c      	bne.n	800438a <_strtod_l+0xda>
 8004330:	3601      	adds	r6, #1
 8004332:	2300      	movs	r3, #0
 8004334:	9617      	str	r6, [sp, #92]	; 0x5c
 8004336:	930a      	str	r3, [sp, #40]	; 0x28
 8004338:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800433a:	2b00      	cmp	r3, #0
 800433c:	f040 8590 	bne.w	8004e60 <_strtod_l+0xbb0>
 8004340:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004342:	b1eb      	cbz	r3, 8004380 <_strtod_l+0xd0>
 8004344:	4652      	mov	r2, sl
 8004346:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800434a:	ec43 2b10 	vmov	d0, r2, r3
 800434e:	b01d      	add	sp, #116	; 0x74
 8004350:	ecbd 8b02 	vpop	{d8}
 8004354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004358:	2a20      	cmp	r2, #32
 800435a:	d1cc      	bne.n	80042f6 <_strtod_l+0x46>
 800435c:	3301      	adds	r3, #1
 800435e:	9317      	str	r3, [sp, #92]	; 0x5c
 8004360:	e7be      	b.n	80042e0 <_strtod_l+0x30>
 8004362:	2a2d      	cmp	r2, #45	; 0x2d
 8004364:	d1c7      	bne.n	80042f6 <_strtod_l+0x46>
 8004366:	2201      	movs	r2, #1
 8004368:	920a      	str	r2, [sp, #40]	; 0x28
 800436a:	1c5a      	adds	r2, r3, #1
 800436c:	9217      	str	r2, [sp, #92]	; 0x5c
 800436e:	785b      	ldrb	r3, [r3, #1]
 8004370:	2b00      	cmp	r3, #0
 8004372:	d1c2      	bne.n	80042fa <_strtod_l+0x4a>
 8004374:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004376:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800437a:	2b00      	cmp	r3, #0
 800437c:	f040 856e 	bne.w	8004e5c <_strtod_l+0xbac>
 8004380:	4652      	mov	r2, sl
 8004382:	465b      	mov	r3, fp
 8004384:	e7e1      	b.n	800434a <_strtod_l+0x9a>
 8004386:	2200      	movs	r2, #0
 8004388:	e7ee      	b.n	8004368 <_strtod_l+0xb8>
 800438a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800438c:	b13a      	cbz	r2, 800439e <_strtod_l+0xee>
 800438e:	2135      	movs	r1, #53	; 0x35
 8004390:	a81a      	add	r0, sp, #104	; 0x68
 8004392:	f002 fcb0 	bl	8006cf6 <__copybits>
 8004396:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004398:	4620      	mov	r0, r4
 800439a:	f002 f86f 	bl	800647c <_Bfree>
 800439e:	3f01      	subs	r7, #1
 80043a0:	2f04      	cmp	r7, #4
 80043a2:	d806      	bhi.n	80043b2 <_strtod_l+0x102>
 80043a4:	e8df f007 	tbb	[pc, r7]
 80043a8:	1714030a 	.word	0x1714030a
 80043ac:	0a          	.byte	0x0a
 80043ad:	00          	.byte	0x00
 80043ae:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 80043b2:	0728      	lsls	r0, r5, #28
 80043b4:	d5c0      	bpl.n	8004338 <_strtod_l+0x88>
 80043b6:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 80043ba:	e7bd      	b.n	8004338 <_strtod_l+0x88>
 80043bc:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 80043c0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80043c2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80043c6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80043ca:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80043ce:	e7f0      	b.n	80043b2 <_strtod_l+0x102>
 80043d0:	f8df b180 	ldr.w	fp, [pc, #384]	; 8004554 <_strtod_l+0x2a4>
 80043d4:	e7ed      	b.n	80043b2 <_strtod_l+0x102>
 80043d6:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 80043da:	f04f 3aff 	mov.w	sl, #4294967295
 80043de:	e7e8      	b.n	80043b2 <_strtod_l+0x102>
 80043e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80043e2:	1c5a      	adds	r2, r3, #1
 80043e4:	9217      	str	r2, [sp, #92]	; 0x5c
 80043e6:	785b      	ldrb	r3, [r3, #1]
 80043e8:	2b30      	cmp	r3, #48	; 0x30
 80043ea:	d0f9      	beq.n	80043e0 <_strtod_l+0x130>
 80043ec:	2b00      	cmp	r3, #0
 80043ee:	d0a3      	beq.n	8004338 <_strtod_l+0x88>
 80043f0:	2301      	movs	r3, #1
 80043f2:	f04f 0900 	mov.w	r9, #0
 80043f6:	9304      	str	r3, [sp, #16]
 80043f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80043fa:	9308      	str	r3, [sp, #32]
 80043fc:	f8cd 901c 	str.w	r9, [sp, #28]
 8004400:	464f      	mov	r7, r9
 8004402:	220a      	movs	r2, #10
 8004404:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004406:	7806      	ldrb	r6, [r0, #0]
 8004408:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800440c:	b2d9      	uxtb	r1, r3
 800440e:	2909      	cmp	r1, #9
 8004410:	d92a      	bls.n	8004468 <_strtod_l+0x1b8>
 8004412:	9905      	ldr	r1, [sp, #20]
 8004414:	462a      	mov	r2, r5
 8004416:	f002 ff1f 	bl	8007258 <strncmp>
 800441a:	b398      	cbz	r0, 8004484 <_strtod_l+0x1d4>
 800441c:	2000      	movs	r0, #0
 800441e:	4632      	mov	r2, r6
 8004420:	463d      	mov	r5, r7
 8004422:	9005      	str	r0, [sp, #20]
 8004424:	4603      	mov	r3, r0
 8004426:	2a65      	cmp	r2, #101	; 0x65
 8004428:	d001      	beq.n	800442e <_strtod_l+0x17e>
 800442a:	2a45      	cmp	r2, #69	; 0x45
 800442c:	d118      	bne.n	8004460 <_strtod_l+0x1b0>
 800442e:	b91d      	cbnz	r5, 8004438 <_strtod_l+0x188>
 8004430:	9a04      	ldr	r2, [sp, #16]
 8004432:	4302      	orrs	r2, r0
 8004434:	d09e      	beq.n	8004374 <_strtod_l+0xc4>
 8004436:	2500      	movs	r5, #0
 8004438:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 800443c:	f108 0201 	add.w	r2, r8, #1
 8004440:	9217      	str	r2, [sp, #92]	; 0x5c
 8004442:	f898 2001 	ldrb.w	r2, [r8, #1]
 8004446:	2a2b      	cmp	r2, #43	; 0x2b
 8004448:	d075      	beq.n	8004536 <_strtod_l+0x286>
 800444a:	2a2d      	cmp	r2, #45	; 0x2d
 800444c:	d07b      	beq.n	8004546 <_strtod_l+0x296>
 800444e:	f04f 0c00 	mov.w	ip, #0
 8004452:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8004456:	2909      	cmp	r1, #9
 8004458:	f240 8082 	bls.w	8004560 <_strtod_l+0x2b0>
 800445c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8004460:	2600      	movs	r6, #0
 8004462:	e09d      	b.n	80045a0 <_strtod_l+0x2f0>
 8004464:	2300      	movs	r3, #0
 8004466:	e7c4      	b.n	80043f2 <_strtod_l+0x142>
 8004468:	2f08      	cmp	r7, #8
 800446a:	bfd8      	it	le
 800446c:	9907      	ldrle	r1, [sp, #28]
 800446e:	f100 0001 	add.w	r0, r0, #1
 8004472:	bfda      	itte	le
 8004474:	fb02 3301 	mlale	r3, r2, r1, r3
 8004478:	9307      	strle	r3, [sp, #28]
 800447a:	fb02 3909 	mlagt	r9, r2, r9, r3
 800447e:	3701      	adds	r7, #1
 8004480:	9017      	str	r0, [sp, #92]	; 0x5c
 8004482:	e7bf      	b.n	8004404 <_strtod_l+0x154>
 8004484:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004486:	195a      	adds	r2, r3, r5
 8004488:	9217      	str	r2, [sp, #92]	; 0x5c
 800448a:	5d5a      	ldrb	r2, [r3, r5]
 800448c:	2f00      	cmp	r7, #0
 800448e:	d037      	beq.n	8004500 <_strtod_l+0x250>
 8004490:	9005      	str	r0, [sp, #20]
 8004492:	463d      	mov	r5, r7
 8004494:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8004498:	2b09      	cmp	r3, #9
 800449a:	d912      	bls.n	80044c2 <_strtod_l+0x212>
 800449c:	2301      	movs	r3, #1
 800449e:	e7c2      	b.n	8004426 <_strtod_l+0x176>
 80044a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80044a2:	1c5a      	adds	r2, r3, #1
 80044a4:	9217      	str	r2, [sp, #92]	; 0x5c
 80044a6:	785a      	ldrb	r2, [r3, #1]
 80044a8:	3001      	adds	r0, #1
 80044aa:	2a30      	cmp	r2, #48	; 0x30
 80044ac:	d0f8      	beq.n	80044a0 <_strtod_l+0x1f0>
 80044ae:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 80044b2:	2b08      	cmp	r3, #8
 80044b4:	f200 84d9 	bhi.w	8004e6a <_strtod_l+0xbba>
 80044b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80044ba:	9005      	str	r0, [sp, #20]
 80044bc:	2000      	movs	r0, #0
 80044be:	9308      	str	r3, [sp, #32]
 80044c0:	4605      	mov	r5, r0
 80044c2:	3a30      	subs	r2, #48	; 0x30
 80044c4:	f100 0301 	add.w	r3, r0, #1
 80044c8:	d014      	beq.n	80044f4 <_strtod_l+0x244>
 80044ca:	9905      	ldr	r1, [sp, #20]
 80044cc:	4419      	add	r1, r3
 80044ce:	9105      	str	r1, [sp, #20]
 80044d0:	462b      	mov	r3, r5
 80044d2:	eb00 0e05 	add.w	lr, r0, r5
 80044d6:	210a      	movs	r1, #10
 80044d8:	4573      	cmp	r3, lr
 80044da:	d113      	bne.n	8004504 <_strtod_l+0x254>
 80044dc:	182b      	adds	r3, r5, r0
 80044de:	2b08      	cmp	r3, #8
 80044e0:	f105 0501 	add.w	r5, r5, #1
 80044e4:	4405      	add	r5, r0
 80044e6:	dc1c      	bgt.n	8004522 <_strtod_l+0x272>
 80044e8:	9907      	ldr	r1, [sp, #28]
 80044ea:	230a      	movs	r3, #10
 80044ec:	fb03 2301 	mla	r3, r3, r1, r2
 80044f0:	9307      	str	r3, [sp, #28]
 80044f2:	2300      	movs	r3, #0
 80044f4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80044f6:	1c51      	adds	r1, r2, #1
 80044f8:	9117      	str	r1, [sp, #92]	; 0x5c
 80044fa:	7852      	ldrb	r2, [r2, #1]
 80044fc:	4618      	mov	r0, r3
 80044fe:	e7c9      	b.n	8004494 <_strtod_l+0x1e4>
 8004500:	4638      	mov	r0, r7
 8004502:	e7d2      	b.n	80044aa <_strtod_l+0x1fa>
 8004504:	2b08      	cmp	r3, #8
 8004506:	dc04      	bgt.n	8004512 <_strtod_l+0x262>
 8004508:	9e07      	ldr	r6, [sp, #28]
 800450a:	434e      	muls	r6, r1
 800450c:	9607      	str	r6, [sp, #28]
 800450e:	3301      	adds	r3, #1
 8004510:	e7e2      	b.n	80044d8 <_strtod_l+0x228>
 8004512:	f103 0c01 	add.w	ip, r3, #1
 8004516:	f1bc 0f10 	cmp.w	ip, #16
 800451a:	bfd8      	it	le
 800451c:	fb01 f909 	mulle.w	r9, r1, r9
 8004520:	e7f5      	b.n	800450e <_strtod_l+0x25e>
 8004522:	2d10      	cmp	r5, #16
 8004524:	bfdc      	itt	le
 8004526:	230a      	movle	r3, #10
 8004528:	fb03 2909 	mlale	r9, r3, r9, r2
 800452c:	e7e1      	b.n	80044f2 <_strtod_l+0x242>
 800452e:	2300      	movs	r3, #0
 8004530:	9305      	str	r3, [sp, #20]
 8004532:	2301      	movs	r3, #1
 8004534:	e77c      	b.n	8004430 <_strtod_l+0x180>
 8004536:	f04f 0c00 	mov.w	ip, #0
 800453a:	f108 0202 	add.w	r2, r8, #2
 800453e:	9217      	str	r2, [sp, #92]	; 0x5c
 8004540:	f898 2002 	ldrb.w	r2, [r8, #2]
 8004544:	e785      	b.n	8004452 <_strtod_l+0x1a2>
 8004546:	f04f 0c01 	mov.w	ip, #1
 800454a:	e7f6      	b.n	800453a <_strtod_l+0x28a>
 800454c:	08008e20 	.word	0x08008e20
 8004550:	08008bd8 	.word	0x08008bd8
 8004554:	7ff00000 	.word	0x7ff00000
 8004558:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800455a:	1c51      	adds	r1, r2, #1
 800455c:	9117      	str	r1, [sp, #92]	; 0x5c
 800455e:	7852      	ldrb	r2, [r2, #1]
 8004560:	2a30      	cmp	r2, #48	; 0x30
 8004562:	d0f9      	beq.n	8004558 <_strtod_l+0x2a8>
 8004564:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8004568:	2908      	cmp	r1, #8
 800456a:	f63f af79 	bhi.w	8004460 <_strtod_l+0x1b0>
 800456e:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8004572:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004574:	9206      	str	r2, [sp, #24]
 8004576:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004578:	1c51      	adds	r1, r2, #1
 800457a:	9117      	str	r1, [sp, #92]	; 0x5c
 800457c:	7852      	ldrb	r2, [r2, #1]
 800457e:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 8004582:	2e09      	cmp	r6, #9
 8004584:	d937      	bls.n	80045f6 <_strtod_l+0x346>
 8004586:	9e06      	ldr	r6, [sp, #24]
 8004588:	1b89      	subs	r1, r1, r6
 800458a:	2908      	cmp	r1, #8
 800458c:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8004590:	dc02      	bgt.n	8004598 <_strtod_l+0x2e8>
 8004592:	4576      	cmp	r6, lr
 8004594:	bfa8      	it	ge
 8004596:	4676      	movge	r6, lr
 8004598:	f1bc 0f00 	cmp.w	ip, #0
 800459c:	d000      	beq.n	80045a0 <_strtod_l+0x2f0>
 800459e:	4276      	negs	r6, r6
 80045a0:	2d00      	cmp	r5, #0
 80045a2:	d14d      	bne.n	8004640 <_strtod_l+0x390>
 80045a4:	9904      	ldr	r1, [sp, #16]
 80045a6:	4301      	orrs	r1, r0
 80045a8:	f47f aec6 	bne.w	8004338 <_strtod_l+0x88>
 80045ac:	2b00      	cmp	r3, #0
 80045ae:	f47f aee1 	bne.w	8004374 <_strtod_l+0xc4>
 80045b2:	2a69      	cmp	r2, #105	; 0x69
 80045b4:	d027      	beq.n	8004606 <_strtod_l+0x356>
 80045b6:	dc24      	bgt.n	8004602 <_strtod_l+0x352>
 80045b8:	2a49      	cmp	r2, #73	; 0x49
 80045ba:	d024      	beq.n	8004606 <_strtod_l+0x356>
 80045bc:	2a4e      	cmp	r2, #78	; 0x4e
 80045be:	f47f aed9 	bne.w	8004374 <_strtod_l+0xc4>
 80045c2:	499f      	ldr	r1, [pc, #636]	; (8004840 <_strtod_l+0x590>)
 80045c4:	a817      	add	r0, sp, #92	; 0x5c
 80045c6:	f001 fe3d 	bl	8006244 <__match>
 80045ca:	2800      	cmp	r0, #0
 80045cc:	f43f aed2 	beq.w	8004374 <_strtod_l+0xc4>
 80045d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80045d2:	781b      	ldrb	r3, [r3, #0]
 80045d4:	2b28      	cmp	r3, #40	; 0x28
 80045d6:	d12d      	bne.n	8004634 <_strtod_l+0x384>
 80045d8:	499a      	ldr	r1, [pc, #616]	; (8004844 <_strtod_l+0x594>)
 80045da:	aa1a      	add	r2, sp, #104	; 0x68
 80045dc:	a817      	add	r0, sp, #92	; 0x5c
 80045de:	f001 fe45 	bl	800626c <__hexnan>
 80045e2:	2805      	cmp	r0, #5
 80045e4:	d126      	bne.n	8004634 <_strtod_l+0x384>
 80045e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80045e8:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 80045ec:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 80045f0:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 80045f4:	e6a0      	b.n	8004338 <_strtod_l+0x88>
 80045f6:	210a      	movs	r1, #10
 80045f8:	fb01 2e0e 	mla	lr, r1, lr, r2
 80045fc:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8004600:	e7b9      	b.n	8004576 <_strtod_l+0x2c6>
 8004602:	2a6e      	cmp	r2, #110	; 0x6e
 8004604:	e7db      	b.n	80045be <_strtod_l+0x30e>
 8004606:	4990      	ldr	r1, [pc, #576]	; (8004848 <_strtod_l+0x598>)
 8004608:	a817      	add	r0, sp, #92	; 0x5c
 800460a:	f001 fe1b 	bl	8006244 <__match>
 800460e:	2800      	cmp	r0, #0
 8004610:	f43f aeb0 	beq.w	8004374 <_strtod_l+0xc4>
 8004614:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004616:	498d      	ldr	r1, [pc, #564]	; (800484c <_strtod_l+0x59c>)
 8004618:	3b01      	subs	r3, #1
 800461a:	a817      	add	r0, sp, #92	; 0x5c
 800461c:	9317      	str	r3, [sp, #92]	; 0x5c
 800461e:	f001 fe11 	bl	8006244 <__match>
 8004622:	b910      	cbnz	r0, 800462a <_strtod_l+0x37a>
 8004624:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004626:	3301      	adds	r3, #1
 8004628:	9317      	str	r3, [sp, #92]	; 0x5c
 800462a:	f8df b230 	ldr.w	fp, [pc, #560]	; 800485c <_strtod_l+0x5ac>
 800462e:	f04f 0a00 	mov.w	sl, #0
 8004632:	e681      	b.n	8004338 <_strtod_l+0x88>
 8004634:	4886      	ldr	r0, [pc, #536]	; (8004850 <_strtod_l+0x5a0>)
 8004636:	f002 fdf7 	bl	8007228 <nan>
 800463a:	ec5b ab10 	vmov	sl, fp, d0
 800463e:	e67b      	b.n	8004338 <_strtod_l+0x88>
 8004640:	9b05      	ldr	r3, [sp, #20]
 8004642:	9807      	ldr	r0, [sp, #28]
 8004644:	1af3      	subs	r3, r6, r3
 8004646:	2f00      	cmp	r7, #0
 8004648:	bf08      	it	eq
 800464a:	462f      	moveq	r7, r5
 800464c:	2d10      	cmp	r5, #16
 800464e:	9306      	str	r3, [sp, #24]
 8004650:	46a8      	mov	r8, r5
 8004652:	bfa8      	it	ge
 8004654:	f04f 0810 	movge.w	r8, #16
 8004658:	f7fb ff5c 	bl	8000514 <__aeabi_ui2d>
 800465c:	2d09      	cmp	r5, #9
 800465e:	4682      	mov	sl, r0
 8004660:	468b      	mov	fp, r1
 8004662:	dd13      	ble.n	800468c <_strtod_l+0x3dc>
 8004664:	4b7b      	ldr	r3, [pc, #492]	; (8004854 <_strtod_l+0x5a4>)
 8004666:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800466a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800466e:	f7fb ffcb 	bl	8000608 <__aeabi_dmul>
 8004672:	4682      	mov	sl, r0
 8004674:	4648      	mov	r0, r9
 8004676:	468b      	mov	fp, r1
 8004678:	f7fb ff4c 	bl	8000514 <__aeabi_ui2d>
 800467c:	4602      	mov	r2, r0
 800467e:	460b      	mov	r3, r1
 8004680:	4650      	mov	r0, sl
 8004682:	4659      	mov	r1, fp
 8004684:	f7fb fe0a 	bl	800029c <__adddf3>
 8004688:	4682      	mov	sl, r0
 800468a:	468b      	mov	fp, r1
 800468c:	2d0f      	cmp	r5, #15
 800468e:	dc38      	bgt.n	8004702 <_strtod_l+0x452>
 8004690:	9b06      	ldr	r3, [sp, #24]
 8004692:	2b00      	cmp	r3, #0
 8004694:	f43f ae50 	beq.w	8004338 <_strtod_l+0x88>
 8004698:	dd24      	ble.n	80046e4 <_strtod_l+0x434>
 800469a:	2b16      	cmp	r3, #22
 800469c:	dc0b      	bgt.n	80046b6 <_strtod_l+0x406>
 800469e:	496d      	ldr	r1, [pc, #436]	; (8004854 <_strtod_l+0x5a4>)
 80046a0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80046a4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80046a8:	4652      	mov	r2, sl
 80046aa:	465b      	mov	r3, fp
 80046ac:	f7fb ffac 	bl	8000608 <__aeabi_dmul>
 80046b0:	4682      	mov	sl, r0
 80046b2:	468b      	mov	fp, r1
 80046b4:	e640      	b.n	8004338 <_strtod_l+0x88>
 80046b6:	9a06      	ldr	r2, [sp, #24]
 80046b8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 80046bc:	4293      	cmp	r3, r2
 80046be:	db20      	blt.n	8004702 <_strtod_l+0x452>
 80046c0:	4c64      	ldr	r4, [pc, #400]	; (8004854 <_strtod_l+0x5a4>)
 80046c2:	f1c5 050f 	rsb	r5, r5, #15
 80046c6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80046ca:	4652      	mov	r2, sl
 80046cc:	465b      	mov	r3, fp
 80046ce:	e9d1 0100 	ldrd	r0, r1, [r1]
 80046d2:	f7fb ff99 	bl	8000608 <__aeabi_dmul>
 80046d6:	9b06      	ldr	r3, [sp, #24]
 80046d8:	1b5d      	subs	r5, r3, r5
 80046da:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80046de:	e9d4 2300 	ldrd	r2, r3, [r4]
 80046e2:	e7e3      	b.n	80046ac <_strtod_l+0x3fc>
 80046e4:	9b06      	ldr	r3, [sp, #24]
 80046e6:	3316      	adds	r3, #22
 80046e8:	db0b      	blt.n	8004702 <_strtod_l+0x452>
 80046ea:	9b05      	ldr	r3, [sp, #20]
 80046ec:	1b9e      	subs	r6, r3, r6
 80046ee:	4b59      	ldr	r3, [pc, #356]	; (8004854 <_strtod_l+0x5a4>)
 80046f0:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 80046f4:	e9d6 2300 	ldrd	r2, r3, [r6]
 80046f8:	4650      	mov	r0, sl
 80046fa:	4659      	mov	r1, fp
 80046fc:	f7fc f8ae 	bl	800085c <__aeabi_ddiv>
 8004700:	e7d6      	b.n	80046b0 <_strtod_l+0x400>
 8004702:	9b06      	ldr	r3, [sp, #24]
 8004704:	eba5 0808 	sub.w	r8, r5, r8
 8004708:	4498      	add	r8, r3
 800470a:	f1b8 0f00 	cmp.w	r8, #0
 800470e:	dd74      	ble.n	80047fa <_strtod_l+0x54a>
 8004710:	f018 030f 	ands.w	r3, r8, #15
 8004714:	d00a      	beq.n	800472c <_strtod_l+0x47c>
 8004716:	494f      	ldr	r1, [pc, #316]	; (8004854 <_strtod_l+0x5a4>)
 8004718:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800471c:	4652      	mov	r2, sl
 800471e:	465b      	mov	r3, fp
 8004720:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004724:	f7fb ff70 	bl	8000608 <__aeabi_dmul>
 8004728:	4682      	mov	sl, r0
 800472a:	468b      	mov	fp, r1
 800472c:	f038 080f 	bics.w	r8, r8, #15
 8004730:	d04f      	beq.n	80047d2 <_strtod_l+0x522>
 8004732:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8004736:	dd22      	ble.n	800477e <_strtod_l+0x4ce>
 8004738:	2500      	movs	r5, #0
 800473a:	462e      	mov	r6, r5
 800473c:	9507      	str	r5, [sp, #28]
 800473e:	9505      	str	r5, [sp, #20]
 8004740:	2322      	movs	r3, #34	; 0x22
 8004742:	f8df b118 	ldr.w	fp, [pc, #280]	; 800485c <_strtod_l+0x5ac>
 8004746:	6023      	str	r3, [r4, #0]
 8004748:	f04f 0a00 	mov.w	sl, #0
 800474c:	9b07      	ldr	r3, [sp, #28]
 800474e:	2b00      	cmp	r3, #0
 8004750:	f43f adf2 	beq.w	8004338 <_strtod_l+0x88>
 8004754:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004756:	4620      	mov	r0, r4
 8004758:	f001 fe90 	bl	800647c <_Bfree>
 800475c:	9905      	ldr	r1, [sp, #20]
 800475e:	4620      	mov	r0, r4
 8004760:	f001 fe8c 	bl	800647c <_Bfree>
 8004764:	4631      	mov	r1, r6
 8004766:	4620      	mov	r0, r4
 8004768:	f001 fe88 	bl	800647c <_Bfree>
 800476c:	9907      	ldr	r1, [sp, #28]
 800476e:	4620      	mov	r0, r4
 8004770:	f001 fe84 	bl	800647c <_Bfree>
 8004774:	4629      	mov	r1, r5
 8004776:	4620      	mov	r0, r4
 8004778:	f001 fe80 	bl	800647c <_Bfree>
 800477c:	e5dc      	b.n	8004338 <_strtod_l+0x88>
 800477e:	4b36      	ldr	r3, [pc, #216]	; (8004858 <_strtod_l+0x5a8>)
 8004780:	9304      	str	r3, [sp, #16]
 8004782:	2300      	movs	r3, #0
 8004784:	ea4f 1828 	mov.w	r8, r8, asr #4
 8004788:	4650      	mov	r0, sl
 800478a:	4659      	mov	r1, fp
 800478c:	4699      	mov	r9, r3
 800478e:	f1b8 0f01 	cmp.w	r8, #1
 8004792:	dc21      	bgt.n	80047d8 <_strtod_l+0x528>
 8004794:	b10b      	cbz	r3, 800479a <_strtod_l+0x4ea>
 8004796:	4682      	mov	sl, r0
 8004798:	468b      	mov	fp, r1
 800479a:	4b2f      	ldr	r3, [pc, #188]	; (8004858 <_strtod_l+0x5a8>)
 800479c:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 80047a0:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 80047a4:	4652      	mov	r2, sl
 80047a6:	465b      	mov	r3, fp
 80047a8:	e9d9 0100 	ldrd	r0, r1, [r9]
 80047ac:	f7fb ff2c 	bl	8000608 <__aeabi_dmul>
 80047b0:	4b2a      	ldr	r3, [pc, #168]	; (800485c <_strtod_l+0x5ac>)
 80047b2:	460a      	mov	r2, r1
 80047b4:	400b      	ands	r3, r1
 80047b6:	492a      	ldr	r1, [pc, #168]	; (8004860 <_strtod_l+0x5b0>)
 80047b8:	428b      	cmp	r3, r1
 80047ba:	4682      	mov	sl, r0
 80047bc:	d8bc      	bhi.n	8004738 <_strtod_l+0x488>
 80047be:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80047c2:	428b      	cmp	r3, r1
 80047c4:	bf86      	itte	hi
 80047c6:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 8004864 <_strtod_l+0x5b4>
 80047ca:	f04f 3aff 	movhi.w	sl, #4294967295
 80047ce:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 80047d2:	2300      	movs	r3, #0
 80047d4:	9304      	str	r3, [sp, #16]
 80047d6:	e084      	b.n	80048e2 <_strtod_l+0x632>
 80047d8:	f018 0f01 	tst.w	r8, #1
 80047dc:	d005      	beq.n	80047ea <_strtod_l+0x53a>
 80047de:	9b04      	ldr	r3, [sp, #16]
 80047e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80047e4:	f7fb ff10 	bl	8000608 <__aeabi_dmul>
 80047e8:	2301      	movs	r3, #1
 80047ea:	9a04      	ldr	r2, [sp, #16]
 80047ec:	3208      	adds	r2, #8
 80047ee:	f109 0901 	add.w	r9, r9, #1
 80047f2:	ea4f 0868 	mov.w	r8, r8, asr #1
 80047f6:	9204      	str	r2, [sp, #16]
 80047f8:	e7c9      	b.n	800478e <_strtod_l+0x4de>
 80047fa:	d0ea      	beq.n	80047d2 <_strtod_l+0x522>
 80047fc:	f1c8 0800 	rsb	r8, r8, #0
 8004800:	f018 020f 	ands.w	r2, r8, #15
 8004804:	d00a      	beq.n	800481c <_strtod_l+0x56c>
 8004806:	4b13      	ldr	r3, [pc, #76]	; (8004854 <_strtod_l+0x5a4>)
 8004808:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800480c:	4650      	mov	r0, sl
 800480e:	4659      	mov	r1, fp
 8004810:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004814:	f7fc f822 	bl	800085c <__aeabi_ddiv>
 8004818:	4682      	mov	sl, r0
 800481a:	468b      	mov	fp, r1
 800481c:	ea5f 1828 	movs.w	r8, r8, asr #4
 8004820:	d0d7      	beq.n	80047d2 <_strtod_l+0x522>
 8004822:	f1b8 0f1f 	cmp.w	r8, #31
 8004826:	dd1f      	ble.n	8004868 <_strtod_l+0x5b8>
 8004828:	2500      	movs	r5, #0
 800482a:	462e      	mov	r6, r5
 800482c:	9507      	str	r5, [sp, #28]
 800482e:	9505      	str	r5, [sp, #20]
 8004830:	2322      	movs	r3, #34	; 0x22
 8004832:	f04f 0a00 	mov.w	sl, #0
 8004836:	f04f 0b00 	mov.w	fp, #0
 800483a:	6023      	str	r3, [r4, #0]
 800483c:	e786      	b.n	800474c <_strtod_l+0x49c>
 800483e:	bf00      	nop
 8004840:	08008ba9 	.word	0x08008ba9
 8004844:	08008bec 	.word	0x08008bec
 8004848:	08008ba1 	.word	0x08008ba1
 800484c:	08008d2c 	.word	0x08008d2c
 8004850:	08008fd8 	.word	0x08008fd8
 8004854:	08008eb8 	.word	0x08008eb8
 8004858:	08008e90 	.word	0x08008e90
 800485c:	7ff00000 	.word	0x7ff00000
 8004860:	7ca00000 	.word	0x7ca00000
 8004864:	7fefffff 	.word	0x7fefffff
 8004868:	f018 0310 	ands.w	r3, r8, #16
 800486c:	bf18      	it	ne
 800486e:	236a      	movne	r3, #106	; 0x6a
 8004870:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8004c20 <_strtod_l+0x970>
 8004874:	9304      	str	r3, [sp, #16]
 8004876:	4650      	mov	r0, sl
 8004878:	4659      	mov	r1, fp
 800487a:	2300      	movs	r3, #0
 800487c:	f018 0f01 	tst.w	r8, #1
 8004880:	d004      	beq.n	800488c <_strtod_l+0x5dc>
 8004882:	e9d9 2300 	ldrd	r2, r3, [r9]
 8004886:	f7fb febf 	bl	8000608 <__aeabi_dmul>
 800488a:	2301      	movs	r3, #1
 800488c:	ea5f 0868 	movs.w	r8, r8, asr #1
 8004890:	f109 0908 	add.w	r9, r9, #8
 8004894:	d1f2      	bne.n	800487c <_strtod_l+0x5cc>
 8004896:	b10b      	cbz	r3, 800489c <_strtod_l+0x5ec>
 8004898:	4682      	mov	sl, r0
 800489a:	468b      	mov	fp, r1
 800489c:	9b04      	ldr	r3, [sp, #16]
 800489e:	b1c3      	cbz	r3, 80048d2 <_strtod_l+0x622>
 80048a0:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80048a4:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 80048a8:	2b00      	cmp	r3, #0
 80048aa:	4659      	mov	r1, fp
 80048ac:	dd11      	ble.n	80048d2 <_strtod_l+0x622>
 80048ae:	2b1f      	cmp	r3, #31
 80048b0:	f340 8124 	ble.w	8004afc <_strtod_l+0x84c>
 80048b4:	2b34      	cmp	r3, #52	; 0x34
 80048b6:	bfde      	ittt	le
 80048b8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 80048bc:	f04f 33ff 	movle.w	r3, #4294967295
 80048c0:	fa03 f202 	lslle.w	r2, r3, r2
 80048c4:	f04f 0a00 	mov.w	sl, #0
 80048c8:	bfcc      	ite	gt
 80048ca:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 80048ce:	ea02 0b01 	andle.w	fp, r2, r1
 80048d2:	2200      	movs	r2, #0
 80048d4:	2300      	movs	r3, #0
 80048d6:	4650      	mov	r0, sl
 80048d8:	4659      	mov	r1, fp
 80048da:	f7fc f8fd 	bl	8000ad8 <__aeabi_dcmpeq>
 80048de:	2800      	cmp	r0, #0
 80048e0:	d1a2      	bne.n	8004828 <_strtod_l+0x578>
 80048e2:	9b07      	ldr	r3, [sp, #28]
 80048e4:	9300      	str	r3, [sp, #0]
 80048e6:	9908      	ldr	r1, [sp, #32]
 80048e8:	462b      	mov	r3, r5
 80048ea:	463a      	mov	r2, r7
 80048ec:	4620      	mov	r0, r4
 80048ee:	f001 fe2d 	bl	800654c <__s2b>
 80048f2:	9007      	str	r0, [sp, #28]
 80048f4:	2800      	cmp	r0, #0
 80048f6:	f43f af1f 	beq.w	8004738 <_strtod_l+0x488>
 80048fa:	9b05      	ldr	r3, [sp, #20]
 80048fc:	1b9e      	subs	r6, r3, r6
 80048fe:	9b06      	ldr	r3, [sp, #24]
 8004900:	2b00      	cmp	r3, #0
 8004902:	bfb4      	ite	lt
 8004904:	4633      	movlt	r3, r6
 8004906:	2300      	movge	r3, #0
 8004908:	930c      	str	r3, [sp, #48]	; 0x30
 800490a:	9b06      	ldr	r3, [sp, #24]
 800490c:	2500      	movs	r5, #0
 800490e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004912:	9312      	str	r3, [sp, #72]	; 0x48
 8004914:	462e      	mov	r6, r5
 8004916:	9b07      	ldr	r3, [sp, #28]
 8004918:	4620      	mov	r0, r4
 800491a:	6859      	ldr	r1, [r3, #4]
 800491c:	f001 fd6e 	bl	80063fc <_Balloc>
 8004920:	9005      	str	r0, [sp, #20]
 8004922:	2800      	cmp	r0, #0
 8004924:	f43f af0c 	beq.w	8004740 <_strtod_l+0x490>
 8004928:	9b07      	ldr	r3, [sp, #28]
 800492a:	691a      	ldr	r2, [r3, #16]
 800492c:	3202      	adds	r2, #2
 800492e:	f103 010c 	add.w	r1, r3, #12
 8004932:	0092      	lsls	r2, r2, #2
 8004934:	300c      	adds	r0, #12
 8004936:	f001 fd53 	bl	80063e0 <memcpy>
 800493a:	ec4b ab10 	vmov	d0, sl, fp
 800493e:	aa1a      	add	r2, sp, #104	; 0x68
 8004940:	a919      	add	r1, sp, #100	; 0x64
 8004942:	4620      	mov	r0, r4
 8004944:	f002 f948 	bl	8006bd8 <__d2b>
 8004948:	ec4b ab18 	vmov	d8, sl, fp
 800494c:	9018      	str	r0, [sp, #96]	; 0x60
 800494e:	2800      	cmp	r0, #0
 8004950:	f43f aef6 	beq.w	8004740 <_strtod_l+0x490>
 8004954:	2101      	movs	r1, #1
 8004956:	4620      	mov	r0, r4
 8004958:	f001 fe92 	bl	8006680 <__i2b>
 800495c:	4606      	mov	r6, r0
 800495e:	2800      	cmp	r0, #0
 8004960:	f43f aeee 	beq.w	8004740 <_strtod_l+0x490>
 8004964:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004966:	9904      	ldr	r1, [sp, #16]
 8004968:	2b00      	cmp	r3, #0
 800496a:	bfab      	itete	ge
 800496c:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 800496e:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 8004970:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8004972:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 8004976:	bfac      	ite	ge
 8004978:	eb03 0902 	addge.w	r9, r3, r2
 800497c:	1ad7      	sublt	r7, r2, r3
 800497e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8004980:	eba3 0801 	sub.w	r8, r3, r1
 8004984:	4490      	add	r8, r2
 8004986:	4ba1      	ldr	r3, [pc, #644]	; (8004c0c <_strtod_l+0x95c>)
 8004988:	f108 38ff 	add.w	r8, r8, #4294967295
 800498c:	4598      	cmp	r8, r3
 800498e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004992:	f280 80c7 	bge.w	8004b24 <_strtod_l+0x874>
 8004996:	eba3 0308 	sub.w	r3, r3, r8
 800499a:	2b1f      	cmp	r3, #31
 800499c:	eba2 0203 	sub.w	r2, r2, r3
 80049a0:	f04f 0101 	mov.w	r1, #1
 80049a4:	f300 80b1 	bgt.w	8004b0a <_strtod_l+0x85a>
 80049a8:	fa01 f303 	lsl.w	r3, r1, r3
 80049ac:	930d      	str	r3, [sp, #52]	; 0x34
 80049ae:	2300      	movs	r3, #0
 80049b0:	9308      	str	r3, [sp, #32]
 80049b2:	eb09 0802 	add.w	r8, r9, r2
 80049b6:	9b04      	ldr	r3, [sp, #16]
 80049b8:	45c1      	cmp	r9, r8
 80049ba:	4417      	add	r7, r2
 80049bc:	441f      	add	r7, r3
 80049be:	464b      	mov	r3, r9
 80049c0:	bfa8      	it	ge
 80049c2:	4643      	movge	r3, r8
 80049c4:	42bb      	cmp	r3, r7
 80049c6:	bfa8      	it	ge
 80049c8:	463b      	movge	r3, r7
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	bfc2      	ittt	gt
 80049ce:	eba8 0803 	subgt.w	r8, r8, r3
 80049d2:	1aff      	subgt	r7, r7, r3
 80049d4:	eba9 0903 	subgt.w	r9, r9, r3
 80049d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80049da:	2b00      	cmp	r3, #0
 80049dc:	dd17      	ble.n	8004a0e <_strtod_l+0x75e>
 80049de:	4631      	mov	r1, r6
 80049e0:	461a      	mov	r2, r3
 80049e2:	4620      	mov	r0, r4
 80049e4:	f001 ff0c 	bl	8006800 <__pow5mult>
 80049e8:	4606      	mov	r6, r0
 80049ea:	2800      	cmp	r0, #0
 80049ec:	f43f aea8 	beq.w	8004740 <_strtod_l+0x490>
 80049f0:	4601      	mov	r1, r0
 80049f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80049f4:	4620      	mov	r0, r4
 80049f6:	f001 fe59 	bl	80066ac <__multiply>
 80049fa:	900b      	str	r0, [sp, #44]	; 0x2c
 80049fc:	2800      	cmp	r0, #0
 80049fe:	f43f ae9f 	beq.w	8004740 <_strtod_l+0x490>
 8004a02:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004a04:	4620      	mov	r0, r4
 8004a06:	f001 fd39 	bl	800647c <_Bfree>
 8004a0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004a0c:	9318      	str	r3, [sp, #96]	; 0x60
 8004a0e:	f1b8 0f00 	cmp.w	r8, #0
 8004a12:	f300 808c 	bgt.w	8004b2e <_strtod_l+0x87e>
 8004a16:	9b06      	ldr	r3, [sp, #24]
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	dd08      	ble.n	8004a2e <_strtod_l+0x77e>
 8004a1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004a1e:	9905      	ldr	r1, [sp, #20]
 8004a20:	4620      	mov	r0, r4
 8004a22:	f001 feed 	bl	8006800 <__pow5mult>
 8004a26:	9005      	str	r0, [sp, #20]
 8004a28:	2800      	cmp	r0, #0
 8004a2a:	f43f ae89 	beq.w	8004740 <_strtod_l+0x490>
 8004a2e:	2f00      	cmp	r7, #0
 8004a30:	dd08      	ble.n	8004a44 <_strtod_l+0x794>
 8004a32:	9905      	ldr	r1, [sp, #20]
 8004a34:	463a      	mov	r2, r7
 8004a36:	4620      	mov	r0, r4
 8004a38:	f001 ff3c 	bl	80068b4 <__lshift>
 8004a3c:	9005      	str	r0, [sp, #20]
 8004a3e:	2800      	cmp	r0, #0
 8004a40:	f43f ae7e 	beq.w	8004740 <_strtod_l+0x490>
 8004a44:	f1b9 0f00 	cmp.w	r9, #0
 8004a48:	dd08      	ble.n	8004a5c <_strtod_l+0x7ac>
 8004a4a:	4631      	mov	r1, r6
 8004a4c:	464a      	mov	r2, r9
 8004a4e:	4620      	mov	r0, r4
 8004a50:	f001 ff30 	bl	80068b4 <__lshift>
 8004a54:	4606      	mov	r6, r0
 8004a56:	2800      	cmp	r0, #0
 8004a58:	f43f ae72 	beq.w	8004740 <_strtod_l+0x490>
 8004a5c:	9a05      	ldr	r2, [sp, #20]
 8004a5e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004a60:	4620      	mov	r0, r4
 8004a62:	f001 ffb3 	bl	80069cc <__mdiff>
 8004a66:	4605      	mov	r5, r0
 8004a68:	2800      	cmp	r0, #0
 8004a6a:	f43f ae69 	beq.w	8004740 <_strtod_l+0x490>
 8004a6e:	68c3      	ldr	r3, [r0, #12]
 8004a70:	930b      	str	r3, [sp, #44]	; 0x2c
 8004a72:	2300      	movs	r3, #0
 8004a74:	60c3      	str	r3, [r0, #12]
 8004a76:	4631      	mov	r1, r6
 8004a78:	f001 ff8c 	bl	8006994 <__mcmp>
 8004a7c:	2800      	cmp	r0, #0
 8004a7e:	da60      	bge.n	8004b42 <_strtod_l+0x892>
 8004a80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004a82:	ea53 030a 	orrs.w	r3, r3, sl
 8004a86:	f040 8082 	bne.w	8004b8e <_strtod_l+0x8de>
 8004a8a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004a8e:	2b00      	cmp	r3, #0
 8004a90:	d17d      	bne.n	8004b8e <_strtod_l+0x8de>
 8004a92:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004a96:	0d1b      	lsrs	r3, r3, #20
 8004a98:	051b      	lsls	r3, r3, #20
 8004a9a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004a9e:	d976      	bls.n	8004b8e <_strtod_l+0x8de>
 8004aa0:	696b      	ldr	r3, [r5, #20]
 8004aa2:	b913      	cbnz	r3, 8004aaa <_strtod_l+0x7fa>
 8004aa4:	692b      	ldr	r3, [r5, #16]
 8004aa6:	2b01      	cmp	r3, #1
 8004aa8:	dd71      	ble.n	8004b8e <_strtod_l+0x8de>
 8004aaa:	4629      	mov	r1, r5
 8004aac:	2201      	movs	r2, #1
 8004aae:	4620      	mov	r0, r4
 8004ab0:	f001 ff00 	bl	80068b4 <__lshift>
 8004ab4:	4631      	mov	r1, r6
 8004ab6:	4605      	mov	r5, r0
 8004ab8:	f001 ff6c 	bl	8006994 <__mcmp>
 8004abc:	2800      	cmp	r0, #0
 8004abe:	dd66      	ble.n	8004b8e <_strtod_l+0x8de>
 8004ac0:	9904      	ldr	r1, [sp, #16]
 8004ac2:	4a53      	ldr	r2, [pc, #332]	; (8004c10 <_strtod_l+0x960>)
 8004ac4:	465b      	mov	r3, fp
 8004ac6:	2900      	cmp	r1, #0
 8004ac8:	f000 8081 	beq.w	8004bce <_strtod_l+0x91e>
 8004acc:	ea02 010b 	and.w	r1, r2, fp
 8004ad0:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8004ad4:	dc7b      	bgt.n	8004bce <_strtod_l+0x91e>
 8004ad6:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004ada:	f77f aea9 	ble.w	8004830 <_strtod_l+0x580>
 8004ade:	4b4d      	ldr	r3, [pc, #308]	; (8004c14 <_strtod_l+0x964>)
 8004ae0:	4650      	mov	r0, sl
 8004ae2:	4659      	mov	r1, fp
 8004ae4:	2200      	movs	r2, #0
 8004ae6:	f7fb fd8f 	bl	8000608 <__aeabi_dmul>
 8004aea:	460b      	mov	r3, r1
 8004aec:	4303      	orrs	r3, r0
 8004aee:	bf08      	it	eq
 8004af0:	2322      	moveq	r3, #34	; 0x22
 8004af2:	4682      	mov	sl, r0
 8004af4:	468b      	mov	fp, r1
 8004af6:	bf08      	it	eq
 8004af8:	6023      	streq	r3, [r4, #0]
 8004afa:	e62b      	b.n	8004754 <_strtod_l+0x4a4>
 8004afc:	f04f 32ff 	mov.w	r2, #4294967295
 8004b00:	fa02 f303 	lsl.w	r3, r2, r3
 8004b04:	ea03 0a0a 	and.w	sl, r3, sl
 8004b08:	e6e3      	b.n	80048d2 <_strtod_l+0x622>
 8004b0a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8004b0e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8004b12:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8004b16:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8004b1a:	fa01 f308 	lsl.w	r3, r1, r8
 8004b1e:	9308      	str	r3, [sp, #32]
 8004b20:	910d      	str	r1, [sp, #52]	; 0x34
 8004b22:	e746      	b.n	80049b2 <_strtod_l+0x702>
 8004b24:	2300      	movs	r3, #0
 8004b26:	9308      	str	r3, [sp, #32]
 8004b28:	2301      	movs	r3, #1
 8004b2a:	930d      	str	r3, [sp, #52]	; 0x34
 8004b2c:	e741      	b.n	80049b2 <_strtod_l+0x702>
 8004b2e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004b30:	4642      	mov	r2, r8
 8004b32:	4620      	mov	r0, r4
 8004b34:	f001 febe 	bl	80068b4 <__lshift>
 8004b38:	9018      	str	r0, [sp, #96]	; 0x60
 8004b3a:	2800      	cmp	r0, #0
 8004b3c:	f47f af6b 	bne.w	8004a16 <_strtod_l+0x766>
 8004b40:	e5fe      	b.n	8004740 <_strtod_l+0x490>
 8004b42:	465f      	mov	r7, fp
 8004b44:	d16e      	bne.n	8004c24 <_strtod_l+0x974>
 8004b46:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004b48:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004b4c:	b342      	cbz	r2, 8004ba0 <_strtod_l+0x8f0>
 8004b4e:	4a32      	ldr	r2, [pc, #200]	; (8004c18 <_strtod_l+0x968>)
 8004b50:	4293      	cmp	r3, r2
 8004b52:	d128      	bne.n	8004ba6 <_strtod_l+0x8f6>
 8004b54:	9b04      	ldr	r3, [sp, #16]
 8004b56:	4651      	mov	r1, sl
 8004b58:	b1eb      	cbz	r3, 8004b96 <_strtod_l+0x8e6>
 8004b5a:	4b2d      	ldr	r3, [pc, #180]	; (8004c10 <_strtod_l+0x960>)
 8004b5c:	403b      	ands	r3, r7
 8004b5e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004b62:	f04f 32ff 	mov.w	r2, #4294967295
 8004b66:	d819      	bhi.n	8004b9c <_strtod_l+0x8ec>
 8004b68:	0d1b      	lsrs	r3, r3, #20
 8004b6a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004b6e:	fa02 f303 	lsl.w	r3, r2, r3
 8004b72:	4299      	cmp	r1, r3
 8004b74:	d117      	bne.n	8004ba6 <_strtod_l+0x8f6>
 8004b76:	4b29      	ldr	r3, [pc, #164]	; (8004c1c <_strtod_l+0x96c>)
 8004b78:	429f      	cmp	r7, r3
 8004b7a:	d102      	bne.n	8004b82 <_strtod_l+0x8d2>
 8004b7c:	3101      	adds	r1, #1
 8004b7e:	f43f addf 	beq.w	8004740 <_strtod_l+0x490>
 8004b82:	4b23      	ldr	r3, [pc, #140]	; (8004c10 <_strtod_l+0x960>)
 8004b84:	403b      	ands	r3, r7
 8004b86:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8004b8a:	f04f 0a00 	mov.w	sl, #0
 8004b8e:	9b04      	ldr	r3, [sp, #16]
 8004b90:	2b00      	cmp	r3, #0
 8004b92:	d1a4      	bne.n	8004ade <_strtod_l+0x82e>
 8004b94:	e5de      	b.n	8004754 <_strtod_l+0x4a4>
 8004b96:	f04f 33ff 	mov.w	r3, #4294967295
 8004b9a:	e7ea      	b.n	8004b72 <_strtod_l+0x8c2>
 8004b9c:	4613      	mov	r3, r2
 8004b9e:	e7e8      	b.n	8004b72 <_strtod_l+0x8c2>
 8004ba0:	ea53 030a 	orrs.w	r3, r3, sl
 8004ba4:	d08c      	beq.n	8004ac0 <_strtod_l+0x810>
 8004ba6:	9b08      	ldr	r3, [sp, #32]
 8004ba8:	b1db      	cbz	r3, 8004be2 <_strtod_l+0x932>
 8004baa:	423b      	tst	r3, r7
 8004bac:	d0ef      	beq.n	8004b8e <_strtod_l+0x8de>
 8004bae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004bb0:	9a04      	ldr	r2, [sp, #16]
 8004bb2:	4650      	mov	r0, sl
 8004bb4:	4659      	mov	r1, fp
 8004bb6:	b1c3      	cbz	r3, 8004bea <_strtod_l+0x93a>
 8004bb8:	f7ff fb5e 	bl	8004278 <sulp>
 8004bbc:	4602      	mov	r2, r0
 8004bbe:	460b      	mov	r3, r1
 8004bc0:	ec51 0b18 	vmov	r0, r1, d8
 8004bc4:	f7fb fb6a 	bl	800029c <__adddf3>
 8004bc8:	4682      	mov	sl, r0
 8004bca:	468b      	mov	fp, r1
 8004bcc:	e7df      	b.n	8004b8e <_strtod_l+0x8de>
 8004bce:	4013      	ands	r3, r2
 8004bd0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8004bd4:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8004bd8:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8004bdc:	f04f 3aff 	mov.w	sl, #4294967295
 8004be0:	e7d5      	b.n	8004b8e <_strtod_l+0x8de>
 8004be2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004be4:	ea13 0f0a 	tst.w	r3, sl
 8004be8:	e7e0      	b.n	8004bac <_strtod_l+0x8fc>
 8004bea:	f7ff fb45 	bl	8004278 <sulp>
 8004bee:	4602      	mov	r2, r0
 8004bf0:	460b      	mov	r3, r1
 8004bf2:	ec51 0b18 	vmov	r0, r1, d8
 8004bf6:	f7fb fb4f 	bl	8000298 <__aeabi_dsub>
 8004bfa:	2200      	movs	r2, #0
 8004bfc:	2300      	movs	r3, #0
 8004bfe:	4682      	mov	sl, r0
 8004c00:	468b      	mov	fp, r1
 8004c02:	f7fb ff69 	bl	8000ad8 <__aeabi_dcmpeq>
 8004c06:	2800      	cmp	r0, #0
 8004c08:	d0c1      	beq.n	8004b8e <_strtod_l+0x8de>
 8004c0a:	e611      	b.n	8004830 <_strtod_l+0x580>
 8004c0c:	fffffc02 	.word	0xfffffc02
 8004c10:	7ff00000 	.word	0x7ff00000
 8004c14:	39500000 	.word	0x39500000
 8004c18:	000fffff 	.word	0x000fffff
 8004c1c:	7fefffff 	.word	0x7fefffff
 8004c20:	08008c00 	.word	0x08008c00
 8004c24:	4631      	mov	r1, r6
 8004c26:	4628      	mov	r0, r5
 8004c28:	f002 f832 	bl	8006c90 <__ratio>
 8004c2c:	ec59 8b10 	vmov	r8, r9, d0
 8004c30:	ee10 0a10 	vmov	r0, s0
 8004c34:	2200      	movs	r2, #0
 8004c36:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004c3a:	4649      	mov	r1, r9
 8004c3c:	f7fb ff60 	bl	8000b00 <__aeabi_dcmple>
 8004c40:	2800      	cmp	r0, #0
 8004c42:	d07a      	beq.n	8004d3a <_strtod_l+0xa8a>
 8004c44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c46:	2b00      	cmp	r3, #0
 8004c48:	d04a      	beq.n	8004ce0 <_strtod_l+0xa30>
 8004c4a:	4b95      	ldr	r3, [pc, #596]	; (8004ea0 <_strtod_l+0xbf0>)
 8004c4c:	2200      	movs	r2, #0
 8004c4e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004c52:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8004ea0 <_strtod_l+0xbf0>
 8004c56:	f04f 0800 	mov.w	r8, #0
 8004c5a:	4b92      	ldr	r3, [pc, #584]	; (8004ea4 <_strtod_l+0xbf4>)
 8004c5c:	403b      	ands	r3, r7
 8004c5e:	930d      	str	r3, [sp, #52]	; 0x34
 8004c60:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004c62:	4b91      	ldr	r3, [pc, #580]	; (8004ea8 <_strtod_l+0xbf8>)
 8004c64:	429a      	cmp	r2, r3
 8004c66:	f040 80b0 	bne.w	8004dca <_strtod_l+0xb1a>
 8004c6a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004c6e:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8004c72:	ec4b ab10 	vmov	d0, sl, fp
 8004c76:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8004c7a:	f001 ff31 	bl	8006ae0 <__ulp>
 8004c7e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004c82:	ec53 2b10 	vmov	r2, r3, d0
 8004c86:	f7fb fcbf 	bl	8000608 <__aeabi_dmul>
 8004c8a:	4652      	mov	r2, sl
 8004c8c:	465b      	mov	r3, fp
 8004c8e:	f7fb fb05 	bl	800029c <__adddf3>
 8004c92:	460b      	mov	r3, r1
 8004c94:	4983      	ldr	r1, [pc, #524]	; (8004ea4 <_strtod_l+0xbf4>)
 8004c96:	4a85      	ldr	r2, [pc, #532]	; (8004eac <_strtod_l+0xbfc>)
 8004c98:	4019      	ands	r1, r3
 8004c9a:	4291      	cmp	r1, r2
 8004c9c:	4682      	mov	sl, r0
 8004c9e:	d960      	bls.n	8004d62 <_strtod_l+0xab2>
 8004ca0:	ee18 3a90 	vmov	r3, s17
 8004ca4:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8004ca8:	4293      	cmp	r3, r2
 8004caa:	d104      	bne.n	8004cb6 <_strtod_l+0xa06>
 8004cac:	ee18 3a10 	vmov	r3, s16
 8004cb0:	3301      	adds	r3, #1
 8004cb2:	f43f ad45 	beq.w	8004740 <_strtod_l+0x490>
 8004cb6:	f8df b200 	ldr.w	fp, [pc, #512]	; 8004eb8 <_strtod_l+0xc08>
 8004cba:	f04f 3aff 	mov.w	sl, #4294967295
 8004cbe:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004cc0:	4620      	mov	r0, r4
 8004cc2:	f001 fbdb 	bl	800647c <_Bfree>
 8004cc6:	9905      	ldr	r1, [sp, #20]
 8004cc8:	4620      	mov	r0, r4
 8004cca:	f001 fbd7 	bl	800647c <_Bfree>
 8004cce:	4631      	mov	r1, r6
 8004cd0:	4620      	mov	r0, r4
 8004cd2:	f001 fbd3 	bl	800647c <_Bfree>
 8004cd6:	4629      	mov	r1, r5
 8004cd8:	4620      	mov	r0, r4
 8004cda:	f001 fbcf 	bl	800647c <_Bfree>
 8004cde:	e61a      	b.n	8004916 <_strtod_l+0x666>
 8004ce0:	f1ba 0f00 	cmp.w	sl, #0
 8004ce4:	d11b      	bne.n	8004d1e <_strtod_l+0xa6e>
 8004ce6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004cea:	b9f3      	cbnz	r3, 8004d2a <_strtod_l+0xa7a>
 8004cec:	4b6c      	ldr	r3, [pc, #432]	; (8004ea0 <_strtod_l+0xbf0>)
 8004cee:	2200      	movs	r2, #0
 8004cf0:	4640      	mov	r0, r8
 8004cf2:	4649      	mov	r1, r9
 8004cf4:	f7fb fefa 	bl	8000aec <__aeabi_dcmplt>
 8004cf8:	b9d0      	cbnz	r0, 8004d30 <_strtod_l+0xa80>
 8004cfa:	4640      	mov	r0, r8
 8004cfc:	4649      	mov	r1, r9
 8004cfe:	4b6c      	ldr	r3, [pc, #432]	; (8004eb0 <_strtod_l+0xc00>)
 8004d00:	2200      	movs	r2, #0
 8004d02:	f7fb fc81 	bl	8000608 <__aeabi_dmul>
 8004d06:	4680      	mov	r8, r0
 8004d08:	4689      	mov	r9, r1
 8004d0a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8004d0e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 8004d12:	9315      	str	r3, [sp, #84]	; 0x54
 8004d14:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8004d18:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004d1c:	e79d      	b.n	8004c5a <_strtod_l+0x9aa>
 8004d1e:	f1ba 0f01 	cmp.w	sl, #1
 8004d22:	d102      	bne.n	8004d2a <_strtod_l+0xa7a>
 8004d24:	2f00      	cmp	r7, #0
 8004d26:	f43f ad83 	beq.w	8004830 <_strtod_l+0x580>
 8004d2a:	4b62      	ldr	r3, [pc, #392]	; (8004eb4 <_strtod_l+0xc04>)
 8004d2c:	2200      	movs	r2, #0
 8004d2e:	e78e      	b.n	8004c4e <_strtod_l+0x99e>
 8004d30:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8004eb0 <_strtod_l+0xc00>
 8004d34:	f04f 0800 	mov.w	r8, #0
 8004d38:	e7e7      	b.n	8004d0a <_strtod_l+0xa5a>
 8004d3a:	4b5d      	ldr	r3, [pc, #372]	; (8004eb0 <_strtod_l+0xc00>)
 8004d3c:	4640      	mov	r0, r8
 8004d3e:	4649      	mov	r1, r9
 8004d40:	2200      	movs	r2, #0
 8004d42:	f7fb fc61 	bl	8000608 <__aeabi_dmul>
 8004d46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004d48:	4680      	mov	r8, r0
 8004d4a:	4689      	mov	r9, r1
 8004d4c:	b933      	cbnz	r3, 8004d5c <_strtod_l+0xaac>
 8004d4e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004d52:	900e      	str	r0, [sp, #56]	; 0x38
 8004d54:	930f      	str	r3, [sp, #60]	; 0x3c
 8004d56:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8004d5a:	e7dd      	b.n	8004d18 <_strtod_l+0xa68>
 8004d5c:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 8004d60:	e7f9      	b.n	8004d56 <_strtod_l+0xaa6>
 8004d62:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8004d66:	9b04      	ldr	r3, [sp, #16]
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	d1a8      	bne.n	8004cbe <_strtod_l+0xa0e>
 8004d6c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004d70:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004d72:	0d1b      	lsrs	r3, r3, #20
 8004d74:	051b      	lsls	r3, r3, #20
 8004d76:	429a      	cmp	r2, r3
 8004d78:	d1a1      	bne.n	8004cbe <_strtod_l+0xa0e>
 8004d7a:	4640      	mov	r0, r8
 8004d7c:	4649      	mov	r1, r9
 8004d7e:	f7fb ff8b 	bl	8000c98 <__aeabi_d2lz>
 8004d82:	f7fb fc13 	bl	80005ac <__aeabi_l2d>
 8004d86:	4602      	mov	r2, r0
 8004d88:	460b      	mov	r3, r1
 8004d8a:	4640      	mov	r0, r8
 8004d8c:	4649      	mov	r1, r9
 8004d8e:	f7fb fa83 	bl	8000298 <__aeabi_dsub>
 8004d92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004d94:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004d98:	ea43 030a 	orr.w	r3, r3, sl
 8004d9c:	4313      	orrs	r3, r2
 8004d9e:	4680      	mov	r8, r0
 8004da0:	4689      	mov	r9, r1
 8004da2:	d055      	beq.n	8004e50 <_strtod_l+0xba0>
 8004da4:	a336      	add	r3, pc, #216	; (adr r3, 8004e80 <_strtod_l+0xbd0>)
 8004da6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004daa:	f7fb fe9f 	bl	8000aec <__aeabi_dcmplt>
 8004dae:	2800      	cmp	r0, #0
 8004db0:	f47f acd0 	bne.w	8004754 <_strtod_l+0x4a4>
 8004db4:	a334      	add	r3, pc, #208	; (adr r3, 8004e88 <_strtod_l+0xbd8>)
 8004db6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004dba:	4640      	mov	r0, r8
 8004dbc:	4649      	mov	r1, r9
 8004dbe:	f7fb feb3 	bl	8000b28 <__aeabi_dcmpgt>
 8004dc2:	2800      	cmp	r0, #0
 8004dc4:	f43f af7b 	beq.w	8004cbe <_strtod_l+0xa0e>
 8004dc8:	e4c4      	b.n	8004754 <_strtod_l+0x4a4>
 8004dca:	9b04      	ldr	r3, [sp, #16]
 8004dcc:	b333      	cbz	r3, 8004e1c <_strtod_l+0xb6c>
 8004dce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004dd0:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004dd4:	d822      	bhi.n	8004e1c <_strtod_l+0xb6c>
 8004dd6:	a32e      	add	r3, pc, #184	; (adr r3, 8004e90 <_strtod_l+0xbe0>)
 8004dd8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ddc:	4640      	mov	r0, r8
 8004dde:	4649      	mov	r1, r9
 8004de0:	f7fb fe8e 	bl	8000b00 <__aeabi_dcmple>
 8004de4:	b1a0      	cbz	r0, 8004e10 <_strtod_l+0xb60>
 8004de6:	4649      	mov	r1, r9
 8004de8:	4640      	mov	r0, r8
 8004dea:	f7fb fee5 	bl	8000bb8 <__aeabi_d2uiz>
 8004dee:	2801      	cmp	r0, #1
 8004df0:	bf38      	it	cc
 8004df2:	2001      	movcc	r0, #1
 8004df4:	f7fb fb8e 	bl	8000514 <__aeabi_ui2d>
 8004df8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004dfa:	4680      	mov	r8, r0
 8004dfc:	4689      	mov	r9, r1
 8004dfe:	bb23      	cbnz	r3, 8004e4a <_strtod_l+0xb9a>
 8004e00:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004e04:	9010      	str	r0, [sp, #64]	; 0x40
 8004e06:	9311      	str	r3, [sp, #68]	; 0x44
 8004e08:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004e0c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004e10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e12:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004e14:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8004e18:	1a9b      	subs	r3, r3, r2
 8004e1a:	9309      	str	r3, [sp, #36]	; 0x24
 8004e1c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004e20:	eeb0 0a48 	vmov.f32	s0, s16
 8004e24:	eef0 0a68 	vmov.f32	s1, s17
 8004e28:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8004e2c:	f001 fe58 	bl	8006ae0 <__ulp>
 8004e30:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004e34:	ec53 2b10 	vmov	r2, r3, d0
 8004e38:	f7fb fbe6 	bl	8000608 <__aeabi_dmul>
 8004e3c:	ec53 2b18 	vmov	r2, r3, d8
 8004e40:	f7fb fa2c 	bl	800029c <__adddf3>
 8004e44:	4682      	mov	sl, r0
 8004e46:	468b      	mov	fp, r1
 8004e48:	e78d      	b.n	8004d66 <_strtod_l+0xab6>
 8004e4a:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 8004e4e:	e7db      	b.n	8004e08 <_strtod_l+0xb58>
 8004e50:	a311      	add	r3, pc, #68	; (adr r3, 8004e98 <_strtod_l+0xbe8>)
 8004e52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e56:	f7fb fe49 	bl	8000aec <__aeabi_dcmplt>
 8004e5a:	e7b2      	b.n	8004dc2 <_strtod_l+0xb12>
 8004e5c:	2300      	movs	r3, #0
 8004e5e:	930a      	str	r3, [sp, #40]	; 0x28
 8004e60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004e62:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004e64:	6013      	str	r3, [r2, #0]
 8004e66:	f7ff ba6b 	b.w	8004340 <_strtod_l+0x90>
 8004e6a:	2a65      	cmp	r2, #101	; 0x65
 8004e6c:	f43f ab5f 	beq.w	800452e <_strtod_l+0x27e>
 8004e70:	2a45      	cmp	r2, #69	; 0x45
 8004e72:	f43f ab5c 	beq.w	800452e <_strtod_l+0x27e>
 8004e76:	2301      	movs	r3, #1
 8004e78:	f7ff bb94 	b.w	80045a4 <_strtod_l+0x2f4>
 8004e7c:	f3af 8000 	nop.w
 8004e80:	94a03595 	.word	0x94a03595
 8004e84:	3fdfffff 	.word	0x3fdfffff
 8004e88:	35afe535 	.word	0x35afe535
 8004e8c:	3fe00000 	.word	0x3fe00000
 8004e90:	ffc00000 	.word	0xffc00000
 8004e94:	41dfffff 	.word	0x41dfffff
 8004e98:	94a03595 	.word	0x94a03595
 8004e9c:	3fcfffff 	.word	0x3fcfffff
 8004ea0:	3ff00000 	.word	0x3ff00000
 8004ea4:	7ff00000 	.word	0x7ff00000
 8004ea8:	7fe00000 	.word	0x7fe00000
 8004eac:	7c9fffff 	.word	0x7c9fffff
 8004eb0:	3fe00000 	.word	0x3fe00000
 8004eb4:	bff00000 	.word	0xbff00000
 8004eb8:	7fefffff 	.word	0x7fefffff

08004ebc <_strtod_r>:
 8004ebc:	4b01      	ldr	r3, [pc, #4]	; (8004ec4 <_strtod_r+0x8>)
 8004ebe:	f7ff b9f7 	b.w	80042b0 <_strtod_l>
 8004ec2:	bf00      	nop
 8004ec4:	20000098 	.word	0x20000098

08004ec8 <_strtol_l.constprop.0>:
 8004ec8:	2b01      	cmp	r3, #1
 8004eca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ece:	d001      	beq.n	8004ed4 <_strtol_l.constprop.0+0xc>
 8004ed0:	2b24      	cmp	r3, #36	; 0x24
 8004ed2:	d906      	bls.n	8004ee2 <_strtol_l.constprop.0+0x1a>
 8004ed4:	f7fe fafe 	bl	80034d4 <__errno>
 8004ed8:	2316      	movs	r3, #22
 8004eda:	6003      	str	r3, [r0, #0]
 8004edc:	2000      	movs	r0, #0
 8004ede:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004ee2:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8004fc8 <_strtol_l.constprop.0+0x100>
 8004ee6:	460d      	mov	r5, r1
 8004ee8:	462e      	mov	r6, r5
 8004eea:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004eee:	f814 700c 	ldrb.w	r7, [r4, ip]
 8004ef2:	f017 0708 	ands.w	r7, r7, #8
 8004ef6:	d1f7      	bne.n	8004ee8 <_strtol_l.constprop.0+0x20>
 8004ef8:	2c2d      	cmp	r4, #45	; 0x2d
 8004efa:	d132      	bne.n	8004f62 <_strtol_l.constprop.0+0x9a>
 8004efc:	782c      	ldrb	r4, [r5, #0]
 8004efe:	2701      	movs	r7, #1
 8004f00:	1cb5      	adds	r5, r6, #2
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	d05b      	beq.n	8004fbe <_strtol_l.constprop.0+0xf6>
 8004f06:	2b10      	cmp	r3, #16
 8004f08:	d109      	bne.n	8004f1e <_strtol_l.constprop.0+0x56>
 8004f0a:	2c30      	cmp	r4, #48	; 0x30
 8004f0c:	d107      	bne.n	8004f1e <_strtol_l.constprop.0+0x56>
 8004f0e:	782c      	ldrb	r4, [r5, #0]
 8004f10:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8004f14:	2c58      	cmp	r4, #88	; 0x58
 8004f16:	d14d      	bne.n	8004fb4 <_strtol_l.constprop.0+0xec>
 8004f18:	786c      	ldrb	r4, [r5, #1]
 8004f1a:	2310      	movs	r3, #16
 8004f1c:	3502      	adds	r5, #2
 8004f1e:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8004f22:	f108 38ff 	add.w	r8, r8, #4294967295
 8004f26:	f04f 0c00 	mov.w	ip, #0
 8004f2a:	fbb8 f9f3 	udiv	r9, r8, r3
 8004f2e:	4666      	mov	r6, ip
 8004f30:	fb03 8a19 	mls	sl, r3, r9, r8
 8004f34:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8004f38:	f1be 0f09 	cmp.w	lr, #9
 8004f3c:	d816      	bhi.n	8004f6c <_strtol_l.constprop.0+0xa4>
 8004f3e:	4674      	mov	r4, lr
 8004f40:	42a3      	cmp	r3, r4
 8004f42:	dd24      	ble.n	8004f8e <_strtol_l.constprop.0+0xc6>
 8004f44:	f1bc 0f00 	cmp.w	ip, #0
 8004f48:	db1e      	blt.n	8004f88 <_strtol_l.constprop.0+0xc0>
 8004f4a:	45b1      	cmp	r9, r6
 8004f4c:	d31c      	bcc.n	8004f88 <_strtol_l.constprop.0+0xc0>
 8004f4e:	d101      	bne.n	8004f54 <_strtol_l.constprop.0+0x8c>
 8004f50:	45a2      	cmp	sl, r4
 8004f52:	db19      	blt.n	8004f88 <_strtol_l.constprop.0+0xc0>
 8004f54:	fb06 4603 	mla	r6, r6, r3, r4
 8004f58:	f04f 0c01 	mov.w	ip, #1
 8004f5c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004f60:	e7e8      	b.n	8004f34 <_strtol_l.constprop.0+0x6c>
 8004f62:	2c2b      	cmp	r4, #43	; 0x2b
 8004f64:	bf04      	itt	eq
 8004f66:	782c      	ldrbeq	r4, [r5, #0]
 8004f68:	1cb5      	addeq	r5, r6, #2
 8004f6a:	e7ca      	b.n	8004f02 <_strtol_l.constprop.0+0x3a>
 8004f6c:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8004f70:	f1be 0f19 	cmp.w	lr, #25
 8004f74:	d801      	bhi.n	8004f7a <_strtol_l.constprop.0+0xb2>
 8004f76:	3c37      	subs	r4, #55	; 0x37
 8004f78:	e7e2      	b.n	8004f40 <_strtol_l.constprop.0+0x78>
 8004f7a:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 8004f7e:	f1be 0f19 	cmp.w	lr, #25
 8004f82:	d804      	bhi.n	8004f8e <_strtol_l.constprop.0+0xc6>
 8004f84:	3c57      	subs	r4, #87	; 0x57
 8004f86:	e7db      	b.n	8004f40 <_strtol_l.constprop.0+0x78>
 8004f88:	f04f 3cff 	mov.w	ip, #4294967295
 8004f8c:	e7e6      	b.n	8004f5c <_strtol_l.constprop.0+0x94>
 8004f8e:	f1bc 0f00 	cmp.w	ip, #0
 8004f92:	da05      	bge.n	8004fa0 <_strtol_l.constprop.0+0xd8>
 8004f94:	2322      	movs	r3, #34	; 0x22
 8004f96:	6003      	str	r3, [r0, #0]
 8004f98:	4646      	mov	r6, r8
 8004f9a:	b942      	cbnz	r2, 8004fae <_strtol_l.constprop.0+0xe6>
 8004f9c:	4630      	mov	r0, r6
 8004f9e:	e79e      	b.n	8004ede <_strtol_l.constprop.0+0x16>
 8004fa0:	b107      	cbz	r7, 8004fa4 <_strtol_l.constprop.0+0xdc>
 8004fa2:	4276      	negs	r6, r6
 8004fa4:	2a00      	cmp	r2, #0
 8004fa6:	d0f9      	beq.n	8004f9c <_strtol_l.constprop.0+0xd4>
 8004fa8:	f1bc 0f00 	cmp.w	ip, #0
 8004fac:	d000      	beq.n	8004fb0 <_strtol_l.constprop.0+0xe8>
 8004fae:	1e69      	subs	r1, r5, #1
 8004fb0:	6011      	str	r1, [r2, #0]
 8004fb2:	e7f3      	b.n	8004f9c <_strtol_l.constprop.0+0xd4>
 8004fb4:	2430      	movs	r4, #48	; 0x30
 8004fb6:	2b00      	cmp	r3, #0
 8004fb8:	d1b1      	bne.n	8004f1e <_strtol_l.constprop.0+0x56>
 8004fba:	2308      	movs	r3, #8
 8004fbc:	e7af      	b.n	8004f1e <_strtol_l.constprop.0+0x56>
 8004fbe:	2c30      	cmp	r4, #48	; 0x30
 8004fc0:	d0a5      	beq.n	8004f0e <_strtol_l.constprop.0+0x46>
 8004fc2:	230a      	movs	r3, #10
 8004fc4:	e7ab      	b.n	8004f1e <_strtol_l.constprop.0+0x56>
 8004fc6:	bf00      	nop
 8004fc8:	08008c29 	.word	0x08008c29

08004fcc <_strtol_r>:
 8004fcc:	f7ff bf7c 	b.w	8004ec8 <_strtol_l.constprop.0>

08004fd0 <quorem>:
 8004fd0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004fd4:	6903      	ldr	r3, [r0, #16]
 8004fd6:	690c      	ldr	r4, [r1, #16]
 8004fd8:	42a3      	cmp	r3, r4
 8004fda:	4607      	mov	r7, r0
 8004fdc:	f2c0 8081 	blt.w	80050e2 <quorem+0x112>
 8004fe0:	3c01      	subs	r4, #1
 8004fe2:	f101 0814 	add.w	r8, r1, #20
 8004fe6:	f100 0514 	add.w	r5, r0, #20
 8004fea:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004fee:	9301      	str	r3, [sp, #4]
 8004ff0:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004ff4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004ff8:	3301      	adds	r3, #1
 8004ffa:	429a      	cmp	r2, r3
 8004ffc:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8005000:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8005004:	fbb2 f6f3 	udiv	r6, r2, r3
 8005008:	d331      	bcc.n	800506e <quorem+0x9e>
 800500a:	f04f 0e00 	mov.w	lr, #0
 800500e:	4640      	mov	r0, r8
 8005010:	46ac      	mov	ip, r5
 8005012:	46f2      	mov	sl, lr
 8005014:	f850 2b04 	ldr.w	r2, [r0], #4
 8005018:	b293      	uxth	r3, r2
 800501a:	fb06 e303 	mla	r3, r6, r3, lr
 800501e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8005022:	b29b      	uxth	r3, r3
 8005024:	ebaa 0303 	sub.w	r3, sl, r3
 8005028:	f8dc a000 	ldr.w	sl, [ip]
 800502c:	0c12      	lsrs	r2, r2, #16
 800502e:	fa13 f38a 	uxtah	r3, r3, sl
 8005032:	fb06 e202 	mla	r2, r6, r2, lr
 8005036:	9300      	str	r3, [sp, #0]
 8005038:	9b00      	ldr	r3, [sp, #0]
 800503a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800503e:	b292      	uxth	r2, r2
 8005040:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8005044:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005048:	f8bd 3000 	ldrh.w	r3, [sp]
 800504c:	4581      	cmp	r9, r0
 800504e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005052:	f84c 3b04 	str.w	r3, [ip], #4
 8005056:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800505a:	d2db      	bcs.n	8005014 <quorem+0x44>
 800505c:	f855 300b 	ldr.w	r3, [r5, fp]
 8005060:	b92b      	cbnz	r3, 800506e <quorem+0x9e>
 8005062:	9b01      	ldr	r3, [sp, #4]
 8005064:	3b04      	subs	r3, #4
 8005066:	429d      	cmp	r5, r3
 8005068:	461a      	mov	r2, r3
 800506a:	d32e      	bcc.n	80050ca <quorem+0xfa>
 800506c:	613c      	str	r4, [r7, #16]
 800506e:	4638      	mov	r0, r7
 8005070:	f001 fc90 	bl	8006994 <__mcmp>
 8005074:	2800      	cmp	r0, #0
 8005076:	db24      	blt.n	80050c2 <quorem+0xf2>
 8005078:	3601      	adds	r6, #1
 800507a:	4628      	mov	r0, r5
 800507c:	f04f 0c00 	mov.w	ip, #0
 8005080:	f858 2b04 	ldr.w	r2, [r8], #4
 8005084:	f8d0 e000 	ldr.w	lr, [r0]
 8005088:	b293      	uxth	r3, r2
 800508a:	ebac 0303 	sub.w	r3, ip, r3
 800508e:	0c12      	lsrs	r2, r2, #16
 8005090:	fa13 f38e 	uxtah	r3, r3, lr
 8005094:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8005098:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800509c:	b29b      	uxth	r3, r3
 800509e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80050a2:	45c1      	cmp	r9, r8
 80050a4:	f840 3b04 	str.w	r3, [r0], #4
 80050a8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80050ac:	d2e8      	bcs.n	8005080 <quorem+0xb0>
 80050ae:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80050b2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80050b6:	b922      	cbnz	r2, 80050c2 <quorem+0xf2>
 80050b8:	3b04      	subs	r3, #4
 80050ba:	429d      	cmp	r5, r3
 80050bc:	461a      	mov	r2, r3
 80050be:	d30a      	bcc.n	80050d6 <quorem+0x106>
 80050c0:	613c      	str	r4, [r7, #16]
 80050c2:	4630      	mov	r0, r6
 80050c4:	b003      	add	sp, #12
 80050c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80050ca:	6812      	ldr	r2, [r2, #0]
 80050cc:	3b04      	subs	r3, #4
 80050ce:	2a00      	cmp	r2, #0
 80050d0:	d1cc      	bne.n	800506c <quorem+0x9c>
 80050d2:	3c01      	subs	r4, #1
 80050d4:	e7c7      	b.n	8005066 <quorem+0x96>
 80050d6:	6812      	ldr	r2, [r2, #0]
 80050d8:	3b04      	subs	r3, #4
 80050da:	2a00      	cmp	r2, #0
 80050dc:	d1f0      	bne.n	80050c0 <quorem+0xf0>
 80050de:	3c01      	subs	r4, #1
 80050e0:	e7eb      	b.n	80050ba <quorem+0xea>
 80050e2:	2000      	movs	r0, #0
 80050e4:	e7ee      	b.n	80050c4 <quorem+0xf4>
	...

080050e8 <_dtoa_r>:
 80050e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050ec:	ed2d 8b04 	vpush	{d8-d9}
 80050f0:	ec57 6b10 	vmov	r6, r7, d0
 80050f4:	b093      	sub	sp, #76	; 0x4c
 80050f6:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80050f8:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80050fc:	9106      	str	r1, [sp, #24]
 80050fe:	ee10 aa10 	vmov	sl, s0
 8005102:	4604      	mov	r4, r0
 8005104:	9209      	str	r2, [sp, #36]	; 0x24
 8005106:	930c      	str	r3, [sp, #48]	; 0x30
 8005108:	46bb      	mov	fp, r7
 800510a:	b975      	cbnz	r5, 800512a <_dtoa_r+0x42>
 800510c:	2010      	movs	r0, #16
 800510e:	f001 f94d 	bl	80063ac <malloc>
 8005112:	4602      	mov	r2, r0
 8005114:	6260      	str	r0, [r4, #36]	; 0x24
 8005116:	b920      	cbnz	r0, 8005122 <_dtoa_r+0x3a>
 8005118:	4ba7      	ldr	r3, [pc, #668]	; (80053b8 <_dtoa_r+0x2d0>)
 800511a:	21ea      	movs	r1, #234	; 0xea
 800511c:	48a7      	ldr	r0, [pc, #668]	; (80053bc <_dtoa_r+0x2d4>)
 800511e:	f002 f8bd 	bl	800729c <__assert_func>
 8005122:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8005126:	6005      	str	r5, [r0, #0]
 8005128:	60c5      	str	r5, [r0, #12]
 800512a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800512c:	6819      	ldr	r1, [r3, #0]
 800512e:	b151      	cbz	r1, 8005146 <_dtoa_r+0x5e>
 8005130:	685a      	ldr	r2, [r3, #4]
 8005132:	604a      	str	r2, [r1, #4]
 8005134:	2301      	movs	r3, #1
 8005136:	4093      	lsls	r3, r2
 8005138:	608b      	str	r3, [r1, #8]
 800513a:	4620      	mov	r0, r4
 800513c:	f001 f99e 	bl	800647c <_Bfree>
 8005140:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005142:	2200      	movs	r2, #0
 8005144:	601a      	str	r2, [r3, #0]
 8005146:	1e3b      	subs	r3, r7, #0
 8005148:	bfaa      	itet	ge
 800514a:	2300      	movge	r3, #0
 800514c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8005150:	f8c8 3000 	strge.w	r3, [r8]
 8005154:	4b9a      	ldr	r3, [pc, #616]	; (80053c0 <_dtoa_r+0x2d8>)
 8005156:	bfbc      	itt	lt
 8005158:	2201      	movlt	r2, #1
 800515a:	f8c8 2000 	strlt.w	r2, [r8]
 800515e:	ea33 030b 	bics.w	r3, r3, fp
 8005162:	d11b      	bne.n	800519c <_dtoa_r+0xb4>
 8005164:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005166:	f242 730f 	movw	r3, #9999	; 0x270f
 800516a:	6013      	str	r3, [r2, #0]
 800516c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005170:	4333      	orrs	r3, r6
 8005172:	f000 8592 	beq.w	8005c9a <_dtoa_r+0xbb2>
 8005176:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005178:	b963      	cbnz	r3, 8005194 <_dtoa_r+0xac>
 800517a:	4b92      	ldr	r3, [pc, #584]	; (80053c4 <_dtoa_r+0x2dc>)
 800517c:	e022      	b.n	80051c4 <_dtoa_r+0xdc>
 800517e:	4b92      	ldr	r3, [pc, #584]	; (80053c8 <_dtoa_r+0x2e0>)
 8005180:	9301      	str	r3, [sp, #4]
 8005182:	3308      	adds	r3, #8
 8005184:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8005186:	6013      	str	r3, [r2, #0]
 8005188:	9801      	ldr	r0, [sp, #4]
 800518a:	b013      	add	sp, #76	; 0x4c
 800518c:	ecbd 8b04 	vpop	{d8-d9}
 8005190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005194:	4b8b      	ldr	r3, [pc, #556]	; (80053c4 <_dtoa_r+0x2dc>)
 8005196:	9301      	str	r3, [sp, #4]
 8005198:	3303      	adds	r3, #3
 800519a:	e7f3      	b.n	8005184 <_dtoa_r+0x9c>
 800519c:	2200      	movs	r2, #0
 800519e:	2300      	movs	r3, #0
 80051a0:	4650      	mov	r0, sl
 80051a2:	4659      	mov	r1, fp
 80051a4:	f7fb fc98 	bl	8000ad8 <__aeabi_dcmpeq>
 80051a8:	ec4b ab19 	vmov	d9, sl, fp
 80051ac:	4680      	mov	r8, r0
 80051ae:	b158      	cbz	r0, 80051c8 <_dtoa_r+0xe0>
 80051b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80051b2:	2301      	movs	r3, #1
 80051b4:	6013      	str	r3, [r2, #0]
 80051b6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	f000 856b 	beq.w	8005c94 <_dtoa_r+0xbac>
 80051be:	4883      	ldr	r0, [pc, #524]	; (80053cc <_dtoa_r+0x2e4>)
 80051c0:	6018      	str	r0, [r3, #0]
 80051c2:	1e43      	subs	r3, r0, #1
 80051c4:	9301      	str	r3, [sp, #4]
 80051c6:	e7df      	b.n	8005188 <_dtoa_r+0xa0>
 80051c8:	ec4b ab10 	vmov	d0, sl, fp
 80051cc:	aa10      	add	r2, sp, #64	; 0x40
 80051ce:	a911      	add	r1, sp, #68	; 0x44
 80051d0:	4620      	mov	r0, r4
 80051d2:	f001 fd01 	bl	8006bd8 <__d2b>
 80051d6:	f3cb 550a 	ubfx	r5, fp, #20, #11
 80051da:	ee08 0a10 	vmov	s16, r0
 80051de:	2d00      	cmp	r5, #0
 80051e0:	f000 8084 	beq.w	80052ec <_dtoa_r+0x204>
 80051e4:	ee19 3a90 	vmov	r3, s19
 80051e8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80051ec:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 80051f0:	4656      	mov	r6, sl
 80051f2:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 80051f6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80051fa:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80051fe:	4b74      	ldr	r3, [pc, #464]	; (80053d0 <_dtoa_r+0x2e8>)
 8005200:	2200      	movs	r2, #0
 8005202:	4630      	mov	r0, r6
 8005204:	4639      	mov	r1, r7
 8005206:	f7fb f847 	bl	8000298 <__aeabi_dsub>
 800520a:	a365      	add	r3, pc, #404	; (adr r3, 80053a0 <_dtoa_r+0x2b8>)
 800520c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005210:	f7fb f9fa 	bl	8000608 <__aeabi_dmul>
 8005214:	a364      	add	r3, pc, #400	; (adr r3, 80053a8 <_dtoa_r+0x2c0>)
 8005216:	e9d3 2300 	ldrd	r2, r3, [r3]
 800521a:	f7fb f83f 	bl	800029c <__adddf3>
 800521e:	4606      	mov	r6, r0
 8005220:	4628      	mov	r0, r5
 8005222:	460f      	mov	r7, r1
 8005224:	f7fb f986 	bl	8000534 <__aeabi_i2d>
 8005228:	a361      	add	r3, pc, #388	; (adr r3, 80053b0 <_dtoa_r+0x2c8>)
 800522a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800522e:	f7fb f9eb 	bl	8000608 <__aeabi_dmul>
 8005232:	4602      	mov	r2, r0
 8005234:	460b      	mov	r3, r1
 8005236:	4630      	mov	r0, r6
 8005238:	4639      	mov	r1, r7
 800523a:	f7fb f82f 	bl	800029c <__adddf3>
 800523e:	4606      	mov	r6, r0
 8005240:	460f      	mov	r7, r1
 8005242:	f7fb fc91 	bl	8000b68 <__aeabi_d2iz>
 8005246:	2200      	movs	r2, #0
 8005248:	9000      	str	r0, [sp, #0]
 800524a:	2300      	movs	r3, #0
 800524c:	4630      	mov	r0, r6
 800524e:	4639      	mov	r1, r7
 8005250:	f7fb fc4c 	bl	8000aec <__aeabi_dcmplt>
 8005254:	b150      	cbz	r0, 800526c <_dtoa_r+0x184>
 8005256:	9800      	ldr	r0, [sp, #0]
 8005258:	f7fb f96c 	bl	8000534 <__aeabi_i2d>
 800525c:	4632      	mov	r2, r6
 800525e:	463b      	mov	r3, r7
 8005260:	f7fb fc3a 	bl	8000ad8 <__aeabi_dcmpeq>
 8005264:	b910      	cbnz	r0, 800526c <_dtoa_r+0x184>
 8005266:	9b00      	ldr	r3, [sp, #0]
 8005268:	3b01      	subs	r3, #1
 800526a:	9300      	str	r3, [sp, #0]
 800526c:	9b00      	ldr	r3, [sp, #0]
 800526e:	2b16      	cmp	r3, #22
 8005270:	d85a      	bhi.n	8005328 <_dtoa_r+0x240>
 8005272:	9a00      	ldr	r2, [sp, #0]
 8005274:	4b57      	ldr	r3, [pc, #348]	; (80053d4 <_dtoa_r+0x2ec>)
 8005276:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800527a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800527e:	ec51 0b19 	vmov	r0, r1, d9
 8005282:	f7fb fc33 	bl	8000aec <__aeabi_dcmplt>
 8005286:	2800      	cmp	r0, #0
 8005288:	d050      	beq.n	800532c <_dtoa_r+0x244>
 800528a:	9b00      	ldr	r3, [sp, #0]
 800528c:	3b01      	subs	r3, #1
 800528e:	9300      	str	r3, [sp, #0]
 8005290:	2300      	movs	r3, #0
 8005292:	930b      	str	r3, [sp, #44]	; 0x2c
 8005294:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005296:	1b5d      	subs	r5, r3, r5
 8005298:	1e6b      	subs	r3, r5, #1
 800529a:	9305      	str	r3, [sp, #20]
 800529c:	bf45      	ittet	mi
 800529e:	f1c5 0301 	rsbmi	r3, r5, #1
 80052a2:	9304      	strmi	r3, [sp, #16]
 80052a4:	2300      	movpl	r3, #0
 80052a6:	2300      	movmi	r3, #0
 80052a8:	bf4c      	ite	mi
 80052aa:	9305      	strmi	r3, [sp, #20]
 80052ac:	9304      	strpl	r3, [sp, #16]
 80052ae:	9b00      	ldr	r3, [sp, #0]
 80052b0:	2b00      	cmp	r3, #0
 80052b2:	db3d      	blt.n	8005330 <_dtoa_r+0x248>
 80052b4:	9b05      	ldr	r3, [sp, #20]
 80052b6:	9a00      	ldr	r2, [sp, #0]
 80052b8:	920a      	str	r2, [sp, #40]	; 0x28
 80052ba:	4413      	add	r3, r2
 80052bc:	9305      	str	r3, [sp, #20]
 80052be:	2300      	movs	r3, #0
 80052c0:	9307      	str	r3, [sp, #28]
 80052c2:	9b06      	ldr	r3, [sp, #24]
 80052c4:	2b09      	cmp	r3, #9
 80052c6:	f200 8089 	bhi.w	80053dc <_dtoa_r+0x2f4>
 80052ca:	2b05      	cmp	r3, #5
 80052cc:	bfc4      	itt	gt
 80052ce:	3b04      	subgt	r3, #4
 80052d0:	9306      	strgt	r3, [sp, #24]
 80052d2:	9b06      	ldr	r3, [sp, #24]
 80052d4:	f1a3 0302 	sub.w	r3, r3, #2
 80052d8:	bfcc      	ite	gt
 80052da:	2500      	movgt	r5, #0
 80052dc:	2501      	movle	r5, #1
 80052de:	2b03      	cmp	r3, #3
 80052e0:	f200 8087 	bhi.w	80053f2 <_dtoa_r+0x30a>
 80052e4:	e8df f003 	tbb	[pc, r3]
 80052e8:	59383a2d 	.word	0x59383a2d
 80052ec:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80052f0:	441d      	add	r5, r3
 80052f2:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80052f6:	2b20      	cmp	r3, #32
 80052f8:	bfc1      	itttt	gt
 80052fa:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80052fe:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8005302:	fa0b f303 	lslgt.w	r3, fp, r3
 8005306:	fa26 f000 	lsrgt.w	r0, r6, r0
 800530a:	bfda      	itte	le
 800530c:	f1c3 0320 	rsble	r3, r3, #32
 8005310:	fa06 f003 	lslle.w	r0, r6, r3
 8005314:	4318      	orrgt	r0, r3
 8005316:	f7fb f8fd 	bl	8000514 <__aeabi_ui2d>
 800531a:	2301      	movs	r3, #1
 800531c:	4606      	mov	r6, r0
 800531e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8005322:	3d01      	subs	r5, #1
 8005324:	930e      	str	r3, [sp, #56]	; 0x38
 8005326:	e76a      	b.n	80051fe <_dtoa_r+0x116>
 8005328:	2301      	movs	r3, #1
 800532a:	e7b2      	b.n	8005292 <_dtoa_r+0x1aa>
 800532c:	900b      	str	r0, [sp, #44]	; 0x2c
 800532e:	e7b1      	b.n	8005294 <_dtoa_r+0x1ac>
 8005330:	9b04      	ldr	r3, [sp, #16]
 8005332:	9a00      	ldr	r2, [sp, #0]
 8005334:	1a9b      	subs	r3, r3, r2
 8005336:	9304      	str	r3, [sp, #16]
 8005338:	4253      	negs	r3, r2
 800533a:	9307      	str	r3, [sp, #28]
 800533c:	2300      	movs	r3, #0
 800533e:	930a      	str	r3, [sp, #40]	; 0x28
 8005340:	e7bf      	b.n	80052c2 <_dtoa_r+0x1da>
 8005342:	2300      	movs	r3, #0
 8005344:	9308      	str	r3, [sp, #32]
 8005346:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005348:	2b00      	cmp	r3, #0
 800534a:	dc55      	bgt.n	80053f8 <_dtoa_r+0x310>
 800534c:	2301      	movs	r3, #1
 800534e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8005352:	461a      	mov	r2, r3
 8005354:	9209      	str	r2, [sp, #36]	; 0x24
 8005356:	e00c      	b.n	8005372 <_dtoa_r+0x28a>
 8005358:	2301      	movs	r3, #1
 800535a:	e7f3      	b.n	8005344 <_dtoa_r+0x25c>
 800535c:	2300      	movs	r3, #0
 800535e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005360:	9308      	str	r3, [sp, #32]
 8005362:	9b00      	ldr	r3, [sp, #0]
 8005364:	4413      	add	r3, r2
 8005366:	9302      	str	r3, [sp, #8]
 8005368:	3301      	adds	r3, #1
 800536a:	2b01      	cmp	r3, #1
 800536c:	9303      	str	r3, [sp, #12]
 800536e:	bfb8      	it	lt
 8005370:	2301      	movlt	r3, #1
 8005372:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8005374:	2200      	movs	r2, #0
 8005376:	6042      	str	r2, [r0, #4]
 8005378:	2204      	movs	r2, #4
 800537a:	f102 0614 	add.w	r6, r2, #20
 800537e:	429e      	cmp	r6, r3
 8005380:	6841      	ldr	r1, [r0, #4]
 8005382:	d93d      	bls.n	8005400 <_dtoa_r+0x318>
 8005384:	4620      	mov	r0, r4
 8005386:	f001 f839 	bl	80063fc <_Balloc>
 800538a:	9001      	str	r0, [sp, #4]
 800538c:	2800      	cmp	r0, #0
 800538e:	d13b      	bne.n	8005408 <_dtoa_r+0x320>
 8005390:	4b11      	ldr	r3, [pc, #68]	; (80053d8 <_dtoa_r+0x2f0>)
 8005392:	4602      	mov	r2, r0
 8005394:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8005398:	e6c0      	b.n	800511c <_dtoa_r+0x34>
 800539a:	2301      	movs	r3, #1
 800539c:	e7df      	b.n	800535e <_dtoa_r+0x276>
 800539e:	bf00      	nop
 80053a0:	636f4361 	.word	0x636f4361
 80053a4:	3fd287a7 	.word	0x3fd287a7
 80053a8:	8b60c8b3 	.word	0x8b60c8b3
 80053ac:	3fc68a28 	.word	0x3fc68a28
 80053b0:	509f79fb 	.word	0x509f79fb
 80053b4:	3fd34413 	.word	0x3fd34413
 80053b8:	08008d36 	.word	0x08008d36
 80053bc:	08008d4d 	.word	0x08008d4d
 80053c0:	7ff00000 	.word	0x7ff00000
 80053c4:	08008d32 	.word	0x08008d32
 80053c8:	08008d29 	.word	0x08008d29
 80053cc:	08008bad 	.word	0x08008bad
 80053d0:	3ff80000 	.word	0x3ff80000
 80053d4:	08008eb8 	.word	0x08008eb8
 80053d8:	08008da8 	.word	0x08008da8
 80053dc:	2501      	movs	r5, #1
 80053de:	2300      	movs	r3, #0
 80053e0:	9306      	str	r3, [sp, #24]
 80053e2:	9508      	str	r5, [sp, #32]
 80053e4:	f04f 33ff 	mov.w	r3, #4294967295
 80053e8:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80053ec:	2200      	movs	r2, #0
 80053ee:	2312      	movs	r3, #18
 80053f0:	e7b0      	b.n	8005354 <_dtoa_r+0x26c>
 80053f2:	2301      	movs	r3, #1
 80053f4:	9308      	str	r3, [sp, #32]
 80053f6:	e7f5      	b.n	80053e4 <_dtoa_r+0x2fc>
 80053f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80053fa:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80053fe:	e7b8      	b.n	8005372 <_dtoa_r+0x28a>
 8005400:	3101      	adds	r1, #1
 8005402:	6041      	str	r1, [r0, #4]
 8005404:	0052      	lsls	r2, r2, #1
 8005406:	e7b8      	b.n	800537a <_dtoa_r+0x292>
 8005408:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800540a:	9a01      	ldr	r2, [sp, #4]
 800540c:	601a      	str	r2, [r3, #0]
 800540e:	9b03      	ldr	r3, [sp, #12]
 8005410:	2b0e      	cmp	r3, #14
 8005412:	f200 809d 	bhi.w	8005550 <_dtoa_r+0x468>
 8005416:	2d00      	cmp	r5, #0
 8005418:	f000 809a 	beq.w	8005550 <_dtoa_r+0x468>
 800541c:	9b00      	ldr	r3, [sp, #0]
 800541e:	2b00      	cmp	r3, #0
 8005420:	dd32      	ble.n	8005488 <_dtoa_r+0x3a0>
 8005422:	4ab7      	ldr	r2, [pc, #732]	; (8005700 <_dtoa_r+0x618>)
 8005424:	f003 030f 	and.w	r3, r3, #15
 8005428:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800542c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005430:	9b00      	ldr	r3, [sp, #0]
 8005432:	05d8      	lsls	r0, r3, #23
 8005434:	ea4f 1723 	mov.w	r7, r3, asr #4
 8005438:	d516      	bpl.n	8005468 <_dtoa_r+0x380>
 800543a:	4bb2      	ldr	r3, [pc, #712]	; (8005704 <_dtoa_r+0x61c>)
 800543c:	ec51 0b19 	vmov	r0, r1, d9
 8005440:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8005444:	f7fb fa0a 	bl	800085c <__aeabi_ddiv>
 8005448:	f007 070f 	and.w	r7, r7, #15
 800544c:	4682      	mov	sl, r0
 800544e:	468b      	mov	fp, r1
 8005450:	2503      	movs	r5, #3
 8005452:	4eac      	ldr	r6, [pc, #688]	; (8005704 <_dtoa_r+0x61c>)
 8005454:	b957      	cbnz	r7, 800546c <_dtoa_r+0x384>
 8005456:	4642      	mov	r2, r8
 8005458:	464b      	mov	r3, r9
 800545a:	4650      	mov	r0, sl
 800545c:	4659      	mov	r1, fp
 800545e:	f7fb f9fd 	bl	800085c <__aeabi_ddiv>
 8005462:	4682      	mov	sl, r0
 8005464:	468b      	mov	fp, r1
 8005466:	e028      	b.n	80054ba <_dtoa_r+0x3d2>
 8005468:	2502      	movs	r5, #2
 800546a:	e7f2      	b.n	8005452 <_dtoa_r+0x36a>
 800546c:	07f9      	lsls	r1, r7, #31
 800546e:	d508      	bpl.n	8005482 <_dtoa_r+0x39a>
 8005470:	4640      	mov	r0, r8
 8005472:	4649      	mov	r1, r9
 8005474:	e9d6 2300 	ldrd	r2, r3, [r6]
 8005478:	f7fb f8c6 	bl	8000608 <__aeabi_dmul>
 800547c:	3501      	adds	r5, #1
 800547e:	4680      	mov	r8, r0
 8005480:	4689      	mov	r9, r1
 8005482:	107f      	asrs	r7, r7, #1
 8005484:	3608      	adds	r6, #8
 8005486:	e7e5      	b.n	8005454 <_dtoa_r+0x36c>
 8005488:	f000 809b 	beq.w	80055c2 <_dtoa_r+0x4da>
 800548c:	9b00      	ldr	r3, [sp, #0]
 800548e:	4f9d      	ldr	r7, [pc, #628]	; (8005704 <_dtoa_r+0x61c>)
 8005490:	425e      	negs	r6, r3
 8005492:	4b9b      	ldr	r3, [pc, #620]	; (8005700 <_dtoa_r+0x618>)
 8005494:	f006 020f 	and.w	r2, r6, #15
 8005498:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800549c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054a0:	ec51 0b19 	vmov	r0, r1, d9
 80054a4:	f7fb f8b0 	bl	8000608 <__aeabi_dmul>
 80054a8:	1136      	asrs	r6, r6, #4
 80054aa:	4682      	mov	sl, r0
 80054ac:	468b      	mov	fp, r1
 80054ae:	2300      	movs	r3, #0
 80054b0:	2502      	movs	r5, #2
 80054b2:	2e00      	cmp	r6, #0
 80054b4:	d17a      	bne.n	80055ac <_dtoa_r+0x4c4>
 80054b6:	2b00      	cmp	r3, #0
 80054b8:	d1d3      	bne.n	8005462 <_dtoa_r+0x37a>
 80054ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80054bc:	2b00      	cmp	r3, #0
 80054be:	f000 8082 	beq.w	80055c6 <_dtoa_r+0x4de>
 80054c2:	4b91      	ldr	r3, [pc, #580]	; (8005708 <_dtoa_r+0x620>)
 80054c4:	2200      	movs	r2, #0
 80054c6:	4650      	mov	r0, sl
 80054c8:	4659      	mov	r1, fp
 80054ca:	f7fb fb0f 	bl	8000aec <__aeabi_dcmplt>
 80054ce:	2800      	cmp	r0, #0
 80054d0:	d079      	beq.n	80055c6 <_dtoa_r+0x4de>
 80054d2:	9b03      	ldr	r3, [sp, #12]
 80054d4:	2b00      	cmp	r3, #0
 80054d6:	d076      	beq.n	80055c6 <_dtoa_r+0x4de>
 80054d8:	9b02      	ldr	r3, [sp, #8]
 80054da:	2b00      	cmp	r3, #0
 80054dc:	dd36      	ble.n	800554c <_dtoa_r+0x464>
 80054de:	9b00      	ldr	r3, [sp, #0]
 80054e0:	4650      	mov	r0, sl
 80054e2:	4659      	mov	r1, fp
 80054e4:	1e5f      	subs	r7, r3, #1
 80054e6:	2200      	movs	r2, #0
 80054e8:	4b88      	ldr	r3, [pc, #544]	; (800570c <_dtoa_r+0x624>)
 80054ea:	f7fb f88d 	bl	8000608 <__aeabi_dmul>
 80054ee:	9e02      	ldr	r6, [sp, #8]
 80054f0:	4682      	mov	sl, r0
 80054f2:	468b      	mov	fp, r1
 80054f4:	3501      	adds	r5, #1
 80054f6:	4628      	mov	r0, r5
 80054f8:	f7fb f81c 	bl	8000534 <__aeabi_i2d>
 80054fc:	4652      	mov	r2, sl
 80054fe:	465b      	mov	r3, fp
 8005500:	f7fb f882 	bl	8000608 <__aeabi_dmul>
 8005504:	4b82      	ldr	r3, [pc, #520]	; (8005710 <_dtoa_r+0x628>)
 8005506:	2200      	movs	r2, #0
 8005508:	f7fa fec8 	bl	800029c <__adddf3>
 800550c:	46d0      	mov	r8, sl
 800550e:	46d9      	mov	r9, fp
 8005510:	4682      	mov	sl, r0
 8005512:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8005516:	2e00      	cmp	r6, #0
 8005518:	d158      	bne.n	80055cc <_dtoa_r+0x4e4>
 800551a:	4b7e      	ldr	r3, [pc, #504]	; (8005714 <_dtoa_r+0x62c>)
 800551c:	2200      	movs	r2, #0
 800551e:	4640      	mov	r0, r8
 8005520:	4649      	mov	r1, r9
 8005522:	f7fa feb9 	bl	8000298 <__aeabi_dsub>
 8005526:	4652      	mov	r2, sl
 8005528:	465b      	mov	r3, fp
 800552a:	4680      	mov	r8, r0
 800552c:	4689      	mov	r9, r1
 800552e:	f7fb fafb 	bl	8000b28 <__aeabi_dcmpgt>
 8005532:	2800      	cmp	r0, #0
 8005534:	f040 8295 	bne.w	8005a62 <_dtoa_r+0x97a>
 8005538:	4652      	mov	r2, sl
 800553a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800553e:	4640      	mov	r0, r8
 8005540:	4649      	mov	r1, r9
 8005542:	f7fb fad3 	bl	8000aec <__aeabi_dcmplt>
 8005546:	2800      	cmp	r0, #0
 8005548:	f040 8289 	bne.w	8005a5e <_dtoa_r+0x976>
 800554c:	ec5b ab19 	vmov	sl, fp, d9
 8005550:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005552:	2b00      	cmp	r3, #0
 8005554:	f2c0 8148 	blt.w	80057e8 <_dtoa_r+0x700>
 8005558:	9a00      	ldr	r2, [sp, #0]
 800555a:	2a0e      	cmp	r2, #14
 800555c:	f300 8144 	bgt.w	80057e8 <_dtoa_r+0x700>
 8005560:	4b67      	ldr	r3, [pc, #412]	; (8005700 <_dtoa_r+0x618>)
 8005562:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005566:	e9d3 8900 	ldrd	r8, r9, [r3]
 800556a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800556c:	2b00      	cmp	r3, #0
 800556e:	f280 80d5 	bge.w	800571c <_dtoa_r+0x634>
 8005572:	9b03      	ldr	r3, [sp, #12]
 8005574:	2b00      	cmp	r3, #0
 8005576:	f300 80d1 	bgt.w	800571c <_dtoa_r+0x634>
 800557a:	f040 826f 	bne.w	8005a5c <_dtoa_r+0x974>
 800557e:	4b65      	ldr	r3, [pc, #404]	; (8005714 <_dtoa_r+0x62c>)
 8005580:	2200      	movs	r2, #0
 8005582:	4640      	mov	r0, r8
 8005584:	4649      	mov	r1, r9
 8005586:	f7fb f83f 	bl	8000608 <__aeabi_dmul>
 800558a:	4652      	mov	r2, sl
 800558c:	465b      	mov	r3, fp
 800558e:	f7fb fac1 	bl	8000b14 <__aeabi_dcmpge>
 8005592:	9e03      	ldr	r6, [sp, #12]
 8005594:	4637      	mov	r7, r6
 8005596:	2800      	cmp	r0, #0
 8005598:	f040 8245 	bne.w	8005a26 <_dtoa_r+0x93e>
 800559c:	9d01      	ldr	r5, [sp, #4]
 800559e:	2331      	movs	r3, #49	; 0x31
 80055a0:	f805 3b01 	strb.w	r3, [r5], #1
 80055a4:	9b00      	ldr	r3, [sp, #0]
 80055a6:	3301      	adds	r3, #1
 80055a8:	9300      	str	r3, [sp, #0]
 80055aa:	e240      	b.n	8005a2e <_dtoa_r+0x946>
 80055ac:	07f2      	lsls	r2, r6, #31
 80055ae:	d505      	bpl.n	80055bc <_dtoa_r+0x4d4>
 80055b0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80055b4:	f7fb f828 	bl	8000608 <__aeabi_dmul>
 80055b8:	3501      	adds	r5, #1
 80055ba:	2301      	movs	r3, #1
 80055bc:	1076      	asrs	r6, r6, #1
 80055be:	3708      	adds	r7, #8
 80055c0:	e777      	b.n	80054b2 <_dtoa_r+0x3ca>
 80055c2:	2502      	movs	r5, #2
 80055c4:	e779      	b.n	80054ba <_dtoa_r+0x3d2>
 80055c6:	9f00      	ldr	r7, [sp, #0]
 80055c8:	9e03      	ldr	r6, [sp, #12]
 80055ca:	e794      	b.n	80054f6 <_dtoa_r+0x40e>
 80055cc:	9901      	ldr	r1, [sp, #4]
 80055ce:	4b4c      	ldr	r3, [pc, #304]	; (8005700 <_dtoa_r+0x618>)
 80055d0:	4431      	add	r1, r6
 80055d2:	910d      	str	r1, [sp, #52]	; 0x34
 80055d4:	9908      	ldr	r1, [sp, #32]
 80055d6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 80055da:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80055de:	2900      	cmp	r1, #0
 80055e0:	d043      	beq.n	800566a <_dtoa_r+0x582>
 80055e2:	494d      	ldr	r1, [pc, #308]	; (8005718 <_dtoa_r+0x630>)
 80055e4:	2000      	movs	r0, #0
 80055e6:	f7fb f939 	bl	800085c <__aeabi_ddiv>
 80055ea:	4652      	mov	r2, sl
 80055ec:	465b      	mov	r3, fp
 80055ee:	f7fa fe53 	bl	8000298 <__aeabi_dsub>
 80055f2:	9d01      	ldr	r5, [sp, #4]
 80055f4:	4682      	mov	sl, r0
 80055f6:	468b      	mov	fp, r1
 80055f8:	4649      	mov	r1, r9
 80055fa:	4640      	mov	r0, r8
 80055fc:	f7fb fab4 	bl	8000b68 <__aeabi_d2iz>
 8005600:	4606      	mov	r6, r0
 8005602:	f7fa ff97 	bl	8000534 <__aeabi_i2d>
 8005606:	4602      	mov	r2, r0
 8005608:	460b      	mov	r3, r1
 800560a:	4640      	mov	r0, r8
 800560c:	4649      	mov	r1, r9
 800560e:	f7fa fe43 	bl	8000298 <__aeabi_dsub>
 8005612:	3630      	adds	r6, #48	; 0x30
 8005614:	f805 6b01 	strb.w	r6, [r5], #1
 8005618:	4652      	mov	r2, sl
 800561a:	465b      	mov	r3, fp
 800561c:	4680      	mov	r8, r0
 800561e:	4689      	mov	r9, r1
 8005620:	f7fb fa64 	bl	8000aec <__aeabi_dcmplt>
 8005624:	2800      	cmp	r0, #0
 8005626:	d163      	bne.n	80056f0 <_dtoa_r+0x608>
 8005628:	4642      	mov	r2, r8
 800562a:	464b      	mov	r3, r9
 800562c:	4936      	ldr	r1, [pc, #216]	; (8005708 <_dtoa_r+0x620>)
 800562e:	2000      	movs	r0, #0
 8005630:	f7fa fe32 	bl	8000298 <__aeabi_dsub>
 8005634:	4652      	mov	r2, sl
 8005636:	465b      	mov	r3, fp
 8005638:	f7fb fa58 	bl	8000aec <__aeabi_dcmplt>
 800563c:	2800      	cmp	r0, #0
 800563e:	f040 80b5 	bne.w	80057ac <_dtoa_r+0x6c4>
 8005642:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005644:	429d      	cmp	r5, r3
 8005646:	d081      	beq.n	800554c <_dtoa_r+0x464>
 8005648:	4b30      	ldr	r3, [pc, #192]	; (800570c <_dtoa_r+0x624>)
 800564a:	2200      	movs	r2, #0
 800564c:	4650      	mov	r0, sl
 800564e:	4659      	mov	r1, fp
 8005650:	f7fa ffda 	bl	8000608 <__aeabi_dmul>
 8005654:	4b2d      	ldr	r3, [pc, #180]	; (800570c <_dtoa_r+0x624>)
 8005656:	4682      	mov	sl, r0
 8005658:	468b      	mov	fp, r1
 800565a:	4640      	mov	r0, r8
 800565c:	4649      	mov	r1, r9
 800565e:	2200      	movs	r2, #0
 8005660:	f7fa ffd2 	bl	8000608 <__aeabi_dmul>
 8005664:	4680      	mov	r8, r0
 8005666:	4689      	mov	r9, r1
 8005668:	e7c6      	b.n	80055f8 <_dtoa_r+0x510>
 800566a:	4650      	mov	r0, sl
 800566c:	4659      	mov	r1, fp
 800566e:	f7fa ffcb 	bl	8000608 <__aeabi_dmul>
 8005672:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005674:	9d01      	ldr	r5, [sp, #4]
 8005676:	930f      	str	r3, [sp, #60]	; 0x3c
 8005678:	4682      	mov	sl, r0
 800567a:	468b      	mov	fp, r1
 800567c:	4649      	mov	r1, r9
 800567e:	4640      	mov	r0, r8
 8005680:	f7fb fa72 	bl	8000b68 <__aeabi_d2iz>
 8005684:	4606      	mov	r6, r0
 8005686:	f7fa ff55 	bl	8000534 <__aeabi_i2d>
 800568a:	3630      	adds	r6, #48	; 0x30
 800568c:	4602      	mov	r2, r0
 800568e:	460b      	mov	r3, r1
 8005690:	4640      	mov	r0, r8
 8005692:	4649      	mov	r1, r9
 8005694:	f7fa fe00 	bl	8000298 <__aeabi_dsub>
 8005698:	f805 6b01 	strb.w	r6, [r5], #1
 800569c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800569e:	429d      	cmp	r5, r3
 80056a0:	4680      	mov	r8, r0
 80056a2:	4689      	mov	r9, r1
 80056a4:	f04f 0200 	mov.w	r2, #0
 80056a8:	d124      	bne.n	80056f4 <_dtoa_r+0x60c>
 80056aa:	4b1b      	ldr	r3, [pc, #108]	; (8005718 <_dtoa_r+0x630>)
 80056ac:	4650      	mov	r0, sl
 80056ae:	4659      	mov	r1, fp
 80056b0:	f7fa fdf4 	bl	800029c <__adddf3>
 80056b4:	4602      	mov	r2, r0
 80056b6:	460b      	mov	r3, r1
 80056b8:	4640      	mov	r0, r8
 80056ba:	4649      	mov	r1, r9
 80056bc:	f7fb fa34 	bl	8000b28 <__aeabi_dcmpgt>
 80056c0:	2800      	cmp	r0, #0
 80056c2:	d173      	bne.n	80057ac <_dtoa_r+0x6c4>
 80056c4:	4652      	mov	r2, sl
 80056c6:	465b      	mov	r3, fp
 80056c8:	4913      	ldr	r1, [pc, #76]	; (8005718 <_dtoa_r+0x630>)
 80056ca:	2000      	movs	r0, #0
 80056cc:	f7fa fde4 	bl	8000298 <__aeabi_dsub>
 80056d0:	4602      	mov	r2, r0
 80056d2:	460b      	mov	r3, r1
 80056d4:	4640      	mov	r0, r8
 80056d6:	4649      	mov	r1, r9
 80056d8:	f7fb fa08 	bl	8000aec <__aeabi_dcmplt>
 80056dc:	2800      	cmp	r0, #0
 80056de:	f43f af35 	beq.w	800554c <_dtoa_r+0x464>
 80056e2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80056e4:	1e6b      	subs	r3, r5, #1
 80056e6:	930f      	str	r3, [sp, #60]	; 0x3c
 80056e8:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80056ec:	2b30      	cmp	r3, #48	; 0x30
 80056ee:	d0f8      	beq.n	80056e2 <_dtoa_r+0x5fa>
 80056f0:	9700      	str	r7, [sp, #0]
 80056f2:	e049      	b.n	8005788 <_dtoa_r+0x6a0>
 80056f4:	4b05      	ldr	r3, [pc, #20]	; (800570c <_dtoa_r+0x624>)
 80056f6:	f7fa ff87 	bl	8000608 <__aeabi_dmul>
 80056fa:	4680      	mov	r8, r0
 80056fc:	4689      	mov	r9, r1
 80056fe:	e7bd      	b.n	800567c <_dtoa_r+0x594>
 8005700:	08008eb8 	.word	0x08008eb8
 8005704:	08008e90 	.word	0x08008e90
 8005708:	3ff00000 	.word	0x3ff00000
 800570c:	40240000 	.word	0x40240000
 8005710:	401c0000 	.word	0x401c0000
 8005714:	40140000 	.word	0x40140000
 8005718:	3fe00000 	.word	0x3fe00000
 800571c:	9d01      	ldr	r5, [sp, #4]
 800571e:	4656      	mov	r6, sl
 8005720:	465f      	mov	r7, fp
 8005722:	4642      	mov	r2, r8
 8005724:	464b      	mov	r3, r9
 8005726:	4630      	mov	r0, r6
 8005728:	4639      	mov	r1, r7
 800572a:	f7fb f897 	bl	800085c <__aeabi_ddiv>
 800572e:	f7fb fa1b 	bl	8000b68 <__aeabi_d2iz>
 8005732:	4682      	mov	sl, r0
 8005734:	f7fa fefe 	bl	8000534 <__aeabi_i2d>
 8005738:	4642      	mov	r2, r8
 800573a:	464b      	mov	r3, r9
 800573c:	f7fa ff64 	bl	8000608 <__aeabi_dmul>
 8005740:	4602      	mov	r2, r0
 8005742:	460b      	mov	r3, r1
 8005744:	4630      	mov	r0, r6
 8005746:	4639      	mov	r1, r7
 8005748:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800574c:	f7fa fda4 	bl	8000298 <__aeabi_dsub>
 8005750:	f805 6b01 	strb.w	r6, [r5], #1
 8005754:	9e01      	ldr	r6, [sp, #4]
 8005756:	9f03      	ldr	r7, [sp, #12]
 8005758:	1bae      	subs	r6, r5, r6
 800575a:	42b7      	cmp	r7, r6
 800575c:	4602      	mov	r2, r0
 800575e:	460b      	mov	r3, r1
 8005760:	d135      	bne.n	80057ce <_dtoa_r+0x6e6>
 8005762:	f7fa fd9b 	bl	800029c <__adddf3>
 8005766:	4642      	mov	r2, r8
 8005768:	464b      	mov	r3, r9
 800576a:	4606      	mov	r6, r0
 800576c:	460f      	mov	r7, r1
 800576e:	f7fb f9db 	bl	8000b28 <__aeabi_dcmpgt>
 8005772:	b9d0      	cbnz	r0, 80057aa <_dtoa_r+0x6c2>
 8005774:	4642      	mov	r2, r8
 8005776:	464b      	mov	r3, r9
 8005778:	4630      	mov	r0, r6
 800577a:	4639      	mov	r1, r7
 800577c:	f7fb f9ac 	bl	8000ad8 <__aeabi_dcmpeq>
 8005780:	b110      	cbz	r0, 8005788 <_dtoa_r+0x6a0>
 8005782:	f01a 0f01 	tst.w	sl, #1
 8005786:	d110      	bne.n	80057aa <_dtoa_r+0x6c2>
 8005788:	4620      	mov	r0, r4
 800578a:	ee18 1a10 	vmov	r1, s16
 800578e:	f000 fe75 	bl	800647c <_Bfree>
 8005792:	2300      	movs	r3, #0
 8005794:	9800      	ldr	r0, [sp, #0]
 8005796:	702b      	strb	r3, [r5, #0]
 8005798:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800579a:	3001      	adds	r0, #1
 800579c:	6018      	str	r0, [r3, #0]
 800579e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80057a0:	2b00      	cmp	r3, #0
 80057a2:	f43f acf1 	beq.w	8005188 <_dtoa_r+0xa0>
 80057a6:	601d      	str	r5, [r3, #0]
 80057a8:	e4ee      	b.n	8005188 <_dtoa_r+0xa0>
 80057aa:	9f00      	ldr	r7, [sp, #0]
 80057ac:	462b      	mov	r3, r5
 80057ae:	461d      	mov	r5, r3
 80057b0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80057b4:	2a39      	cmp	r2, #57	; 0x39
 80057b6:	d106      	bne.n	80057c6 <_dtoa_r+0x6de>
 80057b8:	9a01      	ldr	r2, [sp, #4]
 80057ba:	429a      	cmp	r2, r3
 80057bc:	d1f7      	bne.n	80057ae <_dtoa_r+0x6c6>
 80057be:	9901      	ldr	r1, [sp, #4]
 80057c0:	2230      	movs	r2, #48	; 0x30
 80057c2:	3701      	adds	r7, #1
 80057c4:	700a      	strb	r2, [r1, #0]
 80057c6:	781a      	ldrb	r2, [r3, #0]
 80057c8:	3201      	adds	r2, #1
 80057ca:	701a      	strb	r2, [r3, #0]
 80057cc:	e790      	b.n	80056f0 <_dtoa_r+0x608>
 80057ce:	4ba6      	ldr	r3, [pc, #664]	; (8005a68 <_dtoa_r+0x980>)
 80057d0:	2200      	movs	r2, #0
 80057d2:	f7fa ff19 	bl	8000608 <__aeabi_dmul>
 80057d6:	2200      	movs	r2, #0
 80057d8:	2300      	movs	r3, #0
 80057da:	4606      	mov	r6, r0
 80057dc:	460f      	mov	r7, r1
 80057de:	f7fb f97b 	bl	8000ad8 <__aeabi_dcmpeq>
 80057e2:	2800      	cmp	r0, #0
 80057e4:	d09d      	beq.n	8005722 <_dtoa_r+0x63a>
 80057e6:	e7cf      	b.n	8005788 <_dtoa_r+0x6a0>
 80057e8:	9a08      	ldr	r2, [sp, #32]
 80057ea:	2a00      	cmp	r2, #0
 80057ec:	f000 80d7 	beq.w	800599e <_dtoa_r+0x8b6>
 80057f0:	9a06      	ldr	r2, [sp, #24]
 80057f2:	2a01      	cmp	r2, #1
 80057f4:	f300 80ba 	bgt.w	800596c <_dtoa_r+0x884>
 80057f8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80057fa:	2a00      	cmp	r2, #0
 80057fc:	f000 80b2 	beq.w	8005964 <_dtoa_r+0x87c>
 8005800:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8005804:	9e07      	ldr	r6, [sp, #28]
 8005806:	9d04      	ldr	r5, [sp, #16]
 8005808:	9a04      	ldr	r2, [sp, #16]
 800580a:	441a      	add	r2, r3
 800580c:	9204      	str	r2, [sp, #16]
 800580e:	9a05      	ldr	r2, [sp, #20]
 8005810:	2101      	movs	r1, #1
 8005812:	441a      	add	r2, r3
 8005814:	4620      	mov	r0, r4
 8005816:	9205      	str	r2, [sp, #20]
 8005818:	f000 ff32 	bl	8006680 <__i2b>
 800581c:	4607      	mov	r7, r0
 800581e:	2d00      	cmp	r5, #0
 8005820:	dd0c      	ble.n	800583c <_dtoa_r+0x754>
 8005822:	9b05      	ldr	r3, [sp, #20]
 8005824:	2b00      	cmp	r3, #0
 8005826:	dd09      	ble.n	800583c <_dtoa_r+0x754>
 8005828:	42ab      	cmp	r3, r5
 800582a:	9a04      	ldr	r2, [sp, #16]
 800582c:	bfa8      	it	ge
 800582e:	462b      	movge	r3, r5
 8005830:	1ad2      	subs	r2, r2, r3
 8005832:	9204      	str	r2, [sp, #16]
 8005834:	9a05      	ldr	r2, [sp, #20]
 8005836:	1aed      	subs	r5, r5, r3
 8005838:	1ad3      	subs	r3, r2, r3
 800583a:	9305      	str	r3, [sp, #20]
 800583c:	9b07      	ldr	r3, [sp, #28]
 800583e:	b31b      	cbz	r3, 8005888 <_dtoa_r+0x7a0>
 8005840:	9b08      	ldr	r3, [sp, #32]
 8005842:	2b00      	cmp	r3, #0
 8005844:	f000 80af 	beq.w	80059a6 <_dtoa_r+0x8be>
 8005848:	2e00      	cmp	r6, #0
 800584a:	dd13      	ble.n	8005874 <_dtoa_r+0x78c>
 800584c:	4639      	mov	r1, r7
 800584e:	4632      	mov	r2, r6
 8005850:	4620      	mov	r0, r4
 8005852:	f000 ffd5 	bl	8006800 <__pow5mult>
 8005856:	ee18 2a10 	vmov	r2, s16
 800585a:	4601      	mov	r1, r0
 800585c:	4607      	mov	r7, r0
 800585e:	4620      	mov	r0, r4
 8005860:	f000 ff24 	bl	80066ac <__multiply>
 8005864:	ee18 1a10 	vmov	r1, s16
 8005868:	4680      	mov	r8, r0
 800586a:	4620      	mov	r0, r4
 800586c:	f000 fe06 	bl	800647c <_Bfree>
 8005870:	ee08 8a10 	vmov	s16, r8
 8005874:	9b07      	ldr	r3, [sp, #28]
 8005876:	1b9a      	subs	r2, r3, r6
 8005878:	d006      	beq.n	8005888 <_dtoa_r+0x7a0>
 800587a:	ee18 1a10 	vmov	r1, s16
 800587e:	4620      	mov	r0, r4
 8005880:	f000 ffbe 	bl	8006800 <__pow5mult>
 8005884:	ee08 0a10 	vmov	s16, r0
 8005888:	2101      	movs	r1, #1
 800588a:	4620      	mov	r0, r4
 800588c:	f000 fef8 	bl	8006680 <__i2b>
 8005890:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005892:	2b00      	cmp	r3, #0
 8005894:	4606      	mov	r6, r0
 8005896:	f340 8088 	ble.w	80059aa <_dtoa_r+0x8c2>
 800589a:	461a      	mov	r2, r3
 800589c:	4601      	mov	r1, r0
 800589e:	4620      	mov	r0, r4
 80058a0:	f000 ffae 	bl	8006800 <__pow5mult>
 80058a4:	9b06      	ldr	r3, [sp, #24]
 80058a6:	2b01      	cmp	r3, #1
 80058a8:	4606      	mov	r6, r0
 80058aa:	f340 8081 	ble.w	80059b0 <_dtoa_r+0x8c8>
 80058ae:	f04f 0800 	mov.w	r8, #0
 80058b2:	6933      	ldr	r3, [r6, #16]
 80058b4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80058b8:	6918      	ldr	r0, [r3, #16]
 80058ba:	f000 fe91 	bl	80065e0 <__hi0bits>
 80058be:	f1c0 0020 	rsb	r0, r0, #32
 80058c2:	9b05      	ldr	r3, [sp, #20]
 80058c4:	4418      	add	r0, r3
 80058c6:	f010 001f 	ands.w	r0, r0, #31
 80058ca:	f000 8092 	beq.w	80059f2 <_dtoa_r+0x90a>
 80058ce:	f1c0 0320 	rsb	r3, r0, #32
 80058d2:	2b04      	cmp	r3, #4
 80058d4:	f340 808a 	ble.w	80059ec <_dtoa_r+0x904>
 80058d8:	f1c0 001c 	rsb	r0, r0, #28
 80058dc:	9b04      	ldr	r3, [sp, #16]
 80058de:	4403      	add	r3, r0
 80058e0:	9304      	str	r3, [sp, #16]
 80058e2:	9b05      	ldr	r3, [sp, #20]
 80058e4:	4403      	add	r3, r0
 80058e6:	4405      	add	r5, r0
 80058e8:	9305      	str	r3, [sp, #20]
 80058ea:	9b04      	ldr	r3, [sp, #16]
 80058ec:	2b00      	cmp	r3, #0
 80058ee:	dd07      	ble.n	8005900 <_dtoa_r+0x818>
 80058f0:	ee18 1a10 	vmov	r1, s16
 80058f4:	461a      	mov	r2, r3
 80058f6:	4620      	mov	r0, r4
 80058f8:	f000 ffdc 	bl	80068b4 <__lshift>
 80058fc:	ee08 0a10 	vmov	s16, r0
 8005900:	9b05      	ldr	r3, [sp, #20]
 8005902:	2b00      	cmp	r3, #0
 8005904:	dd05      	ble.n	8005912 <_dtoa_r+0x82a>
 8005906:	4631      	mov	r1, r6
 8005908:	461a      	mov	r2, r3
 800590a:	4620      	mov	r0, r4
 800590c:	f000 ffd2 	bl	80068b4 <__lshift>
 8005910:	4606      	mov	r6, r0
 8005912:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005914:	2b00      	cmp	r3, #0
 8005916:	d06e      	beq.n	80059f6 <_dtoa_r+0x90e>
 8005918:	ee18 0a10 	vmov	r0, s16
 800591c:	4631      	mov	r1, r6
 800591e:	f001 f839 	bl	8006994 <__mcmp>
 8005922:	2800      	cmp	r0, #0
 8005924:	da67      	bge.n	80059f6 <_dtoa_r+0x90e>
 8005926:	9b00      	ldr	r3, [sp, #0]
 8005928:	3b01      	subs	r3, #1
 800592a:	ee18 1a10 	vmov	r1, s16
 800592e:	9300      	str	r3, [sp, #0]
 8005930:	220a      	movs	r2, #10
 8005932:	2300      	movs	r3, #0
 8005934:	4620      	mov	r0, r4
 8005936:	f000 fdc3 	bl	80064c0 <__multadd>
 800593a:	9b08      	ldr	r3, [sp, #32]
 800593c:	ee08 0a10 	vmov	s16, r0
 8005940:	2b00      	cmp	r3, #0
 8005942:	f000 81b1 	beq.w	8005ca8 <_dtoa_r+0xbc0>
 8005946:	2300      	movs	r3, #0
 8005948:	4639      	mov	r1, r7
 800594a:	220a      	movs	r2, #10
 800594c:	4620      	mov	r0, r4
 800594e:	f000 fdb7 	bl	80064c0 <__multadd>
 8005952:	9b02      	ldr	r3, [sp, #8]
 8005954:	2b00      	cmp	r3, #0
 8005956:	4607      	mov	r7, r0
 8005958:	f300 808e 	bgt.w	8005a78 <_dtoa_r+0x990>
 800595c:	9b06      	ldr	r3, [sp, #24]
 800595e:	2b02      	cmp	r3, #2
 8005960:	dc51      	bgt.n	8005a06 <_dtoa_r+0x91e>
 8005962:	e089      	b.n	8005a78 <_dtoa_r+0x990>
 8005964:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005966:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800596a:	e74b      	b.n	8005804 <_dtoa_r+0x71c>
 800596c:	9b03      	ldr	r3, [sp, #12]
 800596e:	1e5e      	subs	r6, r3, #1
 8005970:	9b07      	ldr	r3, [sp, #28]
 8005972:	42b3      	cmp	r3, r6
 8005974:	bfbf      	itttt	lt
 8005976:	9b07      	ldrlt	r3, [sp, #28]
 8005978:	9607      	strlt	r6, [sp, #28]
 800597a:	1af2      	sublt	r2, r6, r3
 800597c:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800597e:	bfb6      	itet	lt
 8005980:	189b      	addlt	r3, r3, r2
 8005982:	1b9e      	subge	r6, r3, r6
 8005984:	930a      	strlt	r3, [sp, #40]	; 0x28
 8005986:	9b03      	ldr	r3, [sp, #12]
 8005988:	bfb8      	it	lt
 800598a:	2600      	movlt	r6, #0
 800598c:	2b00      	cmp	r3, #0
 800598e:	bfb7      	itett	lt
 8005990:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 8005994:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8005998:	1a9d      	sublt	r5, r3, r2
 800599a:	2300      	movlt	r3, #0
 800599c:	e734      	b.n	8005808 <_dtoa_r+0x720>
 800599e:	9e07      	ldr	r6, [sp, #28]
 80059a0:	9d04      	ldr	r5, [sp, #16]
 80059a2:	9f08      	ldr	r7, [sp, #32]
 80059a4:	e73b      	b.n	800581e <_dtoa_r+0x736>
 80059a6:	9a07      	ldr	r2, [sp, #28]
 80059a8:	e767      	b.n	800587a <_dtoa_r+0x792>
 80059aa:	9b06      	ldr	r3, [sp, #24]
 80059ac:	2b01      	cmp	r3, #1
 80059ae:	dc18      	bgt.n	80059e2 <_dtoa_r+0x8fa>
 80059b0:	f1ba 0f00 	cmp.w	sl, #0
 80059b4:	d115      	bne.n	80059e2 <_dtoa_r+0x8fa>
 80059b6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80059ba:	b993      	cbnz	r3, 80059e2 <_dtoa_r+0x8fa>
 80059bc:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80059c0:	0d1b      	lsrs	r3, r3, #20
 80059c2:	051b      	lsls	r3, r3, #20
 80059c4:	b183      	cbz	r3, 80059e8 <_dtoa_r+0x900>
 80059c6:	9b04      	ldr	r3, [sp, #16]
 80059c8:	3301      	adds	r3, #1
 80059ca:	9304      	str	r3, [sp, #16]
 80059cc:	9b05      	ldr	r3, [sp, #20]
 80059ce:	3301      	adds	r3, #1
 80059d0:	9305      	str	r3, [sp, #20]
 80059d2:	f04f 0801 	mov.w	r8, #1
 80059d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80059d8:	2b00      	cmp	r3, #0
 80059da:	f47f af6a 	bne.w	80058b2 <_dtoa_r+0x7ca>
 80059de:	2001      	movs	r0, #1
 80059e0:	e76f      	b.n	80058c2 <_dtoa_r+0x7da>
 80059e2:	f04f 0800 	mov.w	r8, #0
 80059e6:	e7f6      	b.n	80059d6 <_dtoa_r+0x8ee>
 80059e8:	4698      	mov	r8, r3
 80059ea:	e7f4      	b.n	80059d6 <_dtoa_r+0x8ee>
 80059ec:	f43f af7d 	beq.w	80058ea <_dtoa_r+0x802>
 80059f0:	4618      	mov	r0, r3
 80059f2:	301c      	adds	r0, #28
 80059f4:	e772      	b.n	80058dc <_dtoa_r+0x7f4>
 80059f6:	9b03      	ldr	r3, [sp, #12]
 80059f8:	2b00      	cmp	r3, #0
 80059fa:	dc37      	bgt.n	8005a6c <_dtoa_r+0x984>
 80059fc:	9b06      	ldr	r3, [sp, #24]
 80059fe:	2b02      	cmp	r3, #2
 8005a00:	dd34      	ble.n	8005a6c <_dtoa_r+0x984>
 8005a02:	9b03      	ldr	r3, [sp, #12]
 8005a04:	9302      	str	r3, [sp, #8]
 8005a06:	9b02      	ldr	r3, [sp, #8]
 8005a08:	b96b      	cbnz	r3, 8005a26 <_dtoa_r+0x93e>
 8005a0a:	4631      	mov	r1, r6
 8005a0c:	2205      	movs	r2, #5
 8005a0e:	4620      	mov	r0, r4
 8005a10:	f000 fd56 	bl	80064c0 <__multadd>
 8005a14:	4601      	mov	r1, r0
 8005a16:	4606      	mov	r6, r0
 8005a18:	ee18 0a10 	vmov	r0, s16
 8005a1c:	f000 ffba 	bl	8006994 <__mcmp>
 8005a20:	2800      	cmp	r0, #0
 8005a22:	f73f adbb 	bgt.w	800559c <_dtoa_r+0x4b4>
 8005a26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005a28:	9d01      	ldr	r5, [sp, #4]
 8005a2a:	43db      	mvns	r3, r3
 8005a2c:	9300      	str	r3, [sp, #0]
 8005a2e:	f04f 0800 	mov.w	r8, #0
 8005a32:	4631      	mov	r1, r6
 8005a34:	4620      	mov	r0, r4
 8005a36:	f000 fd21 	bl	800647c <_Bfree>
 8005a3a:	2f00      	cmp	r7, #0
 8005a3c:	f43f aea4 	beq.w	8005788 <_dtoa_r+0x6a0>
 8005a40:	f1b8 0f00 	cmp.w	r8, #0
 8005a44:	d005      	beq.n	8005a52 <_dtoa_r+0x96a>
 8005a46:	45b8      	cmp	r8, r7
 8005a48:	d003      	beq.n	8005a52 <_dtoa_r+0x96a>
 8005a4a:	4641      	mov	r1, r8
 8005a4c:	4620      	mov	r0, r4
 8005a4e:	f000 fd15 	bl	800647c <_Bfree>
 8005a52:	4639      	mov	r1, r7
 8005a54:	4620      	mov	r0, r4
 8005a56:	f000 fd11 	bl	800647c <_Bfree>
 8005a5a:	e695      	b.n	8005788 <_dtoa_r+0x6a0>
 8005a5c:	2600      	movs	r6, #0
 8005a5e:	4637      	mov	r7, r6
 8005a60:	e7e1      	b.n	8005a26 <_dtoa_r+0x93e>
 8005a62:	9700      	str	r7, [sp, #0]
 8005a64:	4637      	mov	r7, r6
 8005a66:	e599      	b.n	800559c <_dtoa_r+0x4b4>
 8005a68:	40240000 	.word	0x40240000
 8005a6c:	9b08      	ldr	r3, [sp, #32]
 8005a6e:	2b00      	cmp	r3, #0
 8005a70:	f000 80ca 	beq.w	8005c08 <_dtoa_r+0xb20>
 8005a74:	9b03      	ldr	r3, [sp, #12]
 8005a76:	9302      	str	r3, [sp, #8]
 8005a78:	2d00      	cmp	r5, #0
 8005a7a:	dd05      	ble.n	8005a88 <_dtoa_r+0x9a0>
 8005a7c:	4639      	mov	r1, r7
 8005a7e:	462a      	mov	r2, r5
 8005a80:	4620      	mov	r0, r4
 8005a82:	f000 ff17 	bl	80068b4 <__lshift>
 8005a86:	4607      	mov	r7, r0
 8005a88:	f1b8 0f00 	cmp.w	r8, #0
 8005a8c:	d05b      	beq.n	8005b46 <_dtoa_r+0xa5e>
 8005a8e:	6879      	ldr	r1, [r7, #4]
 8005a90:	4620      	mov	r0, r4
 8005a92:	f000 fcb3 	bl	80063fc <_Balloc>
 8005a96:	4605      	mov	r5, r0
 8005a98:	b928      	cbnz	r0, 8005aa6 <_dtoa_r+0x9be>
 8005a9a:	4b87      	ldr	r3, [pc, #540]	; (8005cb8 <_dtoa_r+0xbd0>)
 8005a9c:	4602      	mov	r2, r0
 8005a9e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8005aa2:	f7ff bb3b 	b.w	800511c <_dtoa_r+0x34>
 8005aa6:	693a      	ldr	r2, [r7, #16]
 8005aa8:	3202      	adds	r2, #2
 8005aaa:	0092      	lsls	r2, r2, #2
 8005aac:	f107 010c 	add.w	r1, r7, #12
 8005ab0:	300c      	adds	r0, #12
 8005ab2:	f000 fc95 	bl	80063e0 <memcpy>
 8005ab6:	2201      	movs	r2, #1
 8005ab8:	4629      	mov	r1, r5
 8005aba:	4620      	mov	r0, r4
 8005abc:	f000 fefa 	bl	80068b4 <__lshift>
 8005ac0:	9b01      	ldr	r3, [sp, #4]
 8005ac2:	f103 0901 	add.w	r9, r3, #1
 8005ac6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8005aca:	4413      	add	r3, r2
 8005acc:	9305      	str	r3, [sp, #20]
 8005ace:	f00a 0301 	and.w	r3, sl, #1
 8005ad2:	46b8      	mov	r8, r7
 8005ad4:	9304      	str	r3, [sp, #16]
 8005ad6:	4607      	mov	r7, r0
 8005ad8:	4631      	mov	r1, r6
 8005ada:	ee18 0a10 	vmov	r0, s16
 8005ade:	f7ff fa77 	bl	8004fd0 <quorem>
 8005ae2:	4641      	mov	r1, r8
 8005ae4:	9002      	str	r0, [sp, #8]
 8005ae6:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8005aea:	ee18 0a10 	vmov	r0, s16
 8005aee:	f000 ff51 	bl	8006994 <__mcmp>
 8005af2:	463a      	mov	r2, r7
 8005af4:	9003      	str	r0, [sp, #12]
 8005af6:	4631      	mov	r1, r6
 8005af8:	4620      	mov	r0, r4
 8005afa:	f000 ff67 	bl	80069cc <__mdiff>
 8005afe:	68c2      	ldr	r2, [r0, #12]
 8005b00:	f109 3bff 	add.w	fp, r9, #4294967295
 8005b04:	4605      	mov	r5, r0
 8005b06:	bb02      	cbnz	r2, 8005b4a <_dtoa_r+0xa62>
 8005b08:	4601      	mov	r1, r0
 8005b0a:	ee18 0a10 	vmov	r0, s16
 8005b0e:	f000 ff41 	bl	8006994 <__mcmp>
 8005b12:	4602      	mov	r2, r0
 8005b14:	4629      	mov	r1, r5
 8005b16:	4620      	mov	r0, r4
 8005b18:	9207      	str	r2, [sp, #28]
 8005b1a:	f000 fcaf 	bl	800647c <_Bfree>
 8005b1e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8005b22:	ea43 0102 	orr.w	r1, r3, r2
 8005b26:	9b04      	ldr	r3, [sp, #16]
 8005b28:	430b      	orrs	r3, r1
 8005b2a:	464d      	mov	r5, r9
 8005b2c:	d10f      	bne.n	8005b4e <_dtoa_r+0xa66>
 8005b2e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005b32:	d02a      	beq.n	8005b8a <_dtoa_r+0xaa2>
 8005b34:	9b03      	ldr	r3, [sp, #12]
 8005b36:	2b00      	cmp	r3, #0
 8005b38:	dd02      	ble.n	8005b40 <_dtoa_r+0xa58>
 8005b3a:	9b02      	ldr	r3, [sp, #8]
 8005b3c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8005b40:	f88b a000 	strb.w	sl, [fp]
 8005b44:	e775      	b.n	8005a32 <_dtoa_r+0x94a>
 8005b46:	4638      	mov	r0, r7
 8005b48:	e7ba      	b.n	8005ac0 <_dtoa_r+0x9d8>
 8005b4a:	2201      	movs	r2, #1
 8005b4c:	e7e2      	b.n	8005b14 <_dtoa_r+0xa2c>
 8005b4e:	9b03      	ldr	r3, [sp, #12]
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	db04      	blt.n	8005b5e <_dtoa_r+0xa76>
 8005b54:	9906      	ldr	r1, [sp, #24]
 8005b56:	430b      	orrs	r3, r1
 8005b58:	9904      	ldr	r1, [sp, #16]
 8005b5a:	430b      	orrs	r3, r1
 8005b5c:	d122      	bne.n	8005ba4 <_dtoa_r+0xabc>
 8005b5e:	2a00      	cmp	r2, #0
 8005b60:	ddee      	ble.n	8005b40 <_dtoa_r+0xa58>
 8005b62:	ee18 1a10 	vmov	r1, s16
 8005b66:	2201      	movs	r2, #1
 8005b68:	4620      	mov	r0, r4
 8005b6a:	f000 fea3 	bl	80068b4 <__lshift>
 8005b6e:	4631      	mov	r1, r6
 8005b70:	ee08 0a10 	vmov	s16, r0
 8005b74:	f000 ff0e 	bl	8006994 <__mcmp>
 8005b78:	2800      	cmp	r0, #0
 8005b7a:	dc03      	bgt.n	8005b84 <_dtoa_r+0xa9c>
 8005b7c:	d1e0      	bne.n	8005b40 <_dtoa_r+0xa58>
 8005b7e:	f01a 0f01 	tst.w	sl, #1
 8005b82:	d0dd      	beq.n	8005b40 <_dtoa_r+0xa58>
 8005b84:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005b88:	d1d7      	bne.n	8005b3a <_dtoa_r+0xa52>
 8005b8a:	2339      	movs	r3, #57	; 0x39
 8005b8c:	f88b 3000 	strb.w	r3, [fp]
 8005b90:	462b      	mov	r3, r5
 8005b92:	461d      	mov	r5, r3
 8005b94:	3b01      	subs	r3, #1
 8005b96:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8005b9a:	2a39      	cmp	r2, #57	; 0x39
 8005b9c:	d071      	beq.n	8005c82 <_dtoa_r+0xb9a>
 8005b9e:	3201      	adds	r2, #1
 8005ba0:	701a      	strb	r2, [r3, #0]
 8005ba2:	e746      	b.n	8005a32 <_dtoa_r+0x94a>
 8005ba4:	2a00      	cmp	r2, #0
 8005ba6:	dd07      	ble.n	8005bb8 <_dtoa_r+0xad0>
 8005ba8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005bac:	d0ed      	beq.n	8005b8a <_dtoa_r+0xaa2>
 8005bae:	f10a 0301 	add.w	r3, sl, #1
 8005bb2:	f88b 3000 	strb.w	r3, [fp]
 8005bb6:	e73c      	b.n	8005a32 <_dtoa_r+0x94a>
 8005bb8:	9b05      	ldr	r3, [sp, #20]
 8005bba:	f809 ac01 	strb.w	sl, [r9, #-1]
 8005bbe:	4599      	cmp	r9, r3
 8005bc0:	d047      	beq.n	8005c52 <_dtoa_r+0xb6a>
 8005bc2:	ee18 1a10 	vmov	r1, s16
 8005bc6:	2300      	movs	r3, #0
 8005bc8:	220a      	movs	r2, #10
 8005bca:	4620      	mov	r0, r4
 8005bcc:	f000 fc78 	bl	80064c0 <__multadd>
 8005bd0:	45b8      	cmp	r8, r7
 8005bd2:	ee08 0a10 	vmov	s16, r0
 8005bd6:	f04f 0300 	mov.w	r3, #0
 8005bda:	f04f 020a 	mov.w	r2, #10
 8005bde:	4641      	mov	r1, r8
 8005be0:	4620      	mov	r0, r4
 8005be2:	d106      	bne.n	8005bf2 <_dtoa_r+0xb0a>
 8005be4:	f000 fc6c 	bl	80064c0 <__multadd>
 8005be8:	4680      	mov	r8, r0
 8005bea:	4607      	mov	r7, r0
 8005bec:	f109 0901 	add.w	r9, r9, #1
 8005bf0:	e772      	b.n	8005ad8 <_dtoa_r+0x9f0>
 8005bf2:	f000 fc65 	bl	80064c0 <__multadd>
 8005bf6:	4639      	mov	r1, r7
 8005bf8:	4680      	mov	r8, r0
 8005bfa:	2300      	movs	r3, #0
 8005bfc:	220a      	movs	r2, #10
 8005bfe:	4620      	mov	r0, r4
 8005c00:	f000 fc5e 	bl	80064c0 <__multadd>
 8005c04:	4607      	mov	r7, r0
 8005c06:	e7f1      	b.n	8005bec <_dtoa_r+0xb04>
 8005c08:	9b03      	ldr	r3, [sp, #12]
 8005c0a:	9302      	str	r3, [sp, #8]
 8005c0c:	9d01      	ldr	r5, [sp, #4]
 8005c0e:	ee18 0a10 	vmov	r0, s16
 8005c12:	4631      	mov	r1, r6
 8005c14:	f7ff f9dc 	bl	8004fd0 <quorem>
 8005c18:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8005c1c:	9b01      	ldr	r3, [sp, #4]
 8005c1e:	f805 ab01 	strb.w	sl, [r5], #1
 8005c22:	1aea      	subs	r2, r5, r3
 8005c24:	9b02      	ldr	r3, [sp, #8]
 8005c26:	4293      	cmp	r3, r2
 8005c28:	dd09      	ble.n	8005c3e <_dtoa_r+0xb56>
 8005c2a:	ee18 1a10 	vmov	r1, s16
 8005c2e:	2300      	movs	r3, #0
 8005c30:	220a      	movs	r2, #10
 8005c32:	4620      	mov	r0, r4
 8005c34:	f000 fc44 	bl	80064c0 <__multadd>
 8005c38:	ee08 0a10 	vmov	s16, r0
 8005c3c:	e7e7      	b.n	8005c0e <_dtoa_r+0xb26>
 8005c3e:	9b02      	ldr	r3, [sp, #8]
 8005c40:	2b00      	cmp	r3, #0
 8005c42:	bfc8      	it	gt
 8005c44:	461d      	movgt	r5, r3
 8005c46:	9b01      	ldr	r3, [sp, #4]
 8005c48:	bfd8      	it	le
 8005c4a:	2501      	movle	r5, #1
 8005c4c:	441d      	add	r5, r3
 8005c4e:	f04f 0800 	mov.w	r8, #0
 8005c52:	ee18 1a10 	vmov	r1, s16
 8005c56:	2201      	movs	r2, #1
 8005c58:	4620      	mov	r0, r4
 8005c5a:	f000 fe2b 	bl	80068b4 <__lshift>
 8005c5e:	4631      	mov	r1, r6
 8005c60:	ee08 0a10 	vmov	s16, r0
 8005c64:	f000 fe96 	bl	8006994 <__mcmp>
 8005c68:	2800      	cmp	r0, #0
 8005c6a:	dc91      	bgt.n	8005b90 <_dtoa_r+0xaa8>
 8005c6c:	d102      	bne.n	8005c74 <_dtoa_r+0xb8c>
 8005c6e:	f01a 0f01 	tst.w	sl, #1
 8005c72:	d18d      	bne.n	8005b90 <_dtoa_r+0xaa8>
 8005c74:	462b      	mov	r3, r5
 8005c76:	461d      	mov	r5, r3
 8005c78:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005c7c:	2a30      	cmp	r2, #48	; 0x30
 8005c7e:	d0fa      	beq.n	8005c76 <_dtoa_r+0xb8e>
 8005c80:	e6d7      	b.n	8005a32 <_dtoa_r+0x94a>
 8005c82:	9a01      	ldr	r2, [sp, #4]
 8005c84:	429a      	cmp	r2, r3
 8005c86:	d184      	bne.n	8005b92 <_dtoa_r+0xaaa>
 8005c88:	9b00      	ldr	r3, [sp, #0]
 8005c8a:	3301      	adds	r3, #1
 8005c8c:	9300      	str	r3, [sp, #0]
 8005c8e:	2331      	movs	r3, #49	; 0x31
 8005c90:	7013      	strb	r3, [r2, #0]
 8005c92:	e6ce      	b.n	8005a32 <_dtoa_r+0x94a>
 8005c94:	4b09      	ldr	r3, [pc, #36]	; (8005cbc <_dtoa_r+0xbd4>)
 8005c96:	f7ff ba95 	b.w	80051c4 <_dtoa_r+0xdc>
 8005c9a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005c9c:	2b00      	cmp	r3, #0
 8005c9e:	f47f aa6e 	bne.w	800517e <_dtoa_r+0x96>
 8005ca2:	4b07      	ldr	r3, [pc, #28]	; (8005cc0 <_dtoa_r+0xbd8>)
 8005ca4:	f7ff ba8e 	b.w	80051c4 <_dtoa_r+0xdc>
 8005ca8:	9b02      	ldr	r3, [sp, #8]
 8005caa:	2b00      	cmp	r3, #0
 8005cac:	dcae      	bgt.n	8005c0c <_dtoa_r+0xb24>
 8005cae:	9b06      	ldr	r3, [sp, #24]
 8005cb0:	2b02      	cmp	r3, #2
 8005cb2:	f73f aea8 	bgt.w	8005a06 <_dtoa_r+0x91e>
 8005cb6:	e7a9      	b.n	8005c0c <_dtoa_r+0xb24>
 8005cb8:	08008da8 	.word	0x08008da8
 8005cbc:	08008bac 	.word	0x08008bac
 8005cc0:	08008d29 	.word	0x08008d29

08005cc4 <rshift>:
 8005cc4:	6903      	ldr	r3, [r0, #16]
 8005cc6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005cca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005cce:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005cd2:	f100 0414 	add.w	r4, r0, #20
 8005cd6:	dd45      	ble.n	8005d64 <rshift+0xa0>
 8005cd8:	f011 011f 	ands.w	r1, r1, #31
 8005cdc:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005ce0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005ce4:	d10c      	bne.n	8005d00 <rshift+0x3c>
 8005ce6:	f100 0710 	add.w	r7, r0, #16
 8005cea:	4629      	mov	r1, r5
 8005cec:	42b1      	cmp	r1, r6
 8005cee:	d334      	bcc.n	8005d5a <rshift+0x96>
 8005cf0:	1a9b      	subs	r3, r3, r2
 8005cf2:	009b      	lsls	r3, r3, #2
 8005cf4:	1eea      	subs	r2, r5, #3
 8005cf6:	4296      	cmp	r6, r2
 8005cf8:	bf38      	it	cc
 8005cfa:	2300      	movcc	r3, #0
 8005cfc:	4423      	add	r3, r4
 8005cfe:	e015      	b.n	8005d2c <rshift+0x68>
 8005d00:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005d04:	f1c1 0820 	rsb	r8, r1, #32
 8005d08:	40cf      	lsrs	r7, r1
 8005d0a:	f105 0e04 	add.w	lr, r5, #4
 8005d0e:	46a1      	mov	r9, r4
 8005d10:	4576      	cmp	r6, lr
 8005d12:	46f4      	mov	ip, lr
 8005d14:	d815      	bhi.n	8005d42 <rshift+0x7e>
 8005d16:	1a9a      	subs	r2, r3, r2
 8005d18:	0092      	lsls	r2, r2, #2
 8005d1a:	3a04      	subs	r2, #4
 8005d1c:	3501      	adds	r5, #1
 8005d1e:	42ae      	cmp	r6, r5
 8005d20:	bf38      	it	cc
 8005d22:	2200      	movcc	r2, #0
 8005d24:	18a3      	adds	r3, r4, r2
 8005d26:	50a7      	str	r7, [r4, r2]
 8005d28:	b107      	cbz	r7, 8005d2c <rshift+0x68>
 8005d2a:	3304      	adds	r3, #4
 8005d2c:	1b1a      	subs	r2, r3, r4
 8005d2e:	42a3      	cmp	r3, r4
 8005d30:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005d34:	bf08      	it	eq
 8005d36:	2300      	moveq	r3, #0
 8005d38:	6102      	str	r2, [r0, #16]
 8005d3a:	bf08      	it	eq
 8005d3c:	6143      	streq	r3, [r0, #20]
 8005d3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005d42:	f8dc c000 	ldr.w	ip, [ip]
 8005d46:	fa0c fc08 	lsl.w	ip, ip, r8
 8005d4a:	ea4c 0707 	orr.w	r7, ip, r7
 8005d4e:	f849 7b04 	str.w	r7, [r9], #4
 8005d52:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005d56:	40cf      	lsrs	r7, r1
 8005d58:	e7da      	b.n	8005d10 <rshift+0x4c>
 8005d5a:	f851 cb04 	ldr.w	ip, [r1], #4
 8005d5e:	f847 cf04 	str.w	ip, [r7, #4]!
 8005d62:	e7c3      	b.n	8005cec <rshift+0x28>
 8005d64:	4623      	mov	r3, r4
 8005d66:	e7e1      	b.n	8005d2c <rshift+0x68>

08005d68 <__hexdig_fun>:
 8005d68:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8005d6c:	2b09      	cmp	r3, #9
 8005d6e:	d802      	bhi.n	8005d76 <__hexdig_fun+0xe>
 8005d70:	3820      	subs	r0, #32
 8005d72:	b2c0      	uxtb	r0, r0
 8005d74:	4770      	bx	lr
 8005d76:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8005d7a:	2b05      	cmp	r3, #5
 8005d7c:	d801      	bhi.n	8005d82 <__hexdig_fun+0x1a>
 8005d7e:	3847      	subs	r0, #71	; 0x47
 8005d80:	e7f7      	b.n	8005d72 <__hexdig_fun+0xa>
 8005d82:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005d86:	2b05      	cmp	r3, #5
 8005d88:	d801      	bhi.n	8005d8e <__hexdig_fun+0x26>
 8005d8a:	3827      	subs	r0, #39	; 0x27
 8005d8c:	e7f1      	b.n	8005d72 <__hexdig_fun+0xa>
 8005d8e:	2000      	movs	r0, #0
 8005d90:	4770      	bx	lr
	...

08005d94 <__gethex>:
 8005d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d98:	ed2d 8b02 	vpush	{d8}
 8005d9c:	b089      	sub	sp, #36	; 0x24
 8005d9e:	ee08 0a10 	vmov	s16, r0
 8005da2:	9304      	str	r3, [sp, #16]
 8005da4:	4bb4      	ldr	r3, [pc, #720]	; (8006078 <__gethex+0x2e4>)
 8005da6:	681b      	ldr	r3, [r3, #0]
 8005da8:	9301      	str	r3, [sp, #4]
 8005daa:	4618      	mov	r0, r3
 8005dac:	468b      	mov	fp, r1
 8005dae:	4690      	mov	r8, r2
 8005db0:	f7fa fa16 	bl	80001e0 <strlen>
 8005db4:	9b01      	ldr	r3, [sp, #4]
 8005db6:	f8db 2000 	ldr.w	r2, [fp]
 8005dba:	4403      	add	r3, r0
 8005dbc:	4682      	mov	sl, r0
 8005dbe:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8005dc2:	9305      	str	r3, [sp, #20]
 8005dc4:	1c93      	adds	r3, r2, #2
 8005dc6:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8005dca:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005dce:	32fe      	adds	r2, #254	; 0xfe
 8005dd0:	18d1      	adds	r1, r2, r3
 8005dd2:	461f      	mov	r7, r3
 8005dd4:	f813 0b01 	ldrb.w	r0, [r3], #1
 8005dd8:	9100      	str	r1, [sp, #0]
 8005dda:	2830      	cmp	r0, #48	; 0x30
 8005ddc:	d0f8      	beq.n	8005dd0 <__gethex+0x3c>
 8005dde:	f7ff ffc3 	bl	8005d68 <__hexdig_fun>
 8005de2:	4604      	mov	r4, r0
 8005de4:	2800      	cmp	r0, #0
 8005de6:	d13a      	bne.n	8005e5e <__gethex+0xca>
 8005de8:	9901      	ldr	r1, [sp, #4]
 8005dea:	4652      	mov	r2, sl
 8005dec:	4638      	mov	r0, r7
 8005dee:	f001 fa33 	bl	8007258 <strncmp>
 8005df2:	4605      	mov	r5, r0
 8005df4:	2800      	cmp	r0, #0
 8005df6:	d168      	bne.n	8005eca <__gethex+0x136>
 8005df8:	f817 000a 	ldrb.w	r0, [r7, sl]
 8005dfc:	eb07 060a 	add.w	r6, r7, sl
 8005e00:	f7ff ffb2 	bl	8005d68 <__hexdig_fun>
 8005e04:	2800      	cmp	r0, #0
 8005e06:	d062      	beq.n	8005ece <__gethex+0x13a>
 8005e08:	4633      	mov	r3, r6
 8005e0a:	7818      	ldrb	r0, [r3, #0]
 8005e0c:	2830      	cmp	r0, #48	; 0x30
 8005e0e:	461f      	mov	r7, r3
 8005e10:	f103 0301 	add.w	r3, r3, #1
 8005e14:	d0f9      	beq.n	8005e0a <__gethex+0x76>
 8005e16:	f7ff ffa7 	bl	8005d68 <__hexdig_fun>
 8005e1a:	2301      	movs	r3, #1
 8005e1c:	fab0 f480 	clz	r4, r0
 8005e20:	0964      	lsrs	r4, r4, #5
 8005e22:	4635      	mov	r5, r6
 8005e24:	9300      	str	r3, [sp, #0]
 8005e26:	463a      	mov	r2, r7
 8005e28:	4616      	mov	r6, r2
 8005e2a:	3201      	adds	r2, #1
 8005e2c:	7830      	ldrb	r0, [r6, #0]
 8005e2e:	f7ff ff9b 	bl	8005d68 <__hexdig_fun>
 8005e32:	2800      	cmp	r0, #0
 8005e34:	d1f8      	bne.n	8005e28 <__gethex+0x94>
 8005e36:	9901      	ldr	r1, [sp, #4]
 8005e38:	4652      	mov	r2, sl
 8005e3a:	4630      	mov	r0, r6
 8005e3c:	f001 fa0c 	bl	8007258 <strncmp>
 8005e40:	b980      	cbnz	r0, 8005e64 <__gethex+0xd0>
 8005e42:	b94d      	cbnz	r5, 8005e58 <__gethex+0xc4>
 8005e44:	eb06 050a 	add.w	r5, r6, sl
 8005e48:	462a      	mov	r2, r5
 8005e4a:	4616      	mov	r6, r2
 8005e4c:	3201      	adds	r2, #1
 8005e4e:	7830      	ldrb	r0, [r6, #0]
 8005e50:	f7ff ff8a 	bl	8005d68 <__hexdig_fun>
 8005e54:	2800      	cmp	r0, #0
 8005e56:	d1f8      	bne.n	8005e4a <__gethex+0xb6>
 8005e58:	1bad      	subs	r5, r5, r6
 8005e5a:	00ad      	lsls	r5, r5, #2
 8005e5c:	e004      	b.n	8005e68 <__gethex+0xd4>
 8005e5e:	2400      	movs	r4, #0
 8005e60:	4625      	mov	r5, r4
 8005e62:	e7e0      	b.n	8005e26 <__gethex+0x92>
 8005e64:	2d00      	cmp	r5, #0
 8005e66:	d1f7      	bne.n	8005e58 <__gethex+0xc4>
 8005e68:	7833      	ldrb	r3, [r6, #0]
 8005e6a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005e6e:	2b50      	cmp	r3, #80	; 0x50
 8005e70:	d13b      	bne.n	8005eea <__gethex+0x156>
 8005e72:	7873      	ldrb	r3, [r6, #1]
 8005e74:	2b2b      	cmp	r3, #43	; 0x2b
 8005e76:	d02c      	beq.n	8005ed2 <__gethex+0x13e>
 8005e78:	2b2d      	cmp	r3, #45	; 0x2d
 8005e7a:	d02e      	beq.n	8005eda <__gethex+0x146>
 8005e7c:	1c71      	adds	r1, r6, #1
 8005e7e:	f04f 0900 	mov.w	r9, #0
 8005e82:	7808      	ldrb	r0, [r1, #0]
 8005e84:	f7ff ff70 	bl	8005d68 <__hexdig_fun>
 8005e88:	1e43      	subs	r3, r0, #1
 8005e8a:	b2db      	uxtb	r3, r3
 8005e8c:	2b18      	cmp	r3, #24
 8005e8e:	d82c      	bhi.n	8005eea <__gethex+0x156>
 8005e90:	f1a0 0210 	sub.w	r2, r0, #16
 8005e94:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005e98:	f7ff ff66 	bl	8005d68 <__hexdig_fun>
 8005e9c:	1e43      	subs	r3, r0, #1
 8005e9e:	b2db      	uxtb	r3, r3
 8005ea0:	2b18      	cmp	r3, #24
 8005ea2:	d91d      	bls.n	8005ee0 <__gethex+0x14c>
 8005ea4:	f1b9 0f00 	cmp.w	r9, #0
 8005ea8:	d000      	beq.n	8005eac <__gethex+0x118>
 8005eaa:	4252      	negs	r2, r2
 8005eac:	4415      	add	r5, r2
 8005eae:	f8cb 1000 	str.w	r1, [fp]
 8005eb2:	b1e4      	cbz	r4, 8005eee <__gethex+0x15a>
 8005eb4:	9b00      	ldr	r3, [sp, #0]
 8005eb6:	2b00      	cmp	r3, #0
 8005eb8:	bf14      	ite	ne
 8005eba:	2700      	movne	r7, #0
 8005ebc:	2706      	moveq	r7, #6
 8005ebe:	4638      	mov	r0, r7
 8005ec0:	b009      	add	sp, #36	; 0x24
 8005ec2:	ecbd 8b02 	vpop	{d8}
 8005ec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005eca:	463e      	mov	r6, r7
 8005ecc:	4625      	mov	r5, r4
 8005ece:	2401      	movs	r4, #1
 8005ed0:	e7ca      	b.n	8005e68 <__gethex+0xd4>
 8005ed2:	f04f 0900 	mov.w	r9, #0
 8005ed6:	1cb1      	adds	r1, r6, #2
 8005ed8:	e7d3      	b.n	8005e82 <__gethex+0xee>
 8005eda:	f04f 0901 	mov.w	r9, #1
 8005ede:	e7fa      	b.n	8005ed6 <__gethex+0x142>
 8005ee0:	230a      	movs	r3, #10
 8005ee2:	fb03 0202 	mla	r2, r3, r2, r0
 8005ee6:	3a10      	subs	r2, #16
 8005ee8:	e7d4      	b.n	8005e94 <__gethex+0x100>
 8005eea:	4631      	mov	r1, r6
 8005eec:	e7df      	b.n	8005eae <__gethex+0x11a>
 8005eee:	1bf3      	subs	r3, r6, r7
 8005ef0:	3b01      	subs	r3, #1
 8005ef2:	4621      	mov	r1, r4
 8005ef4:	2b07      	cmp	r3, #7
 8005ef6:	dc0b      	bgt.n	8005f10 <__gethex+0x17c>
 8005ef8:	ee18 0a10 	vmov	r0, s16
 8005efc:	f000 fa7e 	bl	80063fc <_Balloc>
 8005f00:	4604      	mov	r4, r0
 8005f02:	b940      	cbnz	r0, 8005f16 <__gethex+0x182>
 8005f04:	4b5d      	ldr	r3, [pc, #372]	; (800607c <__gethex+0x2e8>)
 8005f06:	4602      	mov	r2, r0
 8005f08:	21de      	movs	r1, #222	; 0xde
 8005f0a:	485d      	ldr	r0, [pc, #372]	; (8006080 <__gethex+0x2ec>)
 8005f0c:	f001 f9c6 	bl	800729c <__assert_func>
 8005f10:	3101      	adds	r1, #1
 8005f12:	105b      	asrs	r3, r3, #1
 8005f14:	e7ee      	b.n	8005ef4 <__gethex+0x160>
 8005f16:	f100 0914 	add.w	r9, r0, #20
 8005f1a:	f04f 0b00 	mov.w	fp, #0
 8005f1e:	f1ca 0301 	rsb	r3, sl, #1
 8005f22:	f8cd 9008 	str.w	r9, [sp, #8]
 8005f26:	f8cd b000 	str.w	fp, [sp]
 8005f2a:	9306      	str	r3, [sp, #24]
 8005f2c:	42b7      	cmp	r7, r6
 8005f2e:	d340      	bcc.n	8005fb2 <__gethex+0x21e>
 8005f30:	9802      	ldr	r0, [sp, #8]
 8005f32:	9b00      	ldr	r3, [sp, #0]
 8005f34:	f840 3b04 	str.w	r3, [r0], #4
 8005f38:	eba0 0009 	sub.w	r0, r0, r9
 8005f3c:	1080      	asrs	r0, r0, #2
 8005f3e:	0146      	lsls	r6, r0, #5
 8005f40:	6120      	str	r0, [r4, #16]
 8005f42:	4618      	mov	r0, r3
 8005f44:	f000 fb4c 	bl	80065e0 <__hi0bits>
 8005f48:	1a30      	subs	r0, r6, r0
 8005f4a:	f8d8 6000 	ldr.w	r6, [r8]
 8005f4e:	42b0      	cmp	r0, r6
 8005f50:	dd63      	ble.n	800601a <__gethex+0x286>
 8005f52:	1b87      	subs	r7, r0, r6
 8005f54:	4639      	mov	r1, r7
 8005f56:	4620      	mov	r0, r4
 8005f58:	f000 fef0 	bl	8006d3c <__any_on>
 8005f5c:	4682      	mov	sl, r0
 8005f5e:	b1a8      	cbz	r0, 8005f8c <__gethex+0x1f8>
 8005f60:	1e7b      	subs	r3, r7, #1
 8005f62:	1159      	asrs	r1, r3, #5
 8005f64:	f003 021f 	and.w	r2, r3, #31
 8005f68:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8005f6c:	f04f 0a01 	mov.w	sl, #1
 8005f70:	fa0a f202 	lsl.w	r2, sl, r2
 8005f74:	420a      	tst	r2, r1
 8005f76:	d009      	beq.n	8005f8c <__gethex+0x1f8>
 8005f78:	4553      	cmp	r3, sl
 8005f7a:	dd05      	ble.n	8005f88 <__gethex+0x1f4>
 8005f7c:	1eb9      	subs	r1, r7, #2
 8005f7e:	4620      	mov	r0, r4
 8005f80:	f000 fedc 	bl	8006d3c <__any_on>
 8005f84:	2800      	cmp	r0, #0
 8005f86:	d145      	bne.n	8006014 <__gethex+0x280>
 8005f88:	f04f 0a02 	mov.w	sl, #2
 8005f8c:	4639      	mov	r1, r7
 8005f8e:	4620      	mov	r0, r4
 8005f90:	f7ff fe98 	bl	8005cc4 <rshift>
 8005f94:	443d      	add	r5, r7
 8005f96:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005f9a:	42ab      	cmp	r3, r5
 8005f9c:	da4c      	bge.n	8006038 <__gethex+0x2a4>
 8005f9e:	ee18 0a10 	vmov	r0, s16
 8005fa2:	4621      	mov	r1, r4
 8005fa4:	f000 fa6a 	bl	800647c <_Bfree>
 8005fa8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005faa:	2300      	movs	r3, #0
 8005fac:	6013      	str	r3, [r2, #0]
 8005fae:	27a3      	movs	r7, #163	; 0xa3
 8005fb0:	e785      	b.n	8005ebe <__gethex+0x12a>
 8005fb2:	1e73      	subs	r3, r6, #1
 8005fb4:	9a05      	ldr	r2, [sp, #20]
 8005fb6:	9303      	str	r3, [sp, #12]
 8005fb8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8005fbc:	4293      	cmp	r3, r2
 8005fbe:	d019      	beq.n	8005ff4 <__gethex+0x260>
 8005fc0:	f1bb 0f20 	cmp.w	fp, #32
 8005fc4:	d107      	bne.n	8005fd6 <__gethex+0x242>
 8005fc6:	9b02      	ldr	r3, [sp, #8]
 8005fc8:	9a00      	ldr	r2, [sp, #0]
 8005fca:	f843 2b04 	str.w	r2, [r3], #4
 8005fce:	9302      	str	r3, [sp, #8]
 8005fd0:	2300      	movs	r3, #0
 8005fd2:	9300      	str	r3, [sp, #0]
 8005fd4:	469b      	mov	fp, r3
 8005fd6:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8005fda:	f7ff fec5 	bl	8005d68 <__hexdig_fun>
 8005fde:	9b00      	ldr	r3, [sp, #0]
 8005fe0:	f000 000f 	and.w	r0, r0, #15
 8005fe4:	fa00 f00b 	lsl.w	r0, r0, fp
 8005fe8:	4303      	orrs	r3, r0
 8005fea:	9300      	str	r3, [sp, #0]
 8005fec:	f10b 0b04 	add.w	fp, fp, #4
 8005ff0:	9b03      	ldr	r3, [sp, #12]
 8005ff2:	e00d      	b.n	8006010 <__gethex+0x27c>
 8005ff4:	9b03      	ldr	r3, [sp, #12]
 8005ff6:	9a06      	ldr	r2, [sp, #24]
 8005ff8:	4413      	add	r3, r2
 8005ffa:	42bb      	cmp	r3, r7
 8005ffc:	d3e0      	bcc.n	8005fc0 <__gethex+0x22c>
 8005ffe:	4618      	mov	r0, r3
 8006000:	9901      	ldr	r1, [sp, #4]
 8006002:	9307      	str	r3, [sp, #28]
 8006004:	4652      	mov	r2, sl
 8006006:	f001 f927 	bl	8007258 <strncmp>
 800600a:	9b07      	ldr	r3, [sp, #28]
 800600c:	2800      	cmp	r0, #0
 800600e:	d1d7      	bne.n	8005fc0 <__gethex+0x22c>
 8006010:	461e      	mov	r6, r3
 8006012:	e78b      	b.n	8005f2c <__gethex+0x198>
 8006014:	f04f 0a03 	mov.w	sl, #3
 8006018:	e7b8      	b.n	8005f8c <__gethex+0x1f8>
 800601a:	da0a      	bge.n	8006032 <__gethex+0x29e>
 800601c:	1a37      	subs	r7, r6, r0
 800601e:	4621      	mov	r1, r4
 8006020:	ee18 0a10 	vmov	r0, s16
 8006024:	463a      	mov	r2, r7
 8006026:	f000 fc45 	bl	80068b4 <__lshift>
 800602a:	1bed      	subs	r5, r5, r7
 800602c:	4604      	mov	r4, r0
 800602e:	f100 0914 	add.w	r9, r0, #20
 8006032:	f04f 0a00 	mov.w	sl, #0
 8006036:	e7ae      	b.n	8005f96 <__gethex+0x202>
 8006038:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800603c:	42a8      	cmp	r0, r5
 800603e:	dd72      	ble.n	8006126 <__gethex+0x392>
 8006040:	1b45      	subs	r5, r0, r5
 8006042:	42ae      	cmp	r6, r5
 8006044:	dc36      	bgt.n	80060b4 <__gethex+0x320>
 8006046:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800604a:	2b02      	cmp	r3, #2
 800604c:	d02a      	beq.n	80060a4 <__gethex+0x310>
 800604e:	2b03      	cmp	r3, #3
 8006050:	d02c      	beq.n	80060ac <__gethex+0x318>
 8006052:	2b01      	cmp	r3, #1
 8006054:	d11c      	bne.n	8006090 <__gethex+0x2fc>
 8006056:	42ae      	cmp	r6, r5
 8006058:	d11a      	bne.n	8006090 <__gethex+0x2fc>
 800605a:	2e01      	cmp	r6, #1
 800605c:	d112      	bne.n	8006084 <__gethex+0x2f0>
 800605e:	9a04      	ldr	r2, [sp, #16]
 8006060:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8006064:	6013      	str	r3, [r2, #0]
 8006066:	2301      	movs	r3, #1
 8006068:	6123      	str	r3, [r4, #16]
 800606a:	f8c9 3000 	str.w	r3, [r9]
 800606e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006070:	2762      	movs	r7, #98	; 0x62
 8006072:	601c      	str	r4, [r3, #0]
 8006074:	e723      	b.n	8005ebe <__gethex+0x12a>
 8006076:	bf00      	nop
 8006078:	08008e20 	.word	0x08008e20
 800607c:	08008da8 	.word	0x08008da8
 8006080:	08008db9 	.word	0x08008db9
 8006084:	1e71      	subs	r1, r6, #1
 8006086:	4620      	mov	r0, r4
 8006088:	f000 fe58 	bl	8006d3c <__any_on>
 800608c:	2800      	cmp	r0, #0
 800608e:	d1e6      	bne.n	800605e <__gethex+0x2ca>
 8006090:	ee18 0a10 	vmov	r0, s16
 8006094:	4621      	mov	r1, r4
 8006096:	f000 f9f1 	bl	800647c <_Bfree>
 800609a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800609c:	2300      	movs	r3, #0
 800609e:	6013      	str	r3, [r2, #0]
 80060a0:	2750      	movs	r7, #80	; 0x50
 80060a2:	e70c      	b.n	8005ebe <__gethex+0x12a>
 80060a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80060a6:	2b00      	cmp	r3, #0
 80060a8:	d1f2      	bne.n	8006090 <__gethex+0x2fc>
 80060aa:	e7d8      	b.n	800605e <__gethex+0x2ca>
 80060ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80060ae:	2b00      	cmp	r3, #0
 80060b0:	d1d5      	bne.n	800605e <__gethex+0x2ca>
 80060b2:	e7ed      	b.n	8006090 <__gethex+0x2fc>
 80060b4:	1e6f      	subs	r7, r5, #1
 80060b6:	f1ba 0f00 	cmp.w	sl, #0
 80060ba:	d131      	bne.n	8006120 <__gethex+0x38c>
 80060bc:	b127      	cbz	r7, 80060c8 <__gethex+0x334>
 80060be:	4639      	mov	r1, r7
 80060c0:	4620      	mov	r0, r4
 80060c2:	f000 fe3b 	bl	8006d3c <__any_on>
 80060c6:	4682      	mov	sl, r0
 80060c8:	117b      	asrs	r3, r7, #5
 80060ca:	2101      	movs	r1, #1
 80060cc:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80060d0:	f007 071f 	and.w	r7, r7, #31
 80060d4:	fa01 f707 	lsl.w	r7, r1, r7
 80060d8:	421f      	tst	r7, r3
 80060da:	4629      	mov	r1, r5
 80060dc:	4620      	mov	r0, r4
 80060de:	bf18      	it	ne
 80060e0:	f04a 0a02 	orrne.w	sl, sl, #2
 80060e4:	1b76      	subs	r6, r6, r5
 80060e6:	f7ff fded 	bl	8005cc4 <rshift>
 80060ea:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80060ee:	2702      	movs	r7, #2
 80060f0:	f1ba 0f00 	cmp.w	sl, #0
 80060f4:	d048      	beq.n	8006188 <__gethex+0x3f4>
 80060f6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80060fa:	2b02      	cmp	r3, #2
 80060fc:	d015      	beq.n	800612a <__gethex+0x396>
 80060fe:	2b03      	cmp	r3, #3
 8006100:	d017      	beq.n	8006132 <__gethex+0x39e>
 8006102:	2b01      	cmp	r3, #1
 8006104:	d109      	bne.n	800611a <__gethex+0x386>
 8006106:	f01a 0f02 	tst.w	sl, #2
 800610a:	d006      	beq.n	800611a <__gethex+0x386>
 800610c:	f8d9 0000 	ldr.w	r0, [r9]
 8006110:	ea4a 0a00 	orr.w	sl, sl, r0
 8006114:	f01a 0f01 	tst.w	sl, #1
 8006118:	d10e      	bne.n	8006138 <__gethex+0x3a4>
 800611a:	f047 0710 	orr.w	r7, r7, #16
 800611e:	e033      	b.n	8006188 <__gethex+0x3f4>
 8006120:	f04f 0a01 	mov.w	sl, #1
 8006124:	e7d0      	b.n	80060c8 <__gethex+0x334>
 8006126:	2701      	movs	r7, #1
 8006128:	e7e2      	b.n	80060f0 <__gethex+0x35c>
 800612a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800612c:	f1c3 0301 	rsb	r3, r3, #1
 8006130:	9315      	str	r3, [sp, #84]	; 0x54
 8006132:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006134:	2b00      	cmp	r3, #0
 8006136:	d0f0      	beq.n	800611a <__gethex+0x386>
 8006138:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800613c:	f104 0314 	add.w	r3, r4, #20
 8006140:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8006144:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8006148:	f04f 0c00 	mov.w	ip, #0
 800614c:	4618      	mov	r0, r3
 800614e:	f853 2b04 	ldr.w	r2, [r3], #4
 8006152:	f1b2 3fff 	cmp.w	r2, #4294967295
 8006156:	d01c      	beq.n	8006192 <__gethex+0x3fe>
 8006158:	3201      	adds	r2, #1
 800615a:	6002      	str	r2, [r0, #0]
 800615c:	2f02      	cmp	r7, #2
 800615e:	f104 0314 	add.w	r3, r4, #20
 8006162:	d13f      	bne.n	80061e4 <__gethex+0x450>
 8006164:	f8d8 2000 	ldr.w	r2, [r8]
 8006168:	3a01      	subs	r2, #1
 800616a:	42b2      	cmp	r2, r6
 800616c:	d10a      	bne.n	8006184 <__gethex+0x3f0>
 800616e:	1171      	asrs	r1, r6, #5
 8006170:	2201      	movs	r2, #1
 8006172:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8006176:	f006 061f 	and.w	r6, r6, #31
 800617a:	fa02 f606 	lsl.w	r6, r2, r6
 800617e:	421e      	tst	r6, r3
 8006180:	bf18      	it	ne
 8006182:	4617      	movne	r7, r2
 8006184:	f047 0720 	orr.w	r7, r7, #32
 8006188:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800618a:	601c      	str	r4, [r3, #0]
 800618c:	9b04      	ldr	r3, [sp, #16]
 800618e:	601d      	str	r5, [r3, #0]
 8006190:	e695      	b.n	8005ebe <__gethex+0x12a>
 8006192:	4299      	cmp	r1, r3
 8006194:	f843 cc04 	str.w	ip, [r3, #-4]
 8006198:	d8d8      	bhi.n	800614c <__gethex+0x3b8>
 800619a:	68a3      	ldr	r3, [r4, #8]
 800619c:	459b      	cmp	fp, r3
 800619e:	db19      	blt.n	80061d4 <__gethex+0x440>
 80061a0:	6861      	ldr	r1, [r4, #4]
 80061a2:	ee18 0a10 	vmov	r0, s16
 80061a6:	3101      	adds	r1, #1
 80061a8:	f000 f928 	bl	80063fc <_Balloc>
 80061ac:	4681      	mov	r9, r0
 80061ae:	b918      	cbnz	r0, 80061b8 <__gethex+0x424>
 80061b0:	4b1a      	ldr	r3, [pc, #104]	; (800621c <__gethex+0x488>)
 80061b2:	4602      	mov	r2, r0
 80061b4:	2184      	movs	r1, #132	; 0x84
 80061b6:	e6a8      	b.n	8005f0a <__gethex+0x176>
 80061b8:	6922      	ldr	r2, [r4, #16]
 80061ba:	3202      	adds	r2, #2
 80061bc:	f104 010c 	add.w	r1, r4, #12
 80061c0:	0092      	lsls	r2, r2, #2
 80061c2:	300c      	adds	r0, #12
 80061c4:	f000 f90c 	bl	80063e0 <memcpy>
 80061c8:	4621      	mov	r1, r4
 80061ca:	ee18 0a10 	vmov	r0, s16
 80061ce:	f000 f955 	bl	800647c <_Bfree>
 80061d2:	464c      	mov	r4, r9
 80061d4:	6923      	ldr	r3, [r4, #16]
 80061d6:	1c5a      	adds	r2, r3, #1
 80061d8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80061dc:	6122      	str	r2, [r4, #16]
 80061de:	2201      	movs	r2, #1
 80061e0:	615a      	str	r2, [r3, #20]
 80061e2:	e7bb      	b.n	800615c <__gethex+0x3c8>
 80061e4:	6922      	ldr	r2, [r4, #16]
 80061e6:	455a      	cmp	r2, fp
 80061e8:	dd0b      	ble.n	8006202 <__gethex+0x46e>
 80061ea:	2101      	movs	r1, #1
 80061ec:	4620      	mov	r0, r4
 80061ee:	f7ff fd69 	bl	8005cc4 <rshift>
 80061f2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80061f6:	3501      	adds	r5, #1
 80061f8:	42ab      	cmp	r3, r5
 80061fa:	f6ff aed0 	blt.w	8005f9e <__gethex+0x20a>
 80061fe:	2701      	movs	r7, #1
 8006200:	e7c0      	b.n	8006184 <__gethex+0x3f0>
 8006202:	f016 061f 	ands.w	r6, r6, #31
 8006206:	d0fa      	beq.n	80061fe <__gethex+0x46a>
 8006208:	4453      	add	r3, sl
 800620a:	f1c6 0620 	rsb	r6, r6, #32
 800620e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8006212:	f000 f9e5 	bl	80065e0 <__hi0bits>
 8006216:	42b0      	cmp	r0, r6
 8006218:	dbe7      	blt.n	80061ea <__gethex+0x456>
 800621a:	e7f0      	b.n	80061fe <__gethex+0x46a>
 800621c:	08008da8 	.word	0x08008da8

08006220 <L_shift>:
 8006220:	f1c2 0208 	rsb	r2, r2, #8
 8006224:	0092      	lsls	r2, r2, #2
 8006226:	b570      	push	{r4, r5, r6, lr}
 8006228:	f1c2 0620 	rsb	r6, r2, #32
 800622c:	6843      	ldr	r3, [r0, #4]
 800622e:	6804      	ldr	r4, [r0, #0]
 8006230:	fa03 f506 	lsl.w	r5, r3, r6
 8006234:	432c      	orrs	r4, r5
 8006236:	40d3      	lsrs	r3, r2
 8006238:	6004      	str	r4, [r0, #0]
 800623a:	f840 3f04 	str.w	r3, [r0, #4]!
 800623e:	4288      	cmp	r0, r1
 8006240:	d3f4      	bcc.n	800622c <L_shift+0xc>
 8006242:	bd70      	pop	{r4, r5, r6, pc}

08006244 <__match>:
 8006244:	b530      	push	{r4, r5, lr}
 8006246:	6803      	ldr	r3, [r0, #0]
 8006248:	3301      	adds	r3, #1
 800624a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800624e:	b914      	cbnz	r4, 8006256 <__match+0x12>
 8006250:	6003      	str	r3, [r0, #0]
 8006252:	2001      	movs	r0, #1
 8006254:	bd30      	pop	{r4, r5, pc}
 8006256:	f813 2b01 	ldrb.w	r2, [r3], #1
 800625a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800625e:	2d19      	cmp	r5, #25
 8006260:	bf98      	it	ls
 8006262:	3220      	addls	r2, #32
 8006264:	42a2      	cmp	r2, r4
 8006266:	d0f0      	beq.n	800624a <__match+0x6>
 8006268:	2000      	movs	r0, #0
 800626a:	e7f3      	b.n	8006254 <__match+0x10>

0800626c <__hexnan>:
 800626c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006270:	680b      	ldr	r3, [r1, #0]
 8006272:	115e      	asrs	r6, r3, #5
 8006274:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8006278:	f013 031f 	ands.w	r3, r3, #31
 800627c:	b087      	sub	sp, #28
 800627e:	bf18      	it	ne
 8006280:	3604      	addne	r6, #4
 8006282:	2500      	movs	r5, #0
 8006284:	1f37      	subs	r7, r6, #4
 8006286:	4690      	mov	r8, r2
 8006288:	6802      	ldr	r2, [r0, #0]
 800628a:	9301      	str	r3, [sp, #4]
 800628c:	4682      	mov	sl, r0
 800628e:	f846 5c04 	str.w	r5, [r6, #-4]
 8006292:	46b9      	mov	r9, r7
 8006294:	463c      	mov	r4, r7
 8006296:	9502      	str	r5, [sp, #8]
 8006298:	46ab      	mov	fp, r5
 800629a:	7851      	ldrb	r1, [r2, #1]
 800629c:	1c53      	adds	r3, r2, #1
 800629e:	9303      	str	r3, [sp, #12]
 80062a0:	b341      	cbz	r1, 80062f4 <__hexnan+0x88>
 80062a2:	4608      	mov	r0, r1
 80062a4:	9205      	str	r2, [sp, #20]
 80062a6:	9104      	str	r1, [sp, #16]
 80062a8:	f7ff fd5e 	bl	8005d68 <__hexdig_fun>
 80062ac:	2800      	cmp	r0, #0
 80062ae:	d14f      	bne.n	8006350 <__hexnan+0xe4>
 80062b0:	9904      	ldr	r1, [sp, #16]
 80062b2:	9a05      	ldr	r2, [sp, #20]
 80062b4:	2920      	cmp	r1, #32
 80062b6:	d818      	bhi.n	80062ea <__hexnan+0x7e>
 80062b8:	9b02      	ldr	r3, [sp, #8]
 80062ba:	459b      	cmp	fp, r3
 80062bc:	dd13      	ble.n	80062e6 <__hexnan+0x7a>
 80062be:	454c      	cmp	r4, r9
 80062c0:	d206      	bcs.n	80062d0 <__hexnan+0x64>
 80062c2:	2d07      	cmp	r5, #7
 80062c4:	dc04      	bgt.n	80062d0 <__hexnan+0x64>
 80062c6:	462a      	mov	r2, r5
 80062c8:	4649      	mov	r1, r9
 80062ca:	4620      	mov	r0, r4
 80062cc:	f7ff ffa8 	bl	8006220 <L_shift>
 80062d0:	4544      	cmp	r4, r8
 80062d2:	d950      	bls.n	8006376 <__hexnan+0x10a>
 80062d4:	2300      	movs	r3, #0
 80062d6:	f1a4 0904 	sub.w	r9, r4, #4
 80062da:	f844 3c04 	str.w	r3, [r4, #-4]
 80062de:	f8cd b008 	str.w	fp, [sp, #8]
 80062e2:	464c      	mov	r4, r9
 80062e4:	461d      	mov	r5, r3
 80062e6:	9a03      	ldr	r2, [sp, #12]
 80062e8:	e7d7      	b.n	800629a <__hexnan+0x2e>
 80062ea:	2929      	cmp	r1, #41	; 0x29
 80062ec:	d156      	bne.n	800639c <__hexnan+0x130>
 80062ee:	3202      	adds	r2, #2
 80062f0:	f8ca 2000 	str.w	r2, [sl]
 80062f4:	f1bb 0f00 	cmp.w	fp, #0
 80062f8:	d050      	beq.n	800639c <__hexnan+0x130>
 80062fa:	454c      	cmp	r4, r9
 80062fc:	d206      	bcs.n	800630c <__hexnan+0xa0>
 80062fe:	2d07      	cmp	r5, #7
 8006300:	dc04      	bgt.n	800630c <__hexnan+0xa0>
 8006302:	462a      	mov	r2, r5
 8006304:	4649      	mov	r1, r9
 8006306:	4620      	mov	r0, r4
 8006308:	f7ff ff8a 	bl	8006220 <L_shift>
 800630c:	4544      	cmp	r4, r8
 800630e:	d934      	bls.n	800637a <__hexnan+0x10e>
 8006310:	f1a8 0204 	sub.w	r2, r8, #4
 8006314:	4623      	mov	r3, r4
 8006316:	f853 1b04 	ldr.w	r1, [r3], #4
 800631a:	f842 1f04 	str.w	r1, [r2, #4]!
 800631e:	429f      	cmp	r7, r3
 8006320:	d2f9      	bcs.n	8006316 <__hexnan+0xaa>
 8006322:	1b3b      	subs	r3, r7, r4
 8006324:	f023 0303 	bic.w	r3, r3, #3
 8006328:	3304      	adds	r3, #4
 800632a:	3401      	adds	r4, #1
 800632c:	3e03      	subs	r6, #3
 800632e:	42b4      	cmp	r4, r6
 8006330:	bf88      	it	hi
 8006332:	2304      	movhi	r3, #4
 8006334:	4443      	add	r3, r8
 8006336:	2200      	movs	r2, #0
 8006338:	f843 2b04 	str.w	r2, [r3], #4
 800633c:	429f      	cmp	r7, r3
 800633e:	d2fb      	bcs.n	8006338 <__hexnan+0xcc>
 8006340:	683b      	ldr	r3, [r7, #0]
 8006342:	b91b      	cbnz	r3, 800634c <__hexnan+0xe0>
 8006344:	4547      	cmp	r7, r8
 8006346:	d127      	bne.n	8006398 <__hexnan+0x12c>
 8006348:	2301      	movs	r3, #1
 800634a:	603b      	str	r3, [r7, #0]
 800634c:	2005      	movs	r0, #5
 800634e:	e026      	b.n	800639e <__hexnan+0x132>
 8006350:	3501      	adds	r5, #1
 8006352:	2d08      	cmp	r5, #8
 8006354:	f10b 0b01 	add.w	fp, fp, #1
 8006358:	dd06      	ble.n	8006368 <__hexnan+0xfc>
 800635a:	4544      	cmp	r4, r8
 800635c:	d9c3      	bls.n	80062e6 <__hexnan+0x7a>
 800635e:	2300      	movs	r3, #0
 8006360:	f844 3c04 	str.w	r3, [r4, #-4]
 8006364:	2501      	movs	r5, #1
 8006366:	3c04      	subs	r4, #4
 8006368:	6822      	ldr	r2, [r4, #0]
 800636a:	f000 000f 	and.w	r0, r0, #15
 800636e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8006372:	6022      	str	r2, [r4, #0]
 8006374:	e7b7      	b.n	80062e6 <__hexnan+0x7a>
 8006376:	2508      	movs	r5, #8
 8006378:	e7b5      	b.n	80062e6 <__hexnan+0x7a>
 800637a:	9b01      	ldr	r3, [sp, #4]
 800637c:	2b00      	cmp	r3, #0
 800637e:	d0df      	beq.n	8006340 <__hexnan+0xd4>
 8006380:	f04f 32ff 	mov.w	r2, #4294967295
 8006384:	f1c3 0320 	rsb	r3, r3, #32
 8006388:	fa22 f303 	lsr.w	r3, r2, r3
 800638c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8006390:	401a      	ands	r2, r3
 8006392:	f846 2c04 	str.w	r2, [r6, #-4]
 8006396:	e7d3      	b.n	8006340 <__hexnan+0xd4>
 8006398:	3f04      	subs	r7, #4
 800639a:	e7d1      	b.n	8006340 <__hexnan+0xd4>
 800639c:	2004      	movs	r0, #4
 800639e:	b007      	add	sp, #28
 80063a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080063a4 <_localeconv_r>:
 80063a4:	4800      	ldr	r0, [pc, #0]	; (80063a8 <_localeconv_r+0x4>)
 80063a6:	4770      	bx	lr
 80063a8:	20000188 	.word	0x20000188

080063ac <malloc>:
 80063ac:	4b02      	ldr	r3, [pc, #8]	; (80063b8 <malloc+0xc>)
 80063ae:	4601      	mov	r1, r0
 80063b0:	6818      	ldr	r0, [r3, #0]
 80063b2:	f000 bd67 	b.w	8006e84 <_malloc_r>
 80063b6:	bf00      	nop
 80063b8:	20000030 	.word	0x20000030

080063bc <__ascii_mbtowc>:
 80063bc:	b082      	sub	sp, #8
 80063be:	b901      	cbnz	r1, 80063c2 <__ascii_mbtowc+0x6>
 80063c0:	a901      	add	r1, sp, #4
 80063c2:	b142      	cbz	r2, 80063d6 <__ascii_mbtowc+0x1a>
 80063c4:	b14b      	cbz	r3, 80063da <__ascii_mbtowc+0x1e>
 80063c6:	7813      	ldrb	r3, [r2, #0]
 80063c8:	600b      	str	r3, [r1, #0]
 80063ca:	7812      	ldrb	r2, [r2, #0]
 80063cc:	1e10      	subs	r0, r2, #0
 80063ce:	bf18      	it	ne
 80063d0:	2001      	movne	r0, #1
 80063d2:	b002      	add	sp, #8
 80063d4:	4770      	bx	lr
 80063d6:	4610      	mov	r0, r2
 80063d8:	e7fb      	b.n	80063d2 <__ascii_mbtowc+0x16>
 80063da:	f06f 0001 	mvn.w	r0, #1
 80063de:	e7f8      	b.n	80063d2 <__ascii_mbtowc+0x16>

080063e0 <memcpy>:
 80063e0:	440a      	add	r2, r1
 80063e2:	4291      	cmp	r1, r2
 80063e4:	f100 33ff 	add.w	r3, r0, #4294967295
 80063e8:	d100      	bne.n	80063ec <memcpy+0xc>
 80063ea:	4770      	bx	lr
 80063ec:	b510      	push	{r4, lr}
 80063ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 80063f2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80063f6:	4291      	cmp	r1, r2
 80063f8:	d1f9      	bne.n	80063ee <memcpy+0xe>
 80063fa:	bd10      	pop	{r4, pc}

080063fc <_Balloc>:
 80063fc:	b570      	push	{r4, r5, r6, lr}
 80063fe:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006400:	4604      	mov	r4, r0
 8006402:	460d      	mov	r5, r1
 8006404:	b976      	cbnz	r6, 8006424 <_Balloc+0x28>
 8006406:	2010      	movs	r0, #16
 8006408:	f7ff ffd0 	bl	80063ac <malloc>
 800640c:	4602      	mov	r2, r0
 800640e:	6260      	str	r0, [r4, #36]	; 0x24
 8006410:	b920      	cbnz	r0, 800641c <_Balloc+0x20>
 8006412:	4b18      	ldr	r3, [pc, #96]	; (8006474 <_Balloc+0x78>)
 8006414:	4818      	ldr	r0, [pc, #96]	; (8006478 <_Balloc+0x7c>)
 8006416:	2166      	movs	r1, #102	; 0x66
 8006418:	f000 ff40 	bl	800729c <__assert_func>
 800641c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006420:	6006      	str	r6, [r0, #0]
 8006422:	60c6      	str	r6, [r0, #12]
 8006424:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006426:	68f3      	ldr	r3, [r6, #12]
 8006428:	b183      	cbz	r3, 800644c <_Balloc+0x50>
 800642a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800642c:	68db      	ldr	r3, [r3, #12]
 800642e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006432:	b9b8      	cbnz	r0, 8006464 <_Balloc+0x68>
 8006434:	2101      	movs	r1, #1
 8006436:	fa01 f605 	lsl.w	r6, r1, r5
 800643a:	1d72      	adds	r2, r6, #5
 800643c:	0092      	lsls	r2, r2, #2
 800643e:	4620      	mov	r0, r4
 8006440:	f000 fc9d 	bl	8006d7e <_calloc_r>
 8006444:	b160      	cbz	r0, 8006460 <_Balloc+0x64>
 8006446:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800644a:	e00e      	b.n	800646a <_Balloc+0x6e>
 800644c:	2221      	movs	r2, #33	; 0x21
 800644e:	2104      	movs	r1, #4
 8006450:	4620      	mov	r0, r4
 8006452:	f000 fc94 	bl	8006d7e <_calloc_r>
 8006456:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006458:	60f0      	str	r0, [r6, #12]
 800645a:	68db      	ldr	r3, [r3, #12]
 800645c:	2b00      	cmp	r3, #0
 800645e:	d1e4      	bne.n	800642a <_Balloc+0x2e>
 8006460:	2000      	movs	r0, #0
 8006462:	bd70      	pop	{r4, r5, r6, pc}
 8006464:	6802      	ldr	r2, [r0, #0]
 8006466:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800646a:	2300      	movs	r3, #0
 800646c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006470:	e7f7      	b.n	8006462 <_Balloc+0x66>
 8006472:	bf00      	nop
 8006474:	08008d36 	.word	0x08008d36
 8006478:	08008e34 	.word	0x08008e34

0800647c <_Bfree>:
 800647c:	b570      	push	{r4, r5, r6, lr}
 800647e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006480:	4605      	mov	r5, r0
 8006482:	460c      	mov	r4, r1
 8006484:	b976      	cbnz	r6, 80064a4 <_Bfree+0x28>
 8006486:	2010      	movs	r0, #16
 8006488:	f7ff ff90 	bl	80063ac <malloc>
 800648c:	4602      	mov	r2, r0
 800648e:	6268      	str	r0, [r5, #36]	; 0x24
 8006490:	b920      	cbnz	r0, 800649c <_Bfree+0x20>
 8006492:	4b09      	ldr	r3, [pc, #36]	; (80064b8 <_Bfree+0x3c>)
 8006494:	4809      	ldr	r0, [pc, #36]	; (80064bc <_Bfree+0x40>)
 8006496:	218a      	movs	r1, #138	; 0x8a
 8006498:	f000 ff00 	bl	800729c <__assert_func>
 800649c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80064a0:	6006      	str	r6, [r0, #0]
 80064a2:	60c6      	str	r6, [r0, #12]
 80064a4:	b13c      	cbz	r4, 80064b6 <_Bfree+0x3a>
 80064a6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80064a8:	6862      	ldr	r2, [r4, #4]
 80064aa:	68db      	ldr	r3, [r3, #12]
 80064ac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80064b0:	6021      	str	r1, [r4, #0]
 80064b2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80064b6:	bd70      	pop	{r4, r5, r6, pc}
 80064b8:	08008d36 	.word	0x08008d36
 80064bc:	08008e34 	.word	0x08008e34

080064c0 <__multadd>:
 80064c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80064c4:	690d      	ldr	r5, [r1, #16]
 80064c6:	4607      	mov	r7, r0
 80064c8:	460c      	mov	r4, r1
 80064ca:	461e      	mov	r6, r3
 80064cc:	f101 0c14 	add.w	ip, r1, #20
 80064d0:	2000      	movs	r0, #0
 80064d2:	f8dc 3000 	ldr.w	r3, [ip]
 80064d6:	b299      	uxth	r1, r3
 80064d8:	fb02 6101 	mla	r1, r2, r1, r6
 80064dc:	0c1e      	lsrs	r6, r3, #16
 80064de:	0c0b      	lsrs	r3, r1, #16
 80064e0:	fb02 3306 	mla	r3, r2, r6, r3
 80064e4:	b289      	uxth	r1, r1
 80064e6:	3001      	adds	r0, #1
 80064e8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80064ec:	4285      	cmp	r5, r0
 80064ee:	f84c 1b04 	str.w	r1, [ip], #4
 80064f2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80064f6:	dcec      	bgt.n	80064d2 <__multadd+0x12>
 80064f8:	b30e      	cbz	r6, 800653e <__multadd+0x7e>
 80064fa:	68a3      	ldr	r3, [r4, #8]
 80064fc:	42ab      	cmp	r3, r5
 80064fe:	dc19      	bgt.n	8006534 <__multadd+0x74>
 8006500:	6861      	ldr	r1, [r4, #4]
 8006502:	4638      	mov	r0, r7
 8006504:	3101      	adds	r1, #1
 8006506:	f7ff ff79 	bl	80063fc <_Balloc>
 800650a:	4680      	mov	r8, r0
 800650c:	b928      	cbnz	r0, 800651a <__multadd+0x5a>
 800650e:	4602      	mov	r2, r0
 8006510:	4b0c      	ldr	r3, [pc, #48]	; (8006544 <__multadd+0x84>)
 8006512:	480d      	ldr	r0, [pc, #52]	; (8006548 <__multadd+0x88>)
 8006514:	21b5      	movs	r1, #181	; 0xb5
 8006516:	f000 fec1 	bl	800729c <__assert_func>
 800651a:	6922      	ldr	r2, [r4, #16]
 800651c:	3202      	adds	r2, #2
 800651e:	f104 010c 	add.w	r1, r4, #12
 8006522:	0092      	lsls	r2, r2, #2
 8006524:	300c      	adds	r0, #12
 8006526:	f7ff ff5b 	bl	80063e0 <memcpy>
 800652a:	4621      	mov	r1, r4
 800652c:	4638      	mov	r0, r7
 800652e:	f7ff ffa5 	bl	800647c <_Bfree>
 8006532:	4644      	mov	r4, r8
 8006534:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006538:	3501      	adds	r5, #1
 800653a:	615e      	str	r6, [r3, #20]
 800653c:	6125      	str	r5, [r4, #16]
 800653e:	4620      	mov	r0, r4
 8006540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006544:	08008da8 	.word	0x08008da8
 8006548:	08008e34 	.word	0x08008e34

0800654c <__s2b>:
 800654c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006550:	460c      	mov	r4, r1
 8006552:	4615      	mov	r5, r2
 8006554:	461f      	mov	r7, r3
 8006556:	2209      	movs	r2, #9
 8006558:	3308      	adds	r3, #8
 800655a:	4606      	mov	r6, r0
 800655c:	fb93 f3f2 	sdiv	r3, r3, r2
 8006560:	2100      	movs	r1, #0
 8006562:	2201      	movs	r2, #1
 8006564:	429a      	cmp	r2, r3
 8006566:	db09      	blt.n	800657c <__s2b+0x30>
 8006568:	4630      	mov	r0, r6
 800656a:	f7ff ff47 	bl	80063fc <_Balloc>
 800656e:	b940      	cbnz	r0, 8006582 <__s2b+0x36>
 8006570:	4602      	mov	r2, r0
 8006572:	4b19      	ldr	r3, [pc, #100]	; (80065d8 <__s2b+0x8c>)
 8006574:	4819      	ldr	r0, [pc, #100]	; (80065dc <__s2b+0x90>)
 8006576:	21ce      	movs	r1, #206	; 0xce
 8006578:	f000 fe90 	bl	800729c <__assert_func>
 800657c:	0052      	lsls	r2, r2, #1
 800657e:	3101      	adds	r1, #1
 8006580:	e7f0      	b.n	8006564 <__s2b+0x18>
 8006582:	9b08      	ldr	r3, [sp, #32]
 8006584:	6143      	str	r3, [r0, #20]
 8006586:	2d09      	cmp	r5, #9
 8006588:	f04f 0301 	mov.w	r3, #1
 800658c:	6103      	str	r3, [r0, #16]
 800658e:	dd16      	ble.n	80065be <__s2b+0x72>
 8006590:	f104 0909 	add.w	r9, r4, #9
 8006594:	46c8      	mov	r8, r9
 8006596:	442c      	add	r4, r5
 8006598:	f818 3b01 	ldrb.w	r3, [r8], #1
 800659c:	4601      	mov	r1, r0
 800659e:	3b30      	subs	r3, #48	; 0x30
 80065a0:	220a      	movs	r2, #10
 80065a2:	4630      	mov	r0, r6
 80065a4:	f7ff ff8c 	bl	80064c0 <__multadd>
 80065a8:	45a0      	cmp	r8, r4
 80065aa:	d1f5      	bne.n	8006598 <__s2b+0x4c>
 80065ac:	f1a5 0408 	sub.w	r4, r5, #8
 80065b0:	444c      	add	r4, r9
 80065b2:	1b2d      	subs	r5, r5, r4
 80065b4:	1963      	adds	r3, r4, r5
 80065b6:	42bb      	cmp	r3, r7
 80065b8:	db04      	blt.n	80065c4 <__s2b+0x78>
 80065ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80065be:	340a      	adds	r4, #10
 80065c0:	2509      	movs	r5, #9
 80065c2:	e7f6      	b.n	80065b2 <__s2b+0x66>
 80065c4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80065c8:	4601      	mov	r1, r0
 80065ca:	3b30      	subs	r3, #48	; 0x30
 80065cc:	220a      	movs	r2, #10
 80065ce:	4630      	mov	r0, r6
 80065d0:	f7ff ff76 	bl	80064c0 <__multadd>
 80065d4:	e7ee      	b.n	80065b4 <__s2b+0x68>
 80065d6:	bf00      	nop
 80065d8:	08008da8 	.word	0x08008da8
 80065dc:	08008e34 	.word	0x08008e34

080065e0 <__hi0bits>:
 80065e0:	0c03      	lsrs	r3, r0, #16
 80065e2:	041b      	lsls	r3, r3, #16
 80065e4:	b9d3      	cbnz	r3, 800661c <__hi0bits+0x3c>
 80065e6:	0400      	lsls	r0, r0, #16
 80065e8:	2310      	movs	r3, #16
 80065ea:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80065ee:	bf04      	itt	eq
 80065f0:	0200      	lsleq	r0, r0, #8
 80065f2:	3308      	addeq	r3, #8
 80065f4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80065f8:	bf04      	itt	eq
 80065fa:	0100      	lsleq	r0, r0, #4
 80065fc:	3304      	addeq	r3, #4
 80065fe:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8006602:	bf04      	itt	eq
 8006604:	0080      	lsleq	r0, r0, #2
 8006606:	3302      	addeq	r3, #2
 8006608:	2800      	cmp	r0, #0
 800660a:	db05      	blt.n	8006618 <__hi0bits+0x38>
 800660c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8006610:	f103 0301 	add.w	r3, r3, #1
 8006614:	bf08      	it	eq
 8006616:	2320      	moveq	r3, #32
 8006618:	4618      	mov	r0, r3
 800661a:	4770      	bx	lr
 800661c:	2300      	movs	r3, #0
 800661e:	e7e4      	b.n	80065ea <__hi0bits+0xa>

08006620 <__lo0bits>:
 8006620:	6803      	ldr	r3, [r0, #0]
 8006622:	f013 0207 	ands.w	r2, r3, #7
 8006626:	4601      	mov	r1, r0
 8006628:	d00b      	beq.n	8006642 <__lo0bits+0x22>
 800662a:	07da      	lsls	r2, r3, #31
 800662c:	d423      	bmi.n	8006676 <__lo0bits+0x56>
 800662e:	0798      	lsls	r0, r3, #30
 8006630:	bf49      	itett	mi
 8006632:	085b      	lsrmi	r3, r3, #1
 8006634:	089b      	lsrpl	r3, r3, #2
 8006636:	2001      	movmi	r0, #1
 8006638:	600b      	strmi	r3, [r1, #0]
 800663a:	bf5c      	itt	pl
 800663c:	600b      	strpl	r3, [r1, #0]
 800663e:	2002      	movpl	r0, #2
 8006640:	4770      	bx	lr
 8006642:	b298      	uxth	r0, r3
 8006644:	b9a8      	cbnz	r0, 8006672 <__lo0bits+0x52>
 8006646:	0c1b      	lsrs	r3, r3, #16
 8006648:	2010      	movs	r0, #16
 800664a:	b2da      	uxtb	r2, r3
 800664c:	b90a      	cbnz	r2, 8006652 <__lo0bits+0x32>
 800664e:	3008      	adds	r0, #8
 8006650:	0a1b      	lsrs	r3, r3, #8
 8006652:	071a      	lsls	r2, r3, #28
 8006654:	bf04      	itt	eq
 8006656:	091b      	lsreq	r3, r3, #4
 8006658:	3004      	addeq	r0, #4
 800665a:	079a      	lsls	r2, r3, #30
 800665c:	bf04      	itt	eq
 800665e:	089b      	lsreq	r3, r3, #2
 8006660:	3002      	addeq	r0, #2
 8006662:	07da      	lsls	r2, r3, #31
 8006664:	d403      	bmi.n	800666e <__lo0bits+0x4e>
 8006666:	085b      	lsrs	r3, r3, #1
 8006668:	f100 0001 	add.w	r0, r0, #1
 800666c:	d005      	beq.n	800667a <__lo0bits+0x5a>
 800666e:	600b      	str	r3, [r1, #0]
 8006670:	4770      	bx	lr
 8006672:	4610      	mov	r0, r2
 8006674:	e7e9      	b.n	800664a <__lo0bits+0x2a>
 8006676:	2000      	movs	r0, #0
 8006678:	4770      	bx	lr
 800667a:	2020      	movs	r0, #32
 800667c:	4770      	bx	lr
	...

08006680 <__i2b>:
 8006680:	b510      	push	{r4, lr}
 8006682:	460c      	mov	r4, r1
 8006684:	2101      	movs	r1, #1
 8006686:	f7ff feb9 	bl	80063fc <_Balloc>
 800668a:	4602      	mov	r2, r0
 800668c:	b928      	cbnz	r0, 800669a <__i2b+0x1a>
 800668e:	4b05      	ldr	r3, [pc, #20]	; (80066a4 <__i2b+0x24>)
 8006690:	4805      	ldr	r0, [pc, #20]	; (80066a8 <__i2b+0x28>)
 8006692:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006696:	f000 fe01 	bl	800729c <__assert_func>
 800669a:	2301      	movs	r3, #1
 800669c:	6144      	str	r4, [r0, #20]
 800669e:	6103      	str	r3, [r0, #16]
 80066a0:	bd10      	pop	{r4, pc}
 80066a2:	bf00      	nop
 80066a4:	08008da8 	.word	0x08008da8
 80066a8:	08008e34 	.word	0x08008e34

080066ac <__multiply>:
 80066ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066b0:	4691      	mov	r9, r2
 80066b2:	690a      	ldr	r2, [r1, #16]
 80066b4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80066b8:	429a      	cmp	r2, r3
 80066ba:	bfb8      	it	lt
 80066bc:	460b      	movlt	r3, r1
 80066be:	460c      	mov	r4, r1
 80066c0:	bfbc      	itt	lt
 80066c2:	464c      	movlt	r4, r9
 80066c4:	4699      	movlt	r9, r3
 80066c6:	6927      	ldr	r7, [r4, #16]
 80066c8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80066cc:	68a3      	ldr	r3, [r4, #8]
 80066ce:	6861      	ldr	r1, [r4, #4]
 80066d0:	eb07 060a 	add.w	r6, r7, sl
 80066d4:	42b3      	cmp	r3, r6
 80066d6:	b085      	sub	sp, #20
 80066d8:	bfb8      	it	lt
 80066da:	3101      	addlt	r1, #1
 80066dc:	f7ff fe8e 	bl	80063fc <_Balloc>
 80066e0:	b930      	cbnz	r0, 80066f0 <__multiply+0x44>
 80066e2:	4602      	mov	r2, r0
 80066e4:	4b44      	ldr	r3, [pc, #272]	; (80067f8 <__multiply+0x14c>)
 80066e6:	4845      	ldr	r0, [pc, #276]	; (80067fc <__multiply+0x150>)
 80066e8:	f240 115d 	movw	r1, #349	; 0x15d
 80066ec:	f000 fdd6 	bl	800729c <__assert_func>
 80066f0:	f100 0514 	add.w	r5, r0, #20
 80066f4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80066f8:	462b      	mov	r3, r5
 80066fa:	2200      	movs	r2, #0
 80066fc:	4543      	cmp	r3, r8
 80066fe:	d321      	bcc.n	8006744 <__multiply+0x98>
 8006700:	f104 0314 	add.w	r3, r4, #20
 8006704:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006708:	f109 0314 	add.w	r3, r9, #20
 800670c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8006710:	9202      	str	r2, [sp, #8]
 8006712:	1b3a      	subs	r2, r7, r4
 8006714:	3a15      	subs	r2, #21
 8006716:	f022 0203 	bic.w	r2, r2, #3
 800671a:	3204      	adds	r2, #4
 800671c:	f104 0115 	add.w	r1, r4, #21
 8006720:	428f      	cmp	r7, r1
 8006722:	bf38      	it	cc
 8006724:	2204      	movcc	r2, #4
 8006726:	9201      	str	r2, [sp, #4]
 8006728:	9a02      	ldr	r2, [sp, #8]
 800672a:	9303      	str	r3, [sp, #12]
 800672c:	429a      	cmp	r2, r3
 800672e:	d80c      	bhi.n	800674a <__multiply+0x9e>
 8006730:	2e00      	cmp	r6, #0
 8006732:	dd03      	ble.n	800673c <__multiply+0x90>
 8006734:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006738:	2b00      	cmp	r3, #0
 800673a:	d05a      	beq.n	80067f2 <__multiply+0x146>
 800673c:	6106      	str	r6, [r0, #16]
 800673e:	b005      	add	sp, #20
 8006740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006744:	f843 2b04 	str.w	r2, [r3], #4
 8006748:	e7d8      	b.n	80066fc <__multiply+0x50>
 800674a:	f8b3 a000 	ldrh.w	sl, [r3]
 800674e:	f1ba 0f00 	cmp.w	sl, #0
 8006752:	d024      	beq.n	800679e <__multiply+0xf2>
 8006754:	f104 0e14 	add.w	lr, r4, #20
 8006758:	46a9      	mov	r9, r5
 800675a:	f04f 0c00 	mov.w	ip, #0
 800675e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8006762:	f8d9 1000 	ldr.w	r1, [r9]
 8006766:	fa1f fb82 	uxth.w	fp, r2
 800676a:	b289      	uxth	r1, r1
 800676c:	fb0a 110b 	mla	r1, sl, fp, r1
 8006770:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8006774:	f8d9 2000 	ldr.w	r2, [r9]
 8006778:	4461      	add	r1, ip
 800677a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800677e:	fb0a c20b 	mla	r2, sl, fp, ip
 8006782:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8006786:	b289      	uxth	r1, r1
 8006788:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800678c:	4577      	cmp	r7, lr
 800678e:	f849 1b04 	str.w	r1, [r9], #4
 8006792:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8006796:	d8e2      	bhi.n	800675e <__multiply+0xb2>
 8006798:	9a01      	ldr	r2, [sp, #4]
 800679a:	f845 c002 	str.w	ip, [r5, r2]
 800679e:	9a03      	ldr	r2, [sp, #12]
 80067a0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80067a4:	3304      	adds	r3, #4
 80067a6:	f1b9 0f00 	cmp.w	r9, #0
 80067aa:	d020      	beq.n	80067ee <__multiply+0x142>
 80067ac:	6829      	ldr	r1, [r5, #0]
 80067ae:	f104 0c14 	add.w	ip, r4, #20
 80067b2:	46ae      	mov	lr, r5
 80067b4:	f04f 0a00 	mov.w	sl, #0
 80067b8:	f8bc b000 	ldrh.w	fp, [ip]
 80067bc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80067c0:	fb09 220b 	mla	r2, r9, fp, r2
 80067c4:	4492      	add	sl, r2
 80067c6:	b289      	uxth	r1, r1
 80067c8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 80067cc:	f84e 1b04 	str.w	r1, [lr], #4
 80067d0:	f85c 2b04 	ldr.w	r2, [ip], #4
 80067d4:	f8be 1000 	ldrh.w	r1, [lr]
 80067d8:	0c12      	lsrs	r2, r2, #16
 80067da:	fb09 1102 	mla	r1, r9, r2, r1
 80067de:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 80067e2:	4567      	cmp	r7, ip
 80067e4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80067e8:	d8e6      	bhi.n	80067b8 <__multiply+0x10c>
 80067ea:	9a01      	ldr	r2, [sp, #4]
 80067ec:	50a9      	str	r1, [r5, r2]
 80067ee:	3504      	adds	r5, #4
 80067f0:	e79a      	b.n	8006728 <__multiply+0x7c>
 80067f2:	3e01      	subs	r6, #1
 80067f4:	e79c      	b.n	8006730 <__multiply+0x84>
 80067f6:	bf00      	nop
 80067f8:	08008da8 	.word	0x08008da8
 80067fc:	08008e34 	.word	0x08008e34

08006800 <__pow5mult>:
 8006800:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006804:	4615      	mov	r5, r2
 8006806:	f012 0203 	ands.w	r2, r2, #3
 800680a:	4606      	mov	r6, r0
 800680c:	460f      	mov	r7, r1
 800680e:	d007      	beq.n	8006820 <__pow5mult+0x20>
 8006810:	4c25      	ldr	r4, [pc, #148]	; (80068a8 <__pow5mult+0xa8>)
 8006812:	3a01      	subs	r2, #1
 8006814:	2300      	movs	r3, #0
 8006816:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800681a:	f7ff fe51 	bl	80064c0 <__multadd>
 800681e:	4607      	mov	r7, r0
 8006820:	10ad      	asrs	r5, r5, #2
 8006822:	d03d      	beq.n	80068a0 <__pow5mult+0xa0>
 8006824:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8006826:	b97c      	cbnz	r4, 8006848 <__pow5mult+0x48>
 8006828:	2010      	movs	r0, #16
 800682a:	f7ff fdbf 	bl	80063ac <malloc>
 800682e:	4602      	mov	r2, r0
 8006830:	6270      	str	r0, [r6, #36]	; 0x24
 8006832:	b928      	cbnz	r0, 8006840 <__pow5mult+0x40>
 8006834:	4b1d      	ldr	r3, [pc, #116]	; (80068ac <__pow5mult+0xac>)
 8006836:	481e      	ldr	r0, [pc, #120]	; (80068b0 <__pow5mult+0xb0>)
 8006838:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800683c:	f000 fd2e 	bl	800729c <__assert_func>
 8006840:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8006844:	6004      	str	r4, [r0, #0]
 8006846:	60c4      	str	r4, [r0, #12]
 8006848:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800684c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006850:	b94c      	cbnz	r4, 8006866 <__pow5mult+0x66>
 8006852:	f240 2171 	movw	r1, #625	; 0x271
 8006856:	4630      	mov	r0, r6
 8006858:	f7ff ff12 	bl	8006680 <__i2b>
 800685c:	2300      	movs	r3, #0
 800685e:	f8c8 0008 	str.w	r0, [r8, #8]
 8006862:	4604      	mov	r4, r0
 8006864:	6003      	str	r3, [r0, #0]
 8006866:	f04f 0900 	mov.w	r9, #0
 800686a:	07eb      	lsls	r3, r5, #31
 800686c:	d50a      	bpl.n	8006884 <__pow5mult+0x84>
 800686e:	4639      	mov	r1, r7
 8006870:	4622      	mov	r2, r4
 8006872:	4630      	mov	r0, r6
 8006874:	f7ff ff1a 	bl	80066ac <__multiply>
 8006878:	4639      	mov	r1, r7
 800687a:	4680      	mov	r8, r0
 800687c:	4630      	mov	r0, r6
 800687e:	f7ff fdfd 	bl	800647c <_Bfree>
 8006882:	4647      	mov	r7, r8
 8006884:	106d      	asrs	r5, r5, #1
 8006886:	d00b      	beq.n	80068a0 <__pow5mult+0xa0>
 8006888:	6820      	ldr	r0, [r4, #0]
 800688a:	b938      	cbnz	r0, 800689c <__pow5mult+0x9c>
 800688c:	4622      	mov	r2, r4
 800688e:	4621      	mov	r1, r4
 8006890:	4630      	mov	r0, r6
 8006892:	f7ff ff0b 	bl	80066ac <__multiply>
 8006896:	6020      	str	r0, [r4, #0]
 8006898:	f8c0 9000 	str.w	r9, [r0]
 800689c:	4604      	mov	r4, r0
 800689e:	e7e4      	b.n	800686a <__pow5mult+0x6a>
 80068a0:	4638      	mov	r0, r7
 80068a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80068a6:	bf00      	nop
 80068a8:	08008f80 	.word	0x08008f80
 80068ac:	08008d36 	.word	0x08008d36
 80068b0:	08008e34 	.word	0x08008e34

080068b4 <__lshift>:
 80068b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80068b8:	460c      	mov	r4, r1
 80068ba:	6849      	ldr	r1, [r1, #4]
 80068bc:	6923      	ldr	r3, [r4, #16]
 80068be:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80068c2:	68a3      	ldr	r3, [r4, #8]
 80068c4:	4607      	mov	r7, r0
 80068c6:	4691      	mov	r9, r2
 80068c8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80068cc:	f108 0601 	add.w	r6, r8, #1
 80068d0:	42b3      	cmp	r3, r6
 80068d2:	db0b      	blt.n	80068ec <__lshift+0x38>
 80068d4:	4638      	mov	r0, r7
 80068d6:	f7ff fd91 	bl	80063fc <_Balloc>
 80068da:	4605      	mov	r5, r0
 80068dc:	b948      	cbnz	r0, 80068f2 <__lshift+0x3e>
 80068de:	4602      	mov	r2, r0
 80068e0:	4b2a      	ldr	r3, [pc, #168]	; (800698c <__lshift+0xd8>)
 80068e2:	482b      	ldr	r0, [pc, #172]	; (8006990 <__lshift+0xdc>)
 80068e4:	f240 11d9 	movw	r1, #473	; 0x1d9
 80068e8:	f000 fcd8 	bl	800729c <__assert_func>
 80068ec:	3101      	adds	r1, #1
 80068ee:	005b      	lsls	r3, r3, #1
 80068f0:	e7ee      	b.n	80068d0 <__lshift+0x1c>
 80068f2:	2300      	movs	r3, #0
 80068f4:	f100 0114 	add.w	r1, r0, #20
 80068f8:	f100 0210 	add.w	r2, r0, #16
 80068fc:	4618      	mov	r0, r3
 80068fe:	4553      	cmp	r3, sl
 8006900:	db37      	blt.n	8006972 <__lshift+0xbe>
 8006902:	6920      	ldr	r0, [r4, #16]
 8006904:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006908:	f104 0314 	add.w	r3, r4, #20
 800690c:	f019 091f 	ands.w	r9, r9, #31
 8006910:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8006914:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8006918:	d02f      	beq.n	800697a <__lshift+0xc6>
 800691a:	f1c9 0e20 	rsb	lr, r9, #32
 800691e:	468a      	mov	sl, r1
 8006920:	f04f 0c00 	mov.w	ip, #0
 8006924:	681a      	ldr	r2, [r3, #0]
 8006926:	fa02 f209 	lsl.w	r2, r2, r9
 800692a:	ea42 020c 	orr.w	r2, r2, ip
 800692e:	f84a 2b04 	str.w	r2, [sl], #4
 8006932:	f853 2b04 	ldr.w	r2, [r3], #4
 8006936:	4298      	cmp	r0, r3
 8006938:	fa22 fc0e 	lsr.w	ip, r2, lr
 800693c:	d8f2      	bhi.n	8006924 <__lshift+0x70>
 800693e:	1b03      	subs	r3, r0, r4
 8006940:	3b15      	subs	r3, #21
 8006942:	f023 0303 	bic.w	r3, r3, #3
 8006946:	3304      	adds	r3, #4
 8006948:	f104 0215 	add.w	r2, r4, #21
 800694c:	4290      	cmp	r0, r2
 800694e:	bf38      	it	cc
 8006950:	2304      	movcc	r3, #4
 8006952:	f841 c003 	str.w	ip, [r1, r3]
 8006956:	f1bc 0f00 	cmp.w	ip, #0
 800695a:	d001      	beq.n	8006960 <__lshift+0xac>
 800695c:	f108 0602 	add.w	r6, r8, #2
 8006960:	3e01      	subs	r6, #1
 8006962:	4638      	mov	r0, r7
 8006964:	612e      	str	r6, [r5, #16]
 8006966:	4621      	mov	r1, r4
 8006968:	f7ff fd88 	bl	800647c <_Bfree>
 800696c:	4628      	mov	r0, r5
 800696e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006972:	f842 0f04 	str.w	r0, [r2, #4]!
 8006976:	3301      	adds	r3, #1
 8006978:	e7c1      	b.n	80068fe <__lshift+0x4a>
 800697a:	3904      	subs	r1, #4
 800697c:	f853 2b04 	ldr.w	r2, [r3], #4
 8006980:	f841 2f04 	str.w	r2, [r1, #4]!
 8006984:	4298      	cmp	r0, r3
 8006986:	d8f9      	bhi.n	800697c <__lshift+0xc8>
 8006988:	e7ea      	b.n	8006960 <__lshift+0xac>
 800698a:	bf00      	nop
 800698c:	08008da8 	.word	0x08008da8
 8006990:	08008e34 	.word	0x08008e34

08006994 <__mcmp>:
 8006994:	b530      	push	{r4, r5, lr}
 8006996:	6902      	ldr	r2, [r0, #16]
 8006998:	690c      	ldr	r4, [r1, #16]
 800699a:	1b12      	subs	r2, r2, r4
 800699c:	d10e      	bne.n	80069bc <__mcmp+0x28>
 800699e:	f100 0314 	add.w	r3, r0, #20
 80069a2:	3114      	adds	r1, #20
 80069a4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 80069a8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80069ac:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 80069b0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80069b4:	42a5      	cmp	r5, r4
 80069b6:	d003      	beq.n	80069c0 <__mcmp+0x2c>
 80069b8:	d305      	bcc.n	80069c6 <__mcmp+0x32>
 80069ba:	2201      	movs	r2, #1
 80069bc:	4610      	mov	r0, r2
 80069be:	bd30      	pop	{r4, r5, pc}
 80069c0:	4283      	cmp	r3, r0
 80069c2:	d3f3      	bcc.n	80069ac <__mcmp+0x18>
 80069c4:	e7fa      	b.n	80069bc <__mcmp+0x28>
 80069c6:	f04f 32ff 	mov.w	r2, #4294967295
 80069ca:	e7f7      	b.n	80069bc <__mcmp+0x28>

080069cc <__mdiff>:
 80069cc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069d0:	460c      	mov	r4, r1
 80069d2:	4606      	mov	r6, r0
 80069d4:	4611      	mov	r1, r2
 80069d6:	4620      	mov	r0, r4
 80069d8:	4690      	mov	r8, r2
 80069da:	f7ff ffdb 	bl	8006994 <__mcmp>
 80069de:	1e05      	subs	r5, r0, #0
 80069e0:	d110      	bne.n	8006a04 <__mdiff+0x38>
 80069e2:	4629      	mov	r1, r5
 80069e4:	4630      	mov	r0, r6
 80069e6:	f7ff fd09 	bl	80063fc <_Balloc>
 80069ea:	b930      	cbnz	r0, 80069fa <__mdiff+0x2e>
 80069ec:	4b3a      	ldr	r3, [pc, #232]	; (8006ad8 <__mdiff+0x10c>)
 80069ee:	4602      	mov	r2, r0
 80069f0:	f240 2132 	movw	r1, #562	; 0x232
 80069f4:	4839      	ldr	r0, [pc, #228]	; (8006adc <__mdiff+0x110>)
 80069f6:	f000 fc51 	bl	800729c <__assert_func>
 80069fa:	2301      	movs	r3, #1
 80069fc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8006a00:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a04:	bfa4      	itt	ge
 8006a06:	4643      	movge	r3, r8
 8006a08:	46a0      	movge	r8, r4
 8006a0a:	4630      	mov	r0, r6
 8006a0c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8006a10:	bfa6      	itte	ge
 8006a12:	461c      	movge	r4, r3
 8006a14:	2500      	movge	r5, #0
 8006a16:	2501      	movlt	r5, #1
 8006a18:	f7ff fcf0 	bl	80063fc <_Balloc>
 8006a1c:	b920      	cbnz	r0, 8006a28 <__mdiff+0x5c>
 8006a1e:	4b2e      	ldr	r3, [pc, #184]	; (8006ad8 <__mdiff+0x10c>)
 8006a20:	4602      	mov	r2, r0
 8006a22:	f44f 7110 	mov.w	r1, #576	; 0x240
 8006a26:	e7e5      	b.n	80069f4 <__mdiff+0x28>
 8006a28:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8006a2c:	6926      	ldr	r6, [r4, #16]
 8006a2e:	60c5      	str	r5, [r0, #12]
 8006a30:	f104 0914 	add.w	r9, r4, #20
 8006a34:	f108 0514 	add.w	r5, r8, #20
 8006a38:	f100 0e14 	add.w	lr, r0, #20
 8006a3c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8006a40:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8006a44:	f108 0210 	add.w	r2, r8, #16
 8006a48:	46f2      	mov	sl, lr
 8006a4a:	2100      	movs	r1, #0
 8006a4c:	f859 3b04 	ldr.w	r3, [r9], #4
 8006a50:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8006a54:	fa1f f883 	uxth.w	r8, r3
 8006a58:	fa11 f18b 	uxtah	r1, r1, fp
 8006a5c:	0c1b      	lsrs	r3, r3, #16
 8006a5e:	eba1 0808 	sub.w	r8, r1, r8
 8006a62:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8006a66:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8006a6a:	fa1f f888 	uxth.w	r8, r8
 8006a6e:	1419      	asrs	r1, r3, #16
 8006a70:	454e      	cmp	r6, r9
 8006a72:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8006a76:	f84a 3b04 	str.w	r3, [sl], #4
 8006a7a:	d8e7      	bhi.n	8006a4c <__mdiff+0x80>
 8006a7c:	1b33      	subs	r3, r6, r4
 8006a7e:	3b15      	subs	r3, #21
 8006a80:	f023 0303 	bic.w	r3, r3, #3
 8006a84:	3304      	adds	r3, #4
 8006a86:	3415      	adds	r4, #21
 8006a88:	42a6      	cmp	r6, r4
 8006a8a:	bf38      	it	cc
 8006a8c:	2304      	movcc	r3, #4
 8006a8e:	441d      	add	r5, r3
 8006a90:	4473      	add	r3, lr
 8006a92:	469e      	mov	lr, r3
 8006a94:	462e      	mov	r6, r5
 8006a96:	4566      	cmp	r6, ip
 8006a98:	d30e      	bcc.n	8006ab8 <__mdiff+0xec>
 8006a9a:	f10c 0203 	add.w	r2, ip, #3
 8006a9e:	1b52      	subs	r2, r2, r5
 8006aa0:	f022 0203 	bic.w	r2, r2, #3
 8006aa4:	3d03      	subs	r5, #3
 8006aa6:	45ac      	cmp	ip, r5
 8006aa8:	bf38      	it	cc
 8006aaa:	2200      	movcc	r2, #0
 8006aac:	441a      	add	r2, r3
 8006aae:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8006ab2:	b17b      	cbz	r3, 8006ad4 <__mdiff+0x108>
 8006ab4:	6107      	str	r7, [r0, #16]
 8006ab6:	e7a3      	b.n	8006a00 <__mdiff+0x34>
 8006ab8:	f856 8b04 	ldr.w	r8, [r6], #4
 8006abc:	fa11 f288 	uxtah	r2, r1, r8
 8006ac0:	1414      	asrs	r4, r2, #16
 8006ac2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8006ac6:	b292      	uxth	r2, r2
 8006ac8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006acc:	f84e 2b04 	str.w	r2, [lr], #4
 8006ad0:	1421      	asrs	r1, r4, #16
 8006ad2:	e7e0      	b.n	8006a96 <__mdiff+0xca>
 8006ad4:	3f01      	subs	r7, #1
 8006ad6:	e7ea      	b.n	8006aae <__mdiff+0xe2>
 8006ad8:	08008da8 	.word	0x08008da8
 8006adc:	08008e34 	.word	0x08008e34

08006ae0 <__ulp>:
 8006ae0:	b082      	sub	sp, #8
 8006ae2:	ed8d 0b00 	vstr	d0, [sp]
 8006ae6:	9b01      	ldr	r3, [sp, #4]
 8006ae8:	4912      	ldr	r1, [pc, #72]	; (8006b34 <__ulp+0x54>)
 8006aea:	4019      	ands	r1, r3
 8006aec:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8006af0:	2900      	cmp	r1, #0
 8006af2:	dd05      	ble.n	8006b00 <__ulp+0x20>
 8006af4:	2200      	movs	r2, #0
 8006af6:	460b      	mov	r3, r1
 8006af8:	ec43 2b10 	vmov	d0, r2, r3
 8006afc:	b002      	add	sp, #8
 8006afe:	4770      	bx	lr
 8006b00:	4249      	negs	r1, r1
 8006b02:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8006b06:	ea4f 5021 	mov.w	r0, r1, asr #20
 8006b0a:	f04f 0200 	mov.w	r2, #0
 8006b0e:	f04f 0300 	mov.w	r3, #0
 8006b12:	da04      	bge.n	8006b1e <__ulp+0x3e>
 8006b14:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8006b18:	fa41 f300 	asr.w	r3, r1, r0
 8006b1c:	e7ec      	b.n	8006af8 <__ulp+0x18>
 8006b1e:	f1a0 0114 	sub.w	r1, r0, #20
 8006b22:	291e      	cmp	r1, #30
 8006b24:	bfda      	itte	le
 8006b26:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8006b2a:	fa20 f101 	lsrle.w	r1, r0, r1
 8006b2e:	2101      	movgt	r1, #1
 8006b30:	460a      	mov	r2, r1
 8006b32:	e7e1      	b.n	8006af8 <__ulp+0x18>
 8006b34:	7ff00000 	.word	0x7ff00000

08006b38 <__b2d>:
 8006b38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b3a:	6905      	ldr	r5, [r0, #16]
 8006b3c:	f100 0714 	add.w	r7, r0, #20
 8006b40:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8006b44:	1f2e      	subs	r6, r5, #4
 8006b46:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8006b4a:	4620      	mov	r0, r4
 8006b4c:	f7ff fd48 	bl	80065e0 <__hi0bits>
 8006b50:	f1c0 0320 	rsb	r3, r0, #32
 8006b54:	280a      	cmp	r0, #10
 8006b56:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8006bd4 <__b2d+0x9c>
 8006b5a:	600b      	str	r3, [r1, #0]
 8006b5c:	dc14      	bgt.n	8006b88 <__b2d+0x50>
 8006b5e:	f1c0 0e0b 	rsb	lr, r0, #11
 8006b62:	fa24 f10e 	lsr.w	r1, r4, lr
 8006b66:	42b7      	cmp	r7, r6
 8006b68:	ea41 030c 	orr.w	r3, r1, ip
 8006b6c:	bf34      	ite	cc
 8006b6e:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8006b72:	2100      	movcs	r1, #0
 8006b74:	3015      	adds	r0, #21
 8006b76:	fa04 f000 	lsl.w	r0, r4, r0
 8006b7a:	fa21 f10e 	lsr.w	r1, r1, lr
 8006b7e:	ea40 0201 	orr.w	r2, r0, r1
 8006b82:	ec43 2b10 	vmov	d0, r2, r3
 8006b86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006b88:	42b7      	cmp	r7, r6
 8006b8a:	bf3a      	itte	cc
 8006b8c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8006b90:	f1a5 0608 	subcc.w	r6, r5, #8
 8006b94:	2100      	movcs	r1, #0
 8006b96:	380b      	subs	r0, #11
 8006b98:	d017      	beq.n	8006bca <__b2d+0x92>
 8006b9a:	f1c0 0c20 	rsb	ip, r0, #32
 8006b9e:	fa04 f500 	lsl.w	r5, r4, r0
 8006ba2:	42be      	cmp	r6, r7
 8006ba4:	fa21 f40c 	lsr.w	r4, r1, ip
 8006ba8:	ea45 0504 	orr.w	r5, r5, r4
 8006bac:	bf8c      	ite	hi
 8006bae:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8006bb2:	2400      	movls	r4, #0
 8006bb4:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8006bb8:	fa01 f000 	lsl.w	r0, r1, r0
 8006bbc:	fa24 f40c 	lsr.w	r4, r4, ip
 8006bc0:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8006bc4:	ea40 0204 	orr.w	r2, r0, r4
 8006bc8:	e7db      	b.n	8006b82 <__b2d+0x4a>
 8006bca:	ea44 030c 	orr.w	r3, r4, ip
 8006bce:	460a      	mov	r2, r1
 8006bd0:	e7d7      	b.n	8006b82 <__b2d+0x4a>
 8006bd2:	bf00      	nop
 8006bd4:	3ff00000 	.word	0x3ff00000

08006bd8 <__d2b>:
 8006bd8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006bdc:	4689      	mov	r9, r1
 8006bde:	2101      	movs	r1, #1
 8006be0:	ec57 6b10 	vmov	r6, r7, d0
 8006be4:	4690      	mov	r8, r2
 8006be6:	f7ff fc09 	bl	80063fc <_Balloc>
 8006bea:	4604      	mov	r4, r0
 8006bec:	b930      	cbnz	r0, 8006bfc <__d2b+0x24>
 8006bee:	4602      	mov	r2, r0
 8006bf0:	4b25      	ldr	r3, [pc, #148]	; (8006c88 <__d2b+0xb0>)
 8006bf2:	4826      	ldr	r0, [pc, #152]	; (8006c8c <__d2b+0xb4>)
 8006bf4:	f240 310a 	movw	r1, #778	; 0x30a
 8006bf8:	f000 fb50 	bl	800729c <__assert_func>
 8006bfc:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8006c00:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8006c04:	bb35      	cbnz	r5, 8006c54 <__d2b+0x7c>
 8006c06:	2e00      	cmp	r6, #0
 8006c08:	9301      	str	r3, [sp, #4]
 8006c0a:	d028      	beq.n	8006c5e <__d2b+0x86>
 8006c0c:	4668      	mov	r0, sp
 8006c0e:	9600      	str	r6, [sp, #0]
 8006c10:	f7ff fd06 	bl	8006620 <__lo0bits>
 8006c14:	9900      	ldr	r1, [sp, #0]
 8006c16:	b300      	cbz	r0, 8006c5a <__d2b+0x82>
 8006c18:	9a01      	ldr	r2, [sp, #4]
 8006c1a:	f1c0 0320 	rsb	r3, r0, #32
 8006c1e:	fa02 f303 	lsl.w	r3, r2, r3
 8006c22:	430b      	orrs	r3, r1
 8006c24:	40c2      	lsrs	r2, r0
 8006c26:	6163      	str	r3, [r4, #20]
 8006c28:	9201      	str	r2, [sp, #4]
 8006c2a:	9b01      	ldr	r3, [sp, #4]
 8006c2c:	61a3      	str	r3, [r4, #24]
 8006c2e:	2b00      	cmp	r3, #0
 8006c30:	bf14      	ite	ne
 8006c32:	2202      	movne	r2, #2
 8006c34:	2201      	moveq	r2, #1
 8006c36:	6122      	str	r2, [r4, #16]
 8006c38:	b1d5      	cbz	r5, 8006c70 <__d2b+0x98>
 8006c3a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8006c3e:	4405      	add	r5, r0
 8006c40:	f8c9 5000 	str.w	r5, [r9]
 8006c44:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8006c48:	f8c8 0000 	str.w	r0, [r8]
 8006c4c:	4620      	mov	r0, r4
 8006c4e:	b003      	add	sp, #12
 8006c50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006c54:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006c58:	e7d5      	b.n	8006c06 <__d2b+0x2e>
 8006c5a:	6161      	str	r1, [r4, #20]
 8006c5c:	e7e5      	b.n	8006c2a <__d2b+0x52>
 8006c5e:	a801      	add	r0, sp, #4
 8006c60:	f7ff fcde 	bl	8006620 <__lo0bits>
 8006c64:	9b01      	ldr	r3, [sp, #4]
 8006c66:	6163      	str	r3, [r4, #20]
 8006c68:	2201      	movs	r2, #1
 8006c6a:	6122      	str	r2, [r4, #16]
 8006c6c:	3020      	adds	r0, #32
 8006c6e:	e7e3      	b.n	8006c38 <__d2b+0x60>
 8006c70:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8006c74:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006c78:	f8c9 0000 	str.w	r0, [r9]
 8006c7c:	6918      	ldr	r0, [r3, #16]
 8006c7e:	f7ff fcaf 	bl	80065e0 <__hi0bits>
 8006c82:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8006c86:	e7df      	b.n	8006c48 <__d2b+0x70>
 8006c88:	08008da8 	.word	0x08008da8
 8006c8c:	08008e34 	.word	0x08008e34

08006c90 <__ratio>:
 8006c90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c94:	4688      	mov	r8, r1
 8006c96:	4669      	mov	r1, sp
 8006c98:	4681      	mov	r9, r0
 8006c9a:	f7ff ff4d 	bl	8006b38 <__b2d>
 8006c9e:	a901      	add	r1, sp, #4
 8006ca0:	4640      	mov	r0, r8
 8006ca2:	ec55 4b10 	vmov	r4, r5, d0
 8006ca6:	f7ff ff47 	bl	8006b38 <__b2d>
 8006caa:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006cae:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8006cb2:	eba3 0c02 	sub.w	ip, r3, r2
 8006cb6:	e9dd 3200 	ldrd	r3, r2, [sp]
 8006cba:	1a9b      	subs	r3, r3, r2
 8006cbc:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8006cc0:	ec51 0b10 	vmov	r0, r1, d0
 8006cc4:	2b00      	cmp	r3, #0
 8006cc6:	bfd6      	itet	le
 8006cc8:	460a      	movle	r2, r1
 8006cca:	462a      	movgt	r2, r5
 8006ccc:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8006cd0:	468b      	mov	fp, r1
 8006cd2:	462f      	mov	r7, r5
 8006cd4:	bfd4      	ite	le
 8006cd6:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8006cda:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8006cde:	4620      	mov	r0, r4
 8006ce0:	ee10 2a10 	vmov	r2, s0
 8006ce4:	465b      	mov	r3, fp
 8006ce6:	4639      	mov	r1, r7
 8006ce8:	f7f9 fdb8 	bl	800085c <__aeabi_ddiv>
 8006cec:	ec41 0b10 	vmov	d0, r0, r1
 8006cf0:	b003      	add	sp, #12
 8006cf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006cf6 <__copybits>:
 8006cf6:	3901      	subs	r1, #1
 8006cf8:	b570      	push	{r4, r5, r6, lr}
 8006cfa:	1149      	asrs	r1, r1, #5
 8006cfc:	6914      	ldr	r4, [r2, #16]
 8006cfe:	3101      	adds	r1, #1
 8006d00:	f102 0314 	add.w	r3, r2, #20
 8006d04:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8006d08:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8006d0c:	1f05      	subs	r5, r0, #4
 8006d0e:	42a3      	cmp	r3, r4
 8006d10:	d30c      	bcc.n	8006d2c <__copybits+0x36>
 8006d12:	1aa3      	subs	r3, r4, r2
 8006d14:	3b11      	subs	r3, #17
 8006d16:	f023 0303 	bic.w	r3, r3, #3
 8006d1a:	3211      	adds	r2, #17
 8006d1c:	42a2      	cmp	r2, r4
 8006d1e:	bf88      	it	hi
 8006d20:	2300      	movhi	r3, #0
 8006d22:	4418      	add	r0, r3
 8006d24:	2300      	movs	r3, #0
 8006d26:	4288      	cmp	r0, r1
 8006d28:	d305      	bcc.n	8006d36 <__copybits+0x40>
 8006d2a:	bd70      	pop	{r4, r5, r6, pc}
 8006d2c:	f853 6b04 	ldr.w	r6, [r3], #4
 8006d30:	f845 6f04 	str.w	r6, [r5, #4]!
 8006d34:	e7eb      	b.n	8006d0e <__copybits+0x18>
 8006d36:	f840 3b04 	str.w	r3, [r0], #4
 8006d3a:	e7f4      	b.n	8006d26 <__copybits+0x30>

08006d3c <__any_on>:
 8006d3c:	f100 0214 	add.w	r2, r0, #20
 8006d40:	6900      	ldr	r0, [r0, #16]
 8006d42:	114b      	asrs	r3, r1, #5
 8006d44:	4298      	cmp	r0, r3
 8006d46:	b510      	push	{r4, lr}
 8006d48:	db11      	blt.n	8006d6e <__any_on+0x32>
 8006d4a:	dd0a      	ble.n	8006d62 <__any_on+0x26>
 8006d4c:	f011 011f 	ands.w	r1, r1, #31
 8006d50:	d007      	beq.n	8006d62 <__any_on+0x26>
 8006d52:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8006d56:	fa24 f001 	lsr.w	r0, r4, r1
 8006d5a:	fa00 f101 	lsl.w	r1, r0, r1
 8006d5e:	428c      	cmp	r4, r1
 8006d60:	d10b      	bne.n	8006d7a <__any_on+0x3e>
 8006d62:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006d66:	4293      	cmp	r3, r2
 8006d68:	d803      	bhi.n	8006d72 <__any_on+0x36>
 8006d6a:	2000      	movs	r0, #0
 8006d6c:	bd10      	pop	{r4, pc}
 8006d6e:	4603      	mov	r3, r0
 8006d70:	e7f7      	b.n	8006d62 <__any_on+0x26>
 8006d72:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8006d76:	2900      	cmp	r1, #0
 8006d78:	d0f5      	beq.n	8006d66 <__any_on+0x2a>
 8006d7a:	2001      	movs	r0, #1
 8006d7c:	e7f6      	b.n	8006d6c <__any_on+0x30>

08006d7e <_calloc_r>:
 8006d7e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d80:	fba1 2402 	umull	r2, r4, r1, r2
 8006d84:	b94c      	cbnz	r4, 8006d9a <_calloc_r+0x1c>
 8006d86:	4611      	mov	r1, r2
 8006d88:	9201      	str	r2, [sp, #4]
 8006d8a:	f000 f87b 	bl	8006e84 <_malloc_r>
 8006d8e:	9a01      	ldr	r2, [sp, #4]
 8006d90:	4605      	mov	r5, r0
 8006d92:	b930      	cbnz	r0, 8006da2 <_calloc_r+0x24>
 8006d94:	4628      	mov	r0, r5
 8006d96:	b003      	add	sp, #12
 8006d98:	bd30      	pop	{r4, r5, pc}
 8006d9a:	220c      	movs	r2, #12
 8006d9c:	6002      	str	r2, [r0, #0]
 8006d9e:	2500      	movs	r5, #0
 8006da0:	e7f8      	b.n	8006d94 <_calloc_r+0x16>
 8006da2:	4621      	mov	r1, r4
 8006da4:	f7fc fbc0 	bl	8003528 <memset>
 8006da8:	e7f4      	b.n	8006d94 <_calloc_r+0x16>
	...

08006dac <_free_r>:
 8006dac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006dae:	2900      	cmp	r1, #0
 8006db0:	d044      	beq.n	8006e3c <_free_r+0x90>
 8006db2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006db6:	9001      	str	r0, [sp, #4]
 8006db8:	2b00      	cmp	r3, #0
 8006dba:	f1a1 0404 	sub.w	r4, r1, #4
 8006dbe:	bfb8      	it	lt
 8006dc0:	18e4      	addlt	r4, r4, r3
 8006dc2:	f000 fab5 	bl	8007330 <__malloc_lock>
 8006dc6:	4a1e      	ldr	r2, [pc, #120]	; (8006e40 <_free_r+0x94>)
 8006dc8:	9801      	ldr	r0, [sp, #4]
 8006dca:	6813      	ldr	r3, [r2, #0]
 8006dcc:	b933      	cbnz	r3, 8006ddc <_free_r+0x30>
 8006dce:	6063      	str	r3, [r4, #4]
 8006dd0:	6014      	str	r4, [r2, #0]
 8006dd2:	b003      	add	sp, #12
 8006dd4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006dd8:	f000 bab0 	b.w	800733c <__malloc_unlock>
 8006ddc:	42a3      	cmp	r3, r4
 8006dde:	d908      	bls.n	8006df2 <_free_r+0x46>
 8006de0:	6825      	ldr	r5, [r4, #0]
 8006de2:	1961      	adds	r1, r4, r5
 8006de4:	428b      	cmp	r3, r1
 8006de6:	bf01      	itttt	eq
 8006de8:	6819      	ldreq	r1, [r3, #0]
 8006dea:	685b      	ldreq	r3, [r3, #4]
 8006dec:	1949      	addeq	r1, r1, r5
 8006dee:	6021      	streq	r1, [r4, #0]
 8006df0:	e7ed      	b.n	8006dce <_free_r+0x22>
 8006df2:	461a      	mov	r2, r3
 8006df4:	685b      	ldr	r3, [r3, #4]
 8006df6:	b10b      	cbz	r3, 8006dfc <_free_r+0x50>
 8006df8:	42a3      	cmp	r3, r4
 8006dfa:	d9fa      	bls.n	8006df2 <_free_r+0x46>
 8006dfc:	6811      	ldr	r1, [r2, #0]
 8006dfe:	1855      	adds	r5, r2, r1
 8006e00:	42a5      	cmp	r5, r4
 8006e02:	d10b      	bne.n	8006e1c <_free_r+0x70>
 8006e04:	6824      	ldr	r4, [r4, #0]
 8006e06:	4421      	add	r1, r4
 8006e08:	1854      	adds	r4, r2, r1
 8006e0a:	42a3      	cmp	r3, r4
 8006e0c:	6011      	str	r1, [r2, #0]
 8006e0e:	d1e0      	bne.n	8006dd2 <_free_r+0x26>
 8006e10:	681c      	ldr	r4, [r3, #0]
 8006e12:	685b      	ldr	r3, [r3, #4]
 8006e14:	6053      	str	r3, [r2, #4]
 8006e16:	4421      	add	r1, r4
 8006e18:	6011      	str	r1, [r2, #0]
 8006e1a:	e7da      	b.n	8006dd2 <_free_r+0x26>
 8006e1c:	d902      	bls.n	8006e24 <_free_r+0x78>
 8006e1e:	230c      	movs	r3, #12
 8006e20:	6003      	str	r3, [r0, #0]
 8006e22:	e7d6      	b.n	8006dd2 <_free_r+0x26>
 8006e24:	6825      	ldr	r5, [r4, #0]
 8006e26:	1961      	adds	r1, r4, r5
 8006e28:	428b      	cmp	r3, r1
 8006e2a:	bf04      	itt	eq
 8006e2c:	6819      	ldreq	r1, [r3, #0]
 8006e2e:	685b      	ldreq	r3, [r3, #4]
 8006e30:	6063      	str	r3, [r4, #4]
 8006e32:	bf04      	itt	eq
 8006e34:	1949      	addeq	r1, r1, r5
 8006e36:	6021      	streq	r1, [r4, #0]
 8006e38:	6054      	str	r4, [r2, #4]
 8006e3a:	e7ca      	b.n	8006dd2 <_free_r+0x26>
 8006e3c:	b003      	add	sp, #12
 8006e3e:	bd30      	pop	{r4, r5, pc}
 8006e40:	20000354 	.word	0x20000354

08006e44 <sbrk_aligned>:
 8006e44:	b570      	push	{r4, r5, r6, lr}
 8006e46:	4e0e      	ldr	r6, [pc, #56]	; (8006e80 <sbrk_aligned+0x3c>)
 8006e48:	460c      	mov	r4, r1
 8006e4a:	6831      	ldr	r1, [r6, #0]
 8006e4c:	4605      	mov	r5, r0
 8006e4e:	b911      	cbnz	r1, 8006e56 <sbrk_aligned+0x12>
 8006e50:	f000 f9f2 	bl	8007238 <_sbrk_r>
 8006e54:	6030      	str	r0, [r6, #0]
 8006e56:	4621      	mov	r1, r4
 8006e58:	4628      	mov	r0, r5
 8006e5a:	f000 f9ed 	bl	8007238 <_sbrk_r>
 8006e5e:	1c43      	adds	r3, r0, #1
 8006e60:	d00a      	beq.n	8006e78 <sbrk_aligned+0x34>
 8006e62:	1cc4      	adds	r4, r0, #3
 8006e64:	f024 0403 	bic.w	r4, r4, #3
 8006e68:	42a0      	cmp	r0, r4
 8006e6a:	d007      	beq.n	8006e7c <sbrk_aligned+0x38>
 8006e6c:	1a21      	subs	r1, r4, r0
 8006e6e:	4628      	mov	r0, r5
 8006e70:	f000 f9e2 	bl	8007238 <_sbrk_r>
 8006e74:	3001      	adds	r0, #1
 8006e76:	d101      	bne.n	8006e7c <sbrk_aligned+0x38>
 8006e78:	f04f 34ff 	mov.w	r4, #4294967295
 8006e7c:	4620      	mov	r0, r4
 8006e7e:	bd70      	pop	{r4, r5, r6, pc}
 8006e80:	20000358 	.word	0x20000358

08006e84 <_malloc_r>:
 8006e84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006e88:	1ccd      	adds	r5, r1, #3
 8006e8a:	f025 0503 	bic.w	r5, r5, #3
 8006e8e:	3508      	adds	r5, #8
 8006e90:	2d0c      	cmp	r5, #12
 8006e92:	bf38      	it	cc
 8006e94:	250c      	movcc	r5, #12
 8006e96:	2d00      	cmp	r5, #0
 8006e98:	4607      	mov	r7, r0
 8006e9a:	db01      	blt.n	8006ea0 <_malloc_r+0x1c>
 8006e9c:	42a9      	cmp	r1, r5
 8006e9e:	d905      	bls.n	8006eac <_malloc_r+0x28>
 8006ea0:	230c      	movs	r3, #12
 8006ea2:	603b      	str	r3, [r7, #0]
 8006ea4:	2600      	movs	r6, #0
 8006ea6:	4630      	mov	r0, r6
 8006ea8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006eac:	4e2e      	ldr	r6, [pc, #184]	; (8006f68 <_malloc_r+0xe4>)
 8006eae:	f000 fa3f 	bl	8007330 <__malloc_lock>
 8006eb2:	6833      	ldr	r3, [r6, #0]
 8006eb4:	461c      	mov	r4, r3
 8006eb6:	bb34      	cbnz	r4, 8006f06 <_malloc_r+0x82>
 8006eb8:	4629      	mov	r1, r5
 8006eba:	4638      	mov	r0, r7
 8006ebc:	f7ff ffc2 	bl	8006e44 <sbrk_aligned>
 8006ec0:	1c43      	adds	r3, r0, #1
 8006ec2:	4604      	mov	r4, r0
 8006ec4:	d14d      	bne.n	8006f62 <_malloc_r+0xde>
 8006ec6:	6834      	ldr	r4, [r6, #0]
 8006ec8:	4626      	mov	r6, r4
 8006eca:	2e00      	cmp	r6, #0
 8006ecc:	d140      	bne.n	8006f50 <_malloc_r+0xcc>
 8006ece:	6823      	ldr	r3, [r4, #0]
 8006ed0:	4631      	mov	r1, r6
 8006ed2:	4638      	mov	r0, r7
 8006ed4:	eb04 0803 	add.w	r8, r4, r3
 8006ed8:	f000 f9ae 	bl	8007238 <_sbrk_r>
 8006edc:	4580      	cmp	r8, r0
 8006ede:	d13a      	bne.n	8006f56 <_malloc_r+0xd2>
 8006ee0:	6821      	ldr	r1, [r4, #0]
 8006ee2:	3503      	adds	r5, #3
 8006ee4:	1a6d      	subs	r5, r5, r1
 8006ee6:	f025 0503 	bic.w	r5, r5, #3
 8006eea:	3508      	adds	r5, #8
 8006eec:	2d0c      	cmp	r5, #12
 8006eee:	bf38      	it	cc
 8006ef0:	250c      	movcc	r5, #12
 8006ef2:	4629      	mov	r1, r5
 8006ef4:	4638      	mov	r0, r7
 8006ef6:	f7ff ffa5 	bl	8006e44 <sbrk_aligned>
 8006efa:	3001      	adds	r0, #1
 8006efc:	d02b      	beq.n	8006f56 <_malloc_r+0xd2>
 8006efe:	6823      	ldr	r3, [r4, #0]
 8006f00:	442b      	add	r3, r5
 8006f02:	6023      	str	r3, [r4, #0]
 8006f04:	e00e      	b.n	8006f24 <_malloc_r+0xa0>
 8006f06:	6822      	ldr	r2, [r4, #0]
 8006f08:	1b52      	subs	r2, r2, r5
 8006f0a:	d41e      	bmi.n	8006f4a <_malloc_r+0xc6>
 8006f0c:	2a0b      	cmp	r2, #11
 8006f0e:	d916      	bls.n	8006f3e <_malloc_r+0xba>
 8006f10:	1961      	adds	r1, r4, r5
 8006f12:	42a3      	cmp	r3, r4
 8006f14:	6025      	str	r5, [r4, #0]
 8006f16:	bf18      	it	ne
 8006f18:	6059      	strne	r1, [r3, #4]
 8006f1a:	6863      	ldr	r3, [r4, #4]
 8006f1c:	bf08      	it	eq
 8006f1e:	6031      	streq	r1, [r6, #0]
 8006f20:	5162      	str	r2, [r4, r5]
 8006f22:	604b      	str	r3, [r1, #4]
 8006f24:	4638      	mov	r0, r7
 8006f26:	f104 060b 	add.w	r6, r4, #11
 8006f2a:	f000 fa07 	bl	800733c <__malloc_unlock>
 8006f2e:	f026 0607 	bic.w	r6, r6, #7
 8006f32:	1d23      	adds	r3, r4, #4
 8006f34:	1af2      	subs	r2, r6, r3
 8006f36:	d0b6      	beq.n	8006ea6 <_malloc_r+0x22>
 8006f38:	1b9b      	subs	r3, r3, r6
 8006f3a:	50a3      	str	r3, [r4, r2]
 8006f3c:	e7b3      	b.n	8006ea6 <_malloc_r+0x22>
 8006f3e:	6862      	ldr	r2, [r4, #4]
 8006f40:	42a3      	cmp	r3, r4
 8006f42:	bf0c      	ite	eq
 8006f44:	6032      	streq	r2, [r6, #0]
 8006f46:	605a      	strne	r2, [r3, #4]
 8006f48:	e7ec      	b.n	8006f24 <_malloc_r+0xa0>
 8006f4a:	4623      	mov	r3, r4
 8006f4c:	6864      	ldr	r4, [r4, #4]
 8006f4e:	e7b2      	b.n	8006eb6 <_malloc_r+0x32>
 8006f50:	4634      	mov	r4, r6
 8006f52:	6876      	ldr	r6, [r6, #4]
 8006f54:	e7b9      	b.n	8006eca <_malloc_r+0x46>
 8006f56:	230c      	movs	r3, #12
 8006f58:	603b      	str	r3, [r7, #0]
 8006f5a:	4638      	mov	r0, r7
 8006f5c:	f000 f9ee 	bl	800733c <__malloc_unlock>
 8006f60:	e7a1      	b.n	8006ea6 <_malloc_r+0x22>
 8006f62:	6025      	str	r5, [r4, #0]
 8006f64:	e7de      	b.n	8006f24 <_malloc_r+0xa0>
 8006f66:	bf00      	nop
 8006f68:	20000354 	.word	0x20000354

08006f6c <__ssputs_r>:
 8006f6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006f70:	688e      	ldr	r6, [r1, #8]
 8006f72:	429e      	cmp	r6, r3
 8006f74:	4682      	mov	sl, r0
 8006f76:	460c      	mov	r4, r1
 8006f78:	4690      	mov	r8, r2
 8006f7a:	461f      	mov	r7, r3
 8006f7c:	d838      	bhi.n	8006ff0 <__ssputs_r+0x84>
 8006f7e:	898a      	ldrh	r2, [r1, #12]
 8006f80:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006f84:	d032      	beq.n	8006fec <__ssputs_r+0x80>
 8006f86:	6825      	ldr	r5, [r4, #0]
 8006f88:	6909      	ldr	r1, [r1, #16]
 8006f8a:	eba5 0901 	sub.w	r9, r5, r1
 8006f8e:	6965      	ldr	r5, [r4, #20]
 8006f90:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006f94:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006f98:	3301      	adds	r3, #1
 8006f9a:	444b      	add	r3, r9
 8006f9c:	106d      	asrs	r5, r5, #1
 8006f9e:	429d      	cmp	r5, r3
 8006fa0:	bf38      	it	cc
 8006fa2:	461d      	movcc	r5, r3
 8006fa4:	0553      	lsls	r3, r2, #21
 8006fa6:	d531      	bpl.n	800700c <__ssputs_r+0xa0>
 8006fa8:	4629      	mov	r1, r5
 8006faa:	f7ff ff6b 	bl	8006e84 <_malloc_r>
 8006fae:	4606      	mov	r6, r0
 8006fb0:	b950      	cbnz	r0, 8006fc8 <__ssputs_r+0x5c>
 8006fb2:	230c      	movs	r3, #12
 8006fb4:	f8ca 3000 	str.w	r3, [sl]
 8006fb8:	89a3      	ldrh	r3, [r4, #12]
 8006fba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006fbe:	81a3      	strh	r3, [r4, #12]
 8006fc0:	f04f 30ff 	mov.w	r0, #4294967295
 8006fc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006fc8:	6921      	ldr	r1, [r4, #16]
 8006fca:	464a      	mov	r2, r9
 8006fcc:	f7ff fa08 	bl	80063e0 <memcpy>
 8006fd0:	89a3      	ldrh	r3, [r4, #12]
 8006fd2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006fd6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006fda:	81a3      	strh	r3, [r4, #12]
 8006fdc:	6126      	str	r6, [r4, #16]
 8006fde:	6165      	str	r5, [r4, #20]
 8006fe0:	444e      	add	r6, r9
 8006fe2:	eba5 0509 	sub.w	r5, r5, r9
 8006fe6:	6026      	str	r6, [r4, #0]
 8006fe8:	60a5      	str	r5, [r4, #8]
 8006fea:	463e      	mov	r6, r7
 8006fec:	42be      	cmp	r6, r7
 8006fee:	d900      	bls.n	8006ff2 <__ssputs_r+0x86>
 8006ff0:	463e      	mov	r6, r7
 8006ff2:	6820      	ldr	r0, [r4, #0]
 8006ff4:	4632      	mov	r2, r6
 8006ff6:	4641      	mov	r1, r8
 8006ff8:	f000 f980 	bl	80072fc <memmove>
 8006ffc:	68a3      	ldr	r3, [r4, #8]
 8006ffe:	1b9b      	subs	r3, r3, r6
 8007000:	60a3      	str	r3, [r4, #8]
 8007002:	6823      	ldr	r3, [r4, #0]
 8007004:	4433      	add	r3, r6
 8007006:	6023      	str	r3, [r4, #0]
 8007008:	2000      	movs	r0, #0
 800700a:	e7db      	b.n	8006fc4 <__ssputs_r+0x58>
 800700c:	462a      	mov	r2, r5
 800700e:	f000 f99b 	bl	8007348 <_realloc_r>
 8007012:	4606      	mov	r6, r0
 8007014:	2800      	cmp	r0, #0
 8007016:	d1e1      	bne.n	8006fdc <__ssputs_r+0x70>
 8007018:	6921      	ldr	r1, [r4, #16]
 800701a:	4650      	mov	r0, sl
 800701c:	f7ff fec6 	bl	8006dac <_free_r>
 8007020:	e7c7      	b.n	8006fb2 <__ssputs_r+0x46>
	...

08007024 <_svfiprintf_r>:
 8007024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007028:	4698      	mov	r8, r3
 800702a:	898b      	ldrh	r3, [r1, #12]
 800702c:	061b      	lsls	r3, r3, #24
 800702e:	b09d      	sub	sp, #116	; 0x74
 8007030:	4607      	mov	r7, r0
 8007032:	460d      	mov	r5, r1
 8007034:	4614      	mov	r4, r2
 8007036:	d50e      	bpl.n	8007056 <_svfiprintf_r+0x32>
 8007038:	690b      	ldr	r3, [r1, #16]
 800703a:	b963      	cbnz	r3, 8007056 <_svfiprintf_r+0x32>
 800703c:	2140      	movs	r1, #64	; 0x40
 800703e:	f7ff ff21 	bl	8006e84 <_malloc_r>
 8007042:	6028      	str	r0, [r5, #0]
 8007044:	6128      	str	r0, [r5, #16]
 8007046:	b920      	cbnz	r0, 8007052 <_svfiprintf_r+0x2e>
 8007048:	230c      	movs	r3, #12
 800704a:	603b      	str	r3, [r7, #0]
 800704c:	f04f 30ff 	mov.w	r0, #4294967295
 8007050:	e0d1      	b.n	80071f6 <_svfiprintf_r+0x1d2>
 8007052:	2340      	movs	r3, #64	; 0x40
 8007054:	616b      	str	r3, [r5, #20]
 8007056:	2300      	movs	r3, #0
 8007058:	9309      	str	r3, [sp, #36]	; 0x24
 800705a:	2320      	movs	r3, #32
 800705c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007060:	f8cd 800c 	str.w	r8, [sp, #12]
 8007064:	2330      	movs	r3, #48	; 0x30
 8007066:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8007210 <_svfiprintf_r+0x1ec>
 800706a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800706e:	f04f 0901 	mov.w	r9, #1
 8007072:	4623      	mov	r3, r4
 8007074:	469a      	mov	sl, r3
 8007076:	f813 2b01 	ldrb.w	r2, [r3], #1
 800707a:	b10a      	cbz	r2, 8007080 <_svfiprintf_r+0x5c>
 800707c:	2a25      	cmp	r2, #37	; 0x25
 800707e:	d1f9      	bne.n	8007074 <_svfiprintf_r+0x50>
 8007080:	ebba 0b04 	subs.w	fp, sl, r4
 8007084:	d00b      	beq.n	800709e <_svfiprintf_r+0x7a>
 8007086:	465b      	mov	r3, fp
 8007088:	4622      	mov	r2, r4
 800708a:	4629      	mov	r1, r5
 800708c:	4638      	mov	r0, r7
 800708e:	f7ff ff6d 	bl	8006f6c <__ssputs_r>
 8007092:	3001      	adds	r0, #1
 8007094:	f000 80aa 	beq.w	80071ec <_svfiprintf_r+0x1c8>
 8007098:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800709a:	445a      	add	r2, fp
 800709c:	9209      	str	r2, [sp, #36]	; 0x24
 800709e:	f89a 3000 	ldrb.w	r3, [sl]
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	f000 80a2 	beq.w	80071ec <_svfiprintf_r+0x1c8>
 80070a8:	2300      	movs	r3, #0
 80070aa:	f04f 32ff 	mov.w	r2, #4294967295
 80070ae:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80070b2:	f10a 0a01 	add.w	sl, sl, #1
 80070b6:	9304      	str	r3, [sp, #16]
 80070b8:	9307      	str	r3, [sp, #28]
 80070ba:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80070be:	931a      	str	r3, [sp, #104]	; 0x68
 80070c0:	4654      	mov	r4, sl
 80070c2:	2205      	movs	r2, #5
 80070c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80070c8:	4851      	ldr	r0, [pc, #324]	; (8007210 <_svfiprintf_r+0x1ec>)
 80070ca:	f7f9 f891 	bl	80001f0 <memchr>
 80070ce:	9a04      	ldr	r2, [sp, #16]
 80070d0:	b9d8      	cbnz	r0, 800710a <_svfiprintf_r+0xe6>
 80070d2:	06d0      	lsls	r0, r2, #27
 80070d4:	bf44      	itt	mi
 80070d6:	2320      	movmi	r3, #32
 80070d8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80070dc:	0711      	lsls	r1, r2, #28
 80070de:	bf44      	itt	mi
 80070e0:	232b      	movmi	r3, #43	; 0x2b
 80070e2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80070e6:	f89a 3000 	ldrb.w	r3, [sl]
 80070ea:	2b2a      	cmp	r3, #42	; 0x2a
 80070ec:	d015      	beq.n	800711a <_svfiprintf_r+0xf6>
 80070ee:	9a07      	ldr	r2, [sp, #28]
 80070f0:	4654      	mov	r4, sl
 80070f2:	2000      	movs	r0, #0
 80070f4:	f04f 0c0a 	mov.w	ip, #10
 80070f8:	4621      	mov	r1, r4
 80070fa:	f811 3b01 	ldrb.w	r3, [r1], #1
 80070fe:	3b30      	subs	r3, #48	; 0x30
 8007100:	2b09      	cmp	r3, #9
 8007102:	d94e      	bls.n	80071a2 <_svfiprintf_r+0x17e>
 8007104:	b1b0      	cbz	r0, 8007134 <_svfiprintf_r+0x110>
 8007106:	9207      	str	r2, [sp, #28]
 8007108:	e014      	b.n	8007134 <_svfiprintf_r+0x110>
 800710a:	eba0 0308 	sub.w	r3, r0, r8
 800710e:	fa09 f303 	lsl.w	r3, r9, r3
 8007112:	4313      	orrs	r3, r2
 8007114:	9304      	str	r3, [sp, #16]
 8007116:	46a2      	mov	sl, r4
 8007118:	e7d2      	b.n	80070c0 <_svfiprintf_r+0x9c>
 800711a:	9b03      	ldr	r3, [sp, #12]
 800711c:	1d19      	adds	r1, r3, #4
 800711e:	681b      	ldr	r3, [r3, #0]
 8007120:	9103      	str	r1, [sp, #12]
 8007122:	2b00      	cmp	r3, #0
 8007124:	bfbb      	ittet	lt
 8007126:	425b      	neglt	r3, r3
 8007128:	f042 0202 	orrlt.w	r2, r2, #2
 800712c:	9307      	strge	r3, [sp, #28]
 800712e:	9307      	strlt	r3, [sp, #28]
 8007130:	bfb8      	it	lt
 8007132:	9204      	strlt	r2, [sp, #16]
 8007134:	7823      	ldrb	r3, [r4, #0]
 8007136:	2b2e      	cmp	r3, #46	; 0x2e
 8007138:	d10c      	bne.n	8007154 <_svfiprintf_r+0x130>
 800713a:	7863      	ldrb	r3, [r4, #1]
 800713c:	2b2a      	cmp	r3, #42	; 0x2a
 800713e:	d135      	bne.n	80071ac <_svfiprintf_r+0x188>
 8007140:	9b03      	ldr	r3, [sp, #12]
 8007142:	1d1a      	adds	r2, r3, #4
 8007144:	681b      	ldr	r3, [r3, #0]
 8007146:	9203      	str	r2, [sp, #12]
 8007148:	2b00      	cmp	r3, #0
 800714a:	bfb8      	it	lt
 800714c:	f04f 33ff 	movlt.w	r3, #4294967295
 8007150:	3402      	adds	r4, #2
 8007152:	9305      	str	r3, [sp, #20]
 8007154:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007220 <_svfiprintf_r+0x1fc>
 8007158:	7821      	ldrb	r1, [r4, #0]
 800715a:	2203      	movs	r2, #3
 800715c:	4650      	mov	r0, sl
 800715e:	f7f9 f847 	bl	80001f0 <memchr>
 8007162:	b140      	cbz	r0, 8007176 <_svfiprintf_r+0x152>
 8007164:	2340      	movs	r3, #64	; 0x40
 8007166:	eba0 000a 	sub.w	r0, r0, sl
 800716a:	fa03 f000 	lsl.w	r0, r3, r0
 800716e:	9b04      	ldr	r3, [sp, #16]
 8007170:	4303      	orrs	r3, r0
 8007172:	3401      	adds	r4, #1
 8007174:	9304      	str	r3, [sp, #16]
 8007176:	f814 1b01 	ldrb.w	r1, [r4], #1
 800717a:	4826      	ldr	r0, [pc, #152]	; (8007214 <_svfiprintf_r+0x1f0>)
 800717c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007180:	2206      	movs	r2, #6
 8007182:	f7f9 f835 	bl	80001f0 <memchr>
 8007186:	2800      	cmp	r0, #0
 8007188:	d038      	beq.n	80071fc <_svfiprintf_r+0x1d8>
 800718a:	4b23      	ldr	r3, [pc, #140]	; (8007218 <_svfiprintf_r+0x1f4>)
 800718c:	bb1b      	cbnz	r3, 80071d6 <_svfiprintf_r+0x1b2>
 800718e:	9b03      	ldr	r3, [sp, #12]
 8007190:	3307      	adds	r3, #7
 8007192:	f023 0307 	bic.w	r3, r3, #7
 8007196:	3308      	adds	r3, #8
 8007198:	9303      	str	r3, [sp, #12]
 800719a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800719c:	4433      	add	r3, r6
 800719e:	9309      	str	r3, [sp, #36]	; 0x24
 80071a0:	e767      	b.n	8007072 <_svfiprintf_r+0x4e>
 80071a2:	fb0c 3202 	mla	r2, ip, r2, r3
 80071a6:	460c      	mov	r4, r1
 80071a8:	2001      	movs	r0, #1
 80071aa:	e7a5      	b.n	80070f8 <_svfiprintf_r+0xd4>
 80071ac:	2300      	movs	r3, #0
 80071ae:	3401      	adds	r4, #1
 80071b0:	9305      	str	r3, [sp, #20]
 80071b2:	4619      	mov	r1, r3
 80071b4:	f04f 0c0a 	mov.w	ip, #10
 80071b8:	4620      	mov	r0, r4
 80071ba:	f810 2b01 	ldrb.w	r2, [r0], #1
 80071be:	3a30      	subs	r2, #48	; 0x30
 80071c0:	2a09      	cmp	r2, #9
 80071c2:	d903      	bls.n	80071cc <_svfiprintf_r+0x1a8>
 80071c4:	2b00      	cmp	r3, #0
 80071c6:	d0c5      	beq.n	8007154 <_svfiprintf_r+0x130>
 80071c8:	9105      	str	r1, [sp, #20]
 80071ca:	e7c3      	b.n	8007154 <_svfiprintf_r+0x130>
 80071cc:	fb0c 2101 	mla	r1, ip, r1, r2
 80071d0:	4604      	mov	r4, r0
 80071d2:	2301      	movs	r3, #1
 80071d4:	e7f0      	b.n	80071b8 <_svfiprintf_r+0x194>
 80071d6:	ab03      	add	r3, sp, #12
 80071d8:	9300      	str	r3, [sp, #0]
 80071da:	462a      	mov	r2, r5
 80071dc:	4b0f      	ldr	r3, [pc, #60]	; (800721c <_svfiprintf_r+0x1f8>)
 80071de:	a904      	add	r1, sp, #16
 80071e0:	4638      	mov	r0, r7
 80071e2:	f7fc fa49 	bl	8003678 <_printf_float>
 80071e6:	1c42      	adds	r2, r0, #1
 80071e8:	4606      	mov	r6, r0
 80071ea:	d1d6      	bne.n	800719a <_svfiprintf_r+0x176>
 80071ec:	89ab      	ldrh	r3, [r5, #12]
 80071ee:	065b      	lsls	r3, r3, #25
 80071f0:	f53f af2c 	bmi.w	800704c <_svfiprintf_r+0x28>
 80071f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80071f6:	b01d      	add	sp, #116	; 0x74
 80071f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071fc:	ab03      	add	r3, sp, #12
 80071fe:	9300      	str	r3, [sp, #0]
 8007200:	462a      	mov	r2, r5
 8007202:	4b06      	ldr	r3, [pc, #24]	; (800721c <_svfiprintf_r+0x1f8>)
 8007204:	a904      	add	r1, sp, #16
 8007206:	4638      	mov	r0, r7
 8007208:	f7fc fcda 	bl	8003bc0 <_printf_i>
 800720c:	e7eb      	b.n	80071e6 <_svfiprintf_r+0x1c2>
 800720e:	bf00      	nop
 8007210:	08008f8c 	.word	0x08008f8c
 8007214:	08008f96 	.word	0x08008f96
 8007218:	08003679 	.word	0x08003679
 800721c:	08006f6d 	.word	0x08006f6d
 8007220:	08008f92 	.word	0x08008f92
 8007224:	00000000 	.word	0x00000000

08007228 <nan>:
 8007228:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8007230 <nan+0x8>
 800722c:	4770      	bx	lr
 800722e:	bf00      	nop
 8007230:	00000000 	.word	0x00000000
 8007234:	7ff80000 	.word	0x7ff80000

08007238 <_sbrk_r>:
 8007238:	b538      	push	{r3, r4, r5, lr}
 800723a:	4d06      	ldr	r5, [pc, #24]	; (8007254 <_sbrk_r+0x1c>)
 800723c:	2300      	movs	r3, #0
 800723e:	4604      	mov	r4, r0
 8007240:	4608      	mov	r0, r1
 8007242:	602b      	str	r3, [r5, #0]
 8007244:	f7fb feaa 	bl	8002f9c <_sbrk>
 8007248:	1c43      	adds	r3, r0, #1
 800724a:	d102      	bne.n	8007252 <_sbrk_r+0x1a>
 800724c:	682b      	ldr	r3, [r5, #0]
 800724e:	b103      	cbz	r3, 8007252 <_sbrk_r+0x1a>
 8007250:	6023      	str	r3, [r4, #0]
 8007252:	bd38      	pop	{r3, r4, r5, pc}
 8007254:	2000035c 	.word	0x2000035c

08007258 <strncmp>:
 8007258:	b510      	push	{r4, lr}
 800725a:	b17a      	cbz	r2, 800727c <strncmp+0x24>
 800725c:	4603      	mov	r3, r0
 800725e:	3901      	subs	r1, #1
 8007260:	1884      	adds	r4, r0, r2
 8007262:	f813 0b01 	ldrb.w	r0, [r3], #1
 8007266:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800726a:	4290      	cmp	r0, r2
 800726c:	d101      	bne.n	8007272 <strncmp+0x1a>
 800726e:	42a3      	cmp	r3, r4
 8007270:	d101      	bne.n	8007276 <strncmp+0x1e>
 8007272:	1a80      	subs	r0, r0, r2
 8007274:	bd10      	pop	{r4, pc}
 8007276:	2800      	cmp	r0, #0
 8007278:	d1f3      	bne.n	8007262 <strncmp+0xa>
 800727a:	e7fa      	b.n	8007272 <strncmp+0x1a>
 800727c:	4610      	mov	r0, r2
 800727e:	e7f9      	b.n	8007274 <strncmp+0x1c>

08007280 <__ascii_wctomb>:
 8007280:	b149      	cbz	r1, 8007296 <__ascii_wctomb+0x16>
 8007282:	2aff      	cmp	r2, #255	; 0xff
 8007284:	bf85      	ittet	hi
 8007286:	238a      	movhi	r3, #138	; 0x8a
 8007288:	6003      	strhi	r3, [r0, #0]
 800728a:	700a      	strbls	r2, [r1, #0]
 800728c:	f04f 30ff 	movhi.w	r0, #4294967295
 8007290:	bf98      	it	ls
 8007292:	2001      	movls	r0, #1
 8007294:	4770      	bx	lr
 8007296:	4608      	mov	r0, r1
 8007298:	4770      	bx	lr
	...

0800729c <__assert_func>:
 800729c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800729e:	4614      	mov	r4, r2
 80072a0:	461a      	mov	r2, r3
 80072a2:	4b09      	ldr	r3, [pc, #36]	; (80072c8 <__assert_func+0x2c>)
 80072a4:	681b      	ldr	r3, [r3, #0]
 80072a6:	4605      	mov	r5, r0
 80072a8:	68d8      	ldr	r0, [r3, #12]
 80072aa:	b14c      	cbz	r4, 80072c0 <__assert_func+0x24>
 80072ac:	4b07      	ldr	r3, [pc, #28]	; (80072cc <__assert_func+0x30>)
 80072ae:	9100      	str	r1, [sp, #0]
 80072b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80072b4:	4906      	ldr	r1, [pc, #24]	; (80072d0 <__assert_func+0x34>)
 80072b6:	462b      	mov	r3, r5
 80072b8:	f000 f80e 	bl	80072d8 <fiprintf>
 80072bc:	f000 fa8c 	bl	80077d8 <abort>
 80072c0:	4b04      	ldr	r3, [pc, #16]	; (80072d4 <__assert_func+0x38>)
 80072c2:	461c      	mov	r4, r3
 80072c4:	e7f3      	b.n	80072ae <__assert_func+0x12>
 80072c6:	bf00      	nop
 80072c8:	20000030 	.word	0x20000030
 80072cc:	08008f9d 	.word	0x08008f9d
 80072d0:	08008faa 	.word	0x08008faa
 80072d4:	08008fd8 	.word	0x08008fd8

080072d8 <fiprintf>:
 80072d8:	b40e      	push	{r1, r2, r3}
 80072da:	b503      	push	{r0, r1, lr}
 80072dc:	4601      	mov	r1, r0
 80072de:	ab03      	add	r3, sp, #12
 80072e0:	4805      	ldr	r0, [pc, #20]	; (80072f8 <fiprintf+0x20>)
 80072e2:	f853 2b04 	ldr.w	r2, [r3], #4
 80072e6:	6800      	ldr	r0, [r0, #0]
 80072e8:	9301      	str	r3, [sp, #4]
 80072ea:	f000 f885 	bl	80073f8 <_vfiprintf_r>
 80072ee:	b002      	add	sp, #8
 80072f0:	f85d eb04 	ldr.w	lr, [sp], #4
 80072f4:	b003      	add	sp, #12
 80072f6:	4770      	bx	lr
 80072f8:	20000030 	.word	0x20000030

080072fc <memmove>:
 80072fc:	4288      	cmp	r0, r1
 80072fe:	b510      	push	{r4, lr}
 8007300:	eb01 0402 	add.w	r4, r1, r2
 8007304:	d902      	bls.n	800730c <memmove+0x10>
 8007306:	4284      	cmp	r4, r0
 8007308:	4623      	mov	r3, r4
 800730a:	d807      	bhi.n	800731c <memmove+0x20>
 800730c:	1e43      	subs	r3, r0, #1
 800730e:	42a1      	cmp	r1, r4
 8007310:	d008      	beq.n	8007324 <memmove+0x28>
 8007312:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007316:	f803 2f01 	strb.w	r2, [r3, #1]!
 800731a:	e7f8      	b.n	800730e <memmove+0x12>
 800731c:	4402      	add	r2, r0
 800731e:	4601      	mov	r1, r0
 8007320:	428a      	cmp	r2, r1
 8007322:	d100      	bne.n	8007326 <memmove+0x2a>
 8007324:	bd10      	pop	{r4, pc}
 8007326:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800732a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800732e:	e7f7      	b.n	8007320 <memmove+0x24>

08007330 <__malloc_lock>:
 8007330:	4801      	ldr	r0, [pc, #4]	; (8007338 <__malloc_lock+0x8>)
 8007332:	f000 bc11 	b.w	8007b58 <__retarget_lock_acquire_recursive>
 8007336:	bf00      	nop
 8007338:	20000360 	.word	0x20000360

0800733c <__malloc_unlock>:
 800733c:	4801      	ldr	r0, [pc, #4]	; (8007344 <__malloc_unlock+0x8>)
 800733e:	f000 bc0c 	b.w	8007b5a <__retarget_lock_release_recursive>
 8007342:	bf00      	nop
 8007344:	20000360 	.word	0x20000360

08007348 <_realloc_r>:
 8007348:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800734c:	4680      	mov	r8, r0
 800734e:	4614      	mov	r4, r2
 8007350:	460e      	mov	r6, r1
 8007352:	b921      	cbnz	r1, 800735e <_realloc_r+0x16>
 8007354:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007358:	4611      	mov	r1, r2
 800735a:	f7ff bd93 	b.w	8006e84 <_malloc_r>
 800735e:	b92a      	cbnz	r2, 800736c <_realloc_r+0x24>
 8007360:	f7ff fd24 	bl	8006dac <_free_r>
 8007364:	4625      	mov	r5, r4
 8007366:	4628      	mov	r0, r5
 8007368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800736c:	f000 fc5c 	bl	8007c28 <_malloc_usable_size_r>
 8007370:	4284      	cmp	r4, r0
 8007372:	4607      	mov	r7, r0
 8007374:	d802      	bhi.n	800737c <_realloc_r+0x34>
 8007376:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800737a:	d812      	bhi.n	80073a2 <_realloc_r+0x5a>
 800737c:	4621      	mov	r1, r4
 800737e:	4640      	mov	r0, r8
 8007380:	f7ff fd80 	bl	8006e84 <_malloc_r>
 8007384:	4605      	mov	r5, r0
 8007386:	2800      	cmp	r0, #0
 8007388:	d0ed      	beq.n	8007366 <_realloc_r+0x1e>
 800738a:	42bc      	cmp	r4, r7
 800738c:	4622      	mov	r2, r4
 800738e:	4631      	mov	r1, r6
 8007390:	bf28      	it	cs
 8007392:	463a      	movcs	r2, r7
 8007394:	f7ff f824 	bl	80063e0 <memcpy>
 8007398:	4631      	mov	r1, r6
 800739a:	4640      	mov	r0, r8
 800739c:	f7ff fd06 	bl	8006dac <_free_r>
 80073a0:	e7e1      	b.n	8007366 <_realloc_r+0x1e>
 80073a2:	4635      	mov	r5, r6
 80073a4:	e7df      	b.n	8007366 <_realloc_r+0x1e>

080073a6 <__sfputc_r>:
 80073a6:	6893      	ldr	r3, [r2, #8]
 80073a8:	3b01      	subs	r3, #1
 80073aa:	2b00      	cmp	r3, #0
 80073ac:	b410      	push	{r4}
 80073ae:	6093      	str	r3, [r2, #8]
 80073b0:	da08      	bge.n	80073c4 <__sfputc_r+0x1e>
 80073b2:	6994      	ldr	r4, [r2, #24]
 80073b4:	42a3      	cmp	r3, r4
 80073b6:	db01      	blt.n	80073bc <__sfputc_r+0x16>
 80073b8:	290a      	cmp	r1, #10
 80073ba:	d103      	bne.n	80073c4 <__sfputc_r+0x1e>
 80073bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80073c0:	f000 b94a 	b.w	8007658 <__swbuf_r>
 80073c4:	6813      	ldr	r3, [r2, #0]
 80073c6:	1c58      	adds	r0, r3, #1
 80073c8:	6010      	str	r0, [r2, #0]
 80073ca:	7019      	strb	r1, [r3, #0]
 80073cc:	4608      	mov	r0, r1
 80073ce:	f85d 4b04 	ldr.w	r4, [sp], #4
 80073d2:	4770      	bx	lr

080073d4 <__sfputs_r>:
 80073d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80073d6:	4606      	mov	r6, r0
 80073d8:	460f      	mov	r7, r1
 80073da:	4614      	mov	r4, r2
 80073dc:	18d5      	adds	r5, r2, r3
 80073de:	42ac      	cmp	r4, r5
 80073e0:	d101      	bne.n	80073e6 <__sfputs_r+0x12>
 80073e2:	2000      	movs	r0, #0
 80073e4:	e007      	b.n	80073f6 <__sfputs_r+0x22>
 80073e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80073ea:	463a      	mov	r2, r7
 80073ec:	4630      	mov	r0, r6
 80073ee:	f7ff ffda 	bl	80073a6 <__sfputc_r>
 80073f2:	1c43      	adds	r3, r0, #1
 80073f4:	d1f3      	bne.n	80073de <__sfputs_r+0xa>
 80073f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080073f8 <_vfiprintf_r>:
 80073f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073fc:	460d      	mov	r5, r1
 80073fe:	b09d      	sub	sp, #116	; 0x74
 8007400:	4614      	mov	r4, r2
 8007402:	4698      	mov	r8, r3
 8007404:	4606      	mov	r6, r0
 8007406:	b118      	cbz	r0, 8007410 <_vfiprintf_r+0x18>
 8007408:	6983      	ldr	r3, [r0, #24]
 800740a:	b90b      	cbnz	r3, 8007410 <_vfiprintf_r+0x18>
 800740c:	f000 fb06 	bl	8007a1c <__sinit>
 8007410:	4b89      	ldr	r3, [pc, #548]	; (8007638 <_vfiprintf_r+0x240>)
 8007412:	429d      	cmp	r5, r3
 8007414:	d11b      	bne.n	800744e <_vfiprintf_r+0x56>
 8007416:	6875      	ldr	r5, [r6, #4]
 8007418:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800741a:	07d9      	lsls	r1, r3, #31
 800741c:	d405      	bmi.n	800742a <_vfiprintf_r+0x32>
 800741e:	89ab      	ldrh	r3, [r5, #12]
 8007420:	059a      	lsls	r2, r3, #22
 8007422:	d402      	bmi.n	800742a <_vfiprintf_r+0x32>
 8007424:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007426:	f000 fb97 	bl	8007b58 <__retarget_lock_acquire_recursive>
 800742a:	89ab      	ldrh	r3, [r5, #12]
 800742c:	071b      	lsls	r3, r3, #28
 800742e:	d501      	bpl.n	8007434 <_vfiprintf_r+0x3c>
 8007430:	692b      	ldr	r3, [r5, #16]
 8007432:	b9eb      	cbnz	r3, 8007470 <_vfiprintf_r+0x78>
 8007434:	4629      	mov	r1, r5
 8007436:	4630      	mov	r0, r6
 8007438:	f000 f960 	bl	80076fc <__swsetup_r>
 800743c:	b1c0      	cbz	r0, 8007470 <_vfiprintf_r+0x78>
 800743e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007440:	07dc      	lsls	r4, r3, #31
 8007442:	d50e      	bpl.n	8007462 <_vfiprintf_r+0x6a>
 8007444:	f04f 30ff 	mov.w	r0, #4294967295
 8007448:	b01d      	add	sp, #116	; 0x74
 800744a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800744e:	4b7b      	ldr	r3, [pc, #492]	; (800763c <_vfiprintf_r+0x244>)
 8007450:	429d      	cmp	r5, r3
 8007452:	d101      	bne.n	8007458 <_vfiprintf_r+0x60>
 8007454:	68b5      	ldr	r5, [r6, #8]
 8007456:	e7df      	b.n	8007418 <_vfiprintf_r+0x20>
 8007458:	4b79      	ldr	r3, [pc, #484]	; (8007640 <_vfiprintf_r+0x248>)
 800745a:	429d      	cmp	r5, r3
 800745c:	bf08      	it	eq
 800745e:	68f5      	ldreq	r5, [r6, #12]
 8007460:	e7da      	b.n	8007418 <_vfiprintf_r+0x20>
 8007462:	89ab      	ldrh	r3, [r5, #12]
 8007464:	0598      	lsls	r0, r3, #22
 8007466:	d4ed      	bmi.n	8007444 <_vfiprintf_r+0x4c>
 8007468:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800746a:	f000 fb76 	bl	8007b5a <__retarget_lock_release_recursive>
 800746e:	e7e9      	b.n	8007444 <_vfiprintf_r+0x4c>
 8007470:	2300      	movs	r3, #0
 8007472:	9309      	str	r3, [sp, #36]	; 0x24
 8007474:	2320      	movs	r3, #32
 8007476:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800747a:	f8cd 800c 	str.w	r8, [sp, #12]
 800747e:	2330      	movs	r3, #48	; 0x30
 8007480:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8007644 <_vfiprintf_r+0x24c>
 8007484:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007488:	f04f 0901 	mov.w	r9, #1
 800748c:	4623      	mov	r3, r4
 800748e:	469a      	mov	sl, r3
 8007490:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007494:	b10a      	cbz	r2, 800749a <_vfiprintf_r+0xa2>
 8007496:	2a25      	cmp	r2, #37	; 0x25
 8007498:	d1f9      	bne.n	800748e <_vfiprintf_r+0x96>
 800749a:	ebba 0b04 	subs.w	fp, sl, r4
 800749e:	d00b      	beq.n	80074b8 <_vfiprintf_r+0xc0>
 80074a0:	465b      	mov	r3, fp
 80074a2:	4622      	mov	r2, r4
 80074a4:	4629      	mov	r1, r5
 80074a6:	4630      	mov	r0, r6
 80074a8:	f7ff ff94 	bl	80073d4 <__sfputs_r>
 80074ac:	3001      	adds	r0, #1
 80074ae:	f000 80aa 	beq.w	8007606 <_vfiprintf_r+0x20e>
 80074b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80074b4:	445a      	add	r2, fp
 80074b6:	9209      	str	r2, [sp, #36]	; 0x24
 80074b8:	f89a 3000 	ldrb.w	r3, [sl]
 80074bc:	2b00      	cmp	r3, #0
 80074be:	f000 80a2 	beq.w	8007606 <_vfiprintf_r+0x20e>
 80074c2:	2300      	movs	r3, #0
 80074c4:	f04f 32ff 	mov.w	r2, #4294967295
 80074c8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80074cc:	f10a 0a01 	add.w	sl, sl, #1
 80074d0:	9304      	str	r3, [sp, #16]
 80074d2:	9307      	str	r3, [sp, #28]
 80074d4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80074d8:	931a      	str	r3, [sp, #104]	; 0x68
 80074da:	4654      	mov	r4, sl
 80074dc:	2205      	movs	r2, #5
 80074de:	f814 1b01 	ldrb.w	r1, [r4], #1
 80074e2:	4858      	ldr	r0, [pc, #352]	; (8007644 <_vfiprintf_r+0x24c>)
 80074e4:	f7f8 fe84 	bl	80001f0 <memchr>
 80074e8:	9a04      	ldr	r2, [sp, #16]
 80074ea:	b9d8      	cbnz	r0, 8007524 <_vfiprintf_r+0x12c>
 80074ec:	06d1      	lsls	r1, r2, #27
 80074ee:	bf44      	itt	mi
 80074f0:	2320      	movmi	r3, #32
 80074f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80074f6:	0713      	lsls	r3, r2, #28
 80074f8:	bf44      	itt	mi
 80074fa:	232b      	movmi	r3, #43	; 0x2b
 80074fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007500:	f89a 3000 	ldrb.w	r3, [sl]
 8007504:	2b2a      	cmp	r3, #42	; 0x2a
 8007506:	d015      	beq.n	8007534 <_vfiprintf_r+0x13c>
 8007508:	9a07      	ldr	r2, [sp, #28]
 800750a:	4654      	mov	r4, sl
 800750c:	2000      	movs	r0, #0
 800750e:	f04f 0c0a 	mov.w	ip, #10
 8007512:	4621      	mov	r1, r4
 8007514:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007518:	3b30      	subs	r3, #48	; 0x30
 800751a:	2b09      	cmp	r3, #9
 800751c:	d94e      	bls.n	80075bc <_vfiprintf_r+0x1c4>
 800751e:	b1b0      	cbz	r0, 800754e <_vfiprintf_r+0x156>
 8007520:	9207      	str	r2, [sp, #28]
 8007522:	e014      	b.n	800754e <_vfiprintf_r+0x156>
 8007524:	eba0 0308 	sub.w	r3, r0, r8
 8007528:	fa09 f303 	lsl.w	r3, r9, r3
 800752c:	4313      	orrs	r3, r2
 800752e:	9304      	str	r3, [sp, #16]
 8007530:	46a2      	mov	sl, r4
 8007532:	e7d2      	b.n	80074da <_vfiprintf_r+0xe2>
 8007534:	9b03      	ldr	r3, [sp, #12]
 8007536:	1d19      	adds	r1, r3, #4
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	9103      	str	r1, [sp, #12]
 800753c:	2b00      	cmp	r3, #0
 800753e:	bfbb      	ittet	lt
 8007540:	425b      	neglt	r3, r3
 8007542:	f042 0202 	orrlt.w	r2, r2, #2
 8007546:	9307      	strge	r3, [sp, #28]
 8007548:	9307      	strlt	r3, [sp, #28]
 800754a:	bfb8      	it	lt
 800754c:	9204      	strlt	r2, [sp, #16]
 800754e:	7823      	ldrb	r3, [r4, #0]
 8007550:	2b2e      	cmp	r3, #46	; 0x2e
 8007552:	d10c      	bne.n	800756e <_vfiprintf_r+0x176>
 8007554:	7863      	ldrb	r3, [r4, #1]
 8007556:	2b2a      	cmp	r3, #42	; 0x2a
 8007558:	d135      	bne.n	80075c6 <_vfiprintf_r+0x1ce>
 800755a:	9b03      	ldr	r3, [sp, #12]
 800755c:	1d1a      	adds	r2, r3, #4
 800755e:	681b      	ldr	r3, [r3, #0]
 8007560:	9203      	str	r2, [sp, #12]
 8007562:	2b00      	cmp	r3, #0
 8007564:	bfb8      	it	lt
 8007566:	f04f 33ff 	movlt.w	r3, #4294967295
 800756a:	3402      	adds	r4, #2
 800756c:	9305      	str	r3, [sp, #20]
 800756e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8007654 <_vfiprintf_r+0x25c>
 8007572:	7821      	ldrb	r1, [r4, #0]
 8007574:	2203      	movs	r2, #3
 8007576:	4650      	mov	r0, sl
 8007578:	f7f8 fe3a 	bl	80001f0 <memchr>
 800757c:	b140      	cbz	r0, 8007590 <_vfiprintf_r+0x198>
 800757e:	2340      	movs	r3, #64	; 0x40
 8007580:	eba0 000a 	sub.w	r0, r0, sl
 8007584:	fa03 f000 	lsl.w	r0, r3, r0
 8007588:	9b04      	ldr	r3, [sp, #16]
 800758a:	4303      	orrs	r3, r0
 800758c:	3401      	adds	r4, #1
 800758e:	9304      	str	r3, [sp, #16]
 8007590:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007594:	482c      	ldr	r0, [pc, #176]	; (8007648 <_vfiprintf_r+0x250>)
 8007596:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800759a:	2206      	movs	r2, #6
 800759c:	f7f8 fe28 	bl	80001f0 <memchr>
 80075a0:	2800      	cmp	r0, #0
 80075a2:	d03f      	beq.n	8007624 <_vfiprintf_r+0x22c>
 80075a4:	4b29      	ldr	r3, [pc, #164]	; (800764c <_vfiprintf_r+0x254>)
 80075a6:	bb1b      	cbnz	r3, 80075f0 <_vfiprintf_r+0x1f8>
 80075a8:	9b03      	ldr	r3, [sp, #12]
 80075aa:	3307      	adds	r3, #7
 80075ac:	f023 0307 	bic.w	r3, r3, #7
 80075b0:	3308      	adds	r3, #8
 80075b2:	9303      	str	r3, [sp, #12]
 80075b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80075b6:	443b      	add	r3, r7
 80075b8:	9309      	str	r3, [sp, #36]	; 0x24
 80075ba:	e767      	b.n	800748c <_vfiprintf_r+0x94>
 80075bc:	fb0c 3202 	mla	r2, ip, r2, r3
 80075c0:	460c      	mov	r4, r1
 80075c2:	2001      	movs	r0, #1
 80075c4:	e7a5      	b.n	8007512 <_vfiprintf_r+0x11a>
 80075c6:	2300      	movs	r3, #0
 80075c8:	3401      	adds	r4, #1
 80075ca:	9305      	str	r3, [sp, #20]
 80075cc:	4619      	mov	r1, r3
 80075ce:	f04f 0c0a 	mov.w	ip, #10
 80075d2:	4620      	mov	r0, r4
 80075d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80075d8:	3a30      	subs	r2, #48	; 0x30
 80075da:	2a09      	cmp	r2, #9
 80075dc:	d903      	bls.n	80075e6 <_vfiprintf_r+0x1ee>
 80075de:	2b00      	cmp	r3, #0
 80075e0:	d0c5      	beq.n	800756e <_vfiprintf_r+0x176>
 80075e2:	9105      	str	r1, [sp, #20]
 80075e4:	e7c3      	b.n	800756e <_vfiprintf_r+0x176>
 80075e6:	fb0c 2101 	mla	r1, ip, r1, r2
 80075ea:	4604      	mov	r4, r0
 80075ec:	2301      	movs	r3, #1
 80075ee:	e7f0      	b.n	80075d2 <_vfiprintf_r+0x1da>
 80075f0:	ab03      	add	r3, sp, #12
 80075f2:	9300      	str	r3, [sp, #0]
 80075f4:	462a      	mov	r2, r5
 80075f6:	4b16      	ldr	r3, [pc, #88]	; (8007650 <_vfiprintf_r+0x258>)
 80075f8:	a904      	add	r1, sp, #16
 80075fa:	4630      	mov	r0, r6
 80075fc:	f7fc f83c 	bl	8003678 <_printf_float>
 8007600:	4607      	mov	r7, r0
 8007602:	1c78      	adds	r0, r7, #1
 8007604:	d1d6      	bne.n	80075b4 <_vfiprintf_r+0x1bc>
 8007606:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007608:	07d9      	lsls	r1, r3, #31
 800760a:	d405      	bmi.n	8007618 <_vfiprintf_r+0x220>
 800760c:	89ab      	ldrh	r3, [r5, #12]
 800760e:	059a      	lsls	r2, r3, #22
 8007610:	d402      	bmi.n	8007618 <_vfiprintf_r+0x220>
 8007612:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007614:	f000 faa1 	bl	8007b5a <__retarget_lock_release_recursive>
 8007618:	89ab      	ldrh	r3, [r5, #12]
 800761a:	065b      	lsls	r3, r3, #25
 800761c:	f53f af12 	bmi.w	8007444 <_vfiprintf_r+0x4c>
 8007620:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007622:	e711      	b.n	8007448 <_vfiprintf_r+0x50>
 8007624:	ab03      	add	r3, sp, #12
 8007626:	9300      	str	r3, [sp, #0]
 8007628:	462a      	mov	r2, r5
 800762a:	4b09      	ldr	r3, [pc, #36]	; (8007650 <_vfiprintf_r+0x258>)
 800762c:	a904      	add	r1, sp, #16
 800762e:	4630      	mov	r0, r6
 8007630:	f7fc fac6 	bl	8003bc0 <_printf_i>
 8007634:	e7e4      	b.n	8007600 <_vfiprintf_r+0x208>
 8007636:	bf00      	nop
 8007638:	08008ffc 	.word	0x08008ffc
 800763c:	0800901c 	.word	0x0800901c
 8007640:	08008fdc 	.word	0x08008fdc
 8007644:	08008f8c 	.word	0x08008f8c
 8007648:	08008f96 	.word	0x08008f96
 800764c:	08003679 	.word	0x08003679
 8007650:	080073d5 	.word	0x080073d5
 8007654:	08008f92 	.word	0x08008f92

08007658 <__swbuf_r>:
 8007658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800765a:	460e      	mov	r6, r1
 800765c:	4614      	mov	r4, r2
 800765e:	4605      	mov	r5, r0
 8007660:	b118      	cbz	r0, 800766a <__swbuf_r+0x12>
 8007662:	6983      	ldr	r3, [r0, #24]
 8007664:	b90b      	cbnz	r3, 800766a <__swbuf_r+0x12>
 8007666:	f000 f9d9 	bl	8007a1c <__sinit>
 800766a:	4b21      	ldr	r3, [pc, #132]	; (80076f0 <__swbuf_r+0x98>)
 800766c:	429c      	cmp	r4, r3
 800766e:	d12b      	bne.n	80076c8 <__swbuf_r+0x70>
 8007670:	686c      	ldr	r4, [r5, #4]
 8007672:	69a3      	ldr	r3, [r4, #24]
 8007674:	60a3      	str	r3, [r4, #8]
 8007676:	89a3      	ldrh	r3, [r4, #12]
 8007678:	071a      	lsls	r2, r3, #28
 800767a:	d52f      	bpl.n	80076dc <__swbuf_r+0x84>
 800767c:	6923      	ldr	r3, [r4, #16]
 800767e:	b36b      	cbz	r3, 80076dc <__swbuf_r+0x84>
 8007680:	6923      	ldr	r3, [r4, #16]
 8007682:	6820      	ldr	r0, [r4, #0]
 8007684:	1ac0      	subs	r0, r0, r3
 8007686:	6963      	ldr	r3, [r4, #20]
 8007688:	b2f6      	uxtb	r6, r6
 800768a:	4283      	cmp	r3, r0
 800768c:	4637      	mov	r7, r6
 800768e:	dc04      	bgt.n	800769a <__swbuf_r+0x42>
 8007690:	4621      	mov	r1, r4
 8007692:	4628      	mov	r0, r5
 8007694:	f000 f92e 	bl	80078f4 <_fflush_r>
 8007698:	bb30      	cbnz	r0, 80076e8 <__swbuf_r+0x90>
 800769a:	68a3      	ldr	r3, [r4, #8]
 800769c:	3b01      	subs	r3, #1
 800769e:	60a3      	str	r3, [r4, #8]
 80076a0:	6823      	ldr	r3, [r4, #0]
 80076a2:	1c5a      	adds	r2, r3, #1
 80076a4:	6022      	str	r2, [r4, #0]
 80076a6:	701e      	strb	r6, [r3, #0]
 80076a8:	6963      	ldr	r3, [r4, #20]
 80076aa:	3001      	adds	r0, #1
 80076ac:	4283      	cmp	r3, r0
 80076ae:	d004      	beq.n	80076ba <__swbuf_r+0x62>
 80076b0:	89a3      	ldrh	r3, [r4, #12]
 80076b2:	07db      	lsls	r3, r3, #31
 80076b4:	d506      	bpl.n	80076c4 <__swbuf_r+0x6c>
 80076b6:	2e0a      	cmp	r6, #10
 80076b8:	d104      	bne.n	80076c4 <__swbuf_r+0x6c>
 80076ba:	4621      	mov	r1, r4
 80076bc:	4628      	mov	r0, r5
 80076be:	f000 f919 	bl	80078f4 <_fflush_r>
 80076c2:	b988      	cbnz	r0, 80076e8 <__swbuf_r+0x90>
 80076c4:	4638      	mov	r0, r7
 80076c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80076c8:	4b0a      	ldr	r3, [pc, #40]	; (80076f4 <__swbuf_r+0x9c>)
 80076ca:	429c      	cmp	r4, r3
 80076cc:	d101      	bne.n	80076d2 <__swbuf_r+0x7a>
 80076ce:	68ac      	ldr	r4, [r5, #8]
 80076d0:	e7cf      	b.n	8007672 <__swbuf_r+0x1a>
 80076d2:	4b09      	ldr	r3, [pc, #36]	; (80076f8 <__swbuf_r+0xa0>)
 80076d4:	429c      	cmp	r4, r3
 80076d6:	bf08      	it	eq
 80076d8:	68ec      	ldreq	r4, [r5, #12]
 80076da:	e7ca      	b.n	8007672 <__swbuf_r+0x1a>
 80076dc:	4621      	mov	r1, r4
 80076de:	4628      	mov	r0, r5
 80076e0:	f000 f80c 	bl	80076fc <__swsetup_r>
 80076e4:	2800      	cmp	r0, #0
 80076e6:	d0cb      	beq.n	8007680 <__swbuf_r+0x28>
 80076e8:	f04f 37ff 	mov.w	r7, #4294967295
 80076ec:	e7ea      	b.n	80076c4 <__swbuf_r+0x6c>
 80076ee:	bf00      	nop
 80076f0:	08008ffc 	.word	0x08008ffc
 80076f4:	0800901c 	.word	0x0800901c
 80076f8:	08008fdc 	.word	0x08008fdc

080076fc <__swsetup_r>:
 80076fc:	4b32      	ldr	r3, [pc, #200]	; (80077c8 <__swsetup_r+0xcc>)
 80076fe:	b570      	push	{r4, r5, r6, lr}
 8007700:	681d      	ldr	r5, [r3, #0]
 8007702:	4606      	mov	r6, r0
 8007704:	460c      	mov	r4, r1
 8007706:	b125      	cbz	r5, 8007712 <__swsetup_r+0x16>
 8007708:	69ab      	ldr	r3, [r5, #24]
 800770a:	b913      	cbnz	r3, 8007712 <__swsetup_r+0x16>
 800770c:	4628      	mov	r0, r5
 800770e:	f000 f985 	bl	8007a1c <__sinit>
 8007712:	4b2e      	ldr	r3, [pc, #184]	; (80077cc <__swsetup_r+0xd0>)
 8007714:	429c      	cmp	r4, r3
 8007716:	d10f      	bne.n	8007738 <__swsetup_r+0x3c>
 8007718:	686c      	ldr	r4, [r5, #4]
 800771a:	89a3      	ldrh	r3, [r4, #12]
 800771c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007720:	0719      	lsls	r1, r3, #28
 8007722:	d42c      	bmi.n	800777e <__swsetup_r+0x82>
 8007724:	06dd      	lsls	r5, r3, #27
 8007726:	d411      	bmi.n	800774c <__swsetup_r+0x50>
 8007728:	2309      	movs	r3, #9
 800772a:	6033      	str	r3, [r6, #0]
 800772c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007730:	81a3      	strh	r3, [r4, #12]
 8007732:	f04f 30ff 	mov.w	r0, #4294967295
 8007736:	e03e      	b.n	80077b6 <__swsetup_r+0xba>
 8007738:	4b25      	ldr	r3, [pc, #148]	; (80077d0 <__swsetup_r+0xd4>)
 800773a:	429c      	cmp	r4, r3
 800773c:	d101      	bne.n	8007742 <__swsetup_r+0x46>
 800773e:	68ac      	ldr	r4, [r5, #8]
 8007740:	e7eb      	b.n	800771a <__swsetup_r+0x1e>
 8007742:	4b24      	ldr	r3, [pc, #144]	; (80077d4 <__swsetup_r+0xd8>)
 8007744:	429c      	cmp	r4, r3
 8007746:	bf08      	it	eq
 8007748:	68ec      	ldreq	r4, [r5, #12]
 800774a:	e7e6      	b.n	800771a <__swsetup_r+0x1e>
 800774c:	0758      	lsls	r0, r3, #29
 800774e:	d512      	bpl.n	8007776 <__swsetup_r+0x7a>
 8007750:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007752:	b141      	cbz	r1, 8007766 <__swsetup_r+0x6a>
 8007754:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007758:	4299      	cmp	r1, r3
 800775a:	d002      	beq.n	8007762 <__swsetup_r+0x66>
 800775c:	4630      	mov	r0, r6
 800775e:	f7ff fb25 	bl	8006dac <_free_r>
 8007762:	2300      	movs	r3, #0
 8007764:	6363      	str	r3, [r4, #52]	; 0x34
 8007766:	89a3      	ldrh	r3, [r4, #12]
 8007768:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800776c:	81a3      	strh	r3, [r4, #12]
 800776e:	2300      	movs	r3, #0
 8007770:	6063      	str	r3, [r4, #4]
 8007772:	6923      	ldr	r3, [r4, #16]
 8007774:	6023      	str	r3, [r4, #0]
 8007776:	89a3      	ldrh	r3, [r4, #12]
 8007778:	f043 0308 	orr.w	r3, r3, #8
 800777c:	81a3      	strh	r3, [r4, #12]
 800777e:	6923      	ldr	r3, [r4, #16]
 8007780:	b94b      	cbnz	r3, 8007796 <__swsetup_r+0x9a>
 8007782:	89a3      	ldrh	r3, [r4, #12]
 8007784:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8007788:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800778c:	d003      	beq.n	8007796 <__swsetup_r+0x9a>
 800778e:	4621      	mov	r1, r4
 8007790:	4630      	mov	r0, r6
 8007792:	f000 fa09 	bl	8007ba8 <__smakebuf_r>
 8007796:	89a0      	ldrh	r0, [r4, #12]
 8007798:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800779c:	f010 0301 	ands.w	r3, r0, #1
 80077a0:	d00a      	beq.n	80077b8 <__swsetup_r+0xbc>
 80077a2:	2300      	movs	r3, #0
 80077a4:	60a3      	str	r3, [r4, #8]
 80077a6:	6963      	ldr	r3, [r4, #20]
 80077a8:	425b      	negs	r3, r3
 80077aa:	61a3      	str	r3, [r4, #24]
 80077ac:	6923      	ldr	r3, [r4, #16]
 80077ae:	b943      	cbnz	r3, 80077c2 <__swsetup_r+0xc6>
 80077b0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80077b4:	d1ba      	bne.n	800772c <__swsetup_r+0x30>
 80077b6:	bd70      	pop	{r4, r5, r6, pc}
 80077b8:	0781      	lsls	r1, r0, #30
 80077ba:	bf58      	it	pl
 80077bc:	6963      	ldrpl	r3, [r4, #20]
 80077be:	60a3      	str	r3, [r4, #8]
 80077c0:	e7f4      	b.n	80077ac <__swsetup_r+0xb0>
 80077c2:	2000      	movs	r0, #0
 80077c4:	e7f7      	b.n	80077b6 <__swsetup_r+0xba>
 80077c6:	bf00      	nop
 80077c8:	20000030 	.word	0x20000030
 80077cc:	08008ffc 	.word	0x08008ffc
 80077d0:	0800901c 	.word	0x0800901c
 80077d4:	08008fdc 	.word	0x08008fdc

080077d8 <abort>:
 80077d8:	b508      	push	{r3, lr}
 80077da:	2006      	movs	r0, #6
 80077dc:	f000 fa54 	bl	8007c88 <raise>
 80077e0:	2001      	movs	r0, #1
 80077e2:	f7fb fb63 	bl	8002eac <_exit>
	...

080077e8 <__sflush_r>:
 80077e8:	898a      	ldrh	r2, [r1, #12]
 80077ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80077ee:	4605      	mov	r5, r0
 80077f0:	0710      	lsls	r0, r2, #28
 80077f2:	460c      	mov	r4, r1
 80077f4:	d458      	bmi.n	80078a8 <__sflush_r+0xc0>
 80077f6:	684b      	ldr	r3, [r1, #4]
 80077f8:	2b00      	cmp	r3, #0
 80077fa:	dc05      	bgt.n	8007808 <__sflush_r+0x20>
 80077fc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80077fe:	2b00      	cmp	r3, #0
 8007800:	dc02      	bgt.n	8007808 <__sflush_r+0x20>
 8007802:	2000      	movs	r0, #0
 8007804:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007808:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800780a:	2e00      	cmp	r6, #0
 800780c:	d0f9      	beq.n	8007802 <__sflush_r+0x1a>
 800780e:	2300      	movs	r3, #0
 8007810:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8007814:	682f      	ldr	r7, [r5, #0]
 8007816:	602b      	str	r3, [r5, #0]
 8007818:	d032      	beq.n	8007880 <__sflush_r+0x98>
 800781a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800781c:	89a3      	ldrh	r3, [r4, #12]
 800781e:	075a      	lsls	r2, r3, #29
 8007820:	d505      	bpl.n	800782e <__sflush_r+0x46>
 8007822:	6863      	ldr	r3, [r4, #4]
 8007824:	1ac0      	subs	r0, r0, r3
 8007826:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007828:	b10b      	cbz	r3, 800782e <__sflush_r+0x46>
 800782a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800782c:	1ac0      	subs	r0, r0, r3
 800782e:	2300      	movs	r3, #0
 8007830:	4602      	mov	r2, r0
 8007832:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007834:	6a21      	ldr	r1, [r4, #32]
 8007836:	4628      	mov	r0, r5
 8007838:	47b0      	blx	r6
 800783a:	1c43      	adds	r3, r0, #1
 800783c:	89a3      	ldrh	r3, [r4, #12]
 800783e:	d106      	bne.n	800784e <__sflush_r+0x66>
 8007840:	6829      	ldr	r1, [r5, #0]
 8007842:	291d      	cmp	r1, #29
 8007844:	d82c      	bhi.n	80078a0 <__sflush_r+0xb8>
 8007846:	4a2a      	ldr	r2, [pc, #168]	; (80078f0 <__sflush_r+0x108>)
 8007848:	40ca      	lsrs	r2, r1
 800784a:	07d6      	lsls	r6, r2, #31
 800784c:	d528      	bpl.n	80078a0 <__sflush_r+0xb8>
 800784e:	2200      	movs	r2, #0
 8007850:	6062      	str	r2, [r4, #4]
 8007852:	04d9      	lsls	r1, r3, #19
 8007854:	6922      	ldr	r2, [r4, #16]
 8007856:	6022      	str	r2, [r4, #0]
 8007858:	d504      	bpl.n	8007864 <__sflush_r+0x7c>
 800785a:	1c42      	adds	r2, r0, #1
 800785c:	d101      	bne.n	8007862 <__sflush_r+0x7a>
 800785e:	682b      	ldr	r3, [r5, #0]
 8007860:	b903      	cbnz	r3, 8007864 <__sflush_r+0x7c>
 8007862:	6560      	str	r0, [r4, #84]	; 0x54
 8007864:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007866:	602f      	str	r7, [r5, #0]
 8007868:	2900      	cmp	r1, #0
 800786a:	d0ca      	beq.n	8007802 <__sflush_r+0x1a>
 800786c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007870:	4299      	cmp	r1, r3
 8007872:	d002      	beq.n	800787a <__sflush_r+0x92>
 8007874:	4628      	mov	r0, r5
 8007876:	f7ff fa99 	bl	8006dac <_free_r>
 800787a:	2000      	movs	r0, #0
 800787c:	6360      	str	r0, [r4, #52]	; 0x34
 800787e:	e7c1      	b.n	8007804 <__sflush_r+0x1c>
 8007880:	6a21      	ldr	r1, [r4, #32]
 8007882:	2301      	movs	r3, #1
 8007884:	4628      	mov	r0, r5
 8007886:	47b0      	blx	r6
 8007888:	1c41      	adds	r1, r0, #1
 800788a:	d1c7      	bne.n	800781c <__sflush_r+0x34>
 800788c:	682b      	ldr	r3, [r5, #0]
 800788e:	2b00      	cmp	r3, #0
 8007890:	d0c4      	beq.n	800781c <__sflush_r+0x34>
 8007892:	2b1d      	cmp	r3, #29
 8007894:	d001      	beq.n	800789a <__sflush_r+0xb2>
 8007896:	2b16      	cmp	r3, #22
 8007898:	d101      	bne.n	800789e <__sflush_r+0xb6>
 800789a:	602f      	str	r7, [r5, #0]
 800789c:	e7b1      	b.n	8007802 <__sflush_r+0x1a>
 800789e:	89a3      	ldrh	r3, [r4, #12]
 80078a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80078a4:	81a3      	strh	r3, [r4, #12]
 80078a6:	e7ad      	b.n	8007804 <__sflush_r+0x1c>
 80078a8:	690f      	ldr	r7, [r1, #16]
 80078aa:	2f00      	cmp	r7, #0
 80078ac:	d0a9      	beq.n	8007802 <__sflush_r+0x1a>
 80078ae:	0793      	lsls	r3, r2, #30
 80078b0:	680e      	ldr	r6, [r1, #0]
 80078b2:	bf08      	it	eq
 80078b4:	694b      	ldreq	r3, [r1, #20]
 80078b6:	600f      	str	r7, [r1, #0]
 80078b8:	bf18      	it	ne
 80078ba:	2300      	movne	r3, #0
 80078bc:	eba6 0807 	sub.w	r8, r6, r7
 80078c0:	608b      	str	r3, [r1, #8]
 80078c2:	f1b8 0f00 	cmp.w	r8, #0
 80078c6:	dd9c      	ble.n	8007802 <__sflush_r+0x1a>
 80078c8:	6a21      	ldr	r1, [r4, #32]
 80078ca:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80078cc:	4643      	mov	r3, r8
 80078ce:	463a      	mov	r2, r7
 80078d0:	4628      	mov	r0, r5
 80078d2:	47b0      	blx	r6
 80078d4:	2800      	cmp	r0, #0
 80078d6:	dc06      	bgt.n	80078e6 <__sflush_r+0xfe>
 80078d8:	89a3      	ldrh	r3, [r4, #12]
 80078da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80078de:	81a3      	strh	r3, [r4, #12]
 80078e0:	f04f 30ff 	mov.w	r0, #4294967295
 80078e4:	e78e      	b.n	8007804 <__sflush_r+0x1c>
 80078e6:	4407      	add	r7, r0
 80078e8:	eba8 0800 	sub.w	r8, r8, r0
 80078ec:	e7e9      	b.n	80078c2 <__sflush_r+0xda>
 80078ee:	bf00      	nop
 80078f0:	20400001 	.word	0x20400001

080078f4 <_fflush_r>:
 80078f4:	b538      	push	{r3, r4, r5, lr}
 80078f6:	690b      	ldr	r3, [r1, #16]
 80078f8:	4605      	mov	r5, r0
 80078fa:	460c      	mov	r4, r1
 80078fc:	b913      	cbnz	r3, 8007904 <_fflush_r+0x10>
 80078fe:	2500      	movs	r5, #0
 8007900:	4628      	mov	r0, r5
 8007902:	bd38      	pop	{r3, r4, r5, pc}
 8007904:	b118      	cbz	r0, 800790e <_fflush_r+0x1a>
 8007906:	6983      	ldr	r3, [r0, #24]
 8007908:	b90b      	cbnz	r3, 800790e <_fflush_r+0x1a>
 800790a:	f000 f887 	bl	8007a1c <__sinit>
 800790e:	4b14      	ldr	r3, [pc, #80]	; (8007960 <_fflush_r+0x6c>)
 8007910:	429c      	cmp	r4, r3
 8007912:	d11b      	bne.n	800794c <_fflush_r+0x58>
 8007914:	686c      	ldr	r4, [r5, #4]
 8007916:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800791a:	2b00      	cmp	r3, #0
 800791c:	d0ef      	beq.n	80078fe <_fflush_r+0xa>
 800791e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8007920:	07d0      	lsls	r0, r2, #31
 8007922:	d404      	bmi.n	800792e <_fflush_r+0x3a>
 8007924:	0599      	lsls	r1, r3, #22
 8007926:	d402      	bmi.n	800792e <_fflush_r+0x3a>
 8007928:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800792a:	f000 f915 	bl	8007b58 <__retarget_lock_acquire_recursive>
 800792e:	4628      	mov	r0, r5
 8007930:	4621      	mov	r1, r4
 8007932:	f7ff ff59 	bl	80077e8 <__sflush_r>
 8007936:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007938:	07da      	lsls	r2, r3, #31
 800793a:	4605      	mov	r5, r0
 800793c:	d4e0      	bmi.n	8007900 <_fflush_r+0xc>
 800793e:	89a3      	ldrh	r3, [r4, #12]
 8007940:	059b      	lsls	r3, r3, #22
 8007942:	d4dd      	bmi.n	8007900 <_fflush_r+0xc>
 8007944:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007946:	f000 f908 	bl	8007b5a <__retarget_lock_release_recursive>
 800794a:	e7d9      	b.n	8007900 <_fflush_r+0xc>
 800794c:	4b05      	ldr	r3, [pc, #20]	; (8007964 <_fflush_r+0x70>)
 800794e:	429c      	cmp	r4, r3
 8007950:	d101      	bne.n	8007956 <_fflush_r+0x62>
 8007952:	68ac      	ldr	r4, [r5, #8]
 8007954:	e7df      	b.n	8007916 <_fflush_r+0x22>
 8007956:	4b04      	ldr	r3, [pc, #16]	; (8007968 <_fflush_r+0x74>)
 8007958:	429c      	cmp	r4, r3
 800795a:	bf08      	it	eq
 800795c:	68ec      	ldreq	r4, [r5, #12]
 800795e:	e7da      	b.n	8007916 <_fflush_r+0x22>
 8007960:	08008ffc 	.word	0x08008ffc
 8007964:	0800901c 	.word	0x0800901c
 8007968:	08008fdc 	.word	0x08008fdc

0800796c <std>:
 800796c:	2300      	movs	r3, #0
 800796e:	b510      	push	{r4, lr}
 8007970:	4604      	mov	r4, r0
 8007972:	e9c0 3300 	strd	r3, r3, [r0]
 8007976:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800797a:	6083      	str	r3, [r0, #8]
 800797c:	8181      	strh	r1, [r0, #12]
 800797e:	6643      	str	r3, [r0, #100]	; 0x64
 8007980:	81c2      	strh	r2, [r0, #14]
 8007982:	6183      	str	r3, [r0, #24]
 8007984:	4619      	mov	r1, r3
 8007986:	2208      	movs	r2, #8
 8007988:	305c      	adds	r0, #92	; 0x5c
 800798a:	f7fb fdcd 	bl	8003528 <memset>
 800798e:	4b05      	ldr	r3, [pc, #20]	; (80079a4 <std+0x38>)
 8007990:	6263      	str	r3, [r4, #36]	; 0x24
 8007992:	4b05      	ldr	r3, [pc, #20]	; (80079a8 <std+0x3c>)
 8007994:	62a3      	str	r3, [r4, #40]	; 0x28
 8007996:	4b05      	ldr	r3, [pc, #20]	; (80079ac <std+0x40>)
 8007998:	62e3      	str	r3, [r4, #44]	; 0x2c
 800799a:	4b05      	ldr	r3, [pc, #20]	; (80079b0 <std+0x44>)
 800799c:	6224      	str	r4, [r4, #32]
 800799e:	6323      	str	r3, [r4, #48]	; 0x30
 80079a0:	bd10      	pop	{r4, pc}
 80079a2:	bf00      	nop
 80079a4:	08007cc1 	.word	0x08007cc1
 80079a8:	08007ce3 	.word	0x08007ce3
 80079ac:	08007d1b 	.word	0x08007d1b
 80079b0:	08007d3f 	.word	0x08007d3f

080079b4 <_cleanup_r>:
 80079b4:	4901      	ldr	r1, [pc, #4]	; (80079bc <_cleanup_r+0x8>)
 80079b6:	f000 b8af 	b.w	8007b18 <_fwalk_reent>
 80079ba:	bf00      	nop
 80079bc:	080078f5 	.word	0x080078f5

080079c0 <__sfmoreglue>:
 80079c0:	b570      	push	{r4, r5, r6, lr}
 80079c2:	2268      	movs	r2, #104	; 0x68
 80079c4:	1e4d      	subs	r5, r1, #1
 80079c6:	4355      	muls	r5, r2
 80079c8:	460e      	mov	r6, r1
 80079ca:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80079ce:	f7ff fa59 	bl	8006e84 <_malloc_r>
 80079d2:	4604      	mov	r4, r0
 80079d4:	b140      	cbz	r0, 80079e8 <__sfmoreglue+0x28>
 80079d6:	2100      	movs	r1, #0
 80079d8:	e9c0 1600 	strd	r1, r6, [r0]
 80079dc:	300c      	adds	r0, #12
 80079de:	60a0      	str	r0, [r4, #8]
 80079e0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80079e4:	f7fb fda0 	bl	8003528 <memset>
 80079e8:	4620      	mov	r0, r4
 80079ea:	bd70      	pop	{r4, r5, r6, pc}

080079ec <__sfp_lock_acquire>:
 80079ec:	4801      	ldr	r0, [pc, #4]	; (80079f4 <__sfp_lock_acquire+0x8>)
 80079ee:	f000 b8b3 	b.w	8007b58 <__retarget_lock_acquire_recursive>
 80079f2:	bf00      	nop
 80079f4:	20000361 	.word	0x20000361

080079f8 <__sfp_lock_release>:
 80079f8:	4801      	ldr	r0, [pc, #4]	; (8007a00 <__sfp_lock_release+0x8>)
 80079fa:	f000 b8ae 	b.w	8007b5a <__retarget_lock_release_recursive>
 80079fe:	bf00      	nop
 8007a00:	20000361 	.word	0x20000361

08007a04 <__sinit_lock_acquire>:
 8007a04:	4801      	ldr	r0, [pc, #4]	; (8007a0c <__sinit_lock_acquire+0x8>)
 8007a06:	f000 b8a7 	b.w	8007b58 <__retarget_lock_acquire_recursive>
 8007a0a:	bf00      	nop
 8007a0c:	20000362 	.word	0x20000362

08007a10 <__sinit_lock_release>:
 8007a10:	4801      	ldr	r0, [pc, #4]	; (8007a18 <__sinit_lock_release+0x8>)
 8007a12:	f000 b8a2 	b.w	8007b5a <__retarget_lock_release_recursive>
 8007a16:	bf00      	nop
 8007a18:	20000362 	.word	0x20000362

08007a1c <__sinit>:
 8007a1c:	b510      	push	{r4, lr}
 8007a1e:	4604      	mov	r4, r0
 8007a20:	f7ff fff0 	bl	8007a04 <__sinit_lock_acquire>
 8007a24:	69a3      	ldr	r3, [r4, #24]
 8007a26:	b11b      	cbz	r3, 8007a30 <__sinit+0x14>
 8007a28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007a2c:	f7ff bff0 	b.w	8007a10 <__sinit_lock_release>
 8007a30:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8007a34:	6523      	str	r3, [r4, #80]	; 0x50
 8007a36:	4b13      	ldr	r3, [pc, #76]	; (8007a84 <__sinit+0x68>)
 8007a38:	4a13      	ldr	r2, [pc, #76]	; (8007a88 <__sinit+0x6c>)
 8007a3a:	681b      	ldr	r3, [r3, #0]
 8007a3c:	62a2      	str	r2, [r4, #40]	; 0x28
 8007a3e:	42a3      	cmp	r3, r4
 8007a40:	bf04      	itt	eq
 8007a42:	2301      	moveq	r3, #1
 8007a44:	61a3      	streq	r3, [r4, #24]
 8007a46:	4620      	mov	r0, r4
 8007a48:	f000 f820 	bl	8007a8c <__sfp>
 8007a4c:	6060      	str	r0, [r4, #4]
 8007a4e:	4620      	mov	r0, r4
 8007a50:	f000 f81c 	bl	8007a8c <__sfp>
 8007a54:	60a0      	str	r0, [r4, #8]
 8007a56:	4620      	mov	r0, r4
 8007a58:	f000 f818 	bl	8007a8c <__sfp>
 8007a5c:	2200      	movs	r2, #0
 8007a5e:	60e0      	str	r0, [r4, #12]
 8007a60:	2104      	movs	r1, #4
 8007a62:	6860      	ldr	r0, [r4, #4]
 8007a64:	f7ff ff82 	bl	800796c <std>
 8007a68:	68a0      	ldr	r0, [r4, #8]
 8007a6a:	2201      	movs	r2, #1
 8007a6c:	2109      	movs	r1, #9
 8007a6e:	f7ff ff7d 	bl	800796c <std>
 8007a72:	68e0      	ldr	r0, [r4, #12]
 8007a74:	2202      	movs	r2, #2
 8007a76:	2112      	movs	r1, #18
 8007a78:	f7ff ff78 	bl	800796c <std>
 8007a7c:	2301      	movs	r3, #1
 8007a7e:	61a3      	str	r3, [r4, #24]
 8007a80:	e7d2      	b.n	8007a28 <__sinit+0xc>
 8007a82:	bf00      	nop
 8007a84:	08008b98 	.word	0x08008b98
 8007a88:	080079b5 	.word	0x080079b5

08007a8c <__sfp>:
 8007a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a8e:	4607      	mov	r7, r0
 8007a90:	f7ff ffac 	bl	80079ec <__sfp_lock_acquire>
 8007a94:	4b1e      	ldr	r3, [pc, #120]	; (8007b10 <__sfp+0x84>)
 8007a96:	681e      	ldr	r6, [r3, #0]
 8007a98:	69b3      	ldr	r3, [r6, #24]
 8007a9a:	b913      	cbnz	r3, 8007aa2 <__sfp+0x16>
 8007a9c:	4630      	mov	r0, r6
 8007a9e:	f7ff ffbd 	bl	8007a1c <__sinit>
 8007aa2:	3648      	adds	r6, #72	; 0x48
 8007aa4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8007aa8:	3b01      	subs	r3, #1
 8007aaa:	d503      	bpl.n	8007ab4 <__sfp+0x28>
 8007aac:	6833      	ldr	r3, [r6, #0]
 8007aae:	b30b      	cbz	r3, 8007af4 <__sfp+0x68>
 8007ab0:	6836      	ldr	r6, [r6, #0]
 8007ab2:	e7f7      	b.n	8007aa4 <__sfp+0x18>
 8007ab4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8007ab8:	b9d5      	cbnz	r5, 8007af0 <__sfp+0x64>
 8007aba:	4b16      	ldr	r3, [pc, #88]	; (8007b14 <__sfp+0x88>)
 8007abc:	60e3      	str	r3, [r4, #12]
 8007abe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007ac2:	6665      	str	r5, [r4, #100]	; 0x64
 8007ac4:	f000 f847 	bl	8007b56 <__retarget_lock_init_recursive>
 8007ac8:	f7ff ff96 	bl	80079f8 <__sfp_lock_release>
 8007acc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8007ad0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8007ad4:	6025      	str	r5, [r4, #0]
 8007ad6:	61a5      	str	r5, [r4, #24]
 8007ad8:	2208      	movs	r2, #8
 8007ada:	4629      	mov	r1, r5
 8007adc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8007ae0:	f7fb fd22 	bl	8003528 <memset>
 8007ae4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8007ae8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8007aec:	4620      	mov	r0, r4
 8007aee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007af0:	3468      	adds	r4, #104	; 0x68
 8007af2:	e7d9      	b.n	8007aa8 <__sfp+0x1c>
 8007af4:	2104      	movs	r1, #4
 8007af6:	4638      	mov	r0, r7
 8007af8:	f7ff ff62 	bl	80079c0 <__sfmoreglue>
 8007afc:	4604      	mov	r4, r0
 8007afe:	6030      	str	r0, [r6, #0]
 8007b00:	2800      	cmp	r0, #0
 8007b02:	d1d5      	bne.n	8007ab0 <__sfp+0x24>
 8007b04:	f7ff ff78 	bl	80079f8 <__sfp_lock_release>
 8007b08:	230c      	movs	r3, #12
 8007b0a:	603b      	str	r3, [r7, #0]
 8007b0c:	e7ee      	b.n	8007aec <__sfp+0x60>
 8007b0e:	bf00      	nop
 8007b10:	08008b98 	.word	0x08008b98
 8007b14:	ffff0001 	.word	0xffff0001

08007b18 <_fwalk_reent>:
 8007b18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007b1c:	4606      	mov	r6, r0
 8007b1e:	4688      	mov	r8, r1
 8007b20:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8007b24:	2700      	movs	r7, #0
 8007b26:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007b2a:	f1b9 0901 	subs.w	r9, r9, #1
 8007b2e:	d505      	bpl.n	8007b3c <_fwalk_reent+0x24>
 8007b30:	6824      	ldr	r4, [r4, #0]
 8007b32:	2c00      	cmp	r4, #0
 8007b34:	d1f7      	bne.n	8007b26 <_fwalk_reent+0xe>
 8007b36:	4638      	mov	r0, r7
 8007b38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007b3c:	89ab      	ldrh	r3, [r5, #12]
 8007b3e:	2b01      	cmp	r3, #1
 8007b40:	d907      	bls.n	8007b52 <_fwalk_reent+0x3a>
 8007b42:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007b46:	3301      	adds	r3, #1
 8007b48:	d003      	beq.n	8007b52 <_fwalk_reent+0x3a>
 8007b4a:	4629      	mov	r1, r5
 8007b4c:	4630      	mov	r0, r6
 8007b4e:	47c0      	blx	r8
 8007b50:	4307      	orrs	r7, r0
 8007b52:	3568      	adds	r5, #104	; 0x68
 8007b54:	e7e9      	b.n	8007b2a <_fwalk_reent+0x12>

08007b56 <__retarget_lock_init_recursive>:
 8007b56:	4770      	bx	lr

08007b58 <__retarget_lock_acquire_recursive>:
 8007b58:	4770      	bx	lr

08007b5a <__retarget_lock_release_recursive>:
 8007b5a:	4770      	bx	lr

08007b5c <__swhatbuf_r>:
 8007b5c:	b570      	push	{r4, r5, r6, lr}
 8007b5e:	460e      	mov	r6, r1
 8007b60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007b64:	2900      	cmp	r1, #0
 8007b66:	b096      	sub	sp, #88	; 0x58
 8007b68:	4614      	mov	r4, r2
 8007b6a:	461d      	mov	r5, r3
 8007b6c:	da08      	bge.n	8007b80 <__swhatbuf_r+0x24>
 8007b6e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8007b72:	2200      	movs	r2, #0
 8007b74:	602a      	str	r2, [r5, #0]
 8007b76:	061a      	lsls	r2, r3, #24
 8007b78:	d410      	bmi.n	8007b9c <__swhatbuf_r+0x40>
 8007b7a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8007b7e:	e00e      	b.n	8007b9e <__swhatbuf_r+0x42>
 8007b80:	466a      	mov	r2, sp
 8007b82:	f000 f903 	bl	8007d8c <_fstat_r>
 8007b86:	2800      	cmp	r0, #0
 8007b88:	dbf1      	blt.n	8007b6e <__swhatbuf_r+0x12>
 8007b8a:	9a01      	ldr	r2, [sp, #4]
 8007b8c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8007b90:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8007b94:	425a      	negs	r2, r3
 8007b96:	415a      	adcs	r2, r3
 8007b98:	602a      	str	r2, [r5, #0]
 8007b9a:	e7ee      	b.n	8007b7a <__swhatbuf_r+0x1e>
 8007b9c:	2340      	movs	r3, #64	; 0x40
 8007b9e:	2000      	movs	r0, #0
 8007ba0:	6023      	str	r3, [r4, #0]
 8007ba2:	b016      	add	sp, #88	; 0x58
 8007ba4:	bd70      	pop	{r4, r5, r6, pc}
	...

08007ba8 <__smakebuf_r>:
 8007ba8:	898b      	ldrh	r3, [r1, #12]
 8007baa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007bac:	079d      	lsls	r5, r3, #30
 8007bae:	4606      	mov	r6, r0
 8007bb0:	460c      	mov	r4, r1
 8007bb2:	d507      	bpl.n	8007bc4 <__smakebuf_r+0x1c>
 8007bb4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8007bb8:	6023      	str	r3, [r4, #0]
 8007bba:	6123      	str	r3, [r4, #16]
 8007bbc:	2301      	movs	r3, #1
 8007bbe:	6163      	str	r3, [r4, #20]
 8007bc0:	b002      	add	sp, #8
 8007bc2:	bd70      	pop	{r4, r5, r6, pc}
 8007bc4:	ab01      	add	r3, sp, #4
 8007bc6:	466a      	mov	r2, sp
 8007bc8:	f7ff ffc8 	bl	8007b5c <__swhatbuf_r>
 8007bcc:	9900      	ldr	r1, [sp, #0]
 8007bce:	4605      	mov	r5, r0
 8007bd0:	4630      	mov	r0, r6
 8007bd2:	f7ff f957 	bl	8006e84 <_malloc_r>
 8007bd6:	b948      	cbnz	r0, 8007bec <__smakebuf_r+0x44>
 8007bd8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007bdc:	059a      	lsls	r2, r3, #22
 8007bde:	d4ef      	bmi.n	8007bc0 <__smakebuf_r+0x18>
 8007be0:	f023 0303 	bic.w	r3, r3, #3
 8007be4:	f043 0302 	orr.w	r3, r3, #2
 8007be8:	81a3      	strh	r3, [r4, #12]
 8007bea:	e7e3      	b.n	8007bb4 <__smakebuf_r+0xc>
 8007bec:	4b0d      	ldr	r3, [pc, #52]	; (8007c24 <__smakebuf_r+0x7c>)
 8007bee:	62b3      	str	r3, [r6, #40]	; 0x28
 8007bf0:	89a3      	ldrh	r3, [r4, #12]
 8007bf2:	6020      	str	r0, [r4, #0]
 8007bf4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007bf8:	81a3      	strh	r3, [r4, #12]
 8007bfa:	9b00      	ldr	r3, [sp, #0]
 8007bfc:	6163      	str	r3, [r4, #20]
 8007bfe:	9b01      	ldr	r3, [sp, #4]
 8007c00:	6120      	str	r0, [r4, #16]
 8007c02:	b15b      	cbz	r3, 8007c1c <__smakebuf_r+0x74>
 8007c04:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007c08:	4630      	mov	r0, r6
 8007c0a:	f000 f8d1 	bl	8007db0 <_isatty_r>
 8007c0e:	b128      	cbz	r0, 8007c1c <__smakebuf_r+0x74>
 8007c10:	89a3      	ldrh	r3, [r4, #12]
 8007c12:	f023 0303 	bic.w	r3, r3, #3
 8007c16:	f043 0301 	orr.w	r3, r3, #1
 8007c1a:	81a3      	strh	r3, [r4, #12]
 8007c1c:	89a0      	ldrh	r0, [r4, #12]
 8007c1e:	4305      	orrs	r5, r0
 8007c20:	81a5      	strh	r5, [r4, #12]
 8007c22:	e7cd      	b.n	8007bc0 <__smakebuf_r+0x18>
 8007c24:	080079b5 	.word	0x080079b5

08007c28 <_malloc_usable_size_r>:
 8007c28:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007c2c:	1f18      	subs	r0, r3, #4
 8007c2e:	2b00      	cmp	r3, #0
 8007c30:	bfbc      	itt	lt
 8007c32:	580b      	ldrlt	r3, [r1, r0]
 8007c34:	18c0      	addlt	r0, r0, r3
 8007c36:	4770      	bx	lr

08007c38 <_raise_r>:
 8007c38:	291f      	cmp	r1, #31
 8007c3a:	b538      	push	{r3, r4, r5, lr}
 8007c3c:	4604      	mov	r4, r0
 8007c3e:	460d      	mov	r5, r1
 8007c40:	d904      	bls.n	8007c4c <_raise_r+0x14>
 8007c42:	2316      	movs	r3, #22
 8007c44:	6003      	str	r3, [r0, #0]
 8007c46:	f04f 30ff 	mov.w	r0, #4294967295
 8007c4a:	bd38      	pop	{r3, r4, r5, pc}
 8007c4c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8007c4e:	b112      	cbz	r2, 8007c56 <_raise_r+0x1e>
 8007c50:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007c54:	b94b      	cbnz	r3, 8007c6a <_raise_r+0x32>
 8007c56:	4620      	mov	r0, r4
 8007c58:	f000 f830 	bl	8007cbc <_getpid_r>
 8007c5c:	462a      	mov	r2, r5
 8007c5e:	4601      	mov	r1, r0
 8007c60:	4620      	mov	r0, r4
 8007c62:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007c66:	f000 b817 	b.w	8007c98 <_kill_r>
 8007c6a:	2b01      	cmp	r3, #1
 8007c6c:	d00a      	beq.n	8007c84 <_raise_r+0x4c>
 8007c6e:	1c59      	adds	r1, r3, #1
 8007c70:	d103      	bne.n	8007c7a <_raise_r+0x42>
 8007c72:	2316      	movs	r3, #22
 8007c74:	6003      	str	r3, [r0, #0]
 8007c76:	2001      	movs	r0, #1
 8007c78:	e7e7      	b.n	8007c4a <_raise_r+0x12>
 8007c7a:	2400      	movs	r4, #0
 8007c7c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8007c80:	4628      	mov	r0, r5
 8007c82:	4798      	blx	r3
 8007c84:	2000      	movs	r0, #0
 8007c86:	e7e0      	b.n	8007c4a <_raise_r+0x12>

08007c88 <raise>:
 8007c88:	4b02      	ldr	r3, [pc, #8]	; (8007c94 <raise+0xc>)
 8007c8a:	4601      	mov	r1, r0
 8007c8c:	6818      	ldr	r0, [r3, #0]
 8007c8e:	f7ff bfd3 	b.w	8007c38 <_raise_r>
 8007c92:	bf00      	nop
 8007c94:	20000030 	.word	0x20000030

08007c98 <_kill_r>:
 8007c98:	b538      	push	{r3, r4, r5, lr}
 8007c9a:	4d07      	ldr	r5, [pc, #28]	; (8007cb8 <_kill_r+0x20>)
 8007c9c:	2300      	movs	r3, #0
 8007c9e:	4604      	mov	r4, r0
 8007ca0:	4608      	mov	r0, r1
 8007ca2:	4611      	mov	r1, r2
 8007ca4:	602b      	str	r3, [r5, #0]
 8007ca6:	f7fb f8f1 	bl	8002e8c <_kill>
 8007caa:	1c43      	adds	r3, r0, #1
 8007cac:	d102      	bne.n	8007cb4 <_kill_r+0x1c>
 8007cae:	682b      	ldr	r3, [r5, #0]
 8007cb0:	b103      	cbz	r3, 8007cb4 <_kill_r+0x1c>
 8007cb2:	6023      	str	r3, [r4, #0]
 8007cb4:	bd38      	pop	{r3, r4, r5, pc}
 8007cb6:	bf00      	nop
 8007cb8:	2000035c 	.word	0x2000035c

08007cbc <_getpid_r>:
 8007cbc:	f7fb b8de 	b.w	8002e7c <_getpid>

08007cc0 <__sread>:
 8007cc0:	b510      	push	{r4, lr}
 8007cc2:	460c      	mov	r4, r1
 8007cc4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cc8:	f000 f894 	bl	8007df4 <_read_r>
 8007ccc:	2800      	cmp	r0, #0
 8007cce:	bfab      	itete	ge
 8007cd0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8007cd2:	89a3      	ldrhlt	r3, [r4, #12]
 8007cd4:	181b      	addge	r3, r3, r0
 8007cd6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8007cda:	bfac      	ite	ge
 8007cdc:	6563      	strge	r3, [r4, #84]	; 0x54
 8007cde:	81a3      	strhlt	r3, [r4, #12]
 8007ce0:	bd10      	pop	{r4, pc}

08007ce2 <__swrite>:
 8007ce2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007ce6:	461f      	mov	r7, r3
 8007ce8:	898b      	ldrh	r3, [r1, #12]
 8007cea:	05db      	lsls	r3, r3, #23
 8007cec:	4605      	mov	r5, r0
 8007cee:	460c      	mov	r4, r1
 8007cf0:	4616      	mov	r6, r2
 8007cf2:	d505      	bpl.n	8007d00 <__swrite+0x1e>
 8007cf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007cf8:	2302      	movs	r3, #2
 8007cfa:	2200      	movs	r2, #0
 8007cfc:	f000 f868 	bl	8007dd0 <_lseek_r>
 8007d00:	89a3      	ldrh	r3, [r4, #12]
 8007d02:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007d06:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007d0a:	81a3      	strh	r3, [r4, #12]
 8007d0c:	4632      	mov	r2, r6
 8007d0e:	463b      	mov	r3, r7
 8007d10:	4628      	mov	r0, r5
 8007d12:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007d16:	f000 b817 	b.w	8007d48 <_write_r>

08007d1a <__sseek>:
 8007d1a:	b510      	push	{r4, lr}
 8007d1c:	460c      	mov	r4, r1
 8007d1e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007d22:	f000 f855 	bl	8007dd0 <_lseek_r>
 8007d26:	1c43      	adds	r3, r0, #1
 8007d28:	89a3      	ldrh	r3, [r4, #12]
 8007d2a:	bf15      	itete	ne
 8007d2c:	6560      	strne	r0, [r4, #84]	; 0x54
 8007d2e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8007d32:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8007d36:	81a3      	strheq	r3, [r4, #12]
 8007d38:	bf18      	it	ne
 8007d3a:	81a3      	strhne	r3, [r4, #12]
 8007d3c:	bd10      	pop	{r4, pc}

08007d3e <__sclose>:
 8007d3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007d42:	f000 b813 	b.w	8007d6c <_close_r>
	...

08007d48 <_write_r>:
 8007d48:	b538      	push	{r3, r4, r5, lr}
 8007d4a:	4d07      	ldr	r5, [pc, #28]	; (8007d68 <_write_r+0x20>)
 8007d4c:	4604      	mov	r4, r0
 8007d4e:	4608      	mov	r0, r1
 8007d50:	4611      	mov	r1, r2
 8007d52:	2200      	movs	r2, #0
 8007d54:	602a      	str	r2, [r5, #0]
 8007d56:	461a      	mov	r2, r3
 8007d58:	f7fb f8cf 	bl	8002efa <_write>
 8007d5c:	1c43      	adds	r3, r0, #1
 8007d5e:	d102      	bne.n	8007d66 <_write_r+0x1e>
 8007d60:	682b      	ldr	r3, [r5, #0]
 8007d62:	b103      	cbz	r3, 8007d66 <_write_r+0x1e>
 8007d64:	6023      	str	r3, [r4, #0]
 8007d66:	bd38      	pop	{r3, r4, r5, pc}
 8007d68:	2000035c 	.word	0x2000035c

08007d6c <_close_r>:
 8007d6c:	b538      	push	{r3, r4, r5, lr}
 8007d6e:	4d06      	ldr	r5, [pc, #24]	; (8007d88 <_close_r+0x1c>)
 8007d70:	2300      	movs	r3, #0
 8007d72:	4604      	mov	r4, r0
 8007d74:	4608      	mov	r0, r1
 8007d76:	602b      	str	r3, [r5, #0]
 8007d78:	f7fb f8db 	bl	8002f32 <_close>
 8007d7c:	1c43      	adds	r3, r0, #1
 8007d7e:	d102      	bne.n	8007d86 <_close_r+0x1a>
 8007d80:	682b      	ldr	r3, [r5, #0]
 8007d82:	b103      	cbz	r3, 8007d86 <_close_r+0x1a>
 8007d84:	6023      	str	r3, [r4, #0]
 8007d86:	bd38      	pop	{r3, r4, r5, pc}
 8007d88:	2000035c 	.word	0x2000035c

08007d8c <_fstat_r>:
 8007d8c:	b538      	push	{r3, r4, r5, lr}
 8007d8e:	4d07      	ldr	r5, [pc, #28]	; (8007dac <_fstat_r+0x20>)
 8007d90:	2300      	movs	r3, #0
 8007d92:	4604      	mov	r4, r0
 8007d94:	4608      	mov	r0, r1
 8007d96:	4611      	mov	r1, r2
 8007d98:	602b      	str	r3, [r5, #0]
 8007d9a:	f7fb f8d6 	bl	8002f4a <_fstat>
 8007d9e:	1c43      	adds	r3, r0, #1
 8007da0:	d102      	bne.n	8007da8 <_fstat_r+0x1c>
 8007da2:	682b      	ldr	r3, [r5, #0]
 8007da4:	b103      	cbz	r3, 8007da8 <_fstat_r+0x1c>
 8007da6:	6023      	str	r3, [r4, #0]
 8007da8:	bd38      	pop	{r3, r4, r5, pc}
 8007daa:	bf00      	nop
 8007dac:	2000035c 	.word	0x2000035c

08007db0 <_isatty_r>:
 8007db0:	b538      	push	{r3, r4, r5, lr}
 8007db2:	4d06      	ldr	r5, [pc, #24]	; (8007dcc <_isatty_r+0x1c>)
 8007db4:	2300      	movs	r3, #0
 8007db6:	4604      	mov	r4, r0
 8007db8:	4608      	mov	r0, r1
 8007dba:	602b      	str	r3, [r5, #0]
 8007dbc:	f7fb f8d5 	bl	8002f6a <_isatty>
 8007dc0:	1c43      	adds	r3, r0, #1
 8007dc2:	d102      	bne.n	8007dca <_isatty_r+0x1a>
 8007dc4:	682b      	ldr	r3, [r5, #0]
 8007dc6:	b103      	cbz	r3, 8007dca <_isatty_r+0x1a>
 8007dc8:	6023      	str	r3, [r4, #0]
 8007dca:	bd38      	pop	{r3, r4, r5, pc}
 8007dcc:	2000035c 	.word	0x2000035c

08007dd0 <_lseek_r>:
 8007dd0:	b538      	push	{r3, r4, r5, lr}
 8007dd2:	4d07      	ldr	r5, [pc, #28]	; (8007df0 <_lseek_r+0x20>)
 8007dd4:	4604      	mov	r4, r0
 8007dd6:	4608      	mov	r0, r1
 8007dd8:	4611      	mov	r1, r2
 8007dda:	2200      	movs	r2, #0
 8007ddc:	602a      	str	r2, [r5, #0]
 8007dde:	461a      	mov	r2, r3
 8007de0:	f7fb f8ce 	bl	8002f80 <_lseek>
 8007de4:	1c43      	adds	r3, r0, #1
 8007de6:	d102      	bne.n	8007dee <_lseek_r+0x1e>
 8007de8:	682b      	ldr	r3, [r5, #0]
 8007dea:	b103      	cbz	r3, 8007dee <_lseek_r+0x1e>
 8007dec:	6023      	str	r3, [r4, #0]
 8007dee:	bd38      	pop	{r3, r4, r5, pc}
 8007df0:	2000035c 	.word	0x2000035c

08007df4 <_read_r>:
 8007df4:	b538      	push	{r3, r4, r5, lr}
 8007df6:	4d07      	ldr	r5, [pc, #28]	; (8007e14 <_read_r+0x20>)
 8007df8:	4604      	mov	r4, r0
 8007dfa:	4608      	mov	r0, r1
 8007dfc:	4611      	mov	r1, r2
 8007dfe:	2200      	movs	r2, #0
 8007e00:	602a      	str	r2, [r5, #0]
 8007e02:	461a      	mov	r2, r3
 8007e04:	f7fb f85c 	bl	8002ec0 <_read>
 8007e08:	1c43      	adds	r3, r0, #1
 8007e0a:	d102      	bne.n	8007e12 <_read_r+0x1e>
 8007e0c:	682b      	ldr	r3, [r5, #0]
 8007e0e:	b103      	cbz	r3, 8007e12 <_read_r+0x1e>
 8007e10:	6023      	str	r3, [r4, #0]
 8007e12:	bd38      	pop	{r3, r4, r5, pc}
 8007e14:	2000035c 	.word	0x2000035c

08007e18 <cosf>:
 8007e18:	ee10 3a10 	vmov	r3, s0
 8007e1c:	b507      	push	{r0, r1, r2, lr}
 8007e1e:	4a1e      	ldr	r2, [pc, #120]	; (8007e98 <cosf+0x80>)
 8007e20:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007e24:	4293      	cmp	r3, r2
 8007e26:	dc06      	bgt.n	8007e36 <cosf+0x1e>
 8007e28:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8007e9c <cosf+0x84>
 8007e2c:	b003      	add	sp, #12
 8007e2e:	f85d eb04 	ldr.w	lr, [sp], #4
 8007e32:	f000 b9e3 	b.w	80081fc <__kernel_cosf>
 8007e36:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8007e3a:	db04      	blt.n	8007e46 <cosf+0x2e>
 8007e3c:	ee30 0a40 	vsub.f32	s0, s0, s0
 8007e40:	b003      	add	sp, #12
 8007e42:	f85d fb04 	ldr.w	pc, [sp], #4
 8007e46:	4668      	mov	r0, sp
 8007e48:	f000 f89c 	bl	8007f84 <__ieee754_rem_pio2f>
 8007e4c:	f000 0003 	and.w	r0, r0, #3
 8007e50:	2801      	cmp	r0, #1
 8007e52:	d009      	beq.n	8007e68 <cosf+0x50>
 8007e54:	2802      	cmp	r0, #2
 8007e56:	d010      	beq.n	8007e7a <cosf+0x62>
 8007e58:	b9b0      	cbnz	r0, 8007e88 <cosf+0x70>
 8007e5a:	eddd 0a01 	vldr	s1, [sp, #4]
 8007e5e:	ed9d 0a00 	vldr	s0, [sp]
 8007e62:	f000 f9cb 	bl	80081fc <__kernel_cosf>
 8007e66:	e7eb      	b.n	8007e40 <cosf+0x28>
 8007e68:	eddd 0a01 	vldr	s1, [sp, #4]
 8007e6c:	ed9d 0a00 	vldr	s0, [sp]
 8007e70:	f000 fc9a 	bl	80087a8 <__kernel_sinf>
 8007e74:	eeb1 0a40 	vneg.f32	s0, s0
 8007e78:	e7e2      	b.n	8007e40 <cosf+0x28>
 8007e7a:	eddd 0a01 	vldr	s1, [sp, #4]
 8007e7e:	ed9d 0a00 	vldr	s0, [sp]
 8007e82:	f000 f9bb 	bl	80081fc <__kernel_cosf>
 8007e86:	e7f5      	b.n	8007e74 <cosf+0x5c>
 8007e88:	eddd 0a01 	vldr	s1, [sp, #4]
 8007e8c:	ed9d 0a00 	vldr	s0, [sp]
 8007e90:	2001      	movs	r0, #1
 8007e92:	f000 fc89 	bl	80087a8 <__kernel_sinf>
 8007e96:	e7d3      	b.n	8007e40 <cosf+0x28>
 8007e98:	3f490fd8 	.word	0x3f490fd8
 8007e9c:	00000000 	.word	0x00000000

08007ea0 <sinf>:
 8007ea0:	ee10 3a10 	vmov	r3, s0
 8007ea4:	b507      	push	{r0, r1, r2, lr}
 8007ea6:	4a1f      	ldr	r2, [pc, #124]	; (8007f24 <sinf+0x84>)
 8007ea8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007eac:	4293      	cmp	r3, r2
 8007eae:	dc07      	bgt.n	8007ec0 <sinf+0x20>
 8007eb0:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8007f28 <sinf+0x88>
 8007eb4:	2000      	movs	r0, #0
 8007eb6:	b003      	add	sp, #12
 8007eb8:	f85d eb04 	ldr.w	lr, [sp], #4
 8007ebc:	f000 bc74 	b.w	80087a8 <__kernel_sinf>
 8007ec0:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8007ec4:	db04      	blt.n	8007ed0 <sinf+0x30>
 8007ec6:	ee30 0a40 	vsub.f32	s0, s0, s0
 8007eca:	b003      	add	sp, #12
 8007ecc:	f85d fb04 	ldr.w	pc, [sp], #4
 8007ed0:	4668      	mov	r0, sp
 8007ed2:	f000 f857 	bl	8007f84 <__ieee754_rem_pio2f>
 8007ed6:	f000 0003 	and.w	r0, r0, #3
 8007eda:	2801      	cmp	r0, #1
 8007edc:	d00a      	beq.n	8007ef4 <sinf+0x54>
 8007ede:	2802      	cmp	r0, #2
 8007ee0:	d00f      	beq.n	8007f02 <sinf+0x62>
 8007ee2:	b9c0      	cbnz	r0, 8007f16 <sinf+0x76>
 8007ee4:	eddd 0a01 	vldr	s1, [sp, #4]
 8007ee8:	ed9d 0a00 	vldr	s0, [sp]
 8007eec:	2001      	movs	r0, #1
 8007eee:	f000 fc5b 	bl	80087a8 <__kernel_sinf>
 8007ef2:	e7ea      	b.n	8007eca <sinf+0x2a>
 8007ef4:	eddd 0a01 	vldr	s1, [sp, #4]
 8007ef8:	ed9d 0a00 	vldr	s0, [sp]
 8007efc:	f000 f97e 	bl	80081fc <__kernel_cosf>
 8007f00:	e7e3      	b.n	8007eca <sinf+0x2a>
 8007f02:	eddd 0a01 	vldr	s1, [sp, #4]
 8007f06:	ed9d 0a00 	vldr	s0, [sp]
 8007f0a:	2001      	movs	r0, #1
 8007f0c:	f000 fc4c 	bl	80087a8 <__kernel_sinf>
 8007f10:	eeb1 0a40 	vneg.f32	s0, s0
 8007f14:	e7d9      	b.n	8007eca <sinf+0x2a>
 8007f16:	eddd 0a01 	vldr	s1, [sp, #4]
 8007f1a:	ed9d 0a00 	vldr	s0, [sp]
 8007f1e:	f000 f96d 	bl	80081fc <__kernel_cosf>
 8007f22:	e7f5      	b.n	8007f10 <sinf+0x70>
 8007f24:	3f490fd8 	.word	0x3f490fd8
 8007f28:	00000000 	.word	0x00000000

08007f2c <tanf>:
 8007f2c:	ee10 3a10 	vmov	r3, s0
 8007f30:	b507      	push	{r0, r1, r2, lr}
 8007f32:	4a12      	ldr	r2, [pc, #72]	; (8007f7c <tanf+0x50>)
 8007f34:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007f38:	4293      	cmp	r3, r2
 8007f3a:	dc07      	bgt.n	8007f4c <tanf+0x20>
 8007f3c:	eddf 0a10 	vldr	s1, [pc, #64]	; 8007f80 <tanf+0x54>
 8007f40:	2001      	movs	r0, #1
 8007f42:	b003      	add	sp, #12
 8007f44:	f85d eb04 	ldr.w	lr, [sp], #4
 8007f48:	f000 bc76 	b.w	8008838 <__kernel_tanf>
 8007f4c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8007f50:	db04      	blt.n	8007f5c <tanf+0x30>
 8007f52:	ee30 0a40 	vsub.f32	s0, s0, s0
 8007f56:	b003      	add	sp, #12
 8007f58:	f85d fb04 	ldr.w	pc, [sp], #4
 8007f5c:	4668      	mov	r0, sp
 8007f5e:	f000 f811 	bl	8007f84 <__ieee754_rem_pio2f>
 8007f62:	0040      	lsls	r0, r0, #1
 8007f64:	f000 0002 	and.w	r0, r0, #2
 8007f68:	eddd 0a01 	vldr	s1, [sp, #4]
 8007f6c:	ed9d 0a00 	vldr	s0, [sp]
 8007f70:	f1c0 0001 	rsb	r0, r0, #1
 8007f74:	f000 fc60 	bl	8008838 <__kernel_tanf>
 8007f78:	e7ed      	b.n	8007f56 <tanf+0x2a>
 8007f7a:	bf00      	nop
 8007f7c:	3f490fda 	.word	0x3f490fda
 8007f80:	00000000 	.word	0x00000000

08007f84 <__ieee754_rem_pio2f>:
 8007f84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007f86:	ee10 6a10 	vmov	r6, s0
 8007f8a:	4b8e      	ldr	r3, [pc, #568]	; (80081c4 <__ieee754_rem_pio2f+0x240>)
 8007f8c:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8007f90:	429d      	cmp	r5, r3
 8007f92:	b087      	sub	sp, #28
 8007f94:	eef0 7a40 	vmov.f32	s15, s0
 8007f98:	4604      	mov	r4, r0
 8007f9a:	dc05      	bgt.n	8007fa8 <__ieee754_rem_pio2f+0x24>
 8007f9c:	2300      	movs	r3, #0
 8007f9e:	ed80 0a00 	vstr	s0, [r0]
 8007fa2:	6043      	str	r3, [r0, #4]
 8007fa4:	2000      	movs	r0, #0
 8007fa6:	e01a      	b.n	8007fde <__ieee754_rem_pio2f+0x5a>
 8007fa8:	4b87      	ldr	r3, [pc, #540]	; (80081c8 <__ieee754_rem_pio2f+0x244>)
 8007faa:	429d      	cmp	r5, r3
 8007fac:	dc46      	bgt.n	800803c <__ieee754_rem_pio2f+0xb8>
 8007fae:	2e00      	cmp	r6, #0
 8007fb0:	ed9f 0a86 	vldr	s0, [pc, #536]	; 80081cc <__ieee754_rem_pio2f+0x248>
 8007fb4:	4b86      	ldr	r3, [pc, #536]	; (80081d0 <__ieee754_rem_pio2f+0x24c>)
 8007fb6:	f025 050f 	bic.w	r5, r5, #15
 8007fba:	dd1f      	ble.n	8007ffc <__ieee754_rem_pio2f+0x78>
 8007fbc:	429d      	cmp	r5, r3
 8007fbe:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8007fc2:	d00e      	beq.n	8007fe2 <__ieee754_rem_pio2f+0x5e>
 8007fc4:	ed9f 7a83 	vldr	s14, [pc, #524]	; 80081d4 <__ieee754_rem_pio2f+0x250>
 8007fc8:	ee37 0ac7 	vsub.f32	s0, s15, s14
 8007fcc:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8007fd0:	ed80 0a00 	vstr	s0, [r0]
 8007fd4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007fd8:	2001      	movs	r0, #1
 8007fda:	edc4 7a01 	vstr	s15, [r4, #4]
 8007fde:	b007      	add	sp, #28
 8007fe0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007fe2:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 80081d8 <__ieee754_rem_pio2f+0x254>
 8007fe6:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 80081dc <__ieee754_rem_pio2f+0x258>
 8007fea:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8007fee:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8007ff2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007ff6:	edc0 6a00 	vstr	s13, [r0]
 8007ffa:	e7eb      	b.n	8007fd4 <__ieee754_rem_pio2f+0x50>
 8007ffc:	429d      	cmp	r5, r3
 8007ffe:	ee77 7a80 	vadd.f32	s15, s15, s0
 8008002:	d00e      	beq.n	8008022 <__ieee754_rem_pio2f+0x9e>
 8008004:	ed9f 7a73 	vldr	s14, [pc, #460]	; 80081d4 <__ieee754_rem_pio2f+0x250>
 8008008:	ee37 0a87 	vadd.f32	s0, s15, s14
 800800c:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8008010:	ed80 0a00 	vstr	s0, [r0]
 8008014:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008018:	f04f 30ff 	mov.w	r0, #4294967295
 800801c:	edc4 7a01 	vstr	s15, [r4, #4]
 8008020:	e7dd      	b.n	8007fde <__ieee754_rem_pio2f+0x5a>
 8008022:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 80081d8 <__ieee754_rem_pio2f+0x254>
 8008026:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 80081dc <__ieee754_rem_pio2f+0x258>
 800802a:	ee77 7a80 	vadd.f32	s15, s15, s0
 800802e:	ee77 6a87 	vadd.f32	s13, s15, s14
 8008032:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008036:	edc0 6a00 	vstr	s13, [r0]
 800803a:	e7eb      	b.n	8008014 <__ieee754_rem_pio2f+0x90>
 800803c:	4b68      	ldr	r3, [pc, #416]	; (80081e0 <__ieee754_rem_pio2f+0x25c>)
 800803e:	429d      	cmp	r5, r3
 8008040:	dc72      	bgt.n	8008128 <__ieee754_rem_pio2f+0x1a4>
 8008042:	f000 fcd9 	bl	80089f8 <fabsf>
 8008046:	ed9f 7a67 	vldr	s14, [pc, #412]	; 80081e4 <__ieee754_rem_pio2f+0x260>
 800804a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800804e:	eee0 7a07 	vfma.f32	s15, s0, s14
 8008052:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008056:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800805a:	ee17 0a90 	vmov	r0, s15
 800805e:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80081cc <__ieee754_rem_pio2f+0x248>
 8008062:	eea7 0a67 	vfms.f32	s0, s14, s15
 8008066:	281f      	cmp	r0, #31
 8008068:	eddf 7a5a 	vldr	s15, [pc, #360]	; 80081d4 <__ieee754_rem_pio2f+0x250>
 800806c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008070:	eeb1 6a47 	vneg.f32	s12, s14
 8008074:	ee70 6a67 	vsub.f32	s13, s0, s15
 8008078:	ee16 2a90 	vmov	r2, s13
 800807c:	dc1c      	bgt.n	80080b8 <__ieee754_rem_pio2f+0x134>
 800807e:	495a      	ldr	r1, [pc, #360]	; (80081e8 <__ieee754_rem_pio2f+0x264>)
 8008080:	1e47      	subs	r7, r0, #1
 8008082:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8008086:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 800808a:	428b      	cmp	r3, r1
 800808c:	d014      	beq.n	80080b8 <__ieee754_rem_pio2f+0x134>
 800808e:	6022      	str	r2, [r4, #0]
 8008090:	ed94 7a00 	vldr	s14, [r4]
 8008094:	ee30 0a47 	vsub.f32	s0, s0, s14
 8008098:	2e00      	cmp	r6, #0
 800809a:	ee30 0a67 	vsub.f32	s0, s0, s15
 800809e:	ed84 0a01 	vstr	s0, [r4, #4]
 80080a2:	da9c      	bge.n	8007fde <__ieee754_rem_pio2f+0x5a>
 80080a4:	eeb1 7a47 	vneg.f32	s14, s14
 80080a8:	eeb1 0a40 	vneg.f32	s0, s0
 80080ac:	ed84 7a00 	vstr	s14, [r4]
 80080b0:	ed84 0a01 	vstr	s0, [r4, #4]
 80080b4:	4240      	negs	r0, r0
 80080b6:	e792      	b.n	8007fde <__ieee754_rem_pio2f+0x5a>
 80080b8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80080bc:	15eb      	asrs	r3, r5, #23
 80080be:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 80080c2:	2d08      	cmp	r5, #8
 80080c4:	dde3      	ble.n	800808e <__ieee754_rem_pio2f+0x10a>
 80080c6:	eddf 7a44 	vldr	s15, [pc, #272]	; 80081d8 <__ieee754_rem_pio2f+0x254>
 80080ca:	eddf 5a44 	vldr	s11, [pc, #272]	; 80081dc <__ieee754_rem_pio2f+0x258>
 80080ce:	eef0 6a40 	vmov.f32	s13, s0
 80080d2:	eee6 6a27 	vfma.f32	s13, s12, s15
 80080d6:	ee30 0a66 	vsub.f32	s0, s0, s13
 80080da:	eea6 0a27 	vfma.f32	s0, s12, s15
 80080de:	eef0 7a40 	vmov.f32	s15, s0
 80080e2:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80080e6:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80080ea:	ee15 2a90 	vmov	r2, s11
 80080ee:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80080f2:	1a5b      	subs	r3, r3, r1
 80080f4:	2b19      	cmp	r3, #25
 80080f6:	dc04      	bgt.n	8008102 <__ieee754_rem_pio2f+0x17e>
 80080f8:	edc4 5a00 	vstr	s11, [r4]
 80080fc:	eeb0 0a66 	vmov.f32	s0, s13
 8008100:	e7c6      	b.n	8008090 <__ieee754_rem_pio2f+0x10c>
 8008102:	eddf 5a3a 	vldr	s11, [pc, #232]	; 80081ec <__ieee754_rem_pio2f+0x268>
 8008106:	eeb0 0a66 	vmov.f32	s0, s13
 800810a:	eea6 0a25 	vfma.f32	s0, s12, s11
 800810e:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8008112:	eddf 6a37 	vldr	s13, [pc, #220]	; 80081f0 <__ieee754_rem_pio2f+0x26c>
 8008116:	eee6 7a25 	vfma.f32	s15, s12, s11
 800811a:	eed7 7a26 	vfnms.f32	s15, s14, s13
 800811e:	ee30 7a67 	vsub.f32	s14, s0, s15
 8008122:	ed84 7a00 	vstr	s14, [r4]
 8008126:	e7b3      	b.n	8008090 <__ieee754_rem_pio2f+0x10c>
 8008128:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 800812c:	db06      	blt.n	800813c <__ieee754_rem_pio2f+0x1b8>
 800812e:	ee70 7a40 	vsub.f32	s15, s0, s0
 8008132:	edc0 7a01 	vstr	s15, [r0, #4]
 8008136:	edc0 7a00 	vstr	s15, [r0]
 800813a:	e733      	b.n	8007fa4 <__ieee754_rem_pio2f+0x20>
 800813c:	15ea      	asrs	r2, r5, #23
 800813e:	3a86      	subs	r2, #134	; 0x86
 8008140:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8008144:	ee07 3a90 	vmov	s15, r3
 8008148:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800814c:	eddf 6a29 	vldr	s13, [pc, #164]	; 80081f4 <__ieee754_rem_pio2f+0x270>
 8008150:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008154:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008158:	ed8d 7a03 	vstr	s14, [sp, #12]
 800815c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8008160:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008164:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008168:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800816c:	ed8d 7a04 	vstr	s14, [sp, #16]
 8008170:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8008174:	eef5 7a40 	vcmp.f32	s15, #0.0
 8008178:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800817c:	edcd 7a05 	vstr	s15, [sp, #20]
 8008180:	d11e      	bne.n	80081c0 <__ieee754_rem_pio2f+0x23c>
 8008182:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8008186:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800818a:	bf14      	ite	ne
 800818c:	2302      	movne	r3, #2
 800818e:	2301      	moveq	r3, #1
 8008190:	4919      	ldr	r1, [pc, #100]	; (80081f8 <__ieee754_rem_pio2f+0x274>)
 8008192:	9101      	str	r1, [sp, #4]
 8008194:	2102      	movs	r1, #2
 8008196:	9100      	str	r1, [sp, #0]
 8008198:	a803      	add	r0, sp, #12
 800819a:	4621      	mov	r1, r4
 800819c:	f000 f88e 	bl	80082bc <__kernel_rem_pio2f>
 80081a0:	2e00      	cmp	r6, #0
 80081a2:	f6bf af1c 	bge.w	8007fde <__ieee754_rem_pio2f+0x5a>
 80081a6:	edd4 7a00 	vldr	s15, [r4]
 80081aa:	eef1 7a67 	vneg.f32	s15, s15
 80081ae:	edc4 7a00 	vstr	s15, [r4]
 80081b2:	edd4 7a01 	vldr	s15, [r4, #4]
 80081b6:	eef1 7a67 	vneg.f32	s15, s15
 80081ba:	edc4 7a01 	vstr	s15, [r4, #4]
 80081be:	e779      	b.n	80080b4 <__ieee754_rem_pio2f+0x130>
 80081c0:	2303      	movs	r3, #3
 80081c2:	e7e5      	b.n	8008190 <__ieee754_rem_pio2f+0x20c>
 80081c4:	3f490fd8 	.word	0x3f490fd8
 80081c8:	4016cbe3 	.word	0x4016cbe3
 80081cc:	3fc90f80 	.word	0x3fc90f80
 80081d0:	3fc90fd0 	.word	0x3fc90fd0
 80081d4:	37354443 	.word	0x37354443
 80081d8:	37354400 	.word	0x37354400
 80081dc:	2e85a308 	.word	0x2e85a308
 80081e0:	43490f80 	.word	0x43490f80
 80081e4:	3f22f984 	.word	0x3f22f984
 80081e8:	0800903c 	.word	0x0800903c
 80081ec:	2e85a300 	.word	0x2e85a300
 80081f0:	248d3132 	.word	0x248d3132
 80081f4:	43800000 	.word	0x43800000
 80081f8:	080090bc 	.word	0x080090bc

080081fc <__kernel_cosf>:
 80081fc:	ee10 3a10 	vmov	r3, s0
 8008200:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008204:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8008208:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 800820c:	da05      	bge.n	800821a <__kernel_cosf+0x1e>
 800820e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8008212:	ee17 2a90 	vmov	r2, s15
 8008216:	2a00      	cmp	r2, #0
 8008218:	d03d      	beq.n	8008296 <__kernel_cosf+0x9a>
 800821a:	ee60 5a00 	vmul.f32	s11, s0, s0
 800821e:	eddf 7a1f 	vldr	s15, [pc, #124]	; 800829c <__kernel_cosf+0xa0>
 8008222:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 80082a0 <__kernel_cosf+0xa4>
 8008226:	eddf 6a1f 	vldr	s13, [pc, #124]	; 80082a4 <__kernel_cosf+0xa8>
 800822a:	4a1f      	ldr	r2, [pc, #124]	; (80082a8 <__kernel_cosf+0xac>)
 800822c:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8008230:	4293      	cmp	r3, r2
 8008232:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80082ac <__kernel_cosf+0xb0>
 8008236:	eee7 7a25 	vfma.f32	s15, s14, s11
 800823a:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 80082b0 <__kernel_cosf+0xb4>
 800823e:	eea7 7aa5 	vfma.f32	s14, s15, s11
 8008242:	eddf 7a1c 	vldr	s15, [pc, #112]	; 80082b4 <__kernel_cosf+0xb8>
 8008246:	eee7 7a25 	vfma.f32	s15, s14, s11
 800824a:	eeb0 7a66 	vmov.f32	s14, s13
 800824e:	eea7 7aa5 	vfma.f32	s14, s15, s11
 8008252:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8008256:	ee65 7aa6 	vmul.f32	s15, s11, s13
 800825a:	ee67 6a25 	vmul.f32	s13, s14, s11
 800825e:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 8008262:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8008266:	dc04      	bgt.n	8008272 <__kernel_cosf+0x76>
 8008268:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800826c:	ee36 0a47 	vsub.f32	s0, s12, s14
 8008270:	4770      	bx	lr
 8008272:	4a11      	ldr	r2, [pc, #68]	; (80082b8 <__kernel_cosf+0xbc>)
 8008274:	4293      	cmp	r3, r2
 8008276:	bfda      	itte	le
 8008278:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 800827c:	ee06 3a90 	vmovle	s13, r3
 8008280:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 8008284:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008288:	ee36 0a66 	vsub.f32	s0, s12, s13
 800828c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008290:	ee30 0a67 	vsub.f32	s0, s0, s15
 8008294:	4770      	bx	lr
 8008296:	eeb0 0a46 	vmov.f32	s0, s12
 800829a:	4770      	bx	lr
 800829c:	ad47d74e 	.word	0xad47d74e
 80082a0:	310f74f6 	.word	0x310f74f6
 80082a4:	3d2aaaab 	.word	0x3d2aaaab
 80082a8:	3e999999 	.word	0x3e999999
 80082ac:	b493f27c 	.word	0xb493f27c
 80082b0:	37d00d01 	.word	0x37d00d01
 80082b4:	bab60b61 	.word	0xbab60b61
 80082b8:	3f480000 	.word	0x3f480000

080082bc <__kernel_rem_pio2f>:
 80082bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082c0:	ed2d 8b04 	vpush	{d8-d9}
 80082c4:	b0d9      	sub	sp, #356	; 0x164
 80082c6:	4688      	mov	r8, r1
 80082c8:	9002      	str	r0, [sp, #8]
 80082ca:	49bb      	ldr	r1, [pc, #748]	; (80085b8 <__kernel_rem_pio2f+0x2fc>)
 80082cc:	9866      	ldr	r0, [sp, #408]	; 0x198
 80082ce:	9301      	str	r3, [sp, #4]
 80082d0:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 80082d4:	f8dd e19c 	ldr.w	lr, [sp, #412]	; 0x19c
 80082d8:	1e59      	subs	r1, r3, #1
 80082da:	1d13      	adds	r3, r2, #4
 80082dc:	db27      	blt.n	800832e <__kernel_rem_pio2f+0x72>
 80082de:	f1b2 0b03 	subs.w	fp, r2, #3
 80082e2:	bf48      	it	mi
 80082e4:	f102 0b04 	addmi.w	fp, r2, #4
 80082e8:	ea4f 00eb 	mov.w	r0, fp, asr #3
 80082ec:	1c45      	adds	r5, r0, #1
 80082ee:	00ec      	lsls	r4, r5, #3
 80082f0:	1a47      	subs	r7, r0, r1
 80082f2:	ed9f 7ab5 	vldr	s14, [pc, #724]	; 80085c8 <__kernel_rem_pio2f+0x30c>
 80082f6:	9403      	str	r4, [sp, #12]
 80082f8:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 80082fc:	eb0a 0c01 	add.w	ip, sl, r1
 8008300:	ae1c      	add	r6, sp, #112	; 0x70
 8008302:	eb0e 0987 	add.w	r9, lr, r7, lsl #2
 8008306:	2400      	movs	r4, #0
 8008308:	4564      	cmp	r4, ip
 800830a:	dd12      	ble.n	8008332 <__kernel_rem_pio2f+0x76>
 800830c:	9b01      	ldr	r3, [sp, #4]
 800830e:	ac1c      	add	r4, sp, #112	; 0x70
 8008310:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8008314:	f50d 7b88 	add.w	fp, sp, #272	; 0x110
 8008318:	f04f 0c00 	mov.w	ip, #0
 800831c:	45d4      	cmp	ip, sl
 800831e:	dc27      	bgt.n	8008370 <__kernel_rem_pio2f+0xb4>
 8008320:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8008324:	eddf 7aa8 	vldr	s15, [pc, #672]	; 80085c8 <__kernel_rem_pio2f+0x30c>
 8008328:	4627      	mov	r7, r4
 800832a:	2600      	movs	r6, #0
 800832c:	e016      	b.n	800835c <__kernel_rem_pio2f+0xa0>
 800832e:	2000      	movs	r0, #0
 8008330:	e7dc      	b.n	80082ec <__kernel_rem_pio2f+0x30>
 8008332:	42e7      	cmn	r7, r4
 8008334:	bf5d      	ittte	pl
 8008336:	f859 3024 	ldrpl.w	r3, [r9, r4, lsl #2]
 800833a:	ee07 3a90 	vmovpl	s15, r3
 800833e:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8008342:	eef0 7a47 	vmovmi.f32	s15, s14
 8008346:	ece6 7a01 	vstmia	r6!, {s15}
 800834a:	3401      	adds	r4, #1
 800834c:	e7dc      	b.n	8008308 <__kernel_rem_pio2f+0x4c>
 800834e:	ecf9 6a01 	vldmia	r9!, {s13}
 8008352:	ed97 7a00 	vldr	s14, [r7]
 8008356:	eee6 7a87 	vfma.f32	s15, s13, s14
 800835a:	3601      	adds	r6, #1
 800835c:	428e      	cmp	r6, r1
 800835e:	f1a7 0704 	sub.w	r7, r7, #4
 8008362:	ddf4      	ble.n	800834e <__kernel_rem_pio2f+0x92>
 8008364:	eceb 7a01 	vstmia	fp!, {s15}
 8008368:	f10c 0c01 	add.w	ip, ip, #1
 800836c:	3404      	adds	r4, #4
 800836e:	e7d5      	b.n	800831c <__kernel_rem_pio2f+0x60>
 8008370:	ab08      	add	r3, sp, #32
 8008372:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8008376:	eddf 8a93 	vldr	s17, [pc, #588]	; 80085c4 <__kernel_rem_pio2f+0x308>
 800837a:	ed9f 9a91 	vldr	s18, [pc, #580]	; 80085c0 <__kernel_rem_pio2f+0x304>
 800837e:	9304      	str	r3, [sp, #16]
 8008380:	eb0e 0b80 	add.w	fp, lr, r0, lsl #2
 8008384:	4656      	mov	r6, sl
 8008386:	00b3      	lsls	r3, r6, #2
 8008388:	9305      	str	r3, [sp, #20]
 800838a:	ab58      	add	r3, sp, #352	; 0x160
 800838c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8008390:	ac08      	add	r4, sp, #32
 8008392:	ab44      	add	r3, sp, #272	; 0x110
 8008394:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8008398:	46a4      	mov	ip, r4
 800839a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 800839e:	4637      	mov	r7, r6
 80083a0:	2f00      	cmp	r7, #0
 80083a2:	f1a0 0004 	sub.w	r0, r0, #4
 80083a6:	dc4f      	bgt.n	8008448 <__kernel_rem_pio2f+0x18c>
 80083a8:	4628      	mov	r0, r5
 80083aa:	e9cd 1206 	strd	r1, r2, [sp, #24]
 80083ae:	f000 fb6d 	bl	8008a8c <scalbnf>
 80083b2:	eeb0 8a40 	vmov.f32	s16, s0
 80083b6:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 80083ba:	ee28 0a00 	vmul.f32	s0, s16, s0
 80083be:	f000 fb23 	bl	8008a08 <floorf>
 80083c2:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 80083c6:	eea0 8a67 	vfms.f32	s16, s0, s15
 80083ca:	2d00      	cmp	r5, #0
 80083cc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80083d0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80083d4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80083d8:	ee17 9a90 	vmov	r9, s15
 80083dc:	ee38 8a40 	vsub.f32	s16, s16, s0
 80083e0:	dd44      	ble.n	800846c <__kernel_rem_pio2f+0x1b0>
 80083e2:	f106 3cff 	add.w	ip, r6, #4294967295
 80083e6:	ab08      	add	r3, sp, #32
 80083e8:	f1c5 0e08 	rsb	lr, r5, #8
 80083ec:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 80083f0:	fa47 f00e 	asr.w	r0, r7, lr
 80083f4:	4481      	add	r9, r0
 80083f6:	fa00 f00e 	lsl.w	r0, r0, lr
 80083fa:	1a3f      	subs	r7, r7, r0
 80083fc:	f1c5 0007 	rsb	r0, r5, #7
 8008400:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8008404:	4107      	asrs	r7, r0
 8008406:	2f00      	cmp	r7, #0
 8008408:	dd3f      	ble.n	800848a <__kernel_rem_pio2f+0x1ce>
 800840a:	f04f 0e00 	mov.w	lr, #0
 800840e:	f109 0901 	add.w	r9, r9, #1
 8008412:	4673      	mov	r3, lr
 8008414:	4576      	cmp	r6, lr
 8008416:	dc6b      	bgt.n	80084f0 <__kernel_rem_pio2f+0x234>
 8008418:	2d00      	cmp	r5, #0
 800841a:	dd04      	ble.n	8008426 <__kernel_rem_pio2f+0x16a>
 800841c:	2d01      	cmp	r5, #1
 800841e:	d078      	beq.n	8008512 <__kernel_rem_pio2f+0x256>
 8008420:	2d02      	cmp	r5, #2
 8008422:	f000 8081 	beq.w	8008528 <__kernel_rem_pio2f+0x26c>
 8008426:	2f02      	cmp	r7, #2
 8008428:	d12f      	bne.n	800848a <__kernel_rem_pio2f+0x1ce>
 800842a:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800842e:	ee30 8a48 	vsub.f32	s16, s0, s16
 8008432:	b353      	cbz	r3, 800848a <__kernel_rem_pio2f+0x1ce>
 8008434:	4628      	mov	r0, r5
 8008436:	e9cd 1206 	strd	r1, r2, [sp, #24]
 800843a:	f000 fb27 	bl	8008a8c <scalbnf>
 800843e:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8008442:	ee38 8a40 	vsub.f32	s16, s16, s0
 8008446:	e020      	b.n	800848a <__kernel_rem_pio2f+0x1ce>
 8008448:	ee60 7a28 	vmul.f32	s15, s0, s17
 800844c:	3f01      	subs	r7, #1
 800844e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008452:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008456:	eea7 0ac9 	vfms.f32	s0, s15, s18
 800845a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800845e:	ecac 0a01 	vstmia	ip!, {s0}
 8008462:	ed90 0a00 	vldr	s0, [r0]
 8008466:	ee37 0a80 	vadd.f32	s0, s15, s0
 800846a:	e799      	b.n	80083a0 <__kernel_rem_pio2f+0xe4>
 800846c:	d105      	bne.n	800847a <__kernel_rem_pio2f+0x1be>
 800846e:	1e70      	subs	r0, r6, #1
 8008470:	ab08      	add	r3, sp, #32
 8008472:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8008476:	11ff      	asrs	r7, r7, #7
 8008478:	e7c5      	b.n	8008406 <__kernel_rem_pio2f+0x14a>
 800847a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800847e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8008482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008486:	da31      	bge.n	80084ec <__kernel_rem_pio2f+0x230>
 8008488:	2700      	movs	r7, #0
 800848a:	eeb5 8a40 	vcmp.f32	s16, #0.0
 800848e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008492:	f040 809b 	bne.w	80085cc <__kernel_rem_pio2f+0x310>
 8008496:	1e74      	subs	r4, r6, #1
 8008498:	46a4      	mov	ip, r4
 800849a:	2000      	movs	r0, #0
 800849c:	45d4      	cmp	ip, sl
 800849e:	da4a      	bge.n	8008536 <__kernel_rem_pio2f+0x27a>
 80084a0:	2800      	cmp	r0, #0
 80084a2:	d07a      	beq.n	800859a <__kernel_rem_pio2f+0x2de>
 80084a4:	ab08      	add	r3, sp, #32
 80084a6:	3d08      	subs	r5, #8
 80084a8:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80084ac:	2b00      	cmp	r3, #0
 80084ae:	f000 8081 	beq.w	80085b4 <__kernel_rem_pio2f+0x2f8>
 80084b2:	4628      	mov	r0, r5
 80084b4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80084b8:	00a5      	lsls	r5, r4, #2
 80084ba:	f000 fae7 	bl	8008a8c <scalbnf>
 80084be:	aa44      	add	r2, sp, #272	; 0x110
 80084c0:	1d2b      	adds	r3, r5, #4
 80084c2:	ed9f 7a40 	vldr	s14, [pc, #256]	; 80085c4 <__kernel_rem_pio2f+0x308>
 80084c6:	18d1      	adds	r1, r2, r3
 80084c8:	4622      	mov	r2, r4
 80084ca:	2a00      	cmp	r2, #0
 80084cc:	f280 80ae 	bge.w	800862c <__kernel_rem_pio2f+0x370>
 80084d0:	4622      	mov	r2, r4
 80084d2:	2a00      	cmp	r2, #0
 80084d4:	f2c0 80cc 	blt.w	8008670 <__kernel_rem_pio2f+0x3b4>
 80084d8:	a944      	add	r1, sp, #272	; 0x110
 80084da:	eb01 0682 	add.w	r6, r1, r2, lsl #2
 80084de:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 80085bc <__kernel_rem_pio2f+0x300>
 80084e2:	eddf 7a39 	vldr	s15, [pc, #228]	; 80085c8 <__kernel_rem_pio2f+0x30c>
 80084e6:	2000      	movs	r0, #0
 80084e8:	1aa1      	subs	r1, r4, r2
 80084ea:	e0b6      	b.n	800865a <__kernel_rem_pio2f+0x39e>
 80084ec:	2702      	movs	r7, #2
 80084ee:	e78c      	b.n	800840a <__kernel_rem_pio2f+0x14e>
 80084f0:	6820      	ldr	r0, [r4, #0]
 80084f2:	b94b      	cbnz	r3, 8008508 <__kernel_rem_pio2f+0x24c>
 80084f4:	b118      	cbz	r0, 80084fe <__kernel_rem_pio2f+0x242>
 80084f6:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80084fa:	6020      	str	r0, [r4, #0]
 80084fc:	2001      	movs	r0, #1
 80084fe:	f10e 0e01 	add.w	lr, lr, #1
 8008502:	3404      	adds	r4, #4
 8008504:	4603      	mov	r3, r0
 8008506:	e785      	b.n	8008414 <__kernel_rem_pio2f+0x158>
 8008508:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 800850c:	6020      	str	r0, [r4, #0]
 800850e:	4618      	mov	r0, r3
 8008510:	e7f5      	b.n	80084fe <__kernel_rem_pio2f+0x242>
 8008512:	1e74      	subs	r4, r6, #1
 8008514:	a808      	add	r0, sp, #32
 8008516:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800851a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800851e:	f10d 0c20 	add.w	ip, sp, #32
 8008522:	f84c 0024 	str.w	r0, [ip, r4, lsl #2]
 8008526:	e77e      	b.n	8008426 <__kernel_rem_pio2f+0x16a>
 8008528:	1e74      	subs	r4, r6, #1
 800852a:	a808      	add	r0, sp, #32
 800852c:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008530:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8008534:	e7f3      	b.n	800851e <__kernel_rem_pio2f+0x262>
 8008536:	ab08      	add	r3, sp, #32
 8008538:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 800853c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8008540:	4318      	orrs	r0, r3
 8008542:	e7ab      	b.n	800849c <__kernel_rem_pio2f+0x1e0>
 8008544:	f10c 0c01 	add.w	ip, ip, #1
 8008548:	f850 4d04 	ldr.w	r4, [r0, #-4]!
 800854c:	2c00      	cmp	r4, #0
 800854e:	d0f9      	beq.n	8008544 <__kernel_rem_pio2f+0x288>
 8008550:	9b05      	ldr	r3, [sp, #20]
 8008552:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8008556:	eb0d 0003 	add.w	r0, sp, r3
 800855a:	9b01      	ldr	r3, [sp, #4]
 800855c:	18f4      	adds	r4, r6, r3
 800855e:	ab1c      	add	r3, sp, #112	; 0x70
 8008560:	1c77      	adds	r7, r6, #1
 8008562:	384c      	subs	r0, #76	; 0x4c
 8008564:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8008568:	4466      	add	r6, ip
 800856a:	42be      	cmp	r6, r7
 800856c:	f6ff af0b 	blt.w	8008386 <__kernel_rem_pio2f+0xca>
 8008570:	f85b 3027 	ldr.w	r3, [fp, r7, lsl #2]
 8008574:	f8dd e008 	ldr.w	lr, [sp, #8]
 8008578:	ee07 3a90 	vmov	s15, r3
 800857c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008580:	f04f 0c00 	mov.w	ip, #0
 8008584:	ece4 7a01 	vstmia	r4!, {s15}
 8008588:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80085c8 <__kernel_rem_pio2f+0x30c>
 800858c:	46a1      	mov	r9, r4
 800858e:	458c      	cmp	ip, r1
 8008590:	dd07      	ble.n	80085a2 <__kernel_rem_pio2f+0x2e6>
 8008592:	ece0 7a01 	vstmia	r0!, {s15}
 8008596:	3701      	adds	r7, #1
 8008598:	e7e7      	b.n	800856a <__kernel_rem_pio2f+0x2ae>
 800859a:	9804      	ldr	r0, [sp, #16]
 800859c:	f04f 0c01 	mov.w	ip, #1
 80085a0:	e7d2      	b.n	8008548 <__kernel_rem_pio2f+0x28c>
 80085a2:	ecfe 6a01 	vldmia	lr!, {s13}
 80085a6:	ed39 7a01 	vldmdb	r9!, {s14}
 80085aa:	f10c 0c01 	add.w	ip, ip, #1
 80085ae:	eee6 7a87 	vfma.f32	s15, s13, s14
 80085b2:	e7ec      	b.n	800858e <__kernel_rem_pio2f+0x2d2>
 80085b4:	3c01      	subs	r4, #1
 80085b6:	e775      	b.n	80084a4 <__kernel_rem_pio2f+0x1e8>
 80085b8:	08009400 	.word	0x08009400
 80085bc:	080093d4 	.word	0x080093d4
 80085c0:	43800000 	.word	0x43800000
 80085c4:	3b800000 	.word	0x3b800000
 80085c8:	00000000 	.word	0x00000000
 80085cc:	9b03      	ldr	r3, [sp, #12]
 80085ce:	eeb0 0a48 	vmov.f32	s0, s16
 80085d2:	1a98      	subs	r0, r3, r2
 80085d4:	f000 fa5a 	bl	8008a8c <scalbnf>
 80085d8:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 80085c0 <__kernel_rem_pio2f+0x304>
 80085dc:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80085e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80085e4:	db19      	blt.n	800861a <__kernel_rem_pio2f+0x35e>
 80085e6:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 80085c4 <__kernel_rem_pio2f+0x308>
 80085ea:	ee60 7a27 	vmul.f32	s15, s0, s15
 80085ee:	aa08      	add	r2, sp, #32
 80085f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085f4:	1c74      	adds	r4, r6, #1
 80085f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80085fa:	3508      	adds	r5, #8
 80085fc:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8008600:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008604:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008608:	ee10 3a10 	vmov	r3, s0
 800860c:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8008610:	ee17 3a90 	vmov	r3, s15
 8008614:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8008618:	e74b      	b.n	80084b2 <__kernel_rem_pio2f+0x1f6>
 800861a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800861e:	aa08      	add	r2, sp, #32
 8008620:	ee10 3a10 	vmov	r3, s0
 8008624:	4634      	mov	r4, r6
 8008626:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 800862a:	e742      	b.n	80084b2 <__kernel_rem_pio2f+0x1f6>
 800862c:	a808      	add	r0, sp, #32
 800862e:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 8008632:	9001      	str	r0, [sp, #4]
 8008634:	ee07 0a90 	vmov	s15, r0
 8008638:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800863c:	3a01      	subs	r2, #1
 800863e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8008642:	ee20 0a07 	vmul.f32	s0, s0, s14
 8008646:	ed61 7a01 	vstmdb	r1!, {s15}
 800864a:	e73e      	b.n	80084ca <__kernel_rem_pio2f+0x20e>
 800864c:	ecfc 6a01 	vldmia	ip!, {s13}
 8008650:	ecb6 7a01 	vldmia	r6!, {s14}
 8008654:	eee6 7a87 	vfma.f32	s15, s13, s14
 8008658:	3001      	adds	r0, #1
 800865a:	4550      	cmp	r0, sl
 800865c:	dc01      	bgt.n	8008662 <__kernel_rem_pio2f+0x3a6>
 800865e:	4288      	cmp	r0, r1
 8008660:	ddf4      	ble.n	800864c <__kernel_rem_pio2f+0x390>
 8008662:	a858      	add	r0, sp, #352	; 0x160
 8008664:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8008668:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 800866c:	3a01      	subs	r2, #1
 800866e:	e730      	b.n	80084d2 <__kernel_rem_pio2f+0x216>
 8008670:	9a66      	ldr	r2, [sp, #408]	; 0x198
 8008672:	2a02      	cmp	r2, #2
 8008674:	dc09      	bgt.n	800868a <__kernel_rem_pio2f+0x3ce>
 8008676:	2a00      	cmp	r2, #0
 8008678:	dc2a      	bgt.n	80086d0 <__kernel_rem_pio2f+0x414>
 800867a:	d043      	beq.n	8008704 <__kernel_rem_pio2f+0x448>
 800867c:	f009 0007 	and.w	r0, r9, #7
 8008680:	b059      	add	sp, #356	; 0x164
 8008682:	ecbd 8b04 	vpop	{d8-d9}
 8008686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800868a:	9b66      	ldr	r3, [sp, #408]	; 0x198
 800868c:	2b03      	cmp	r3, #3
 800868e:	d1f5      	bne.n	800867c <__kernel_rem_pio2f+0x3c0>
 8008690:	ab30      	add	r3, sp, #192	; 0xc0
 8008692:	442b      	add	r3, r5
 8008694:	461a      	mov	r2, r3
 8008696:	4619      	mov	r1, r3
 8008698:	4620      	mov	r0, r4
 800869a:	2800      	cmp	r0, #0
 800869c:	f1a1 0104 	sub.w	r1, r1, #4
 80086a0:	dc51      	bgt.n	8008746 <__kernel_rem_pio2f+0x48a>
 80086a2:	4621      	mov	r1, r4
 80086a4:	2901      	cmp	r1, #1
 80086a6:	f1a2 0204 	sub.w	r2, r2, #4
 80086aa:	dc5c      	bgt.n	8008766 <__kernel_rem_pio2f+0x4aa>
 80086ac:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 80085c8 <__kernel_rem_pio2f+0x30c>
 80086b0:	3304      	adds	r3, #4
 80086b2:	2c01      	cmp	r4, #1
 80086b4:	dc67      	bgt.n	8008786 <__kernel_rem_pio2f+0x4ca>
 80086b6:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80086ba:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 80086be:	2f00      	cmp	r7, #0
 80086c0:	d167      	bne.n	8008792 <__kernel_rem_pio2f+0x4d6>
 80086c2:	edc8 6a00 	vstr	s13, [r8]
 80086c6:	ed88 7a01 	vstr	s14, [r8, #4]
 80086ca:	edc8 7a02 	vstr	s15, [r8, #8]
 80086ce:	e7d5      	b.n	800867c <__kernel_rem_pio2f+0x3c0>
 80086d0:	aa30      	add	r2, sp, #192	; 0xc0
 80086d2:	ed1f 7a43 	vldr	s14, [pc, #-268]	; 80085c8 <__kernel_rem_pio2f+0x30c>
 80086d6:	4413      	add	r3, r2
 80086d8:	4622      	mov	r2, r4
 80086da:	2a00      	cmp	r2, #0
 80086dc:	da24      	bge.n	8008728 <__kernel_rem_pio2f+0x46c>
 80086de:	b34f      	cbz	r7, 8008734 <__kernel_rem_pio2f+0x478>
 80086e0:	eef1 7a47 	vneg.f32	s15, s14
 80086e4:	edc8 7a00 	vstr	s15, [r8]
 80086e8:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 80086ec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80086f0:	aa31      	add	r2, sp, #196	; 0xc4
 80086f2:	2301      	movs	r3, #1
 80086f4:	429c      	cmp	r4, r3
 80086f6:	da20      	bge.n	800873a <__kernel_rem_pio2f+0x47e>
 80086f8:	b10f      	cbz	r7, 80086fe <__kernel_rem_pio2f+0x442>
 80086fa:	eef1 7a67 	vneg.f32	s15, s15
 80086fe:	edc8 7a01 	vstr	s15, [r8, #4]
 8008702:	e7bb      	b.n	800867c <__kernel_rem_pio2f+0x3c0>
 8008704:	aa30      	add	r2, sp, #192	; 0xc0
 8008706:	ed5f 7a50 	vldr	s15, [pc, #-320]	; 80085c8 <__kernel_rem_pio2f+0x30c>
 800870a:	4413      	add	r3, r2
 800870c:	2c00      	cmp	r4, #0
 800870e:	da05      	bge.n	800871c <__kernel_rem_pio2f+0x460>
 8008710:	b10f      	cbz	r7, 8008716 <__kernel_rem_pio2f+0x45a>
 8008712:	eef1 7a67 	vneg.f32	s15, s15
 8008716:	edc8 7a00 	vstr	s15, [r8]
 800871a:	e7af      	b.n	800867c <__kernel_rem_pio2f+0x3c0>
 800871c:	ed33 7a01 	vldmdb	r3!, {s14}
 8008720:	3c01      	subs	r4, #1
 8008722:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008726:	e7f1      	b.n	800870c <__kernel_rem_pio2f+0x450>
 8008728:	ed73 7a01 	vldmdb	r3!, {s15}
 800872c:	3a01      	subs	r2, #1
 800872e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008732:	e7d2      	b.n	80086da <__kernel_rem_pio2f+0x41e>
 8008734:	eef0 7a47 	vmov.f32	s15, s14
 8008738:	e7d4      	b.n	80086e4 <__kernel_rem_pio2f+0x428>
 800873a:	ecb2 7a01 	vldmia	r2!, {s14}
 800873e:	3301      	adds	r3, #1
 8008740:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008744:	e7d6      	b.n	80086f4 <__kernel_rem_pio2f+0x438>
 8008746:	edd1 7a00 	vldr	s15, [r1]
 800874a:	edd1 6a01 	vldr	s13, [r1, #4]
 800874e:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8008752:	3801      	subs	r0, #1
 8008754:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008758:	ed81 7a00 	vstr	s14, [r1]
 800875c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008760:	edc1 7a01 	vstr	s15, [r1, #4]
 8008764:	e799      	b.n	800869a <__kernel_rem_pio2f+0x3de>
 8008766:	edd2 7a00 	vldr	s15, [r2]
 800876a:	edd2 6a01 	vldr	s13, [r2, #4]
 800876e:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8008772:	3901      	subs	r1, #1
 8008774:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008778:	ed82 7a00 	vstr	s14, [r2]
 800877c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008780:	edc2 7a01 	vstr	s15, [r2, #4]
 8008784:	e78e      	b.n	80086a4 <__kernel_rem_pio2f+0x3e8>
 8008786:	ed33 7a01 	vldmdb	r3!, {s14}
 800878a:	3c01      	subs	r4, #1
 800878c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008790:	e78f      	b.n	80086b2 <__kernel_rem_pio2f+0x3f6>
 8008792:	eef1 6a66 	vneg.f32	s13, s13
 8008796:	eeb1 7a47 	vneg.f32	s14, s14
 800879a:	edc8 6a00 	vstr	s13, [r8]
 800879e:	ed88 7a01 	vstr	s14, [r8, #4]
 80087a2:	eef1 7a67 	vneg.f32	s15, s15
 80087a6:	e790      	b.n	80086ca <__kernel_rem_pio2f+0x40e>

080087a8 <__kernel_sinf>:
 80087a8:	ee10 3a10 	vmov	r3, s0
 80087ac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80087b0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80087b4:	da04      	bge.n	80087c0 <__kernel_sinf+0x18>
 80087b6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80087ba:	ee17 3a90 	vmov	r3, s15
 80087be:	b35b      	cbz	r3, 8008818 <__kernel_sinf+0x70>
 80087c0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80087c4:	eddf 7a15 	vldr	s15, [pc, #84]	; 800881c <__kernel_sinf+0x74>
 80087c8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8008820 <__kernel_sinf+0x78>
 80087cc:	eea7 6a27 	vfma.f32	s12, s14, s15
 80087d0:	eddf 7a14 	vldr	s15, [pc, #80]	; 8008824 <__kernel_sinf+0x7c>
 80087d4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80087d8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8008828 <__kernel_sinf+0x80>
 80087dc:	eea7 6a87 	vfma.f32	s12, s15, s14
 80087e0:	eddf 7a12 	vldr	s15, [pc, #72]	; 800882c <__kernel_sinf+0x84>
 80087e4:	ee60 6a07 	vmul.f32	s13, s0, s14
 80087e8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80087ec:	b930      	cbnz	r0, 80087fc <__kernel_sinf+0x54>
 80087ee:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8008830 <__kernel_sinf+0x88>
 80087f2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80087f6:	eea6 0a26 	vfma.f32	s0, s12, s13
 80087fa:	4770      	bx	lr
 80087fc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8008800:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8008804:	eee0 7a86 	vfma.f32	s15, s1, s12
 8008808:	eed7 0a87 	vfnms.f32	s1, s15, s14
 800880c:	eddf 7a09 	vldr	s15, [pc, #36]	; 8008834 <__kernel_sinf+0x8c>
 8008810:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8008814:	ee30 0a60 	vsub.f32	s0, s0, s1
 8008818:	4770      	bx	lr
 800881a:	bf00      	nop
 800881c:	2f2ec9d3 	.word	0x2f2ec9d3
 8008820:	b2d72f34 	.word	0xb2d72f34
 8008824:	3638ef1b 	.word	0x3638ef1b
 8008828:	b9500d01 	.word	0xb9500d01
 800882c:	3c088889 	.word	0x3c088889
 8008830:	be2aaaab 	.word	0xbe2aaaab
 8008834:	3e2aaaab 	.word	0x3e2aaaab

08008838 <__kernel_tanf>:
 8008838:	b508      	push	{r3, lr}
 800883a:	ee10 3a10 	vmov	r3, s0
 800883e:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8008842:	f1b2 5f46 	cmp.w	r2, #830472192	; 0x31800000
 8008846:	eef0 7a40 	vmov.f32	s15, s0
 800884a:	da17      	bge.n	800887c <__kernel_tanf+0x44>
 800884c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8008850:	ee17 1a10 	vmov	r1, s14
 8008854:	bb41      	cbnz	r1, 80088a8 <__kernel_tanf+0x70>
 8008856:	1c43      	adds	r3, r0, #1
 8008858:	4313      	orrs	r3, r2
 800885a:	d108      	bne.n	800886e <__kernel_tanf+0x36>
 800885c:	f000 f8cc 	bl	80089f8 <fabsf>
 8008860:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008864:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8008868:	eeb0 0a67 	vmov.f32	s0, s15
 800886c:	bd08      	pop	{r3, pc}
 800886e:	2801      	cmp	r0, #1
 8008870:	d0fa      	beq.n	8008868 <__kernel_tanf+0x30>
 8008872:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8008876:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800887a:	e7f5      	b.n	8008868 <__kernel_tanf+0x30>
 800887c:	494c      	ldr	r1, [pc, #304]	; (80089b0 <__kernel_tanf+0x178>)
 800887e:	428a      	cmp	r2, r1
 8008880:	db12      	blt.n	80088a8 <__kernel_tanf+0x70>
 8008882:	2b00      	cmp	r3, #0
 8008884:	bfb8      	it	lt
 8008886:	eef1 7a40 	vneglt.f32	s15, s0
 800888a:	ed9f 0a4a 	vldr	s0, [pc, #296]	; 80089b4 <__kernel_tanf+0x17c>
 800888e:	ee70 7a67 	vsub.f32	s15, s0, s15
 8008892:	ed9f 0a49 	vldr	s0, [pc, #292]	; 80089b8 <__kernel_tanf+0x180>
 8008896:	bfb8      	it	lt
 8008898:	eef1 0a60 	vneglt.f32	s1, s1
 800889c:	ee70 0a60 	vsub.f32	s1, s0, s1
 80088a0:	ee70 7aa7 	vadd.f32	s15, s1, s15
 80088a4:	eddf 0a45 	vldr	s1, [pc, #276]	; 80089bc <__kernel_tanf+0x184>
 80088a8:	eddf 5a45 	vldr	s11, [pc, #276]	; 80089c0 <__kernel_tanf+0x188>
 80088ac:	ed9f 6a45 	vldr	s12, [pc, #276]	; 80089c4 <__kernel_tanf+0x18c>
 80088b0:	ed9f 5a45 	vldr	s10, [pc, #276]	; 80089c8 <__kernel_tanf+0x190>
 80088b4:	493e      	ldr	r1, [pc, #248]	; (80089b0 <__kernel_tanf+0x178>)
 80088b6:	ee67 6aa7 	vmul.f32	s13, s15, s15
 80088ba:	428a      	cmp	r2, r1
 80088bc:	ee26 7aa6 	vmul.f32	s14, s13, s13
 80088c0:	eea7 6a25 	vfma.f32	s12, s14, s11
 80088c4:	eddf 5a41 	vldr	s11, [pc, #260]	; 80089cc <__kernel_tanf+0x194>
 80088c8:	eee6 5a07 	vfma.f32	s11, s12, s14
 80088cc:	ed9f 6a40 	vldr	s12, [pc, #256]	; 80089d0 <__kernel_tanf+0x198>
 80088d0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80088d4:	eddf 5a3f 	vldr	s11, [pc, #252]	; 80089d4 <__kernel_tanf+0x19c>
 80088d8:	eee6 5a07 	vfma.f32	s11, s12, s14
 80088dc:	ed9f 6a3e 	vldr	s12, [pc, #248]	; 80089d8 <__kernel_tanf+0x1a0>
 80088e0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80088e4:	eddf 5a3d 	vldr	s11, [pc, #244]	; 80089dc <__kernel_tanf+0x1a4>
 80088e8:	eee7 5a05 	vfma.f32	s11, s14, s10
 80088ec:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 80089e0 <__kernel_tanf+0x1a8>
 80088f0:	eea5 5a87 	vfma.f32	s10, s11, s14
 80088f4:	eddf 5a3b 	vldr	s11, [pc, #236]	; 80089e4 <__kernel_tanf+0x1ac>
 80088f8:	eee5 5a07 	vfma.f32	s11, s10, s14
 80088fc:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 80089e8 <__kernel_tanf+0x1b0>
 8008900:	eea5 5a87 	vfma.f32	s10, s11, s14
 8008904:	eddf 5a39 	vldr	s11, [pc, #228]	; 80089ec <__kernel_tanf+0x1b4>
 8008908:	eee5 5a07 	vfma.f32	s11, s10, s14
 800890c:	eeb0 7a46 	vmov.f32	s14, s12
 8008910:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8008914:	ee27 5aa6 	vmul.f32	s10, s15, s13
 8008918:	eeb0 6a60 	vmov.f32	s12, s1
 800891c:	eea7 6a05 	vfma.f32	s12, s14, s10
 8008920:	ed9f 7a33 	vldr	s14, [pc, #204]	; 80089f0 <__kernel_tanf+0x1b8>
 8008924:	eee6 0a26 	vfma.f32	s1, s12, s13
 8008928:	eee5 0a07 	vfma.f32	s1, s10, s14
 800892c:	ee37 7aa0 	vadd.f32	s14, s15, s1
 8008930:	db1d      	blt.n	800896e <__kernel_tanf+0x136>
 8008932:	ee06 0a90 	vmov	s13, r0
 8008936:	eeb8 0ae6 	vcvt.f32.s32	s0, s13
 800893a:	ee27 6a07 	vmul.f32	s12, s14, s14
 800893e:	ee37 7a00 	vadd.f32	s14, s14, s0
 8008942:	179b      	asrs	r3, r3, #30
 8008944:	eec6 6a07 	vdiv.f32	s13, s12, s14
 8008948:	f003 0302 	and.w	r3, r3, #2
 800894c:	f1c3 0301 	rsb	r3, r3, #1
 8008950:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 8008954:	ee76 0ae0 	vsub.f32	s1, s13, s1
 8008958:	ee77 7ae0 	vsub.f32	s15, s15, s1
 800895c:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8008960:	ee07 3a90 	vmov	s15, r3
 8008964:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008968:	ee67 7a80 	vmul.f32	s15, s15, s0
 800896c:	e77c      	b.n	8008868 <__kernel_tanf+0x30>
 800896e:	2801      	cmp	r0, #1
 8008970:	d01b      	beq.n	80089aa <__kernel_tanf+0x172>
 8008972:	4b20      	ldr	r3, [pc, #128]	; (80089f4 <__kernel_tanf+0x1bc>)
 8008974:	ee17 2a10 	vmov	r2, s14
 8008978:	401a      	ands	r2, r3
 800897a:	ee06 2a10 	vmov	s12, r2
 800897e:	ee76 7a67 	vsub.f32	s15, s12, s15
 8008982:	ee70 0ae7 	vsub.f32	s1, s1, s15
 8008986:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 800898a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800898e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008992:	ee16 2a90 	vmov	r2, s13
 8008996:	4013      	ands	r3, r2
 8008998:	ee07 3a90 	vmov	s15, r3
 800899c:	eea6 7a27 	vfma.f32	s14, s12, s15
 80089a0:	eea0 7aa7 	vfma.f32	s14, s1, s15
 80089a4:	eee7 7a26 	vfma.f32	s15, s14, s13
 80089a8:	e75e      	b.n	8008868 <__kernel_tanf+0x30>
 80089aa:	eef0 7a47 	vmov.f32	s15, s14
 80089ae:	e75b      	b.n	8008868 <__kernel_tanf+0x30>
 80089b0:	3f2ca140 	.word	0x3f2ca140
 80089b4:	3f490fda 	.word	0x3f490fda
 80089b8:	33222168 	.word	0x33222168
 80089bc:	00000000 	.word	0x00000000
 80089c0:	b79bae5f 	.word	0xb79bae5f
 80089c4:	38a3f445 	.word	0x38a3f445
 80089c8:	37d95384 	.word	0x37d95384
 80089cc:	3a1a26c8 	.word	0x3a1a26c8
 80089d0:	3b6b6916 	.word	0x3b6b6916
 80089d4:	3cb327a4 	.word	0x3cb327a4
 80089d8:	3e088889 	.word	0x3e088889
 80089dc:	3895c07a 	.word	0x3895c07a
 80089e0:	398137b9 	.word	0x398137b9
 80089e4:	3abede48 	.word	0x3abede48
 80089e8:	3c11371f 	.word	0x3c11371f
 80089ec:	3d5d0dd1 	.word	0x3d5d0dd1
 80089f0:	3eaaaaab 	.word	0x3eaaaaab
 80089f4:	fffff000 	.word	0xfffff000

080089f8 <fabsf>:
 80089f8:	ee10 3a10 	vmov	r3, s0
 80089fc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008a00:	ee00 3a10 	vmov	s0, r3
 8008a04:	4770      	bx	lr
	...

08008a08 <floorf>:
 8008a08:	ee10 3a10 	vmov	r3, s0
 8008a0c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8008a10:	3a7f      	subs	r2, #127	; 0x7f
 8008a12:	2a16      	cmp	r2, #22
 8008a14:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8008a18:	dc2a      	bgt.n	8008a70 <floorf+0x68>
 8008a1a:	2a00      	cmp	r2, #0
 8008a1c:	da11      	bge.n	8008a42 <floorf+0x3a>
 8008a1e:	eddf 7a18 	vldr	s15, [pc, #96]	; 8008a80 <floorf+0x78>
 8008a22:	ee30 0a27 	vadd.f32	s0, s0, s15
 8008a26:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8008a2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a2e:	dd05      	ble.n	8008a3c <floorf+0x34>
 8008a30:	2b00      	cmp	r3, #0
 8008a32:	da23      	bge.n	8008a7c <floorf+0x74>
 8008a34:	4a13      	ldr	r2, [pc, #76]	; (8008a84 <floorf+0x7c>)
 8008a36:	2900      	cmp	r1, #0
 8008a38:	bf18      	it	ne
 8008a3a:	4613      	movne	r3, r2
 8008a3c:	ee00 3a10 	vmov	s0, r3
 8008a40:	4770      	bx	lr
 8008a42:	4911      	ldr	r1, [pc, #68]	; (8008a88 <floorf+0x80>)
 8008a44:	4111      	asrs	r1, r2
 8008a46:	420b      	tst	r3, r1
 8008a48:	d0fa      	beq.n	8008a40 <floorf+0x38>
 8008a4a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8008a80 <floorf+0x78>
 8008a4e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8008a52:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8008a56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a5a:	ddef      	ble.n	8008a3c <floorf+0x34>
 8008a5c:	2b00      	cmp	r3, #0
 8008a5e:	bfbe      	ittt	lt
 8008a60:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8008a64:	fa40 f202 	asrlt.w	r2, r0, r2
 8008a68:	189b      	addlt	r3, r3, r2
 8008a6a:	ea23 0301 	bic.w	r3, r3, r1
 8008a6e:	e7e5      	b.n	8008a3c <floorf+0x34>
 8008a70:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8008a74:	d3e4      	bcc.n	8008a40 <floorf+0x38>
 8008a76:	ee30 0a00 	vadd.f32	s0, s0, s0
 8008a7a:	4770      	bx	lr
 8008a7c:	2300      	movs	r3, #0
 8008a7e:	e7dd      	b.n	8008a3c <floorf+0x34>
 8008a80:	7149f2ca 	.word	0x7149f2ca
 8008a84:	bf800000 	.word	0xbf800000
 8008a88:	007fffff 	.word	0x007fffff

08008a8c <scalbnf>:
 8008a8c:	ee10 3a10 	vmov	r3, s0
 8008a90:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8008a94:	d025      	beq.n	8008ae2 <scalbnf+0x56>
 8008a96:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8008a9a:	d302      	bcc.n	8008aa2 <scalbnf+0x16>
 8008a9c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8008aa0:	4770      	bx	lr
 8008aa2:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8008aa6:	d122      	bne.n	8008aee <scalbnf+0x62>
 8008aa8:	4b2a      	ldr	r3, [pc, #168]	; (8008b54 <scalbnf+0xc8>)
 8008aaa:	eddf 7a2b 	vldr	s15, [pc, #172]	; 8008b58 <scalbnf+0xcc>
 8008aae:	4298      	cmp	r0, r3
 8008ab0:	ee20 0a27 	vmul.f32	s0, s0, s15
 8008ab4:	db16      	blt.n	8008ae4 <scalbnf+0x58>
 8008ab6:	ee10 3a10 	vmov	r3, s0
 8008aba:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8008abe:	3a19      	subs	r2, #25
 8008ac0:	4402      	add	r2, r0
 8008ac2:	2afe      	cmp	r2, #254	; 0xfe
 8008ac4:	dd15      	ble.n	8008af2 <scalbnf+0x66>
 8008ac6:	ee10 3a10 	vmov	r3, s0
 8008aca:	eddf 7a24 	vldr	s15, [pc, #144]	; 8008b5c <scalbnf+0xd0>
 8008ace:	eddf 6a24 	vldr	s13, [pc, #144]	; 8008b60 <scalbnf+0xd4>
 8008ad2:	2b00      	cmp	r3, #0
 8008ad4:	eeb0 7a67 	vmov.f32	s14, s15
 8008ad8:	bfb8      	it	lt
 8008ada:	eef0 7a66 	vmovlt.f32	s15, s13
 8008ade:	ee27 0a27 	vmul.f32	s0, s14, s15
 8008ae2:	4770      	bx	lr
 8008ae4:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8008b64 <scalbnf+0xd8>
 8008ae8:	ee20 0a27 	vmul.f32	s0, s0, s15
 8008aec:	4770      	bx	lr
 8008aee:	0dd2      	lsrs	r2, r2, #23
 8008af0:	e7e6      	b.n	8008ac0 <scalbnf+0x34>
 8008af2:	2a00      	cmp	r2, #0
 8008af4:	dd06      	ble.n	8008b04 <scalbnf+0x78>
 8008af6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008afa:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8008afe:	ee00 3a10 	vmov	s0, r3
 8008b02:	4770      	bx	lr
 8008b04:	f112 0f16 	cmn.w	r2, #22
 8008b08:	da1a      	bge.n	8008b40 <scalbnf+0xb4>
 8008b0a:	f24c 3350 	movw	r3, #50000	; 0xc350
 8008b0e:	4298      	cmp	r0, r3
 8008b10:	ee10 3a10 	vmov	r3, s0
 8008b14:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008b18:	dd0a      	ble.n	8008b30 <scalbnf+0xa4>
 8008b1a:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8008b5c <scalbnf+0xd0>
 8008b1e:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8008b60 <scalbnf+0xd4>
 8008b22:	eef0 7a40 	vmov.f32	s15, s0
 8008b26:	2b00      	cmp	r3, #0
 8008b28:	bf18      	it	ne
 8008b2a:	eeb0 0a47 	vmovne.f32	s0, s14
 8008b2e:	e7db      	b.n	8008ae8 <scalbnf+0x5c>
 8008b30:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 8008b64 <scalbnf+0xd8>
 8008b34:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 8008b68 <scalbnf+0xdc>
 8008b38:	eef0 7a40 	vmov.f32	s15, s0
 8008b3c:	2b00      	cmp	r3, #0
 8008b3e:	e7f3      	b.n	8008b28 <scalbnf+0x9c>
 8008b40:	3219      	adds	r2, #25
 8008b42:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008b46:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8008b4a:	eddf 7a08 	vldr	s15, [pc, #32]	; 8008b6c <scalbnf+0xe0>
 8008b4e:	ee07 3a10 	vmov	s14, r3
 8008b52:	e7c4      	b.n	8008ade <scalbnf+0x52>
 8008b54:	ffff3cb0 	.word	0xffff3cb0
 8008b58:	4c000000 	.word	0x4c000000
 8008b5c:	7149f2ca 	.word	0x7149f2ca
 8008b60:	f149f2ca 	.word	0xf149f2ca
 8008b64:	0da24260 	.word	0x0da24260
 8008b68:	8da24260 	.word	0x8da24260
 8008b6c:	33000000 	.word	0x33000000

08008b70 <_init>:
 8008b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b72:	bf00      	nop
 8008b74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b76:	bc08      	pop	{r3}
 8008b78:	469e      	mov	lr, r3
 8008b7a:	4770      	bx	lr

08008b7c <_fini>:
 8008b7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b7e:	bf00      	nop
 8008b80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b82:	bc08      	pop	{r3}
 8008b84:	469e      	mov	lr, r3
 8008b86:	4770      	bx	lr

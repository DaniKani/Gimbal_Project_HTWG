
Test1_Dani.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008850  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000088c  080089f0  080089f0  000189f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800927c  0800927c  00020200  2**0
                  CONTENTS
  4 .ARM          00000000  0800927c  0800927c  00020200  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800927c  0800927c  00020200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800927c  0800927c  0001927c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009280  08009280  00019280  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000200  20000000  08009284  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000140  20000200  08009484  00020200  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000340  08009484  00020340  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
 12 .debug_info   000056d5  00000000  00000000  00020230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000012cd  00000000  00000000  00025905  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000430  00000000  00000000  00026bd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000368  00000000  00000000  00027008  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010a23  00000000  00000000  00027370  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000069fd  00000000  00000000  00037d93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00056f7b  00000000  00000000  0003e790  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0009570b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000259c  00000000  00000000  0009575c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000200 	.word	0x20000200
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080089d8 	.word	0x080089d8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000204 	.word	0x20000204
 80001dc:	080089d8 	.word	0x080089d8

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2lz>:
 8000c98:	b538      	push	{r3, r4, r5, lr}
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	4604      	mov	r4, r0
 8000ca0:	460d      	mov	r5, r1
 8000ca2:	f7ff ff23 	bl	8000aec <__aeabi_dcmplt>
 8000ca6:	b928      	cbnz	r0, 8000cb4 <__aeabi_d2lz+0x1c>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	4629      	mov	r1, r5
 8000cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cb0:	f000 b80a 	b.w	8000cc8 <__aeabi_d2ulz>
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cba:	f000 f805 	bl	8000cc8 <__aeabi_d2ulz>
 8000cbe:	4240      	negs	r0, r0
 8000cc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc4:	bd38      	pop	{r3, r4, r5, pc}
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_d2ulz>:
 8000cc8:	b5d0      	push	{r4, r6, r7, lr}
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <__aeabi_d2ulz+0x34>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	4606      	mov	r6, r0
 8000cd0:	460f      	mov	r7, r1
 8000cd2:	f7ff fc99 	bl	8000608 <__aeabi_dmul>
 8000cd6:	f7ff ff6f 	bl	8000bb8 <__aeabi_d2uiz>
 8000cda:	4604      	mov	r4, r0
 8000cdc:	f7ff fc1a 	bl	8000514 <__aeabi_ui2d>
 8000ce0:	4b07      	ldr	r3, [pc, #28]	; (8000d00 <__aeabi_d2ulz+0x38>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	f7ff fc90 	bl	8000608 <__aeabi_dmul>
 8000ce8:	4602      	mov	r2, r0
 8000cea:	460b      	mov	r3, r1
 8000cec:	4630      	mov	r0, r6
 8000cee:	4639      	mov	r1, r7
 8000cf0:	f7ff fad2 	bl	8000298 <__aeabi_dsub>
 8000cf4:	f7ff ff60 	bl	8000bb8 <__aeabi_d2uiz>
 8000cf8:	4621      	mov	r1, r4
 8000cfa:	bdd0      	pop	{r4, r6, r7, pc}
 8000cfc:	3df00000 	.word	0x3df00000
 8000d00:	41f00000 	.word	0x41f00000

08000d04 <EKF_Init>:
float h1;
float h2;

/*--------------------------------------*/

void EKF_Init(EKF *ekf, float P[2], float Q[2], float R[3]) {
 8000d04:	b480      	push	{r7}
 8000d06:	b085      	sub	sp, #20
 8000d08:	af00      	add	r7, sp, #0
 8000d0a:	60f8      	str	r0, [r7, #12]
 8000d0c:	60b9      	str	r1, [r7, #8]
 8000d0e:	607a      	str	r2, [r7, #4]
 8000d10:	603b      	str	r3, [r7, #0]

	/* Reset state estimates */
	ekf->roll_r 	= 0.0f;
 8000d12:	68fb      	ldr	r3, [r7, #12]
 8000d14:	f04f 0200 	mov.w	r2, #0
 8000d18:	601a      	str	r2, [r3, #0]
	ekf->pitch_r 	= 0.0f;
 8000d1a:	68fb      	ldr	r3, [r7, #12]
 8000d1c:	f04f 0200 	mov.w	r2, #0
 8000d20:	605a      	str	r2, [r3, #4]
	ekf->yaw_r		= 0.0f;
 8000d22:	68fb      	ldr	r3, [r7, #12]
 8000d24:	f04f 0200 	mov.w	r2, #0
 8000d28:	609a      	str	r2, [r3, #8]

	/* Initialise state covariance matrix */
	ekf->P[0][0] = P[0]; ekf->P[0][1] = 0.0f;
 8000d2a:	68bb      	ldr	r3, [r7, #8]
 8000d2c:	681a      	ldr	r2, [r3, #0]
 8000d2e:	68fb      	ldr	r3, [r7, #12]
 8000d30:	60da      	str	r2, [r3, #12]
 8000d32:	68fb      	ldr	r3, [r7, #12]
 8000d34:	f04f 0200 	mov.w	r2, #0
 8000d38:	611a      	str	r2, [r3, #16]
	ekf->P[1][0] = 0.0f; ekf->P[1][1] = P[1];
 8000d3a:	68fb      	ldr	r3, [r7, #12]
 8000d3c:	f04f 0200 	mov.w	r2, #0
 8000d40:	615a      	str	r2, [r3, #20]
 8000d42:	68bb      	ldr	r3, [r7, #8]
 8000d44:	685a      	ldr	r2, [r3, #4]
 8000d46:	68fb      	ldr	r3, [r7, #12]
 8000d48:	619a      	str	r2, [r3, #24]

	/* Set process and measurement noise */
	ekf->Q[0] = Q[0];
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	681a      	ldr	r2, [r3, #0]
 8000d4e:	68fb      	ldr	r3, [r7, #12]
 8000d50:	61da      	str	r2, [r3, #28]
	ekf->Q[1] = Q[1];
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	685a      	ldr	r2, [r3, #4]
 8000d56:	68fb      	ldr	r3, [r7, #12]
 8000d58:	621a      	str	r2, [r3, #32]

	ekf->R[0] = R[0];
 8000d5a:	683b      	ldr	r3, [r7, #0]
 8000d5c:	681a      	ldr	r2, [r3, #0]
 8000d5e:	68fb      	ldr	r3, [r7, #12]
 8000d60:	625a      	str	r2, [r3, #36]	; 0x24
	ekf->R[1] = R[1];
 8000d62:	683b      	ldr	r3, [r7, #0]
 8000d64:	685a      	ldr	r2, [r3, #4]
 8000d66:	68fb      	ldr	r3, [r7, #12]
 8000d68:	629a      	str	r2, [r3, #40]	; 0x28
	ekf->R[2] = R[2];
 8000d6a:	683b      	ldr	r3, [r7, #0]
 8000d6c:	689a      	ldr	r2, [r3, #8]
 8000d6e:	68fb      	ldr	r3, [r7, #12]
 8000d70:	62da      	str	r2, [r3, #44]	; 0x2c

}
 8000d72:	bf00      	nop
 8000d74:	3714      	adds	r7, #20
 8000d76:	46bd      	mov	sp, r7
 8000d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7c:	4770      	bx	lr

08000d7e <EKF_Predict>:

void EKF_Predict(EKF *ekf, float p_rps, float q_rps, float r_rps, float sampleTime_s) {
 8000d7e:	b580      	push	{r7, lr}
 8000d80:	b096      	sub	sp, #88	; 0x58
 8000d82:	af00      	add	r7, sp, #0
 8000d84:	6178      	str	r0, [r7, #20]
 8000d86:	ed87 0a04 	vstr	s0, [r7, #16]
 8000d8a:	edc7 0a03 	vstr	s1, [r7, #12]
 8000d8e:	ed87 1a02 	vstr	s2, [r7, #8]
 8000d92:	edc7 1a01 	vstr	s3, [r7, #4]


	/* Pre-compute trigonometric quantities */
	float sin_roll = sinf(ekf->roll_r);
 8000d96:	697b      	ldr	r3, [r7, #20]
 8000d98:	edd3 7a00 	vldr	s15, [r3]
 8000d9c:	eeb0 0a67 	vmov.f32	s0, s15
 8000da0:	f006 ffba 	bl	8007d18 <sinf>
 8000da4:	ed87 0a15 	vstr	s0, [r7, #84]	; 0x54
	float cos_roll = cosf(ekf->roll_r);
 8000da8:	697b      	ldr	r3, [r7, #20]
 8000daa:	edd3 7a00 	vldr	s15, [r3]
 8000dae:	eeb0 0a67 	vmov.f32	s0, s15
 8000db2:	f006 ff65 	bl	8007c80 <cosf>
 8000db6:	ed87 0a14 	vstr	s0, [r7, #80]	; 0x50
	float tan_pitch = tanf(ekf->pitch_r);
 8000dba:	697b      	ldr	r3, [r7, #20]
 8000dbc:	edd3 7a01 	vldr	s15, [r3, #4]
 8000dc0:	eeb0 0a67 	vmov.f32	s0, s15
 8000dc4:	f006 ffee 	bl	8007da4 <tanf>
 8000dc8:	ed87 0a13 	vstr	s0, [r7, #76]	; 0x4c
	float cos_pitch = cosf(ekf->pitch_r);
 8000dcc:	697b      	ldr	r3, [r7, #20]
 8000dce:	edd3 7a01 	vldr	s15, [r3, #4]
 8000dd2:	eeb0 0a67 	vmov.f32	s0, s15
 8000dd6:	f006 ff53 	bl	8007c80 <cosf>
 8000dda:	ed87 0a12 	vstr	s0, [r7, #72]	; 0x48

	/* Compute state transition function dx/dt = f(x,u) */
	float drolldt	= p_rps + tan_pitch * (q_rps * sin_roll + r_rps * cos_roll);
 8000dde:	ed97 7a03 	vldr	s14, [r7, #12]
 8000de2:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000de6:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000dea:	edd7 6a02 	vldr	s13, [r7, #8]
 8000dee:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000df2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000df6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000dfa:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8000dfe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e02:	ed97 7a04 	vldr	s14, [r7, #16]
 8000e06:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e0a:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
	float dpitchdt	= 					   q_rps * cos_roll - r_rps * sin_roll;
 8000e0e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000e12:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000e16:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e1a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000e1e:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000e22:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e26:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000e2a:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
	float dyawdt	= 		  	q_rps *(sin_roll/cos_pitch)	+ r_rps * (cos_roll/cos_pitch);
 8000e2e:	edd7 6a15 	vldr	s13, [r7, #84]	; 0x54
 8000e32:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8000e36:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8000e3a:	edd7 7a03 	vldr	s15, [r7, #12]
 8000e3e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e42:	ed97 6a14 	vldr	s12, [r7, #80]	; 0x50
 8000e46:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8000e4a:	eec6 6a27 	vdiv.f32	s13, s12, s15
 8000e4e:	edd7 7a02 	vldr	s15, [r7, #8]
 8000e52:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e56:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e5a:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c

	/* Update state estimates (x(n+1) = x(n) + T * dx/dt) */
	ekf->roll_r 	+= sampleTime_s * drolldt;
 8000e5e:	697b      	ldr	r3, [r7, #20]
 8000e60:	ed93 7a00 	vldr	s14, [r3]
 8000e64:	edd7 6a01 	vldr	s13, [r7, #4]
 8000e68:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 8000e6c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e70:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e74:	697b      	ldr	r3, [r7, #20]
 8000e76:	edc3 7a00 	vstr	s15, [r3]
	ekf->pitch_r	+= sampleTime_s * dpitchdt;
 8000e7a:	697b      	ldr	r3, [r7, #20]
 8000e7c:	ed93 7a01 	vldr	s14, [r3, #4]
 8000e80:	edd7 6a01 	vldr	s13, [r7, #4]
 8000e84:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8000e88:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e8c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e90:	697b      	ldr	r3, [r7, #20]
 8000e92:	edc3 7a01 	vstr	s15, [r3, #4]
	ekf->yaw_r		+= sampleTime_s * dyawdt;
 8000e96:	697b      	ldr	r3, [r7, #20]
 8000e98:	ed93 7a02 	vldr	s14, [r3, #8]
 8000e9c:	edd7 6a01 	vldr	s13, [r7, #4]
 8000ea0:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 8000ea4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000ea8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000eac:	697b      	ldr	r3, [r7, #20]
 8000eae:	edc3 7a02 	vstr	s15, [r3, #8]

	/* Re-compute trigonometric quantities */
	sin_roll 			= sinf(ekf->roll_r);
 8000eb2:	697b      	ldr	r3, [r7, #20]
 8000eb4:	edd3 7a00 	vldr	s15, [r3]
 8000eb8:	eeb0 0a67 	vmov.f32	s0, s15
 8000ebc:	f006 ff2c 	bl	8007d18 <sinf>
 8000ec0:	ed87 0a15 	vstr	s0, [r7, #84]	; 0x54
	cos_roll 			= cosf(ekf->roll_r);
 8000ec4:	697b      	ldr	r3, [r7, #20]
 8000ec6:	edd3 7a00 	vldr	s15, [r3]
 8000eca:	eeb0 0a67 	vmov.f32	s0, s15
 8000ece:	f006 fed7 	bl	8007c80 <cosf>
 8000ed2:	ed87 0a14 	vstr	s0, [r7, #80]	; 0x50
	tan_pitch 			= tanf(ekf->pitch_r);
 8000ed6:	697b      	ldr	r3, [r7, #20]
 8000ed8:	edd3 7a01 	vldr	s15, [r3, #4]
 8000edc:	eeb0 0a67 	vmov.f32	s0, s15
 8000ee0:	f006 ff60 	bl	8007da4 <tanf>
 8000ee4:	ed87 0a13 	vstr	s0, [r7, #76]	; 0x4c
	float cos_pitch_inv = 1.0f / cosf(ekf->pitch_r);
 8000ee8:	697b      	ldr	r3, [r7, #20]
 8000eea:	edd3 7a01 	vldr	s15, [r3, #4]
 8000eee:	eeb0 0a67 	vmov.f32	s0, s15
 8000ef2:	f006 fec5 	bl	8007c80 <cosf>
 8000ef6:	eeb0 7a40 	vmov.f32	s14, s0
 8000efa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8000efe:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f02:	edc7 7a0e 	vstr	s15, [r7, #56]	; 0x38

	/* Compute Jacobian of state transition function A(x,u) = df(x,u)/dx */
	float A[2][2] =
	{ 	{ tan_pitch * (q_rps * cos_roll - r_rps * sin_roll) , (q_rps * sin_roll + r_rps * cos_roll) * cos_pitch_inv * cos_pitch_inv },
 8000f06:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f0a:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f0e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f12:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f16:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f1a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f1e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8000f22:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8000f26:	ee67 7a27 	vmul.f32	s15, s14, s15
	float A[2][2] =
 8000f2a:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
	{ 	{ tan_pitch * (q_rps * cos_roll - r_rps * sin_roll) , (q_rps * sin_roll + r_rps * cos_roll) * cos_pitch_inv * cos_pitch_inv },
 8000f2e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f32:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f36:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f3a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f3e:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f42:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f46:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000f4a:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000f4e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f52:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000f56:	ee67 7a27 	vmul.f32	s15, s14, s15
	float A[2][2] =
 8000f5a:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
		{ -(q_rps * sin_roll + r_rps * cos_roll)			, 	  0.0f } };
 8000f5e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f62:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f66:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f6a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f6e:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f72:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f76:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f7a:	eef1 7a67 	vneg.f32	s15, s15
	float A[2][2] =
 8000f7e:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
 8000f82:	f04f 0300 	mov.w	r3, #0
 8000f86:	637b      	str	r3, [r7, #52]	; 0x34

	/* Update state covariance matrix P(n+1) = P(n) + T * (A * P(n) + P(n) * A' + Q) (note that A[1][1] = 0!) */
	float Pnew[2][2] =
	{	{A[0][0] * ekf->P[0][0] + A[0][1] * ekf->P[1][0] + ekf->P[0][0] * A[0][0] + ekf->P[0][1] * A[0][1] + ekf->Q[0], A[0][0] * ekf->P[0][1] + A[0][1] * ekf->P[1][1] + ekf->P[0][0] * A[1][0]},
 8000f88:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 8000f8c:	697b      	ldr	r3, [r7, #20]
 8000f8e:	edd3 7a03 	vldr	s15, [r3, #12]
 8000f92:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f96:	edd7 6a0b 	vldr	s13, [r7, #44]	; 0x2c
 8000f9a:	697b      	ldr	r3, [r7, #20]
 8000f9c:	edd3 7a05 	vldr	s15, [r3, #20]
 8000fa0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fa4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fa8:	697b      	ldr	r3, [r7, #20]
 8000faa:	edd3 6a03 	vldr	s13, [r3, #12]
 8000fae:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8000fb2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fb6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fba:	697b      	ldr	r3, [r7, #20]
 8000fbc:	edd3 6a04 	vldr	s13, [r3, #16]
 8000fc0:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8000fc4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fc8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fcc:	697b      	ldr	r3, [r7, #20]
 8000fce:	edd3 7a07 	vldr	s15, [r3, #28]
 8000fd2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8000fd6:	edc7 7a06 	vstr	s15, [r7, #24]
	{	{A[0][0] * ekf->P[0][0] + A[0][1] * ekf->P[1][0] + ekf->P[0][0] * A[0][0] + ekf->P[0][1] * A[0][1] + ekf->Q[0], A[0][0] * ekf->P[0][1] + A[0][1] * ekf->P[1][1] + ekf->P[0][0] * A[1][0]},
 8000fda:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 8000fde:	697b      	ldr	r3, [r7, #20]
 8000fe0:	edd3 7a04 	vldr	s15, [r3, #16]
 8000fe4:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000fe8:	edd7 6a0b 	vldr	s13, [r7, #44]	; 0x2c
 8000fec:	697b      	ldr	r3, [r7, #20]
 8000fee:	edd3 7a06 	vldr	s15, [r3, #24]
 8000ff2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000ff6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000ffa:	697b      	ldr	r3, [r7, #20]
 8000ffc:	edd3 6a03 	vldr	s13, [r3, #12]
 8001000:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 8001004:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001008:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 800100c:	edc7 7a07 	vstr	s15, [r7, #28]
		{A[1][0] * ekf->P[0][0] + 						   ekf->P[1][0] * A[0][0] + ekf->P[1][1] * A[0][1], 			A[1][0] * ekf->P[0][1] + 						  ekf->P[1][0] * A[1][0] + ekf->Q[1]} };
 8001010:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001014:	697b      	ldr	r3, [r7, #20]
 8001016:	edd3 7a03 	vldr	s15, [r3, #12]
 800101a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800101e:	697b      	ldr	r3, [r7, #20]
 8001020:	edd3 6a05 	vldr	s13, [r3, #20]
 8001024:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001028:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800102c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001030:	697b      	ldr	r3, [r7, #20]
 8001032:	edd3 6a06 	vldr	s13, [r3, #24]
 8001036:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800103a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800103e:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8001042:	edc7 7a08 	vstr	s15, [r7, #32]
		{A[1][0] * ekf->P[0][0] + 						   ekf->P[1][0] * A[0][0] + ekf->P[1][1] * A[0][1], 			A[1][0] * ekf->P[0][1] + 						  ekf->P[1][0] * A[1][0] + ekf->Q[1]} };
 8001046:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800104a:	697b      	ldr	r3, [r7, #20]
 800104c:	edd3 7a04 	vldr	s15, [r3, #16]
 8001050:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001054:	697b      	ldr	r3, [r7, #20]
 8001056:	edd3 6a05 	vldr	s13, [r3, #20]
 800105a:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 800105e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001062:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001066:	697b      	ldr	r3, [r7, #20]
 8001068:	edd3 7a08 	vldr	s15, [r3, #32]
 800106c:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8001070:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24

	ekf->P[0][0] += sampleTime_s * Pnew[0][0]; ekf->P[0][1] += sampleTime_s * Pnew[0][1];
 8001074:	697b      	ldr	r3, [r7, #20]
 8001076:	ed93 7a03 	vldr	s14, [r3, #12]
 800107a:	edd7 6a06 	vldr	s13, [r7, #24]
 800107e:	edd7 7a01 	vldr	s15, [r7, #4]
 8001082:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001086:	ee77 7a27 	vadd.f32	s15, s14, s15
 800108a:	697b      	ldr	r3, [r7, #20]
 800108c:	edc3 7a03 	vstr	s15, [r3, #12]
 8001090:	697b      	ldr	r3, [r7, #20]
 8001092:	ed93 7a04 	vldr	s14, [r3, #16]
 8001096:	edd7 6a07 	vldr	s13, [r7, #28]
 800109a:	edd7 7a01 	vldr	s15, [r7, #4]
 800109e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010a6:	697b      	ldr	r3, [r7, #20]
 80010a8:	edc3 7a04 	vstr	s15, [r3, #16]
	ekf->P[1][0] += sampleTime_s * Pnew[1][0]; ekf->P[1][1] += sampleTime_s * Pnew[1][1];
 80010ac:	697b      	ldr	r3, [r7, #20]
 80010ae:	ed93 7a05 	vldr	s14, [r3, #20]
 80010b2:	edd7 6a08 	vldr	s13, [r7, #32]
 80010b6:	edd7 7a01 	vldr	s15, [r7, #4]
 80010ba:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010c2:	697b      	ldr	r3, [r7, #20]
 80010c4:	edc3 7a05 	vstr	s15, [r3, #20]
 80010c8:	697b      	ldr	r3, [r7, #20]
 80010ca:	ed93 7a06 	vldr	s14, [r3, #24]
 80010ce:	edd7 6a09 	vldr	s13, [r7, #36]	; 0x24
 80010d2:	edd7 7a01 	vldr	s15, [r7, #4]
 80010d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010da:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010de:	697b      	ldr	r3, [r7, #20]
 80010e0:	edc3 7a06 	vstr	s15, [r3, #24]
}
 80010e4:	bf00      	nop
 80010e6:	3758      	adds	r7, #88	; 0x58
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bd80      	pop	{r7, pc}

080010ec <EKF_Update>:

void EKF_Update(EKF *ekf, float ax_mps2, float ay_mps2, float az_mps2) {
 80010ec:	b580      	push	{r7, lr}
 80010ee:	ed2d 8b02 	vpush	{d8}
 80010f2:	b0c4      	sub	sp, #272	; 0x110
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80010fa:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80010fe:	6018      	str	r0, [r3, #0]
 8001100:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001104:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8001108:	ed83 0a00 	vstr	s0, [r3]
 800110c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001110:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8001114:	edc3 0a00 	vstr	s1, [r3]
 8001118:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800111c:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8001120:	ed83 1a00 	vstr	s2, [r3]

	/*1.Calculate Kalman Gain*************************************************************************/
	/* Compute Jacobian of output function C(x,u) = dh(x,u)/dx */
	float sin_roll = sinf(ekf->roll_r);
 8001124:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001128:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800112c:	681b      	ldr	r3, [r3, #0]
 800112e:	edd3 7a00 	vldr	s15, [r3]
 8001132:	eeb0 0a67 	vmov.f32	s0, s15
 8001136:	f006 fdef 	bl	8007d18 <sinf>
 800113a:	ed87 0a41 	vstr	s0, [r7, #260]	; 0x104
	float cos_roll = cosf(ekf->roll_r);
 800113e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001142:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001146:	681b      	ldr	r3, [r3, #0]
 8001148:	edd3 7a00 	vldr	s15, [r3]
 800114c:	eeb0 0a67 	vmov.f32	s0, s15
 8001150:	f006 fd96 	bl	8007c80 <cosf>
 8001154:	ed87 0a40 	vstr	s0, [r7, #256]	; 0x100
	float sin_pitch = sinf(ekf->pitch_r);
 8001158:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800115c:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001160:	681b      	ldr	r3, [r3, #0]
 8001162:	edd3 7a01 	vldr	s15, [r3, #4]
 8001166:	eeb0 0a67 	vmov.f32	s0, s15
 800116a:	f006 fdd5 	bl	8007d18 <sinf>
 800116e:	ed87 0a3f 	vstr	s0, [r7, #252]	; 0xfc
	float cos_pitch = cosf(ekf->pitch_r);
 8001172:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001176:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800117a:	681b      	ldr	r3, [r3, #0]
 800117c:	edd3 7a01 	vldr	s15, [r3, #4]
 8001180:	eeb0 0a67 	vmov.f32	s0, s15
 8001184:	f006 fd7c 	bl	8007c80 <cosf>
 8001188:	ed87 0a3e 	vstr	s0, [r7, #248]	; 0xf8

	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 800118c:	f04f 0300 	mov.w	r3, #0
 8001190:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8001194:	4bf5      	ldr	r3, [pc, #980]	; (800156c <EKF_Update+0x480>)
 8001196:	ed93 7a00 	vldr	s14, [r3]
 800119a:	edd7 7a3e 	vldr	s15, [r7, #248]	; 0xf8
 800119e:	ee67 7a27 	vmul.f32	s15, s14, s15
 80011a2:	edc7 7a35 	vstr	s15, [r7, #212]	; 0xd4
						{-g* cos_roll * cos_pitch, 	g*sin_roll * sin_pitch},
 80011a6:	4bf1      	ldr	r3, [pc, #964]	; (800156c <EKF_Update+0x480>)
 80011a8:	edd3 7a00 	vldr	s15, [r3]
 80011ac:	eeb1 7a67 	vneg.f32	s14, s15
 80011b0:	edd7 7a40 	vldr	s15, [r7, #256]	; 0x100
 80011b4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80011b8:	edd7 7a3e 	vldr	s15, [r7, #248]	; 0xf8
 80011bc:	ee67 7a27 	vmul.f32	s15, s14, s15
	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 80011c0:	edc7 7a36 	vstr	s15, [r7, #216]	; 0xd8
						{-g* cos_roll * cos_pitch, 	g*sin_roll * sin_pitch},
 80011c4:	4be9      	ldr	r3, [pc, #932]	; (800156c <EKF_Update+0x480>)
 80011c6:	ed93 7a00 	vldr	s14, [r3]
 80011ca:	edd7 7a41 	vldr	s15, [r7, #260]	; 0x104
 80011ce:	ee27 7a27 	vmul.f32	s14, s14, s15
 80011d2:	edd7 7a3f 	vldr	s15, [r7, #252]	; 0xfc
 80011d6:	ee67 7a27 	vmul.f32	s15, s14, s15
	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 80011da:	edc7 7a37 	vstr	s15, [r7, #220]	; 0xdc
						{ g*sin_roll *  cos_pitch, 	g*cos_roll * sin_pitch} };
 80011de:	4be3      	ldr	r3, [pc, #908]	; (800156c <EKF_Update+0x480>)
 80011e0:	ed93 7a00 	vldr	s14, [r3]
 80011e4:	edd7 7a41 	vldr	s15, [r7, #260]	; 0x104
 80011e8:	ee27 7a27 	vmul.f32	s14, s14, s15
 80011ec:	edd7 7a3e 	vldr	s15, [r7, #248]	; 0xf8
 80011f0:	ee67 7a27 	vmul.f32	s15, s14, s15
	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 80011f4:	edc7 7a38 	vstr	s15, [r7, #224]	; 0xe0
						{ g*sin_roll *  cos_pitch, 	g*cos_roll * sin_pitch} };
 80011f8:	4bdc      	ldr	r3, [pc, #880]	; (800156c <EKF_Update+0x480>)
 80011fa:	ed93 7a00 	vldr	s14, [r3]
 80011fe:	edd7 7a40 	vldr	s15, [r7, #256]	; 0x100
 8001202:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001206:	edd7 7a3f 	vldr	s15, [r7, #252]	; 0xfc
 800120a:	ee67 7a27 	vmul.f32	s15, s14, s15
	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 800120e:	edc7 7a39 	vstr	s15, [r7, #228]	; 0xe4

	/* Compute Kalman gain K = P * C' * (R + C * P * C ')^-1 in steps (note that C[0][0] = 0!) */

	/* P * C'*/
	float PCt[2][3] = { {ekf->P[0][1] * C[0][1], ekf->P[0][0] * C[1][0] + ekf->P[0][1] * C[1][1], ekf->P[0][0] * C[2][0] + ekf->P[0][1] * C[2][1]},
 8001212:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001216:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800121a:	681b      	ldr	r3, [r3, #0]
 800121c:	ed93 7a04 	vldr	s14, [r3, #16]
 8001220:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 8001224:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001228:	edc7 7a2e 	vstr	s15, [r7, #184]	; 0xb8
 800122c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001230:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001234:	681b      	ldr	r3, [r3, #0]
 8001236:	ed93 7a03 	vldr	s14, [r3, #12]
 800123a:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 800123e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001242:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001246:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	edd3 6a04 	vldr	s13, [r3, #16]
 8001250:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 8001254:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001258:	ee77 7a27 	vadd.f32	s15, s14, s15
 800125c:	edc7 7a2f 	vstr	s15, [r7, #188]	; 0xbc
 8001260:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001264:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	ed93 7a03 	vldr	s14, [r3, #12]
 800126e:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 8001272:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001276:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800127a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800127e:	681b      	ldr	r3, [r3, #0]
 8001280:	edd3 6a04 	vldr	s13, [r3, #16]
 8001284:	edd7 7a39 	vldr	s15, [r7, #228]	; 0xe4
 8001288:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800128c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001290:	edc7 7a30 	vstr	s15, [r7, #192]	; 0xc0
						{ekf->P[1][1] * C[0][1], ekf->P[1][0] * C[1][0] + ekf->P[1][1] * C[1][1], ekf->P[1][0] * C[2][0] + ekf->P[1][1] * C[2][1]} };
 8001294:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001298:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800129c:	681b      	ldr	r3, [r3, #0]
 800129e:	ed93 7a06 	vldr	s14, [r3, #24]
 80012a2:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 80012a6:	ee67 7a27 	vmul.f32	s15, s14, s15
	float PCt[2][3] = { {ekf->P[0][1] * C[0][1], ekf->P[0][0] * C[1][0] + ekf->P[0][1] * C[1][1], ekf->P[0][0] * C[2][0] + ekf->P[0][1] * C[2][1]},
 80012aa:	edc7 7a31 	vstr	s15, [r7, #196]	; 0xc4
						{ekf->P[1][1] * C[0][1], ekf->P[1][0] * C[1][0] + ekf->P[1][1] * C[1][1], ekf->P[1][0] * C[2][0] + ekf->P[1][1] * C[2][1]} };
 80012ae:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80012b2:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	ed93 7a05 	vldr	s14, [r3, #20]
 80012bc:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 80012c0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80012c4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80012c8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80012cc:	681b      	ldr	r3, [r3, #0]
 80012ce:	edd3 6a06 	vldr	s13, [r3, #24]
 80012d2:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 80012d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80012da:	ee77 7a27 	vadd.f32	s15, s14, s15
	float PCt[2][3] = { {ekf->P[0][1] * C[0][1], ekf->P[0][0] * C[1][0] + ekf->P[0][1] * C[1][1], ekf->P[0][0] * C[2][0] + ekf->P[0][1] * C[2][1]},
 80012de:	edc7 7a32 	vstr	s15, [r7, #200]	; 0xc8
						{ekf->P[1][1] * C[0][1], ekf->P[1][0] * C[1][0] + ekf->P[1][1] * C[1][1], ekf->P[1][0] * C[2][0] + ekf->P[1][1] * C[2][1]} };
 80012e2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80012e6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80012ea:	681b      	ldr	r3, [r3, #0]
 80012ec:	ed93 7a05 	vldr	s14, [r3, #20]
 80012f0:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 80012f4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80012f8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80012fc:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	edd3 6a06 	vldr	s13, [r3, #24]
 8001306:	edd7 7a39 	vldr	s15, [r7, #228]	; 0xe4
 800130a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800130e:	ee77 7a27 	vadd.f32	s15, s14, s15
	float PCt[2][3] = { {ekf->P[0][1] * C[0][1], ekf->P[0][0] * C[1][0] + ekf->P[0][1] * C[1][1], ekf->P[0][0] * C[2][0] + ekf->P[0][1] * C[2][1]},
 8001312:	edc7 7a33 	vstr	s15, [r7, #204]	; 0xcc

	/* R + C * P * C' */
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 8001316:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 800131a:	edd7 7a31 	vldr	s15, [r7, #196]	; 0xc4
 800131e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001322:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001326:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8001330:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001334:	edc7 7a25 	vstr	s15, [r7, #148]	; 0x94
 8001338:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 800133c:	edd7 7a32 	vldr	s15, [r7, #200]	; 0xc8
 8001340:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001344:	edc7 7a26 	vstr	s15, [r7, #152]	; 0x98
 8001348:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 800134c:	edd7 7a33 	vldr	s15, [r7, #204]	; 0xcc
 8001350:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001354:	edc7 7a27 	vstr	s15, [r7, #156]	; 0x9c
							{C[1][0] * PCt[0][0] + C[1][1] * PCt[1][0],	C[1][0] * PCt[0][1] + C[1][1] * PCt[1][1] + ekf->R[1],	C[1][0] * PCt[0][2] + C[1][1] * PCt[1][2]},
 8001358:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 800135c:	edd7 7a2e 	vldr	s15, [r7, #184]	; 0xb8
 8001360:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001364:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 8001368:	edd7 7a31 	vldr	s15, [r7, #196]	; 0xc4
 800136c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001370:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 8001374:	edc7 7a28 	vstr	s15, [r7, #160]	; 0xa0
							{C[1][0] * PCt[0][0] + C[1][1] * PCt[1][0],	C[1][0] * PCt[0][1] + C[1][1] * PCt[1][1] + ekf->R[1],	C[1][0] * PCt[0][2] + C[1][1] * PCt[1][2]},
 8001378:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 800137c:	edd7 7a2f 	vldr	s15, [r7, #188]	; 0xbc
 8001380:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001384:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 8001388:	edd7 7a32 	vldr	s15, [r7, #200]	; 0xc8
 800138c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001390:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001394:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001398:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800139c:	681b      	ldr	r3, [r3, #0]
 800139e:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80013a2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 80013a6:	edc7 7a29 	vstr	s15, [r7, #164]	; 0xa4
							{C[1][0] * PCt[0][0] + C[1][1] * PCt[1][0],	C[1][0] * PCt[0][1] + C[1][1] * PCt[1][1] + ekf->R[1],	C[1][0] * PCt[0][2] + C[1][1] * PCt[1][2]},
 80013aa:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 80013ae:	edd7 7a30 	vldr	s15, [r7, #192]	; 0xc0
 80013b2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80013b6:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 80013ba:	edd7 7a33 	vldr	s15, [r7, #204]	; 0xcc
 80013be:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80013c2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 80013c6:	edc7 7a2a 	vstr	s15, [r7, #168]	; 0xa8
							{C[2][0] * PCt[0][0] + C[2][1] * PCt[1][0],	C[2][0] * PCt[0][1] + C[2][1] * PCt[1][1],				C[2][0] * PCt[0][2] + C[2][1] * PCt[1][2] + ekf->R[2]} };
 80013ca:	ed97 7a38 	vldr	s14, [r7, #224]	; 0xe0
 80013ce:	edd7 7a2e 	vldr	s15, [r7, #184]	; 0xb8
 80013d2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80013d6:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 80013da:	edd7 7a31 	vldr	s15, [r7, #196]	; 0xc4
 80013de:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80013e2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 80013e6:	edc7 7a2b 	vstr	s15, [r7, #172]	; 0xac
							{C[2][0] * PCt[0][0] + C[2][1] * PCt[1][0],	C[2][0] * PCt[0][1] + C[2][1] * PCt[1][1],				C[2][0] * PCt[0][2] + C[2][1] * PCt[1][2] + ekf->R[2]} };
 80013ea:	ed97 7a38 	vldr	s14, [r7, #224]	; 0xe0
 80013ee:	edd7 7a2f 	vldr	s15, [r7, #188]	; 0xbc
 80013f2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80013f6:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 80013fa:	edd7 7a32 	vldr	s15, [r7, #200]	; 0xc8
 80013fe:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001402:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 8001406:	edc7 7a2c 	vstr	s15, [r7, #176]	; 0xb0
							{C[2][0] * PCt[0][0] + C[2][1] * PCt[1][0],	C[2][0] * PCt[0][1] + C[2][1] * PCt[1][1],				C[2][0] * PCt[0][2] + C[2][1] * PCt[1][2] + ekf->R[2]} };
 800140a:	ed97 7a38 	vldr	s14, [r7, #224]	; 0xe0
 800140e:	edd7 7a30 	vldr	s15, [r7, #192]	; 0xc0
 8001412:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001416:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 800141a:	edd7 7a33 	vldr	s15, [r7, #204]	; 0xcc
 800141e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001422:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001426:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800142a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8001434:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 8001438:	edc7 7a2d 	vstr	s15, [r7, #180]	; 0xb4

	/* Build invert matrix with Cramscher Alogorithem [inv(R + C * P * C')] */
	float detMatInv = 1.0f / (RCPCt[0][0] * (RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2])
 800143c:	ed97 7a25 	vldr	s14, [r7, #148]	; 0x94
 8001440:	edd7 6a2d 	vldr	s13, [r7, #180]	; 0xb4
 8001444:	edd7 7a29 	vldr	s15, [r7, #164]	; 0xa4
 8001448:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800144c:	ed97 6a2c 	vldr	s12, [r7, #176]	; 0xb0
 8001450:	edd7 7a2a 	vldr	s15, [r7, #168]	; 0xa8
 8001454:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001458:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800145c:	ee27 7a27 	vmul.f32	s14, s14, s15
					- RCPCt[1][0] * (RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2])
 8001460:	edd7 6a28 	vldr	s13, [r7, #160]	; 0xa0
 8001464:	ed97 6a2d 	vldr	s12, [r7, #180]	; 0xb4
 8001468:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 800146c:	ee26 6a27 	vmul.f32	s12, s12, s15
 8001470:	edd7 5a2c 	vldr	s11, [r7, #176]	; 0xb0
 8001474:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8001478:	ee65 7aa7 	vmul.f32	s15, s11, s15
 800147c:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001480:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001484:	ee37 7a67 	vsub.f32	s14, s14, s15
					+ RCPCt[2][0] * (RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2]));
 8001488:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 800148c:	ed97 6a2a 	vldr	s12, [r7, #168]	; 0xa8
 8001490:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 8001494:	ee26 6a27 	vmul.f32	s12, s12, s15
 8001498:	edd7 5a29 	vldr	s11, [r7, #164]	; 0xa4
 800149c:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 80014a0:	ee65 7aa7 	vmul.f32	s15, s11, s15
 80014a4:	ee76 7a67 	vsub.f32	s15, s12, s15
 80014a8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80014ac:	ee37 7a27 	vadd.f32	s14, s14, s15
	float detMatInv = 1.0f / (RCPCt[0][0] * (RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2])
 80014b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80014b4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80014b8:	edc7 7a3d 	vstr	s15, [r7, #244]	; 0xf4

	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 80014bc:	ed97 7a2d 	vldr	s14, [r7, #180]	; 0xb4
 80014c0:	edd7 7a29 	vldr	s15, [r7, #164]	; 0xa4
 80014c4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80014c8:	edd7 6a2c 	vldr	s13, [r7, #176]	; 0xb0
 80014cc:	edd7 7a2a 	vldr	s15, [r7, #168]	; 0xa8
 80014d0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80014d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80014d8:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
 80014dc:	ed97 7a2d 	vldr	s14, [r7, #180]	; 0xb4
 80014e0:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 80014e4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80014e8:	edd7 6a2c 	vldr	s13, [r7, #176]	; 0xb0
 80014ec:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 80014f0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80014f4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80014f8:	eef1 7a67 	vneg.f32	s15, s15
 80014fc:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
 8001500:	ed97 7a2a 	vldr	s14, [r7, #168]	; 0xa8
 8001504:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 8001508:	ee27 7a27 	vmul.f32	s14, s14, s15
 800150c:	edd7 6a29 	vldr	s13, [r7, #164]	; 0xa4
 8001510:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8001514:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001518:	ee77 7a67 	vsub.f32	s15, s14, s15
 800151c:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
							{-(	RCPCt[2][2] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][2]), 	RCPCt[2][2] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][2], -(	RCPCt[1][2] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][2]) },
 8001520:	ed97 7a2d 	vldr	s14, [r7, #180]	; 0xb4
 8001524:	edd7 7a28 	vldr	s15, [r7, #160]	; 0xa0
 8001528:	ee27 7a27 	vmul.f32	s14, s14, s15
 800152c:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 8001530:	edd7 7a2a 	vldr	s15, [r7, #168]	; 0xa8
 8001534:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001538:	ee77 7a67 	vsub.f32	s15, s14, s15
 800153c:	eef1 7a67 	vneg.f32	s15, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 8001540:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
							{-(	RCPCt[2][2] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][2]), 	RCPCt[2][2] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][2], -(	RCPCt[1][2] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][2]) },
 8001544:	ed97 7a2d 	vldr	s14, [r7, #180]	; 0xb4
 8001548:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 800154c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001550:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 8001554:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8001558:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800155c:	ee77 7a67 	vsub.f32	s15, s14, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 8001560:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
							{-(	RCPCt[2][2] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][2]), 	RCPCt[2][2] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][2], -(	RCPCt[1][2] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][2]) },
 8001564:	ed97 7a2a 	vldr	s14, [r7, #168]	; 0xa8
 8001568:	e002      	b.n	8001570 <EKF_Update+0x484>
 800156a:	bf00      	nop
 800156c:	20000000 	.word	0x20000000
 8001570:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 8001574:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001578:	edd7 6a28 	vldr	s13, [r7, #160]	; 0xa0
 800157c:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8001580:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001584:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001588:	eef1 7a67 	vneg.f32	s15, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 800158c:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
							{	RCPCt[2][1] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][1], -(	RCPCt[2][1] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][1]), 	RCPCt[1][1] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][1]} };
 8001590:	ed97 7a2c 	vldr	s14, [r7, #176]	; 0xb0
 8001594:	edd7 7a28 	vldr	s15, [r7, #160]	; 0xa0
 8001598:	ee27 7a27 	vmul.f32	s14, s14, s15
 800159c:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 80015a0:	edd7 7a29 	vldr	s15, [r7, #164]	; 0xa4
 80015a4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80015a8:	ee77 7a67 	vsub.f32	s15, s14, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 80015ac:	edc7 7a22 	vstr	s15, [r7, #136]	; 0x88
							{	RCPCt[2][1] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][1], -(	RCPCt[2][1] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][1]), 	RCPCt[1][1] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][1]} };
 80015b0:	ed97 7a2c 	vldr	s14, [r7, #176]	; 0xb0
 80015b4:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 80015b8:	ee27 7a27 	vmul.f32	s14, s14, s15
 80015bc:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 80015c0:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 80015c4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80015c8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80015cc:	eef1 7a67 	vneg.f32	s15, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 80015d0:	edc7 7a23 	vstr	s15, [r7, #140]	; 0x8c
							{	RCPCt[2][1] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][1], -(	RCPCt[2][1] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][1]), 	RCPCt[1][1] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][1]} };
 80015d4:	ed97 7a29 	vldr	s14, [r7, #164]	; 0xa4
 80015d8:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 80015dc:	ee27 7a27 	vmul.f32	s14, s14, s15
 80015e0:	edd7 6a28 	vldr	s13, [r7, #160]	; 0xa0
 80015e4:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 80015e8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80015ec:	ee77 7a67 	vsub.f32	s15, s14, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 80015f0:	edc7 7a24 	vstr	s15, [r7, #144]	; 0x90

	for (unsigned int i = 0; i < 3; i++) {
 80015f4:	2300      	movs	r3, #0
 80015f6:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 80015fa:	e033      	b.n	8001664 <EKF_Update+0x578>

		for (unsigned int j = 0; j < 3; j++) {
 80015fc:	2300      	movs	r3, #0
 80015fe:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8001602:	e026      	b.n	8001652 <EKF_Update+0x566>

			matInv[i][j] *= detMatInv;
 8001604:	f8d7 210c 	ldr.w	r2, [r7, #268]	; 0x10c
 8001608:	4613      	mov	r3, r2
 800160a:	005b      	lsls	r3, r3, #1
 800160c:	4413      	add	r3, r2
 800160e:	f8d7 2108 	ldr.w	r2, [r7, #264]	; 0x108
 8001612:	4413      	add	r3, r2
 8001614:	009b      	lsls	r3, r3, #2
 8001616:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800161a:	443b      	add	r3, r7
 800161c:	3ba0      	subs	r3, #160	; 0xa0
 800161e:	ed93 7a00 	vldr	s14, [r3]
 8001622:	edd7 7a3d 	vldr	s15, [r7, #244]	; 0xf4
 8001626:	ee67 7a27 	vmul.f32	s15, s14, s15
 800162a:	f8d7 210c 	ldr.w	r2, [r7, #268]	; 0x10c
 800162e:	4613      	mov	r3, r2
 8001630:	005b      	lsls	r3, r3, #1
 8001632:	4413      	add	r3, r2
 8001634:	f8d7 2108 	ldr.w	r2, [r7, #264]	; 0x108
 8001638:	4413      	add	r3, r2
 800163a:	009b      	lsls	r3, r3, #2
 800163c:	f503 7388 	add.w	r3, r3, #272	; 0x110
 8001640:	443b      	add	r3, r7
 8001642:	3ba0      	subs	r3, #160	; 0xa0
 8001644:	edc3 7a00 	vstr	s15, [r3]
		for (unsigned int j = 0; j < 3; j++) {
 8001648:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 800164c:	3301      	adds	r3, #1
 800164e:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8001652:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8001656:	2b02      	cmp	r3, #2
 8001658:	d9d4      	bls.n	8001604 <EKF_Update+0x518>
	for (unsigned int i = 0; i < 3; i++) {
 800165a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800165e:	3301      	adds	r3, #1
 8001660:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8001664:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001668:	2b02      	cmp	r3, #2
 800166a:	d9c7      	bls.n	80015fc <EKF_Update+0x510>
		}

	}

	/* C' * inv(R + C * P * C') */
	float CtmatInv[2][3] = { 	{						  C[1][0] * matInv[1][0] + C[2][0] * matInv[2][0], 							C[1][0] * matInv[1][1] + C[2][0] * matInv[2][1], 						  C[1][0] * matInv[1][2] + C[2][0] * matInv[2][2]},
 800166c:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 8001670:	edd7 7a1f 	vldr	s15, [r7, #124]	; 0x7c
 8001674:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001678:	edd7 6a38 	vldr	s13, [r7, #224]	; 0xe0
 800167c:	edd7 7a22 	vldr	s15, [r7, #136]	; 0x88
 8001680:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001684:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001688:	edc7 7a16 	vstr	s15, [r7, #88]	; 0x58
 800168c:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 8001690:	edd7 7a20 	vldr	s15, [r7, #128]	; 0x80
 8001694:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001698:	edd7 6a38 	vldr	s13, [r7, #224]	; 0xe0
 800169c:	edd7 7a23 	vldr	s15, [r7, #140]	; 0x8c
 80016a0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016a4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016a8:	edc7 7a17 	vstr	s15, [r7, #92]	; 0x5c
 80016ac:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 80016b0:	edd7 7a21 	vldr	s15, [r7, #132]	; 0x84
 80016b4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80016b8:	edd7 6a38 	vldr	s13, [r7, #224]	; 0xe0
 80016bc:	edd7 7a24 	vldr	s15, [r7, #144]	; 0x90
 80016c0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016c8:	edc7 7a18 	vstr	s15, [r7, #96]	; 0x60
								{C[0][1] * matInv[0][0] + C[1][1] * matInv[1][0] + C[2][1] * matInv[2][0], C[0][1] * matInv[0][1] + C[1][1] * matInv[1][1] + C[2][1] * matInv[2][1], C[0][1] * matInv[0][2] + C[1][1] * matInv[1][2] + C[2][1] * matInv[2][2]} };
 80016cc:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 80016d0:	edd7 7a1c 	vldr	s15, [r7, #112]	; 0x70
 80016d4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80016d8:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 80016dc:	edd7 7a1f 	vldr	s15, [r7, #124]	; 0x7c
 80016e0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016e4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80016e8:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 80016ec:	edd7 7a22 	vldr	s15, [r7, #136]	; 0x88
 80016f0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016f4:	ee77 7a27 	vadd.f32	s15, s14, s15
	float CtmatInv[2][3] = { 	{						  C[1][0] * matInv[1][0] + C[2][0] * matInv[2][0], 							C[1][0] * matInv[1][1] + C[2][0] * matInv[2][1], 						  C[1][0] * matInv[1][2] + C[2][0] * matInv[2][2]},
 80016f8:	edc7 7a19 	vstr	s15, [r7, #100]	; 0x64
								{C[0][1] * matInv[0][0] + C[1][1] * matInv[1][0] + C[2][1] * matInv[2][0], C[0][1] * matInv[0][1] + C[1][1] * matInv[1][1] + C[2][1] * matInv[2][1], C[0][1] * matInv[0][2] + C[1][1] * matInv[1][2] + C[2][1] * matInv[2][2]} };
 80016fc:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 8001700:	edd7 7a1d 	vldr	s15, [r7, #116]	; 0x74
 8001704:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001708:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 800170c:	edd7 7a20 	vldr	s15, [r7, #128]	; 0x80
 8001710:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001714:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001718:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 800171c:	edd7 7a23 	vldr	s15, [r7, #140]	; 0x8c
 8001720:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001724:	ee77 7a27 	vadd.f32	s15, s14, s15
	float CtmatInv[2][3] = { 	{						  C[1][0] * matInv[1][0] + C[2][0] * matInv[2][0], 							C[1][0] * matInv[1][1] + C[2][0] * matInv[2][1], 						  C[1][0] * matInv[1][2] + C[2][0] * matInv[2][2]},
 8001728:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68
								{C[0][1] * matInv[0][0] + C[1][1] * matInv[1][0] + C[2][1] * matInv[2][0], C[0][1] * matInv[0][1] + C[1][1] * matInv[1][1] + C[2][1] * matInv[2][1], C[0][1] * matInv[0][2] + C[1][1] * matInv[1][2] + C[2][1] * matInv[2][2]} };
 800172c:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 8001730:	edd7 7a1e 	vldr	s15, [r7, #120]	; 0x78
 8001734:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001738:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 800173c:	edd7 7a21 	vldr	s15, [r7, #132]	; 0x84
 8001740:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001744:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001748:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 800174c:	edd7 7a24 	vldr	s15, [r7, #144]	; 0x90
 8001750:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001754:	ee77 7a27 	vadd.f32	s15, s14, s15
	float CtmatInv[2][3] = { 	{						  C[1][0] * matInv[1][0] + C[2][0] * matInv[2][0], 							C[1][0] * matInv[1][1] + C[2][0] * matInv[2][1], 						  C[1][0] * matInv[1][2] + C[2][0] * matInv[2][2]},
 8001758:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c

	/* K = P * C' * inv(R + C * P * C') */
	float K[2][3] = { 	{ekf->P[0][0] * CtmatInv[0][0] + ekf->P[0][1] * CtmatInv[1][0], ekf->P[0][0] * CtmatInv[0][1] + ekf->P[0][1] * CtmatInv[1][1], ekf->P[0][0] * CtmatInv[0][2] + ekf->P[0][1] * CtmatInv[1][2]},
 800175c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001760:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001764:	681b      	ldr	r3, [r3, #0]
 8001766:	ed93 7a03 	vldr	s14, [r3, #12]
 800176a:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 800176e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001772:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001776:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800177a:	681b      	ldr	r3, [r3, #0]
 800177c:	edd3 6a04 	vldr	s13, [r3, #16]
 8001780:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8001784:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001788:	ee77 7a27 	vadd.f32	s15, s14, s15
 800178c:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
 8001790:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001794:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	ed93 7a03 	vldr	s14, [r3, #12]
 800179e:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 80017a2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80017a6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80017aa:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	edd3 6a04 	vldr	s13, [r3, #16]
 80017b4:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 80017b8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80017bc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017c0:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
 80017c4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80017c8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	ed93 7a03 	vldr	s14, [r3, #12]
 80017d2:	edd7 7a18 	vldr	s15, [r7, #96]	; 0x60
 80017d6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80017da:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80017de:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80017e2:	681b      	ldr	r3, [r3, #0]
 80017e4:	edd3 6a04 	vldr	s13, [r3, #16]
 80017e8:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 80017ec:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80017f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017f4:	edc7 7a12 	vstr	s15, [r7, #72]	; 0x48
						{ekf->P[1][0] * CtmatInv[0][0] + ekf->P[1][1] * CtmatInv[1][0], ekf->P[1][0] * CtmatInv[0][1] + ekf->P[1][1] * CtmatInv[1][1], ekf->P[1][0] * CtmatInv[0][2] + ekf->P[1][1] * CtmatInv[1][2]} };
 80017f8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80017fc:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	ed93 7a05 	vldr	s14, [r3, #20]
 8001806:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 800180a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800180e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001812:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	edd3 6a06 	vldr	s13, [r3, #24]
 800181c:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8001820:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001824:	ee77 7a27 	vadd.f32	s15, s14, s15
	float K[2][3] = { 	{ekf->P[0][0] * CtmatInv[0][0] + ekf->P[0][1] * CtmatInv[1][0], ekf->P[0][0] * CtmatInv[0][1] + ekf->P[0][1] * CtmatInv[1][1], ekf->P[0][0] * CtmatInv[0][2] + ekf->P[0][1] * CtmatInv[1][2]},
 8001828:	edc7 7a13 	vstr	s15, [r7, #76]	; 0x4c
						{ekf->P[1][0] * CtmatInv[0][0] + ekf->P[1][1] * CtmatInv[1][0], ekf->P[1][0] * CtmatInv[0][1] + ekf->P[1][1] * CtmatInv[1][1], ekf->P[1][0] * CtmatInv[0][2] + ekf->P[1][1] * CtmatInv[1][2]} };
 800182c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001830:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	ed93 7a05 	vldr	s14, [r3, #20]
 800183a:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 800183e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001842:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001846:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800184a:	681b      	ldr	r3, [r3, #0]
 800184c:	edd3 6a06 	vldr	s13, [r3, #24]
 8001850:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 8001854:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001858:	ee77 7a27 	vadd.f32	s15, s14, s15
	float K[2][3] = { 	{ekf->P[0][0] * CtmatInv[0][0] + ekf->P[0][1] * CtmatInv[1][0], ekf->P[0][0] * CtmatInv[0][1] + ekf->P[0][1] * CtmatInv[1][1], ekf->P[0][0] * CtmatInv[0][2] + ekf->P[0][1] * CtmatInv[1][2]},
 800185c:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50
						{ekf->P[1][0] * CtmatInv[0][0] + ekf->P[1][1] * CtmatInv[1][0], ekf->P[1][0] * CtmatInv[0][1] + ekf->P[1][1] * CtmatInv[1][1], ekf->P[1][0] * CtmatInv[0][2] + ekf->P[1][1] * CtmatInv[1][2]} };
 8001860:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001864:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	ed93 7a05 	vldr	s14, [r3, #20]
 800186e:	edd7 7a18 	vldr	s15, [r7, #96]	; 0x60
 8001872:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001876:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800187a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	edd3 6a06 	vldr	s13, [r3, #24]
 8001884:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8001888:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800188c:	ee77 7a27 	vadd.f32	s15, s14, s15
	float K[2][3] = { 	{ekf->P[0][0] * CtmatInv[0][0] + ekf->P[0][1] * CtmatInv[1][0], ekf->P[0][0] * CtmatInv[0][1] + ekf->P[0][1] * CtmatInv[1][1], ekf->P[0][0] * CtmatInv[0][2] + ekf->P[0][1] * CtmatInv[1][2]},
 8001890:	edc7 7a15 	vstr	s15, [r7, #84]	; 0x54

	Kalman_Gain_.aa = K[0][0];
 8001894:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001896:	4ae0      	ldr	r2, [pc, #896]	; (8001c18 <EKF_Update+0xb2c>)
 8001898:	6013      	str	r3, [r2, #0]
	Kalman_Gain_.ab = K[0][1];
 800189a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800189c:	4ade      	ldr	r2, [pc, #888]	; (8001c18 <EKF_Update+0xb2c>)
 800189e:	6053      	str	r3, [r2, #4]
	Kalman_Gain_.ac = K[0][2];
 80018a0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80018a2:	4add      	ldr	r2, [pc, #884]	; (8001c18 <EKF_Update+0xb2c>)
 80018a4:	6093      	str	r3, [r2, #8]
	Kalman_Gain_.ba = K[1][0];
 80018a6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80018a8:	4adb      	ldr	r2, [pc, #876]	; (8001c18 <EKF_Update+0xb2c>)
 80018aa:	60d3      	str	r3, [r2, #12]
	Kalman_Gain_.bb = K[1][1];
 80018ac:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80018ae:	4ada      	ldr	r2, [pc, #872]	; (8001c18 <EKF_Update+0xb2c>)
 80018b0:	6113      	str	r3, [r2, #16]
	Kalman_Gain_.bc = K[1][2];
 80018b2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80018b4:	4ad8      	ldr	r2, [pc, #864]	; (8001c18 <EKF_Update+0xb2c>)
 80018b6:	6153      	str	r3, [r2, #20]

	/****************************************************************************************************************************/
	/* Normalise accelerometer readings */
	//float accNormFactor = 1.0f / sqrtf(ax_mps2 * ax_mps2 + ay_mps2 * ay_mps2 + az_mps2 * az_mps2);

	float ax_norm 		= ax_mps2 ;//* accNormFactor;
 80018b8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80018bc:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
	float ay_norm 		= ay_mps2 ;//* accNormFactor;
 80018c6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80018ca:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
	float az_norm 		= az_mps2 ;//* accNormFactor;
 80018d4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80018d8:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8

	/* Update state covariance matrix P(n+1) = (I - K * C) * P(n) */ //I = [0 0], [0 0]
//	float IminKC[2][2] = { 	{1.0f - (K[0][1] * C[1][0] + K[1][0] * C[2][0]), -(K[0][1] * C[1][1] + K[1][0] * C[2][1])},
//							{- (K[1][1] * C[1][0] + K[1][2] * C[2][0]), 	1.0f-(K[1][1] * C[1][1] + K[1][2] * C[2][1])} };
	// C[0][0] = 0 !!!
	float IminKC[2][2] = { 	{1.0f - (K[0][1] * C[1][0] + K[0][2] * C[2][0]), -(K[0][0] * C[0][1] + K[0][1] * C[1][1] + K[0][2] * C[2][1])},
 80018e2:	ed97 7a11 	vldr	s14, [r7, #68]	; 0x44
 80018e6:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 80018ea:	ee27 7a27 	vmul.f32	s14, s14, s15
 80018ee:	edd7 6a12 	vldr	s13, [r7, #72]	; 0x48
 80018f2:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 80018f6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80018fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80018fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001902:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001906:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
 800190a:	ed97 7a10 	vldr	s14, [r7, #64]	; 0x40
 800190e:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 8001912:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001916:	edd7 6a11 	vldr	s13, [r7, #68]	; 0x44
 800191a:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 800191e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001922:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001926:	edd7 6a12 	vldr	s13, [r7, #72]	; 0x48
 800192a:	edd7 7a39 	vldr	s15, [r7, #228]	; 0xe4
 800192e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001932:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001936:	eef1 7a67 	vneg.f32	s15, s15
 800193a:	edc7 7a0d 	vstr	s15, [r7, #52]	; 0x34
							{- (K[1][1] * C[1][0] + K[1][2] * C[2][0]), 	1.0f-(K[1][0] * C[0][1] + K[1][1] * C[1][1] + K[1][2] * C[2][1])} };
 800193e:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001942:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 8001946:	ee27 7a27 	vmul.f32	s14, s14, s15
 800194a:	edd7 6a15 	vldr	s13, [r7, #84]	; 0x54
 800194e:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 8001952:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001956:	ee77 7a27 	vadd.f32	s15, s14, s15
 800195a:	eef1 7a67 	vneg.f32	s15, s15
	float IminKC[2][2] = { 	{1.0f - (K[0][1] * C[1][0] + K[0][2] * C[2][0]), -(K[0][0] * C[0][1] + K[0][1] * C[1][1] + K[0][2] * C[2][1])},
 800195e:	edc7 7a0e 	vstr	s15, [r7, #56]	; 0x38
							{- (K[1][1] * C[1][0] + K[1][2] * C[2][0]), 	1.0f-(K[1][0] * C[0][1] + K[1][1] * C[1][1] + K[1][2] * C[2][1])} };
 8001962:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001966:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 800196a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800196e:	edd7 6a14 	vldr	s13, [r7, #80]	; 0x50
 8001972:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 8001976:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800197a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800197e:	edd7 6a15 	vldr	s13, [r7, #84]	; 0x54
 8001982:	edd7 7a39 	vldr	s15, [r7, #228]	; 0xe4
 8001986:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800198a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800198e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001992:	ee77 7a67 	vsub.f32	s15, s14, s15
	float IminKC[2][2] = { 	{1.0f - (K[0][1] * C[1][0] + K[0][2] * C[2][0]), -(K[0][0] * C[0][1] + K[0][1] * C[1][1] + K[0][2] * C[2][1])},
 8001996:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c


	float Pnew[2][2] = { 	{IminKC[0][0] * ekf->P[0][0] + IminKC[0][1] * ekf->P[1][0], IminKC[0][0] * ekf->P[0][1] + IminKC[0][1] * ekf->P[1][1]},
 800199a:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800199e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80019a2:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	edd3 7a03 	vldr	s15, [r3, #12]
 80019ac:	ee27 7a27 	vmul.f32	s14, s14, s15
 80019b0:	edd7 6a0d 	vldr	s13, [r7, #52]	; 0x34
 80019b4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80019b8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	edd3 7a05 	vldr	s15, [r3, #20]
 80019c2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80019c6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80019ca:	edc7 7a08 	vstr	s15, [r7, #32]
 80019ce:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 80019d2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80019d6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80019da:	681b      	ldr	r3, [r3, #0]
 80019dc:	edd3 7a04 	vldr	s15, [r3, #16]
 80019e0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80019e4:	edd7 6a0d 	vldr	s13, [r7, #52]	; 0x34
 80019e8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80019ec:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80019f0:	681b      	ldr	r3, [r3, #0]
 80019f2:	edd3 7a06 	vldr	s15, [r3, #24]
 80019f6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80019fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80019fe:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
							{IminKC[1][0] * ekf->P[0][0] + IminKC[1][1] * ekf->P[1][0], IminKC[1][0] * ekf->P[0][1] + IminKC[1][1] * ekf->P[1][1]} };
 8001a02:	ed97 7a0e 	vldr	s14, [r7, #56]	; 0x38
 8001a06:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a0a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	edd3 7a03 	vldr	s15, [r3, #12]
 8001a14:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001a18:	edd7 6a0f 	vldr	s13, [r7, #60]	; 0x3c
 8001a1c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a20:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	edd3 7a05 	vldr	s15, [r3, #20]
 8001a2a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001a2e:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] = { 	{IminKC[0][0] * ekf->P[0][0] + IminKC[0][1] * ekf->P[1][0], IminKC[0][0] * ekf->P[0][1] + IminKC[0][1] * ekf->P[1][1]},
 8001a32:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
							{IminKC[1][0] * ekf->P[0][0] + IminKC[1][1] * ekf->P[1][0], IminKC[1][0] * ekf->P[0][1] + IminKC[1][1] * ekf->P[1][1]} };
 8001a36:	ed97 7a0e 	vldr	s14, [r7, #56]	; 0x38
 8001a3a:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a3e:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	edd3 7a04 	vldr	s15, [r3, #16]
 8001a48:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001a4c:	edd7 6a0f 	vldr	s13, [r7, #60]	; 0x3c
 8001a50:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a54:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a58:	681b      	ldr	r3, [r3, #0]
 8001a5a:	edd3 7a06 	vldr	s15, [r3, #24]
 8001a5e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001a62:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] = { 	{IminKC[0][0] * ekf->P[0][0] + IminKC[0][1] * ekf->P[1][0], IminKC[0][0] * ekf->P[0][1] + IminKC[0][1] * ekf->P[1][1]},
 8001a66:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c

	ekf->P[0][0] = Pnew[0][0]; ekf->P[0][1] = Pnew[0][1];
 8001a6a:	6a3a      	ldr	r2, [r7, #32]
 8001a6c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a70:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	60da      	str	r2, [r3, #12]
 8001a78:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001a7a:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a7e:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	611a      	str	r2, [r3, #16]
	ekf->P[1][0] = Pnew[1][0]; ekf->P[1][1] = Pnew[1][1];
 8001a86:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001a88:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a8c:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	615a      	str	r2, [r3, #20]
 8001a94:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001a96:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a9a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	619a      	str	r2, [r3, #24]

	/* Compute output function h(x,u) */
	float h[3] = {	 g*sinf(ekf->pitch_r),
 8001aa2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001aa6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001aaa:	681b      	ldr	r3, [r3, #0]
 8001aac:	edd3 7a01 	vldr	s15, [r3, #4]
 8001ab0:	eeb0 0a67 	vmov.f32	s0, s15
 8001ab4:	f006 f930 	bl	8007d18 <sinf>
 8001ab8:	eeb0 7a40 	vmov.f32	s14, s0
 8001abc:	4b57      	ldr	r3, [pc, #348]	; (8001c1c <EKF_Update+0xb30>)
 8001abe:	edd3 7a00 	vldr	s15, [r3]
 8001ac2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ac6:	edc7 7a05 	vstr	s15, [r7, #20]
					-g*cosf(ekf->pitch_r) * sinf(ekf->roll_r),
 8001aca:	4b54      	ldr	r3, [pc, #336]	; (8001c1c <EKF_Update+0xb30>)
 8001acc:	edd3 7a00 	vldr	s15, [r3]
 8001ad0:	eeb1 8a67 	vneg.f32	s16, s15
 8001ad4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001ad8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001adc:	681b      	ldr	r3, [r3, #0]
 8001ade:	edd3 7a01 	vldr	s15, [r3, #4]
 8001ae2:	eeb0 0a67 	vmov.f32	s0, s15
 8001ae6:	f006 f8cb 	bl	8007c80 <cosf>
 8001aea:	eef0 7a40 	vmov.f32	s15, s0
 8001aee:	ee28 8a27 	vmul.f32	s16, s16, s15
 8001af2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001af6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	edd3 7a00 	vldr	s15, [r3]
 8001b00:	eeb0 0a67 	vmov.f32	s0, s15
 8001b04:	f006 f908 	bl	8007d18 <sinf>
 8001b08:	eef0 7a40 	vmov.f32	s15, s0
 8001b0c:	ee68 7a27 	vmul.f32	s15, s16, s15
	float h[3] = {	 g*sinf(ekf->pitch_r),
 8001b10:	edc7 7a06 	vstr	s15, [r7, #24]
					-g*cosf(ekf->pitch_r) * cosf(ekf->roll_r) };
 8001b14:	4b41      	ldr	r3, [pc, #260]	; (8001c1c <EKF_Update+0xb30>)
 8001b16:	edd3 7a00 	vldr	s15, [r3]
 8001b1a:	eeb1 8a67 	vneg.f32	s16, s15
 8001b1e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001b22:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	edd3 7a01 	vldr	s15, [r3, #4]
 8001b2c:	eeb0 0a67 	vmov.f32	s0, s15
 8001b30:	f006 f8a6 	bl	8007c80 <cosf>
 8001b34:	eef0 7a40 	vmov.f32	s15, s0
 8001b38:	ee28 8a27 	vmul.f32	s16, s16, s15
 8001b3c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001b40:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001b44:	681b      	ldr	r3, [r3, #0]
 8001b46:	edd3 7a00 	vldr	s15, [r3]
 8001b4a:	eeb0 0a67 	vmov.f32	s0, s15
 8001b4e:	f006 f897 	bl	8007c80 <cosf>
 8001b52:	eef0 7a40 	vmov.f32	s15, s0
 8001b56:	ee68 7a27 	vmul.f32	s15, s16, s15
	float h[3] = {	 g*sinf(ekf->pitch_r),
 8001b5a:	edc7 7a07 	vstr	s15, [r7, #28]
	h0 = h[0];
 8001b5e:	697b      	ldr	r3, [r7, #20]
 8001b60:	4a2f      	ldr	r2, [pc, #188]	; (8001c20 <EKF_Update+0xb34>)
 8001b62:	6013      	str	r3, [r2, #0]
	h1 = h[1];
 8001b64:	69bb      	ldr	r3, [r7, #24]
 8001b66:	4a2f      	ldr	r2, [pc, #188]	; (8001c24 <EKF_Update+0xb38>)
 8001b68:	6013      	str	r3, [r2, #0]
	h2 = h[2];
 8001b6a:	69fb      	ldr	r3, [r7, #28]
 8001b6c:	4a2e      	ldr	r2, [pc, #184]	; (8001c28 <EKF_Update+0xb3c>)
 8001b6e:	6013      	str	r3, [r2, #0]
//		__asm("BKPT #1\n");
//	}


	/* Update state estimate x(n+1) = x(n) + K * (y - h) */
	ekf->roll_r 	+= (K[0][0] * (ax_norm - h[0]) + K[0][1] * (ay_norm - h[1]) + K[0][2] * (az_norm - h[2]));
 8001b70:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001b74:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	ed93 7a00 	vldr	s14, [r3]
 8001b7e:	edd7 6a10 	vldr	s13, [r7, #64]	; 0x40
 8001b82:	edd7 7a05 	vldr	s15, [r7, #20]
 8001b86:	ed97 6a3c 	vldr	s12, [r7, #240]	; 0xf0
 8001b8a:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001b8e:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8001b92:	ed97 6a11 	vldr	s12, [r7, #68]	; 0x44
 8001b96:	edd7 7a06 	vldr	s15, [r7, #24]
 8001b9a:	edd7 5a3b 	vldr	s11, [r7, #236]	; 0xec
 8001b9e:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8001ba2:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001ba6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8001baa:	ed97 6a12 	vldr	s12, [r7, #72]	; 0x48
 8001bae:	edd7 7a07 	vldr	s15, [r7, #28]
 8001bb2:	edd7 5a3a 	vldr	s11, [r7, #232]	; 0xe8
 8001bb6:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8001bba:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001bbe:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8001bc2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001bc6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001bca:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	edc3 7a00 	vstr	s15, [r3]
	ekf->pitch_r 	+= (K[1][0] * (ax_norm - h[0]) + K[1][1] * (ay_norm - h[1]) + K[1][2] * (az_norm - h[2]));
 8001bd4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001bd8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001bdc:	681b      	ldr	r3, [r3, #0]
 8001bde:	ed93 7a01 	vldr	s14, [r3, #4]
 8001be2:	edd7 6a13 	vldr	s13, [r7, #76]	; 0x4c
 8001be6:	edd7 7a05 	vldr	s15, [r7, #20]
 8001bea:	ed97 6a3c 	vldr	s12, [r7, #240]	; 0xf0
 8001bee:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001bf2:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8001bf6:	ed97 6a14 	vldr	s12, [r7, #80]	; 0x50
 8001bfa:	edd7 7a06 	vldr	s15, [r7, #24]
 8001bfe:	edd7 5a3b 	vldr	s11, [r7, #236]	; 0xec
 8001c02:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8001c06:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001c0a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8001c0e:	ed97 6a15 	vldr	s12, [r7, #84]	; 0x54
 8001c12:	edd7 7a07 	vldr	s15, [r7, #28]
 8001c16:	e009      	b.n	8001c2c <EKF_Update+0xb40>
 8001c18:	2000021c 	.word	0x2000021c
 8001c1c:	20000000 	.word	0x20000000
 8001c20:	20000234 	.word	0x20000234
 8001c24:	20000238 	.word	0x20000238
 8001c28:	2000023c 	.word	0x2000023c
 8001c2c:	edd7 5a3a 	vldr	s11, [r7, #232]	; 0xe8
 8001c30:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8001c34:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001c38:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8001c3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c40:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001c44:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001c48:	681b      	ldr	r3, [r3, #0]
 8001c4a:	edc3 7a01 	vstr	s15, [r3, #4]
}
 8001c4e:	bf00      	nop
 8001c50:	f507 7788 	add.w	r7, r7, #272	; 0x110
 8001c54:	46bd      	mov	sp, r7
 8001c56:	ecbd 8b02 	vpop	{d8}
 8001c5a:	bd80      	pop	{r7, pc}

08001c5c <Offset_Calibration_gyro>:
uint8_t mode;



void Offset_Calibration_gyro(Offset_value_gyro* data, float gyro_x, float gyro_y, float gyro_z, uint16_t cnt_gyro_measure_points, uint16_t Measurement_cnt)
{
 8001c5c:	b480      	push	{r7}
 8001c5e:	b087      	sub	sp, #28
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	6178      	str	r0, [r7, #20]
 8001c64:	ed87 0a04 	vstr	s0, [r7, #16]
 8001c68:	edc7 0a03 	vstr	s1, [r7, #12]
 8001c6c:	ed87 1a02 	vstr	s2, [r7, #8]
 8001c70:	460b      	mov	r3, r1
 8001c72:	80fb      	strh	r3, [r7, #6]
 8001c74:	4613      	mov	r3, r2
 8001c76:	80bb      	strh	r3, [r7, #4]
	switch (mode){
 8001c78:	4b3b      	ldr	r3, [pc, #236]	; (8001d68 <Offset_Calibration_gyro+0x10c>)
 8001c7a:	781b      	ldrb	r3, [r3, #0]
 8001c7c:	2b02      	cmp	r3, #2
 8001c7e:	d033      	beq.n	8001ce8 <Offset_Calibration_gyro+0x8c>
 8001c80:	2b02      	cmp	r3, #2
 8001c82:	dc6b      	bgt.n	8001d5c <Offset_Calibration_gyro+0x100>
 8001c84:	2b00      	cmp	r3, #0
 8001c86:	d002      	beq.n	8001c8e <Offset_Calibration_gyro+0x32>
 8001c88:	2b01      	cmp	r3, #1
 8001c8a:	d004      	beq.n	8001c96 <Offset_Calibration_gyro+0x3a>

	default:;


	}
}
 8001c8c:	e066      	b.n	8001d5c <Offset_Calibration_gyro+0x100>
			mode=1;
 8001c8e:	4b36      	ldr	r3, [pc, #216]	; (8001d68 <Offset_Calibration_gyro+0x10c>)
 8001c90:	2201      	movs	r2, #1
 8001c92:	701a      	strb	r2, [r3, #0]
	break;
 8001c94:	e062      	b.n	8001d5c <Offset_Calibration_gyro+0x100>
			sum_x += gyro_x;
 8001c96:	4b35      	ldr	r3, [pc, #212]	; (8001d6c <Offset_Calibration_gyro+0x110>)
 8001c98:	ed93 7a00 	vldr	s14, [r3]
 8001c9c:	edd7 7a04 	vldr	s15, [r7, #16]
 8001ca0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ca4:	4b31      	ldr	r3, [pc, #196]	; (8001d6c <Offset_Calibration_gyro+0x110>)
 8001ca6:	edc3 7a00 	vstr	s15, [r3]
			sum_y += gyro_y;
 8001caa:	4b31      	ldr	r3, [pc, #196]	; (8001d70 <Offset_Calibration_gyro+0x114>)
 8001cac:	ed93 7a00 	vldr	s14, [r3]
 8001cb0:	edd7 7a03 	vldr	s15, [r7, #12]
 8001cb4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001cb8:	4b2d      	ldr	r3, [pc, #180]	; (8001d70 <Offset_Calibration_gyro+0x114>)
 8001cba:	edc3 7a00 	vstr	s15, [r3]
			sum_z += gyro_z;
 8001cbe:	4b2d      	ldr	r3, [pc, #180]	; (8001d74 <Offset_Calibration_gyro+0x118>)
 8001cc0:	ed93 7a00 	vldr	s14, [r3]
 8001cc4:	edd7 7a02 	vldr	s15, [r7, #8]
 8001cc8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ccc:	4b29      	ldr	r3, [pc, #164]	; (8001d74 <Offset_Calibration_gyro+0x118>)
 8001cce:	edc3 7a00 	vstr	s15, [r3]
			cnt_gyro_measure_points++;
 8001cd2:	88fb      	ldrh	r3, [r7, #6]
 8001cd4:	3301      	adds	r3, #1
 8001cd6:	80fb      	strh	r3, [r7, #6]
		if(cnt_gyro_measure_points == Measurement_cnt)
 8001cd8:	88fa      	ldrh	r2, [r7, #6]
 8001cda:	88bb      	ldrh	r3, [r7, #4]
 8001cdc:	429a      	cmp	r2, r3
 8001cde:	d13c      	bne.n	8001d5a <Offset_Calibration_gyro+0xfe>
				mode = 2;
 8001ce0:	4b21      	ldr	r3, [pc, #132]	; (8001d68 <Offset_Calibration_gyro+0x10c>)
 8001ce2:	2202      	movs	r2, #2
 8001ce4:	701a      	strb	r2, [r3, #0]
	break;
 8001ce6:	e038      	b.n	8001d5a <Offset_Calibration_gyro+0xfe>
		 data->x_offset_gyro = sum_x/Measurement_cnt;
 8001ce8:	4b20      	ldr	r3, [pc, #128]	; (8001d6c <Offset_Calibration_gyro+0x110>)
 8001cea:	edd3 6a00 	vldr	s13, [r3]
 8001cee:	88bb      	ldrh	r3, [r7, #4]
 8001cf0:	ee07 3a90 	vmov	s15, r3
 8001cf4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001cf8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001cfc:	697b      	ldr	r3, [r7, #20]
 8001cfe:	edc3 7a00 	vstr	s15, [r3]
		 data->y_offset_gyro = sum_y/Measurement_cnt;
 8001d02:	4b1b      	ldr	r3, [pc, #108]	; (8001d70 <Offset_Calibration_gyro+0x114>)
 8001d04:	edd3 6a00 	vldr	s13, [r3]
 8001d08:	88bb      	ldrh	r3, [r7, #4]
 8001d0a:	ee07 3a90 	vmov	s15, r3
 8001d0e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d12:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d16:	697b      	ldr	r3, [r7, #20]
 8001d18:	edc3 7a01 	vstr	s15, [r3, #4]
		 data->z_offset_gyro = sum_z/Measurement_cnt;
 8001d1c:	4b15      	ldr	r3, [pc, #84]	; (8001d74 <Offset_Calibration_gyro+0x118>)
 8001d1e:	edd3 6a00 	vldr	s13, [r3]
 8001d22:	88bb      	ldrh	r3, [r7, #4]
 8001d24:	ee07 3a90 	vmov	s15, r3
 8001d28:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d2c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d30:	697b      	ldr	r3, [r7, #20]
 8001d32:	edc3 7a02 	vstr	s15, [r3, #8]
		 cnt_gyro_measure_points=0;
 8001d36:	2300      	movs	r3, #0
 8001d38:	80fb      	strh	r3, [r7, #6]
		 mode = 0;
 8001d3a:	4b0b      	ldr	r3, [pc, #44]	; (8001d68 <Offset_Calibration_gyro+0x10c>)
 8001d3c:	2200      	movs	r2, #0
 8001d3e:	701a      	strb	r2, [r3, #0]
		 sum_x=0;
 8001d40:	4b0a      	ldr	r3, [pc, #40]	; (8001d6c <Offset_Calibration_gyro+0x110>)
 8001d42:	f04f 0200 	mov.w	r2, #0
 8001d46:	601a      	str	r2, [r3, #0]
		 sum_y=0;
 8001d48:	4b09      	ldr	r3, [pc, #36]	; (8001d70 <Offset_Calibration_gyro+0x114>)
 8001d4a:	f04f 0200 	mov.w	r2, #0
 8001d4e:	601a      	str	r2, [r3, #0]
		 sum_z=0;
 8001d50:	4b08      	ldr	r3, [pc, #32]	; (8001d74 <Offset_Calibration_gyro+0x118>)
 8001d52:	f04f 0200 	mov.w	r2, #0
 8001d56:	601a      	str	r2, [r3, #0]
	break;
 8001d58:	e000      	b.n	8001d5c <Offset_Calibration_gyro+0x100>
	break;
 8001d5a:	bf00      	nop
}
 8001d5c:	bf00      	nop
 8001d5e:	371c      	adds	r7, #28
 8001d60:	46bd      	mov	sp, r7
 8001d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d66:	4770      	bx	lr
 8001d68:	2000024c 	.word	0x2000024c
 8001d6c:	20000240 	.word	0x20000240
 8001d70:	20000244 	.word	0x20000244
 8001d74:	20000248 	.word	0x20000248

08001d78 <BTN_init>:
			break;
	}
}

void BTN_init(void)
{
 8001d78:	b480      	push	{r7}
 8001d7a:	af00      	add	r7, sp, #0
	/*Set Peripheral bus AHB1*/
	RCC->AHB1ENR |= GPIOCEN;
 8001d7c:	4b0b      	ldr	r3, [pc, #44]	; (8001dac <BTN_init+0x34>)
 8001d7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d80:	4a0a      	ldr	r2, [pc, #40]	; (8001dac <BTN_init+0x34>)
 8001d82:	f043 0304 	orr.w	r3, r3, #4
 8001d86:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set Pin13 as Input*/
	GPIOC->MODER &=~(1U<<26);
 8001d88:	4b09      	ldr	r3, [pc, #36]	; (8001db0 <BTN_init+0x38>)
 8001d8a:	681b      	ldr	r3, [r3, #0]
 8001d8c:	4a08      	ldr	r2, [pc, #32]	; (8001db0 <BTN_init+0x38>)
 8001d8e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001d92:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U<<27);
 8001d94:	4b06      	ldr	r3, [pc, #24]	; (8001db0 <BTN_init+0x38>)
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	4a05      	ldr	r2, [pc, #20]	; (8001db0 <BTN_init+0x38>)
 8001d9a:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8001d9e:	6013      	str	r3, [r2, #0]
//	GPIOC->OTYPER |= (1U<<13);
//
//	/*Set Pull-Down*/
//	GPIOC->PUPDR &=~(1U<<26);
//	GPIOC->PUPDR |= (1U<<27);
}
 8001da0:	bf00      	nop
 8001da2:	46bd      	mov	sp, r7
 8001da4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001da8:	4770      	bx	lr
 8001daa:	bf00      	nop
 8001dac:	40023800 	.word	0x40023800
 8001db0:	40020800 	.word	0x40020800

08001db4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001db4:	b480      	push	{r7}
 8001db6:	b083      	sub	sp, #12
 8001db8:	af00      	add	r7, sp, #0
 8001dba:	4603      	mov	r3, r0
 8001dbc:	6039      	str	r1, [r7, #0]
 8001dbe:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001dc0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dc4:	2b00      	cmp	r3, #0
 8001dc6:	db0a      	blt.n	8001dde <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001dc8:	683b      	ldr	r3, [r7, #0]
 8001dca:	b2da      	uxtb	r2, r3
 8001dcc:	490c      	ldr	r1, [pc, #48]	; (8001e00 <__NVIC_SetPriority+0x4c>)
 8001dce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dd2:	0112      	lsls	r2, r2, #4
 8001dd4:	b2d2      	uxtb	r2, r2
 8001dd6:	440b      	add	r3, r1
 8001dd8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001ddc:	e00a      	b.n	8001df4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001dde:	683b      	ldr	r3, [r7, #0]
 8001de0:	b2da      	uxtb	r2, r3
 8001de2:	4908      	ldr	r1, [pc, #32]	; (8001e04 <__NVIC_SetPriority+0x50>)
 8001de4:	79fb      	ldrb	r3, [r7, #7]
 8001de6:	f003 030f 	and.w	r3, r3, #15
 8001dea:	3b04      	subs	r3, #4
 8001dec:	0112      	lsls	r2, r2, #4
 8001dee:	b2d2      	uxtb	r2, r2
 8001df0:	440b      	add	r3, r1
 8001df2:	761a      	strb	r2, [r3, #24]
}
 8001df4:	bf00      	nop
 8001df6:	370c      	adds	r7, #12
 8001df8:	46bd      	mov	sp, r7
 8001dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dfe:	4770      	bx	lr
 8001e00:	e000e100 	.word	0xe000e100
 8001e04:	e000ed00 	.word	0xe000ed00

08001e08 <GPIO_PA8_Init>:
void static get_camera_position_calibration(Offset_Scale_value_acc* acc_offset_scale, Offset_value_gyro* gyro_offset);

EKF Start_Conditions;
uint32_t Status_Magneto = 0;

void GPIO_PA8_Init(void){
 8001e08:	b480      	push	{r7}
 8001e0a:	af00      	add	r7, sp, #0

	/*1.Enable clk to PORT A*/
	RCC->AHB1ENR |= 1U<<0;
 8001e0c:	4b0d      	ldr	r3, [pc, #52]	; (8001e44 <GPIO_PA8_Init+0x3c>)
 8001e0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e10:	4a0c      	ldr	r2, [pc, #48]	; (8001e44 <GPIO_PA8_Init+0x3c>)
 8001e12:	f043 0301 	orr.w	r3, r3, #1
 8001e16:	6313      	str	r3, [r2, #48]	; 0x30

	/*2. Set PIN to Output*/
	GPIOA->MODER |= (1U<<16);
 8001e18:	4b0b      	ldr	r3, [pc, #44]	; (8001e48 <GPIO_PA8_Init+0x40>)
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	4a0a      	ldr	r2, [pc, #40]	; (8001e48 <GPIO_PA8_Init+0x40>)
 8001e1e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001e22:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U<<17);
 8001e24:	4b08      	ldr	r3, [pc, #32]	; (8001e48 <GPIO_PA8_Init+0x40>)
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	4a07      	ldr	r2, [pc, #28]	; (8001e48 <GPIO_PA8_Init+0x40>)
 8001e2a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001e2e:	6013      	str	r3, [r2, #0]
	GPIOA->BSRR = (1U<<24);		//Reset PA8
 8001e30:	4b05      	ldr	r3, [pc, #20]	; (8001e48 <GPIO_PA8_Init+0x40>)
 8001e32:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001e36:	619a      	str	r2, [r3, #24]

}
 8001e38:	bf00      	nop
 8001e3a:	46bd      	mov	sp, r7
 8001e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e40:	4770      	bx	lr
 8001e42:	bf00      	nop
 8001e44:	40023800 	.word	0x40023800
 8001e48:	40020000 	.word	0x40020000

08001e4c <main>:


int main(void)
{
 8001e4c:	b580      	push	{r7, lr}
 8001e4e:	b08e      	sub	sp, #56	; 0x38
 8001e50:	af00      	add	r7, sp, #0

	GPIO_PA8_Init();
 8001e52:	f7ff ffd9 	bl	8001e08 <GPIO_PA8_Init>

	/*create start conditions for the Kalman-Filter*/
	float P[2]={KALMAN_P_INIT, KALMAN_P_INIT};			//Kovarianzmatrix
 8001e56:	4b34      	ldr	r3, [pc, #208]	; (8001f28 <main+0xdc>)
 8001e58:	681b      	ldr	r3, [r3, #0]
 8001e5a:	633b      	str	r3, [r7, #48]	; 0x30
 8001e5c:	4b32      	ldr	r3, [pc, #200]	; (8001f28 <main+0xdc>)
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	637b      	str	r3, [r7, #52]	; 0x34
	float Q[2]={KALMAN_Q, KALMAN_Q}; 					//Kovarianzmatrix Prozessrauschen
 8001e62:	4b32      	ldr	r3, [pc, #200]	; (8001f2c <main+0xe0>)
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	62bb      	str	r3, [r7, #40]	; 0x28
 8001e68:	4b30      	ldr	r3, [pc, #192]	; (8001f2c <main+0xe0>)
 8001e6a:	681b      	ldr	r3, [r3, #0]
 8001e6c:	62fb      	str	r3, [r7, #44]	; 0x2c
	float R[3]={KALMAN_R,KALMAN_R,KALMAN_R};			//Kovarianzmatrix Messrauschen
 8001e6e:	4b30      	ldr	r3, [pc, #192]	; (8001f30 <main+0xe4>)
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	61fb      	str	r3, [r7, #28]
 8001e74:	4b2e      	ldr	r3, [pc, #184]	; (8001f30 <main+0xe4>)
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	623b      	str	r3, [r7, #32]
 8001e7a:	4b2d      	ldr	r3, [pc, #180]	; (8001f30 <main+0xe4>)
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	627b      	str	r3, [r7, #36]	; 0x24

	/*create start conditions for the Kalman-Filter*/
	float P_Yaw[2]={KALMAN_P_INIT, KALMAN_P_INIT};			//Kovarianzmatrix
 8001e80:	4b29      	ldr	r3, [pc, #164]	; (8001f28 <main+0xdc>)
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	617b      	str	r3, [r7, #20]
 8001e86:	4b28      	ldr	r3, [pc, #160]	; (8001f28 <main+0xdc>)
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	61bb      	str	r3, [r7, #24]
	float Q_Yaw[2]={KALMAN_Q, KALMAN_Q, KALMAN_Q}; 			//Kovarianzmatrix Prozessrauschen
 8001e8c:	4b27      	ldr	r3, [pc, #156]	; (8001f2c <main+0xe0>)
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	60fb      	str	r3, [r7, #12]
 8001e92:	4b26      	ldr	r3, [pc, #152]	; (8001f2c <main+0xe0>)
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	613b      	str	r3, [r7, #16]
	float R_Yaw[3]={KALMAN_R,KALMAN_R,KALMAN_R};			//Kovarianzmatrix Messrauschen
 8001e98:	4b25      	ldr	r3, [pc, #148]	; (8001f30 <main+0xe4>)
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	603b      	str	r3, [r7, #0]
 8001e9e:	4b24      	ldr	r3, [pc, #144]	; (8001f30 <main+0xe4>)
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	607b      	str	r3, [r7, #4]
 8001ea4:	4b22      	ldr	r3, [pc, #136]	; (8001f30 <main+0xe4>)
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	60bb      	str	r3, [r7, #8]

	EKF_Init(&Start_Conditions, P, Q, R);
 8001eaa:	f107 031c 	add.w	r3, r7, #28
 8001eae:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001eb2:	f107 0130 	add.w	r1, r7, #48	; 0x30
 8001eb6:	481f      	ldr	r0, [pc, #124]	; (8001f34 <main+0xe8>)
 8001eb8:	f7fe ff24 	bl	8000d04 <EKF_Init>
	//Offset_value_gyro  measurements_gyro_mpu9250 = {-0.17926,0.06552,0.01092};
	//Offset_value_gyro  measurements_gyro_mpu9250 = {0,0,0};	//calibration gets executed at the beginning
	//Offset_Scale_value_acc measurements_acc_mpu9250 = {0.03552, 9.81508/9.81f,0.01730,9.82851/9.81f,0.08203,9.97796/9.81f};

	/*Enable User Button*/
	BTN_init();
 8001ebc:	f7ff ff5c 	bl	8001d78 <BTN_init>

	/*Enable UART*/
	uart2_rx_tx_init();
 8001ec0:	f001 f920 	bl	8003104 <uart2_rx_tx_init>

	/*SysTick Timer init*/
	systick_counter_init();
 8001ec4:	f001 f87a 	bl	8002fbc <systick_counter_init>

	/*Enable SPI*/
	spi1_dma_init();
 8001ec8:	f000 fd66 	bl	8002998 <spi1_dma_init>

	/*Enable Floating Point Unit*/
	SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));
 8001ecc:	4b1a      	ldr	r3, [pc, #104]	; (8001f38 <main+0xec>)
 8001ece:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001ed2:	4a19      	ldr	r2, [pc, #100]	; (8001f38 <main+0xec>)
 8001ed4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001ed8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

	/*Config NCS pin*/
	mpu9250_ncs_pin_config();
 8001edc:	f000 fa38 	bl	8002350 <mpu9250_ncs_pin_config>

	/*Enable tx stream*/
	dma2_stream3_spi_tx_init();
 8001ee0:	f000 fe10 	bl	8002b04 <dma2_stream3_spi_tx_init>

	/*Enable rx stream*/
	dma2_stream2_spi_rx_init();
 8001ee4:	f000 fe6c 	bl	8002bc0 <dma2_stream2_spi_rx_init>

	/*ACCELEROMETER+Gyroskope****START SPI********/
	/*Reset NCS pin*/
	mpu9250_ncs_pin_reset();
 8001ee8:	f000 fa60 	bl	80023ac <mpu9250_ncs_pin_reset>

	/*Config accel & gyro*/
	mpu9250_accel_config(ACC_FULL_SCALE_2_G);
 8001eec:	2000      	movs	r0, #0
 8001eee:	f000 fa6d 	bl	80023cc <mpu9250_accel_config>

	mpu9250_gyro_config(GYRO_FULL_SCALE_250);
 8001ef2:	2000      	movs	r0, #0
 8001ef4:	f000 fc20 	bl	8002738 <mpu9250_gyro_config>

	/*Set NCS pin to high-level*/
	mpu9250_ncs_pin_set();
 8001ef8:	f000 fa48 	bl	800238c <mpu9250_ncs_pin_set>
//	/*Set NCS pin to high-level*/
//	mpu9250_ncs_pin_set();
//	/**************END SPI**********************/

	/*Enable Timer 1kHz*/
	delta_t_gyro = tim2_1khz_interrupt_init();
 8001efc:	f001 f892 	bl	8003024 <tim2_1khz_interrupt_init>
 8001f00:	eef0 7a40 	vmov.f32	s15, s0
 8001f04:	4b0d      	ldr	r3, [pc, #52]	; (8001f3c <main+0xf0>)
 8001f06:	edc3 7a00 	vstr	s15, [r3]
	// delta_t_gyro = tim2_500hz_interrupt_init();
//	delta_t_gyro = tim2_100hz_interrupt_init();


	/*Change Interrupt priority*/
	NVIC_SetPriority(DMA2_Stream2_IRQn,11);
 8001f0a:	210b      	movs	r1, #11
 8001f0c:	203a      	movs	r0, #58	; 0x3a
 8001f0e:	f7ff ff51 	bl	8001db4 <__NVIC_SetPriority>
	NVIC_SetPriority(DMA2_Stream3_IRQn,10);
 8001f12:	210a      	movs	r1, #10
 8001f14:	203b      	movs	r0, #59	; 0x3b
 8001f16:	f7ff ff4d 	bl	8001db4 <__NVIC_SetPriority>
	NVIC_SetPriority(TIM2_IRQn,13);
 8001f1a:	210d      	movs	r1, #13
 8001f1c:	201c      	movs	r0, #28
 8001f1e:	f7ff ff49 	bl	8001db4 <__NVIC_SetPriority>

	//SystemClock_Config();
	SystemCoreClockUpdate(); //Used to read the HCLK frequency
 8001f22:	f000 ffcb 	bl	8002ebc <SystemCoreClockUpdate>


	while(1)
 8001f26:	e7fe      	b.n	8001f26 <main+0xda>
 8001f28:	20000004 	.word	0x20000004
 8001f2c:	20000008 	.word	0x20000008
 8001f30:	2000000c 	.word	0x2000000c
 8001f34:	200002b4 	.word	0x200002b4
 8001f38:	e000ed00 	.word	0xe000ed00
 8001f3c:	200002b0 	.word	0x200002b0

08001f40 <TIM2_IRQHandler>:
}

/*INTERRUPTS**********************************/
void TIM2_IRQHandler(void) // jede 1ms Interrupt

{	/*Clear update interrupt flag*/
 8001f40:	b580      	push	{r7, lr}
 8001f42:	b082      	sub	sp, #8
 8001f44:	af00      	add	r7, sp, #0
	TIM2->SR &=~ SR_UIF;
 8001f46:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001f4a:	691b      	ldr	r3, [r3, #16]
 8001f4c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f50:	f023 0301 	bic.w	r3, r3, #1
 8001f54:	6113      	str	r3, [r2, #16]

	tim=0;
 8001f56:	4b13      	ldr	r3, [pc, #76]	; (8001fa4 <TIM2_IRQHandler+0x64>)
 8001f58:	2200      	movs	r2, #0
 8001f5a:	701a      	strb	r2, [r3, #0]
	b++;
 8001f5c:	4b12      	ldr	r3, [pc, #72]	; (8001fa8 <TIM2_IRQHandler+0x68>)
 8001f5e:	681b      	ldr	r3, [r3, #0]
 8001f60:	3301      	adds	r3, #1
 8001f62:	4a11      	ldr	r2, [pc, #68]	; (8001fa8 <TIM2_IRQHandler+0x68>)
 8001f64:	6013      	str	r3, [r2, #0]

	uint16_t calibration_cycles = 1000;
 8001f66:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001f6a:	80fb      	strh	r3, [r7, #6]
	if(cnt_gyro_cali <= calibration_cycles)
 8001f6c:	4b0f      	ldr	r3, [pc, #60]	; (8001fac <TIM2_IRQHandler+0x6c>)
 8001f6e:	881b      	ldrh	r3, [r3, #0]
 8001f70:	88fa      	ldrh	r2, [r7, #6]
 8001f72:	429a      	cmp	r2, r3
 8001f74:	d30d      	bcc.n	8001f92 <TIM2_IRQHandler+0x52>
	{
		set_gyro_offset(cnt_gyro_cali, calibration_cycles);
 8001f76:	4b0d      	ldr	r3, [pc, #52]	; (8001fac <TIM2_IRQHandler+0x6c>)
 8001f78:	881b      	ldrh	r3, [r3, #0]
 8001f7a:	88fa      	ldrh	r2, [r7, #6]
 8001f7c:	4611      	mov	r1, r2
 8001f7e:	4618      	mov	r0, r3
 8001f80:	f000 f99a 	bl	80022b8 <set_gyro_offset>
		cnt_gyro_cali++;
 8001f84:	4b09      	ldr	r3, [pc, #36]	; (8001fac <TIM2_IRQHandler+0x6c>)
 8001f86:	881b      	ldrh	r3, [r3, #0]
 8001f88:	3301      	adds	r3, #1
 8001f8a:	b29a      	uxth	r2, r3
 8001f8c:	4b07      	ldr	r3, [pc, #28]	; (8001fac <TIM2_IRQHandler+0x6c>)
 8001f8e:	801a      	strh	r2, [r3, #0]

	//Calibration
//	get_camera_position_calibration(&measurements_acc_mpu9250, &measurements_gyro_mpu9250);
//	Offset_Calibration_acc(&Values_acc, &Offset_Scale_acc, acc_x, acc_y, acc_z, 1000);

}
 8001f90:	e003      	b.n	8001f9a <TIM2_IRQHandler+0x5a>
		get_camera_position(&measurements_acc_mpu9250, &measurements_gyro_mpu9250);
 8001f92:	4907      	ldr	r1, [pc, #28]	; (8001fb0 <TIM2_IRQHandler+0x70>)
 8001f94:	4807      	ldr	r0, [pc, #28]	; (8001fb4 <TIM2_IRQHandler+0x74>)
 8001f96:	f000 f80f 	bl	8001fb8 <get_camera_position>
}
 8001f9a:	bf00      	nop
 8001f9c:	3708      	adds	r7, #8
 8001f9e:	46bd      	mov	sp, r7
 8001fa0:	bd80      	pop	{r7, pc}
 8001fa2:	bf00      	nop
 8001fa4:	2000026c 	.word	0x2000026c
 8001fa8:	20000270 	.word	0x20000270
 8001fac:	200002ac 	.word	0x200002ac
 8001fb0:	200002a0 	.word	0x200002a0
 8001fb4:	20000010 	.word	0x20000010

08001fb8 <get_camera_position>:

void static get_camera_position(Offset_Scale_value_acc* acc_offset_scale, Offset_value_gyro* gyro_offset)
{
 8001fb8:	b580      	push	{r7, lr}
 8001fba:	b082      	sub	sp, #8
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	6078      	str	r0, [r7, #4]
 8001fc0:	6039      	str	r1, [r7, #0]
		//GPIOA->BSRR = (1U<<8);		//Set PA8, for Oszi Measurement

		/*Set NCS pin to low-level*/
		mpu9250_ncs_pin_reset();
 8001fc2:	f000 f9f3 	bl	80023ac <mpu9250_ncs_pin_reset>
		/*Update accel values*/
		mpu9250_accel_gyro_update();
 8001fc6:	f000 fabd 	bl	8002544 <mpu9250_accel_gyro_update>
		/*Set NCS pin to high-level*/
		mpu9250_ncs_pin_set();
 8001fca:	f000 f9df 	bl	800238c <mpu9250_ncs_pin_set>

		/*Get accel data*/
		acc_x =  mpu9250_get_acc_x()/acc_offset_scale->x_scale_acc - acc_offset_scale->x_offset_acc;
 8001fce:	f000 fb91 	bl	80026f4 <mpu9250_get_acc_x>
 8001fd2:	eef0 6a40 	vmov.f32	s13, s0
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	edd3 7a01 	vldr	s15, [r3, #4]
 8001fdc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	edd3 7a00 	vldr	s15, [r3]
 8001fe6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001fea:	4b9f      	ldr	r3, [pc, #636]	; (8002268 <get_camera_position+0x2b0>)
 8001fec:	edc3 7a00 	vstr	s15, [r3]
		acc_y =  mpu9250_get_acc_y()/acc_offset_scale->y_scale_acc - acc_offset_scale->y_offset_acc;
 8001ff0:	f000 fb8b 	bl	800270a <mpu9250_get_acc_y>
 8001ff4:	eef0 6a40 	vmov.f32	s13, s0
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	edd3 7a03 	vldr	s15, [r3, #12]
 8001ffe:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	edd3 7a02 	vldr	s15, [r3, #8]
 8002008:	ee77 7a67 	vsub.f32	s15, s14, s15
 800200c:	4b97      	ldr	r3, [pc, #604]	; (800226c <get_camera_position+0x2b4>)
 800200e:	edc3 7a00 	vstr	s15, [r3]
		acc_z =  -mpu9250_get_acc_z()/acc_offset_scale->z_scale_acc - acc_offset_scale->z_offset_acc;
 8002012:	f000 fb85 	bl	8002720 <mpu9250_get_acc_z>
 8002016:	eef0 7a40 	vmov.f32	s15, s0
 800201a:	eef1 6a67 	vneg.f32	s13, s15
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	edd3 7a05 	vldr	s15, [r3, #20]
 8002024:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	edd3 7a04 	vldr	s15, [r3, #16]
 800202e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002032:	4b8f      	ldr	r3, [pc, #572]	; (8002270 <get_camera_position+0x2b8>)
 8002034:	edc3 7a00 	vstr	s15, [r3]

		/*Get accel data*/
		gyro_x =  mpu9250_get_gyro_x()-gyro_offset->x_offset_gyro;
 8002038:	f000 fbfe 	bl	8002838 <mpu9250_get_gyro_x>
 800203c:	eeb0 7a40 	vmov.f32	s14, s0
 8002040:	683b      	ldr	r3, [r7, #0]
 8002042:	edd3 7a00 	vldr	s15, [r3]
 8002046:	ee77 7a67 	vsub.f32	s15, s14, s15
 800204a:	4b8a      	ldr	r3, [pc, #552]	; (8002274 <get_camera_position+0x2bc>)
 800204c:	edc3 7a00 	vstr	s15, [r3]
		gyro_y =  mpu9250_get_gyro_y()-gyro_offset->y_offset_gyro;
 8002050:	f000 fbfd 	bl	800284e <mpu9250_get_gyro_y>
 8002054:	eeb0 7a40 	vmov.f32	s14, s0
 8002058:	683b      	ldr	r3, [r7, #0]
 800205a:	edd3 7a01 	vldr	s15, [r3, #4]
 800205e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002062:	4b85      	ldr	r3, [pc, #532]	; (8002278 <get_camera_position+0x2c0>)
 8002064:	edc3 7a00 	vstr	s15, [r3]
		gyro_z =  mpu9250_get_gyro_z()-gyro_offset->z_offset_gyro;
 8002068:	f000 fbfc 	bl	8002864 <mpu9250_get_gyro_z>
 800206c:	eeb0 7a40 	vmov.f32	s14, s0
 8002070:	683b      	ldr	r3, [r7, #0]
 8002072:	edd3 7a02 	vldr	s15, [r3, #8]
 8002076:	ee77 7a67 	vsub.f32	s15, s14, s15
 800207a:	4b80      	ldr	r3, [pc, #512]	; (800227c <get_camera_position+0x2c4>)
 800207c:	edc3 7a00 	vstr	s15, [r3]
		gyro_z_messung = gyro_z * 180/M_PI;
 8002080:	4b7e      	ldr	r3, [pc, #504]	; (800227c <get_camera_position+0x2c4>)
 8002082:	edd3 7a00 	vldr	s15, [r3]
 8002086:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 8002280 <get_camera_position+0x2c8>
 800208a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800208e:	ee17 0a90 	vmov	r0, s15
 8002092:	f7fe fa61 	bl	8000558 <__aeabi_f2d>
 8002096:	a370      	add	r3, pc, #448	; (adr r3, 8002258 <get_camera_position+0x2a0>)
 8002098:	e9d3 2300 	ldrd	r2, r3, [r3]
 800209c:	f7fe fbde 	bl	800085c <__aeabi_ddiv>
 80020a0:	4602      	mov	r2, r0
 80020a2:	460b      	mov	r3, r1
 80020a4:	4610      	mov	r0, r2
 80020a6:	4619      	mov	r1, r3
 80020a8:	f7fe fda6 	bl	8000bf8 <__aeabi_d2f>
 80020ac:	4603      	mov	r3, r0
 80020ae:	4a75      	ldr	r2, [pc, #468]	; (8002284 <get_camera_position+0x2cc>)
 80020b0:	6013      	str	r3, [r2, #0]

		before = SysTick->VAL;
 80020b2:	4b75      	ldr	r3, [pc, #468]	; (8002288 <get_camera_position+0x2d0>)
 80020b4:	689b      	ldr	r3, [r3, #8]
 80020b6:	4a75      	ldr	r2, [pc, #468]	; (800228c <get_camera_position+0x2d4>)
 80020b8:	6013      	str	r3, [r2, #0]

		EKF_Predict(&Start_Conditions, gyro_x, gyro_y, gyro_z, delta_t_gyro);
 80020ba:	4b6e      	ldr	r3, [pc, #440]	; (8002274 <get_camera_position+0x2bc>)
 80020bc:	edd3 7a00 	vldr	s15, [r3]
 80020c0:	4b6d      	ldr	r3, [pc, #436]	; (8002278 <get_camera_position+0x2c0>)
 80020c2:	ed93 7a00 	vldr	s14, [r3]
 80020c6:	4b6d      	ldr	r3, [pc, #436]	; (800227c <get_camera_position+0x2c4>)
 80020c8:	edd3 6a00 	vldr	s13, [r3]
 80020cc:	4b70      	ldr	r3, [pc, #448]	; (8002290 <get_camera_position+0x2d8>)
 80020ce:	ed93 6a00 	vldr	s12, [r3]
 80020d2:	eef0 1a46 	vmov.f32	s3, s12
 80020d6:	eeb0 1a66 	vmov.f32	s2, s13
 80020da:	eef0 0a47 	vmov.f32	s1, s14
 80020de:	eeb0 0a67 	vmov.f32	s0, s15
 80020e2:	486c      	ldr	r0, [pc, #432]	; (8002294 <get_camera_position+0x2dc>)
 80020e4:	f7fe fe4b 	bl	8000d7e <EKF_Predict>
		roll_angle_pr	= Start_Conditions.roll_r 	*180/M_PI;
 80020e8:	4b6a      	ldr	r3, [pc, #424]	; (8002294 <get_camera_position+0x2dc>)
 80020ea:	edd3 7a00 	vldr	s15, [r3]
 80020ee:	ed9f 7a64 	vldr	s14, [pc, #400]	; 8002280 <get_camera_position+0x2c8>
 80020f2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80020f6:	ee17 0a90 	vmov	r0, s15
 80020fa:	f7fe fa2d 	bl	8000558 <__aeabi_f2d>
 80020fe:	a356      	add	r3, pc, #344	; (adr r3, 8002258 <get_camera_position+0x2a0>)
 8002100:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002104:	f7fe fbaa 	bl	800085c <__aeabi_ddiv>
 8002108:	4602      	mov	r2, r0
 800210a:	460b      	mov	r3, r1
 800210c:	4610      	mov	r0, r2
 800210e:	4619      	mov	r1, r3
 8002110:	f7fe fd72 	bl	8000bf8 <__aeabi_d2f>
 8002114:	4603      	mov	r3, r0
 8002116:	4a60      	ldr	r2, [pc, #384]	; (8002298 <get_camera_position+0x2e0>)
 8002118:	6013      	str	r3, [r2, #0]
		pitch_angle_pr	= Start_Conditions.pitch_r 	*180/M_PI;
 800211a:	4b5e      	ldr	r3, [pc, #376]	; (8002294 <get_camera_position+0x2dc>)
 800211c:	edd3 7a01 	vldr	s15, [r3, #4]
 8002120:	ed9f 7a57 	vldr	s14, [pc, #348]	; 8002280 <get_camera_position+0x2c8>
 8002124:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002128:	ee17 0a90 	vmov	r0, s15
 800212c:	f7fe fa14 	bl	8000558 <__aeabi_f2d>
 8002130:	a349      	add	r3, pc, #292	; (adr r3, 8002258 <get_camera_position+0x2a0>)
 8002132:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002136:	f7fe fb91 	bl	800085c <__aeabi_ddiv>
 800213a:	4602      	mov	r2, r0
 800213c:	460b      	mov	r3, r1
 800213e:	4610      	mov	r0, r2
 8002140:	4619      	mov	r1, r3
 8002142:	f7fe fd59 	bl	8000bf8 <__aeabi_d2f>
 8002146:	4603      	mov	r3, r0
 8002148:	4a54      	ldr	r2, [pc, #336]	; (800229c <get_camera_position+0x2e4>)
 800214a:	6013      	str	r3, [r2, #0]
		yaw_angle_pr	= Start_Conditions.yaw_r 	*180/M_PI;
 800214c:	4b51      	ldr	r3, [pc, #324]	; (8002294 <get_camera_position+0x2dc>)
 800214e:	edd3 7a02 	vldr	s15, [r3, #8]
 8002152:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8002280 <get_camera_position+0x2c8>
 8002156:	ee67 7a87 	vmul.f32	s15, s15, s14
 800215a:	ee17 0a90 	vmov	r0, s15
 800215e:	f7fe f9fb 	bl	8000558 <__aeabi_f2d>
 8002162:	a33d      	add	r3, pc, #244	; (adr r3, 8002258 <get_camera_position+0x2a0>)
 8002164:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002168:	f7fe fb78 	bl	800085c <__aeabi_ddiv>
 800216c:	4602      	mov	r2, r0
 800216e:	460b      	mov	r3, r1
 8002170:	4610      	mov	r0, r2
 8002172:	4619      	mov	r1, r3
 8002174:	f7fe fd40 	bl	8000bf8 <__aeabi_d2f>
 8002178:	4603      	mov	r3, r0
 800217a:	4a49      	ldr	r2, [pc, #292]	; (80022a0 <get_camera_position+0x2e8>)
 800217c:	6013      	str	r3, [r2, #0]
//		after = SysTick->VAL;
//		time_taken = (before - after)*0.0000000625;

		if (ii==10)
 800217e:	4b49      	ldr	r3, [pc, #292]	; (80022a4 <get_camera_position+0x2ec>)
 8002180:	881b      	ldrh	r3, [r3, #0]
 8002182:	2b0a      	cmp	r3, #10
 8002184:	d15c      	bne.n	8002240 <get_camera_position+0x288>
		{

//			before = SysTick->VAL;

			EKF_Update(&Start_Conditions, acc_x, acc_y, acc_z);
 8002186:	4b38      	ldr	r3, [pc, #224]	; (8002268 <get_camera_position+0x2b0>)
 8002188:	edd3 7a00 	vldr	s15, [r3]
 800218c:	4b37      	ldr	r3, [pc, #220]	; (800226c <get_camera_position+0x2b4>)
 800218e:	ed93 7a00 	vldr	s14, [r3]
 8002192:	4b37      	ldr	r3, [pc, #220]	; (8002270 <get_camera_position+0x2b8>)
 8002194:	edd3 6a00 	vldr	s13, [r3]
 8002198:	eeb0 1a66 	vmov.f32	s2, s13
 800219c:	eef0 0a47 	vmov.f32	s1, s14
 80021a0:	eeb0 0a67 	vmov.f32	s0, s15
 80021a4:	483b      	ldr	r0, [pc, #236]	; (8002294 <get_camera_position+0x2dc>)
 80021a6:	f7fe ffa1 	bl	80010ec <EKF_Update>

			after = SysTick->VAL;
 80021aa:	4b37      	ldr	r3, [pc, #220]	; (8002288 <get_camera_position+0x2d0>)
 80021ac:	689b      	ldr	r3, [r3, #8]
 80021ae:	4a3e      	ldr	r2, [pc, #248]	; (80022a8 <get_camera_position+0x2f0>)
 80021b0:	6013      	str	r3, [r2, #0]
			time_taken = (before - after)*0.0000000625; // f = 16MhZ => t = 62.5ns = 0.0000000625s
 80021b2:	4b36      	ldr	r3, [pc, #216]	; (800228c <get_camera_position+0x2d4>)
 80021b4:	681a      	ldr	r2, [r3, #0]
 80021b6:	4b3c      	ldr	r3, [pc, #240]	; (80022a8 <get_camera_position+0x2f0>)
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	1ad3      	subs	r3, r2, r3
 80021bc:	4618      	mov	r0, r3
 80021be:	f7fe f9a9 	bl	8000514 <__aeabi_ui2d>
 80021c2:	a327      	add	r3, pc, #156	; (adr r3, 8002260 <get_camera_position+0x2a8>)
 80021c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021c8:	f7fe fa1e 	bl	8000608 <__aeabi_dmul>
 80021cc:	4602      	mov	r2, r0
 80021ce:	460b      	mov	r3, r1
 80021d0:	4936      	ldr	r1, [pc, #216]	; (80022ac <get_camera_position+0x2f4>)
 80021d2:	e9c1 2300 	strd	r2, r3, [r1]
			roll_angle_up	= Start_Conditions.roll_r 	*180/M_PI;
 80021d6:	4b2f      	ldr	r3, [pc, #188]	; (8002294 <get_camera_position+0x2dc>)
 80021d8:	edd3 7a00 	vldr	s15, [r3]
 80021dc:	ed9f 7a28 	vldr	s14, [pc, #160]	; 8002280 <get_camera_position+0x2c8>
 80021e0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80021e4:	ee17 0a90 	vmov	r0, s15
 80021e8:	f7fe f9b6 	bl	8000558 <__aeabi_f2d>
 80021ec:	a31a      	add	r3, pc, #104	; (adr r3, 8002258 <get_camera_position+0x2a0>)
 80021ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021f2:	f7fe fb33 	bl	800085c <__aeabi_ddiv>
 80021f6:	4602      	mov	r2, r0
 80021f8:	460b      	mov	r3, r1
 80021fa:	4610      	mov	r0, r2
 80021fc:	4619      	mov	r1, r3
 80021fe:	f7fe fcfb 	bl	8000bf8 <__aeabi_d2f>
 8002202:	4603      	mov	r3, r0
 8002204:	4a2a      	ldr	r2, [pc, #168]	; (80022b0 <get_camera_position+0x2f8>)
 8002206:	6013      	str	r3, [r2, #0]
			pitch_angle_up	= Start_Conditions.pitch_r 	*180/M_PI;
 8002208:	4b22      	ldr	r3, [pc, #136]	; (8002294 <get_camera_position+0x2dc>)
 800220a:	edd3 7a01 	vldr	s15, [r3, #4]
 800220e:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8002280 <get_camera_position+0x2c8>
 8002212:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002216:	ee17 0a90 	vmov	r0, s15
 800221a:	f7fe f99d 	bl	8000558 <__aeabi_f2d>
 800221e:	a30e      	add	r3, pc, #56	; (adr r3, 8002258 <get_camera_position+0x2a0>)
 8002220:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002224:	f7fe fb1a 	bl	800085c <__aeabi_ddiv>
 8002228:	4602      	mov	r2, r0
 800222a:	460b      	mov	r3, r1
 800222c:	4610      	mov	r0, r2
 800222e:	4619      	mov	r1, r3
 8002230:	f7fe fce2 	bl	8000bf8 <__aeabi_d2f>
 8002234:	4603      	mov	r3, r0
 8002236:	4a1f      	ldr	r2, [pc, #124]	; (80022b4 <get_camera_position+0x2fc>)
 8002238:	6013      	str	r3, [r2, #0]

			ii=0;
 800223a:	4b1a      	ldr	r3, [pc, #104]	; (80022a4 <get_camera_position+0x2ec>)
 800223c:	2200      	movs	r2, #0
 800223e:	801a      	strh	r2, [r3, #0]
		}
		ii++;
 8002240:	4b18      	ldr	r3, [pc, #96]	; (80022a4 <get_camera_position+0x2ec>)
 8002242:	881b      	ldrh	r3, [r3, #0]
 8002244:	3301      	adds	r3, #1
 8002246:	b29a      	uxth	r2, r3
 8002248:	4b16      	ldr	r3, [pc, #88]	; (80022a4 <get_camera_position+0x2ec>)
 800224a:	801a      	strh	r2, [r3, #0]
		//GPIOA->BSRR = (1U<<24);		//Reset PA8,  for Oszi Measurement

}
 800224c:	bf00      	nop
 800224e:	3708      	adds	r7, #8
 8002250:	46bd      	mov	sp, r7
 8002252:	bd80      	pop	{r7, pc}
 8002254:	f3af 8000 	nop.w
 8002258:	54442d18 	.word	0x54442d18
 800225c:	400921fb 	.word	0x400921fb
 8002260:	a0b5ed8d 	.word	0xa0b5ed8d
 8002264:	3e70c6f7 	.word	0x3e70c6f7
 8002268:	20000250 	.word	0x20000250
 800226c:	20000254 	.word	0x20000254
 8002270:	20000258 	.word	0x20000258
 8002274:	2000025c 	.word	0x2000025c
 8002278:	20000260 	.word	0x20000260
 800227c:	20000264 	.word	0x20000264
 8002280:	43340000 	.word	0x43340000
 8002284:	20000268 	.word	0x20000268
 8002288:	e000e010 	.word	0xe000e010
 800228c:	20000274 	.word	0x20000274
 8002290:	200002b0 	.word	0x200002b0
 8002294:	200002b4 	.word	0x200002b4
 8002298:	20000294 	.word	0x20000294
 800229c:	20000298 	.word	0x20000298
 80022a0:	2000029c 	.word	0x2000029c
 80022a4:	20000288 	.word	0x20000288
 80022a8:	20000278 	.word	0x20000278
 80022ac:	20000280 	.word	0x20000280
 80022b0:	2000028c 	.word	0x2000028c
 80022b4:	20000290 	.word	0x20000290

080022b8 <set_gyro_offset>:
		acc_z =  mpu9250_get_acc_z();

}

void static set_gyro_offset(uint16_t counter, uint16_t cycle_times)
{
 80022b8:	b580      	push	{r7, lr}
 80022ba:	b082      	sub	sp, #8
 80022bc:	af00      	add	r7, sp, #0
 80022be:	4603      	mov	r3, r0
 80022c0:	460a      	mov	r2, r1
 80022c2:	80fb      	strh	r3, [r7, #6]
 80022c4:	4613      	mov	r3, r2
 80022c6:	80bb      	strh	r3, [r7, #4]
		/*Set NCS pin to low-level*/
		mpu9250_ncs_pin_reset();
 80022c8:	f000 f870 	bl	80023ac <mpu9250_ncs_pin_reset>
		/*Update accel values*/
		mpu9250_accel_gyro_update();
 80022cc:	f000 f93a 	bl	8002544 <mpu9250_accel_gyro_update>
		/*Set NCS pin to high-level*/
		mpu9250_ncs_pin_set();
 80022d0:	f000 f85c 	bl	800238c <mpu9250_ncs_pin_set>
		counter_pb++;
 80022d4:	4b19      	ldr	r3, [pc, #100]	; (800233c <set_gyro_offset+0x84>)
 80022d6:	881b      	ldrh	r3, [r3, #0]
 80022d8:	3301      	adds	r3, #1
 80022da:	b29a      	uxth	r2, r3
 80022dc:	4b17      	ldr	r3, [pc, #92]	; (800233c <set_gyro_offset+0x84>)
 80022de:	801a      	strh	r2, [r3, #0]
		/*Get accel data*/
		gyro_x =  mpu9250_get_gyro_x();
 80022e0:	f000 faaa 	bl	8002838 <mpu9250_get_gyro_x>
 80022e4:	eef0 7a40 	vmov.f32	s15, s0
 80022e8:	4b15      	ldr	r3, [pc, #84]	; (8002340 <set_gyro_offset+0x88>)
 80022ea:	edc3 7a00 	vstr	s15, [r3]
		gyro_y =  mpu9250_get_gyro_y();
 80022ee:	f000 faae 	bl	800284e <mpu9250_get_gyro_y>
 80022f2:	eef0 7a40 	vmov.f32	s15, s0
 80022f6:	4b13      	ldr	r3, [pc, #76]	; (8002344 <set_gyro_offset+0x8c>)
 80022f8:	edc3 7a00 	vstr	s15, [r3]
		gyro_z =  mpu9250_get_gyro_z();
 80022fc:	f000 fab2 	bl	8002864 <mpu9250_get_gyro_z>
 8002300:	eef0 7a40 	vmov.f32	s15, s0
 8002304:	4b10      	ldr	r3, [pc, #64]	; (8002348 <set_gyro_offset+0x90>)
 8002306:	edc3 7a00 	vstr	s15, [r3]
		Offset_Calibration_gyro(&measurements_gyro_mpu9250, gyro_x, gyro_y, gyro_z, counter, cycle_times);
 800230a:	4b0d      	ldr	r3, [pc, #52]	; (8002340 <set_gyro_offset+0x88>)
 800230c:	edd3 7a00 	vldr	s15, [r3]
 8002310:	4b0c      	ldr	r3, [pc, #48]	; (8002344 <set_gyro_offset+0x8c>)
 8002312:	ed93 7a00 	vldr	s14, [r3]
 8002316:	4b0c      	ldr	r3, [pc, #48]	; (8002348 <set_gyro_offset+0x90>)
 8002318:	edd3 6a00 	vldr	s13, [r3]
 800231c:	88ba      	ldrh	r2, [r7, #4]
 800231e:	88fb      	ldrh	r3, [r7, #6]
 8002320:	4619      	mov	r1, r3
 8002322:	eeb0 1a66 	vmov.f32	s2, s13
 8002326:	eef0 0a47 	vmov.f32	s1, s14
 800232a:	eeb0 0a67 	vmov.f32	s0, s15
 800232e:	4807      	ldr	r0, [pc, #28]	; (800234c <set_gyro_offset+0x94>)
 8002330:	f7ff fc94 	bl	8001c5c <Offset_Calibration_gyro>
}
 8002334:	bf00      	nop
 8002336:	3708      	adds	r7, #8
 8002338:	46bd      	mov	sp, r7
 800233a:	bd80      	pop	{r7, pc}
 800233c:	200002ae 	.word	0x200002ae
 8002340:	2000025c 	.word	0x2000025c
 8002344:	20000260 	.word	0x20000260
 8002348:	20000264 	.word	0x20000264
 800234c:	200002a0 	.word	0x200002a0

08002350 <mpu9250_ncs_pin_config>:




void mpu9250_ncs_pin_config(void)
{
 8002350:	b480      	push	{r7}
 8002352:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;
 8002354:	4b0b      	ldr	r3, [pc, #44]	; (8002384 <mpu9250_ncs_pin_config+0x34>)
 8002356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002358:	4a0a      	ldr	r2, [pc, #40]	; (8002384 <mpu9250_ncs_pin_config+0x34>)
 800235a:	f043 0301 	orr.w	r3, r3, #1
 800235e:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PA0 as output pin*/
	GPIOA->MODER |= (1U<<0);
 8002360:	4b09      	ldr	r3, [pc, #36]	; (8002388 <mpu9250_ncs_pin_config+0x38>)
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	4a08      	ldr	r2, [pc, #32]	; (8002388 <mpu9250_ncs_pin_config+0x38>)
 8002366:	f043 0301 	orr.w	r3, r3, #1
 800236a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U<<1);
 800236c:	4b06      	ldr	r3, [pc, #24]	; (8002388 <mpu9250_ncs_pin_config+0x38>)
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	4a05      	ldr	r2, [pc, #20]	; (8002388 <mpu9250_ncs_pin_config+0x38>)
 8002372:	f023 0302 	bic.w	r3, r3, #2
 8002376:	6013      	str	r3, [r2, #0]
}
 8002378:	bf00      	nop
 800237a:	46bd      	mov	sp, r7
 800237c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002380:	4770      	bx	lr
 8002382:	bf00      	nop
 8002384:	40023800 	.word	0x40023800
 8002388:	40020000 	.word	0x40020000

0800238c <mpu9250_ncs_pin_set>:

void mpu9250_ncs_pin_set(void)
{
 800238c:	b480      	push	{r7}
 800238e:	af00      	add	r7, sp, #0
	GPIOA->ODR |=(1U<<0);
 8002390:	4b05      	ldr	r3, [pc, #20]	; (80023a8 <mpu9250_ncs_pin_set+0x1c>)
 8002392:	695b      	ldr	r3, [r3, #20]
 8002394:	4a04      	ldr	r2, [pc, #16]	; (80023a8 <mpu9250_ncs_pin_set+0x1c>)
 8002396:	f043 0301 	orr.w	r3, r3, #1
 800239a:	6153      	str	r3, [r2, #20]
}
 800239c:	bf00      	nop
 800239e:	46bd      	mov	sp, r7
 80023a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023a4:	4770      	bx	lr
 80023a6:	bf00      	nop
 80023a8:	40020000 	.word	0x40020000

080023ac <mpu9250_ncs_pin_reset>:

void mpu9250_ncs_pin_reset(void)
{
 80023ac:	b480      	push	{r7}
 80023ae:	af00      	add	r7, sp, #0
	GPIOA->ODR &= ~(1U<<0);
 80023b0:	4b05      	ldr	r3, [pc, #20]	; (80023c8 <mpu9250_ncs_pin_reset+0x1c>)
 80023b2:	695b      	ldr	r3, [r3, #20]
 80023b4:	4a04      	ldr	r2, [pc, #16]	; (80023c8 <mpu9250_ncs_pin_reset+0x1c>)
 80023b6:	f023 0301 	bic.w	r3, r3, #1
 80023ba:	6153      	str	r3, [r2, #20]
}
 80023bc:	bf00      	nop
 80023be:	46bd      	mov	sp, r7
 80023c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023c4:	4770      	bx	lr
 80023c6:	bf00      	nop
 80023c8:	40020000 	.word	0x40020000

080023cc <mpu9250_accel_config>:
}


/******************ACCEL**********************/
void mpu9250_accel_config(uint8_t mode)
{
 80023cc:	b580      	push	{r7, lr}
 80023ce:	b082      	sub	sp, #8
 80023d0:	af00      	add	r7, sp, #0
 80023d2:	4603      	mov	r3, r0
 80023d4:	71fb      	strb	r3, [r7, #7]

	switch(mode)
 80023d6:	79fb      	ldrb	r3, [r7, #7]
 80023d8:	2b18      	cmp	r3, #24
 80023da:	d852      	bhi.n	8002482 <mpu9250_accel_config+0xb6>
 80023dc:	a201      	add	r2, pc, #4	; (adr r2, 80023e4 <mpu9250_accel_config+0x18>)
 80023de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80023e2:	bf00      	nop
 80023e4:	08002449 	.word	0x08002449
 80023e8:	08002483 	.word	0x08002483
 80023ec:	08002483 	.word	0x08002483
 80023f0:	08002483 	.word	0x08002483
 80023f4:	08002483 	.word	0x08002483
 80023f8:	08002483 	.word	0x08002483
 80023fc:	08002483 	.word	0x08002483
 8002400:	08002483 	.word	0x08002483
 8002404:	08002459 	.word	0x08002459
 8002408:	08002483 	.word	0x08002483
 800240c:	08002483 	.word	0x08002483
 8002410:	08002483 	.word	0x08002483
 8002414:	08002483 	.word	0x08002483
 8002418:	08002483 	.word	0x08002483
 800241c:	08002483 	.word	0x08002483
 8002420:	08002483 	.word	0x08002483
 8002424:	08002467 	.word	0x08002467
 8002428:	08002483 	.word	0x08002483
 800242c:	08002483 	.word	0x08002483
 8002430:	08002483 	.word	0x08002483
 8002434:	08002483 	.word	0x08002483
 8002438:	08002483 	.word	0x08002483
 800243c:	08002483 	.word	0x08002483
 8002440:	08002483 	.word	0x08002483
 8002444:	08002475 	.word	0x08002475
	{
		case ACC_FULL_SCALE_2_G:
			g_accel_range = 2.0;
 8002448:	4938      	ldr	r1, [pc, #224]	; (800252c <mpu9250_accel_config+0x160>)
 800244a:	f04f 0200 	mov.w	r2, #0
 800244e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002452:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002456:	e015      	b.n	8002484 <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_4_G:
			g_accel_range = 4.0;
 8002458:	4934      	ldr	r1, [pc, #208]	; (800252c <mpu9250_accel_config+0x160>)
 800245a:	f04f 0200 	mov.w	r2, #0
 800245e:	4b34      	ldr	r3, [pc, #208]	; (8002530 <mpu9250_accel_config+0x164>)
 8002460:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002464:	e00e      	b.n	8002484 <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_8_G:
			g_accel_range = 8.0;
 8002466:	4931      	ldr	r1, [pc, #196]	; (800252c <mpu9250_accel_config+0x160>)
 8002468:	f04f 0200 	mov.w	r2, #0
 800246c:	4b31      	ldr	r3, [pc, #196]	; (8002534 <mpu9250_accel_config+0x168>)
 800246e:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002472:	e007      	b.n	8002484 <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_16_G:
			g_accel_range = 16.0;
 8002474:	492d      	ldr	r1, [pc, #180]	; (800252c <mpu9250_accel_config+0x160>)
 8002476:	f04f 0200 	mov.w	r2, #0
 800247a:	4b2f      	ldr	r3, [pc, #188]	; (8002538 <mpu9250_accel_config+0x16c>)
 800247c:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002480:	e000      	b.n	8002484 <mpu9250_accel_config+0xb8>
		default:
			break;
 8002482:	bf00      	nop
	}
	/************************************/
		//Ab hier eingefügter CODE

		/*H_RESET: Reset the PWR_MGMT_1 Register */
		spi_data_buff[0] = 0x6B;
 8002484:	4b2d      	ldr	r3, [pc, #180]	; (800253c <mpu9250_accel_config+0x170>)
 8002486:	226b      	movs	r2, #107	; 0x6b
 8002488:	701a      	strb	r2, [r3, #0]
		spi_data_buff[1] = (1U<<7);
 800248a:	4b2c      	ldr	r3, [pc, #176]	; (800253c <mpu9250_accel_config+0x170>)
 800248c:	2280      	movs	r2, #128	; 0x80
 800248e:	705a      	strb	r2, [r3, #1]

		dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 8002490:	4b2a      	ldr	r3, [pc, #168]	; (800253c <mpu9250_accel_config+0x170>)
 8002492:	2102      	movs	r1, #2
 8002494:	4618      	mov	r0, r3
 8002496:	f000 fbf1 	bl	8002c7c <dma2_stream3_spi_transfer>

		/*Wait for transfer completion*/
		while(!g_tx_cmplt){}
 800249a:	bf00      	nop
 800249c:	4b28      	ldr	r3, [pc, #160]	; (8002540 <mpu9250_accel_config+0x174>)
 800249e:	781b      	ldrb	r3, [r3, #0]
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d0fb      	beq.n	800249c <mpu9250_accel_config+0xd0>

		/*Reset flag*/
		g_tx_cmplt = 0;
 80024a4:	4b26      	ldr	r3, [pc, #152]	; (8002540 <mpu9250_accel_config+0x174>)
 80024a6:	2200      	movs	r2, #0
 80024a8:	701a      	strb	r2, [r3, #0]

		/*Disable Sleep Mode */
		spi_data_buff[0] = 0x6B;
 80024aa:	4b24      	ldr	r3, [pc, #144]	; (800253c <mpu9250_accel_config+0x170>)
 80024ac:	226b      	movs	r2, #107	; 0x6b
 80024ae:	701a      	strb	r2, [r3, #0]
		spi_data_buff[1] &= ~(1U<<6);
 80024b0:	4b22      	ldr	r3, [pc, #136]	; (800253c <mpu9250_accel_config+0x170>)
 80024b2:	785b      	ldrb	r3, [r3, #1]
 80024b4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80024b8:	b2da      	uxtb	r2, r3
 80024ba:	4b20      	ldr	r3, [pc, #128]	; (800253c <mpu9250_accel_config+0x170>)
 80024bc:	705a      	strb	r2, [r3, #1]

		dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 80024be:	4b1f      	ldr	r3, [pc, #124]	; (800253c <mpu9250_accel_config+0x170>)
 80024c0:	2102      	movs	r1, #2
 80024c2:	4618      	mov	r0, r3
 80024c4:	f000 fbda 	bl	8002c7c <dma2_stream3_spi_transfer>

		/*Wait for transfer completion*/
		while(!g_tx_cmplt){}
 80024c8:	bf00      	nop
 80024ca:	4b1d      	ldr	r3, [pc, #116]	; (8002540 <mpu9250_accel_config+0x174>)
 80024cc:	781b      	ldrb	r3, [r3, #0]
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d0fb      	beq.n	80024ca <mpu9250_accel_config+0xfe>

		/*Reset flag*/
		g_tx_cmplt = 0;
 80024d2:	4b1b      	ldr	r3, [pc, #108]	; (8002540 <mpu9250_accel_config+0x174>)
 80024d4:	2200      	movs	r2, #0
 80024d6:	701a      	strb	r2, [r3, #0]
	/************************************/

	/*Set to SPI mode only*/
	spi_data_buff[0] = MPU9250_ADDR_USER_CTRL;
 80024d8:	4b18      	ldr	r3, [pc, #96]	; (800253c <mpu9250_accel_config+0x170>)
 80024da:	226a      	movs	r2, #106	; 0x6a
 80024dc:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = USER_CTRL_I2C_IF_DIS;
 80024de:	4b17      	ldr	r3, [pc, #92]	; (800253c <mpu9250_accel_config+0x170>)
 80024e0:	2210      	movs	r2, #16
 80024e2:	705a      	strb	r2, [r3, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 80024e4:	4b15      	ldr	r3, [pc, #84]	; (800253c <mpu9250_accel_config+0x170>)
 80024e6:	2102      	movs	r1, #2
 80024e8:	4618      	mov	r0, r3
 80024ea:	f000 fbc7 	bl	8002c7c <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 80024ee:	bf00      	nop
 80024f0:	4b13      	ldr	r3, [pc, #76]	; (8002540 <mpu9250_accel_config+0x174>)
 80024f2:	781b      	ldrb	r3, [r3, #0]
 80024f4:	2b00      	cmp	r3, #0
 80024f6:	d0fb      	beq.n	80024f0 <mpu9250_accel_config+0x124>

	/*Reset flag*/
	g_tx_cmplt = 0;
 80024f8:	4b11      	ldr	r3, [pc, #68]	; (8002540 <mpu9250_accel_config+0x174>)
 80024fa:	2200      	movs	r2, #0
 80024fc:	701a      	strb	r2, [r3, #0]


	/*Configure the ACCEL Range*/
	spi_data_buff[0] = MPU9250_ADDR_ACCELCONFIG;
 80024fe:	4b0f      	ldr	r3, [pc, #60]	; (800253c <mpu9250_accel_config+0x170>)
 8002500:	221c      	movs	r2, #28
 8002502:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = mode;
 8002504:	4a0d      	ldr	r2, [pc, #52]	; (800253c <mpu9250_accel_config+0x170>)
 8002506:	79fb      	ldrb	r3, [r7, #7]
 8002508:	7053      	strb	r3, [r2, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 800250a:	4b0c      	ldr	r3, [pc, #48]	; (800253c <mpu9250_accel_config+0x170>)
 800250c:	2102      	movs	r1, #2
 800250e:	4618      	mov	r0, r3
 8002510:	f000 fbb4 	bl	8002c7c <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 8002514:	bf00      	nop
 8002516:	4b0a      	ldr	r3, [pc, #40]	; (8002540 <mpu9250_accel_config+0x174>)
 8002518:	781b      	ldrb	r3, [r3, #0]
 800251a:	2b00      	cmp	r3, #0
 800251c:	d0fb      	beq.n	8002516 <mpu9250_accel_config+0x14a>

	/*Reset flag*/
	g_tx_cmplt = 0;
 800251e:	4b08      	ldr	r3, [pc, #32]	; (8002540 <mpu9250_accel_config+0x174>)
 8002520:	2200      	movs	r2, #0
 8002522:	701a      	strb	r2, [r3, #0]
}
 8002524:	bf00      	nop
 8002526:	3708      	adds	r7, #8
 8002528:	46bd      	mov	sp, r7
 800252a:	bd80      	pop	{r7, pc}
 800252c:	20000318 	.word	0x20000318
 8002530:	40100000 	.word	0x40100000
 8002534:	40200000 	.word	0x40200000
 8002538:	40300000 	.word	0x40300000
 800253c:	20000308 	.word	0x20000308
 8002540:	2000030a 	.word	0x2000030a

08002544 <mpu9250_accel_gyro_update>:

void mpu9250_accel_gyro_update(void)
{
 8002544:	b580      	push	{r7, lr}
 8002546:	af00      	add	r7, sp, #0
	dummy_buff[0] =  MPU9250_ACCEL_XOUT_H |READ_FLAG;
 8002548:	4b0e      	ldr	r3, [pc, #56]	; (8002584 <mpu9250_accel_gyro_update+0x40>)
 800254a:	22bb      	movs	r2, #187	; 0xbb
 800254c:	701a      	strb	r2, [r3, #0]

	dma2_stream3_spi_transfer((uint32_t) dummy_buff, (uint32_t)(MAX_TRANSFER_LEN + 1));
 800254e:	4b0d      	ldr	r3, [pc, #52]	; (8002584 <mpu9250_accel_gyro_update+0x40>)
 8002550:	210f      	movs	r1, #15
 8002552:	4618      	mov	r0, r3
 8002554:	f000 fb92 	bl	8002c7c <dma2_stream3_spi_transfer>

	dma2_stream2_spi_receive((uint32_t)accel_gyro_buff,(uint32_t)(MAX_TRANSFER_LEN + 1));
 8002558:	4b0b      	ldr	r3, [pc, #44]	; (8002588 <mpu9250_accel_gyro_update+0x44>)
 800255a:	210f      	movs	r1, #15
 800255c:	4618      	mov	r0, r3
 800255e:	f000 fbb1 	bl	8002cc4 <dma2_stream2_spi_receive>

	Array_len_accel = sizeof(accel_gyro_buff)/sizeof(uint8_t);
 8002562:	4b0a      	ldr	r3, [pc, #40]	; (800258c <mpu9250_accel_gyro_update+0x48>)
 8002564:	220f      	movs	r2, #15
 8002566:	701a      	strb	r2, [r3, #0]
	Array_len_dummy =  sizeof(dummy_buff)/sizeof(uint8_t);
 8002568:	4b09      	ldr	r3, [pc, #36]	; (8002590 <mpu9250_accel_gyro_update+0x4c>)
 800256a:	220f      	movs	r2, #15
 800256c:	701a      	strb	r2, [r3, #0]

	/*Wait for reception completion*/
	while(!g_rx_cmplt){}
 800256e:	bf00      	nop
 8002570:	4b08      	ldr	r3, [pc, #32]	; (8002594 <mpu9250_accel_gyro_update+0x50>)
 8002572:	781b      	ldrb	r3, [r3, #0]
 8002574:	2b00      	cmp	r3, #0
 8002576:	d0fb      	beq.n	8002570 <mpu9250_accel_gyro_update+0x2c>

	/*Reset flag*/
	g_rx_cmplt = 0;
 8002578:	4b06      	ldr	r3, [pc, #24]	; (8002594 <mpu9250_accel_gyro_update+0x50>)
 800257a:	2200      	movs	r2, #0
 800257c:	701a      	strb	r2, [r3, #0]
}
 800257e:	bf00      	nop
 8002580:	bd80      	pop	{r7, pc}
 8002582:	bf00      	nop
 8002584:	200002e4 	.word	0x200002e4
 8002588:	200002f4 	.word	0x200002f4
 800258c:	20000303 	.word	0x20000303
 8002590:	20000304 	.word	0x20000304
 8002594:	2000030b 	.word	0x2000030b

08002598 <mpu9250_accel_get>:

float mpu9250_accel_get(uint8_t high_idx, uint8_t low_idx)
{
 8002598:	b580      	push	{r7, lr}
 800259a:	b084      	sub	sp, #16
 800259c:	af00      	add	r7, sp, #0
 800259e:	4603      	mov	r3, r0
 80025a0:	460a      	mov	r2, r1
 80025a2:	71fb      	strb	r3, [r7, #7]
 80025a4:	4613      	mov	r3, r2
 80025a6:	71bb      	strb	r3, [r7, #6]
	int16_t rslt;
	rslt  =  accel_gyro_buff[high_idx] << 8 | accel_gyro_buff[low_idx];
 80025a8:	79fb      	ldrb	r3, [r7, #7]
 80025aa:	4a23      	ldr	r2, [pc, #140]	; (8002638 <mpu9250_accel_get+0xa0>)
 80025ac:	5cd3      	ldrb	r3, [r2, r3]
 80025ae:	021b      	lsls	r3, r3, #8
 80025b0:	b21a      	sxth	r2, r3
 80025b2:	79bb      	ldrb	r3, [r7, #6]
 80025b4:	4920      	ldr	r1, [pc, #128]	; (8002638 <mpu9250_accel_get+0xa0>)
 80025b6:	5ccb      	ldrb	r3, [r1, r3]
 80025b8:	b21b      	sxth	r3, r3
 80025ba:	4313      	orrs	r3, r2
 80025bc:	81fb      	strh	r3, [r7, #14]

	if(rslt)
 80025be:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025c2:	2b00      	cmp	r3, #0
 80025c4:	d029      	beq.n	800261a <mpu9250_accel_get+0x82>
	{
		return ((float)- rslt) * g_accel_range / (float)0x8000 *9.81f;
 80025c6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80025ca:	425b      	negs	r3, r3
 80025cc:	ee07 3a90 	vmov	s15, r3
 80025d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80025d4:	ee17 0a90 	vmov	r0, s15
 80025d8:	f7fd ffbe 	bl	8000558 <__aeabi_f2d>
 80025dc:	4b17      	ldr	r3, [pc, #92]	; (800263c <mpu9250_accel_get+0xa4>)
 80025de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025e2:	f7fe f811 	bl	8000608 <__aeabi_dmul>
 80025e6:	4602      	mov	r2, r0
 80025e8:	460b      	mov	r3, r1
 80025ea:	4610      	mov	r0, r2
 80025ec:	4619      	mov	r1, r3
 80025ee:	f04f 0200 	mov.w	r2, #0
 80025f2:	4b13      	ldr	r3, [pc, #76]	; (8002640 <mpu9250_accel_get+0xa8>)
 80025f4:	f7fe f932 	bl	800085c <__aeabi_ddiv>
 80025f8:	4602      	mov	r2, r0
 80025fa:	460b      	mov	r3, r1
 80025fc:	4610      	mov	r0, r2
 80025fe:	4619      	mov	r1, r3
 8002600:	a30b      	add	r3, pc, #44	; (adr r3, 8002630 <mpu9250_accel_get+0x98>)
 8002602:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002606:	f7fd ffff 	bl	8000608 <__aeabi_dmul>
 800260a:	4602      	mov	r2, r0
 800260c:	460b      	mov	r3, r1
 800260e:	4610      	mov	r0, r2
 8002610:	4619      	mov	r1, r3
 8002612:	f7fe faf1 	bl	8000bf8 <__aeabi_d2f>
 8002616:	4603      	mov	r3, r0
 8002618:	e001      	b.n	800261e <mpu9250_accel_get+0x86>
	}
	else
	{
		return 0.0;
 800261a:	f04f 0300 	mov.w	r3, #0
	}
}
 800261e:	ee07 3a90 	vmov	s15, r3
 8002622:	eeb0 0a67 	vmov.f32	s0, s15
 8002626:	3710      	adds	r7, #16
 8002628:	46bd      	mov	sp, r7
 800262a:	bd80      	pop	{r7, pc}
 800262c:	f3af 8000 	nop.w
 8002630:	60000000 	.word	0x60000000
 8002634:	40239eb8 	.word	0x40239eb8
 8002638:	200002f4 	.word	0x200002f4
 800263c:	20000318 	.word	0x20000318
 8002640:	40e00000 	.word	0x40e00000
 8002644:	00000000 	.word	0x00000000

08002648 <mpu9250_gyro_get>:

float mpu9250_gyro_get(uint8_t high_idx, uint8_t low_idx)
{
 8002648:	b580      	push	{r7, lr}
 800264a:	b084      	sub	sp, #16
 800264c:	af00      	add	r7, sp, #0
 800264e:	4603      	mov	r3, r0
 8002650:	460a      	mov	r2, r1
 8002652:	71fb      	strb	r3, [r7, #7]
 8002654:	4613      	mov	r3, r2
 8002656:	71bb      	strb	r3, [r7, #6]
	int16_t rslt;
	rslt  =  accel_gyro_buff[high_idx] << 8 | accel_gyro_buff[low_idx];
 8002658:	79fb      	ldrb	r3, [r7, #7]
 800265a:	4a23      	ldr	r2, [pc, #140]	; (80026e8 <mpu9250_gyro_get+0xa0>)
 800265c:	5cd3      	ldrb	r3, [r2, r3]
 800265e:	021b      	lsls	r3, r3, #8
 8002660:	b21a      	sxth	r2, r3
 8002662:	79bb      	ldrb	r3, [r7, #6]
 8002664:	4920      	ldr	r1, [pc, #128]	; (80026e8 <mpu9250_gyro_get+0xa0>)
 8002666:	5ccb      	ldrb	r3, [r1, r3]
 8002668:	b21b      	sxth	r3, r3
 800266a:	4313      	orrs	r3, r2
 800266c:	81fb      	strh	r3, [r7, #14]

	if(rslt)
 800266e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002672:	2b00      	cmp	r3, #0
 8002674:	d029      	beq.n	80026ca <mpu9250_gyro_get+0x82>
	{
		return ((float)- rslt) * g_gyro_range / (float)0x8000 *(M_PI/180);
 8002676:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800267a:	425b      	negs	r3, r3
 800267c:	ee07 3a90 	vmov	s15, r3
 8002680:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002684:	ee17 0a90 	vmov	r0, s15
 8002688:	f7fd ff66 	bl	8000558 <__aeabi_f2d>
 800268c:	4b17      	ldr	r3, [pc, #92]	; (80026ec <mpu9250_gyro_get+0xa4>)
 800268e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002692:	f7fd ffb9 	bl	8000608 <__aeabi_dmul>
 8002696:	4602      	mov	r2, r0
 8002698:	460b      	mov	r3, r1
 800269a:	4610      	mov	r0, r2
 800269c:	4619      	mov	r1, r3
 800269e:	f04f 0200 	mov.w	r2, #0
 80026a2:	4b13      	ldr	r3, [pc, #76]	; (80026f0 <mpu9250_gyro_get+0xa8>)
 80026a4:	f7fe f8da 	bl	800085c <__aeabi_ddiv>
 80026a8:	4602      	mov	r2, r0
 80026aa:	460b      	mov	r3, r1
 80026ac:	4610      	mov	r0, r2
 80026ae:	4619      	mov	r1, r3
 80026b0:	a30b      	add	r3, pc, #44	; (adr r3, 80026e0 <mpu9250_gyro_get+0x98>)
 80026b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026b6:	f7fd ffa7 	bl	8000608 <__aeabi_dmul>
 80026ba:	4602      	mov	r2, r0
 80026bc:	460b      	mov	r3, r1
 80026be:	4610      	mov	r0, r2
 80026c0:	4619      	mov	r1, r3
 80026c2:	f7fe fa99 	bl	8000bf8 <__aeabi_d2f>
 80026c6:	4603      	mov	r3, r0
 80026c8:	e001      	b.n	80026ce <mpu9250_gyro_get+0x86>
	}
	else
	{
		return 0.0;
 80026ca:	f04f 0300 	mov.w	r3, #0
	}
}
 80026ce:	ee07 3a90 	vmov	s15, r3
 80026d2:	eeb0 0a67 	vmov.f32	s0, s15
 80026d6:	3710      	adds	r7, #16
 80026d8:	46bd      	mov	sp, r7
 80026da:	bd80      	pop	{r7, pc}
 80026dc:	f3af 8000 	nop.w
 80026e0:	a2529d39 	.word	0xa2529d39
 80026e4:	3f91df46 	.word	0x3f91df46
 80026e8:	200002f4 	.word	0x200002f4
 80026ec:	20000320 	.word	0x20000320
 80026f0:	40e00000 	.word	0x40e00000

080026f4 <mpu9250_get_acc_x>:
}



float mpu9250_get_acc_x(void)
{
 80026f4:	b580      	push	{r7, lr}
 80026f6:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(1,2);
 80026f8:	2102      	movs	r1, #2
 80026fa:	2001      	movs	r0, #1
 80026fc:	f7ff ff4c 	bl	8002598 <mpu9250_accel_get>
 8002700:	eef0 7a40 	vmov.f32	s15, s0
}
 8002704:	eeb0 0a67 	vmov.f32	s0, s15
 8002708:	bd80      	pop	{r7, pc}

0800270a <mpu9250_get_acc_y>:

float mpu9250_get_acc_y(void)
{
 800270a:	b580      	push	{r7, lr}
 800270c:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(3,4);
 800270e:	2104      	movs	r1, #4
 8002710:	2003      	movs	r0, #3
 8002712:	f7ff ff41 	bl	8002598 <mpu9250_accel_get>
 8002716:	eef0 7a40 	vmov.f32	s15, s0
}
 800271a:	eeb0 0a67 	vmov.f32	s0, s15
 800271e:	bd80      	pop	{r7, pc}

08002720 <mpu9250_get_acc_z>:

float mpu9250_get_acc_z(void)
{
 8002720:	b580      	push	{r7, lr}
 8002722:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(5,6);
 8002724:	2106      	movs	r1, #6
 8002726:	2005      	movs	r0, #5
 8002728:	f7ff ff36 	bl	8002598 <mpu9250_accel_get>
 800272c:	eef0 7a40 	vmov.f32	s15, s0
}
 8002730:	eeb0 0a67 	vmov.f32	s0, s15
 8002734:	bd80      	pop	{r7, pc}
	...

08002738 <mpu9250_gyro_config>:
	return mpu9250_accel_get(7,8);
}

/******************GYRO**********************/
void mpu9250_gyro_config(uint8_t mode)
{
 8002738:	b580      	push	{r7, lr}
 800273a:	b082      	sub	sp, #8
 800273c:	af00      	add	r7, sp, #0
 800273e:	4603      	mov	r3, r0
 8002740:	71fb      	strb	r3, [r7, #7]

	switch(mode)
 8002742:	79fb      	ldrb	r3, [r7, #7]
 8002744:	2b18      	cmp	r3, #24
 8002746:	d851      	bhi.n	80027ec <mpu9250_gyro_config+0xb4>
 8002748:	a201      	add	r2, pc, #4	; (adr r2, 8002750 <mpu9250_gyro_config+0x18>)
 800274a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800274e:	bf00      	nop
 8002750:	080027b5 	.word	0x080027b5
 8002754:	080027ed 	.word	0x080027ed
 8002758:	080027ed 	.word	0x080027ed
 800275c:	080027ed 	.word	0x080027ed
 8002760:	080027ed 	.word	0x080027ed
 8002764:	080027ed 	.word	0x080027ed
 8002768:	080027ed 	.word	0x080027ed
 800276c:	080027ed 	.word	0x080027ed
 8002770:	080027c3 	.word	0x080027c3
 8002774:	080027ed 	.word	0x080027ed
 8002778:	080027ed 	.word	0x080027ed
 800277c:	080027ed 	.word	0x080027ed
 8002780:	080027ed 	.word	0x080027ed
 8002784:	080027ed 	.word	0x080027ed
 8002788:	080027ed 	.word	0x080027ed
 800278c:	080027ed 	.word	0x080027ed
 8002790:	080027d1 	.word	0x080027d1
 8002794:	080027ed 	.word	0x080027ed
 8002798:	080027ed 	.word	0x080027ed
 800279c:	080027ed 	.word	0x080027ed
 80027a0:	080027ed 	.word	0x080027ed
 80027a4:	080027ed 	.word	0x080027ed
 80027a8:	080027ed 	.word	0x080027ed
 80027ac:	080027ed 	.word	0x080027ed
 80027b0:	080027df 	.word	0x080027df
	{
		case GYRO_FULL_SCALE_250:
			g_gyro_range = 250;
 80027b4:	4919      	ldr	r1, [pc, #100]	; (800281c <mpu9250_gyro_config+0xe4>)
 80027b6:	f04f 0200 	mov.w	r2, #0
 80027ba:	4b19      	ldr	r3, [pc, #100]	; (8002820 <mpu9250_gyro_config+0xe8>)
 80027bc:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 80027c0:	e015      	b.n	80027ee <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_500:
			g_gyro_range = 500;
 80027c2:	4916      	ldr	r1, [pc, #88]	; (800281c <mpu9250_gyro_config+0xe4>)
 80027c4:	f04f 0200 	mov.w	r2, #0
 80027c8:	4b16      	ldr	r3, [pc, #88]	; (8002824 <mpu9250_gyro_config+0xec>)
 80027ca:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 80027ce:	e00e      	b.n	80027ee <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_1000:
			g_gyro_range = 1000;
 80027d0:	4912      	ldr	r1, [pc, #72]	; (800281c <mpu9250_gyro_config+0xe4>)
 80027d2:	f04f 0200 	mov.w	r2, #0
 80027d6:	4b14      	ldr	r3, [pc, #80]	; (8002828 <mpu9250_gyro_config+0xf0>)
 80027d8:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 80027dc:	e007      	b.n	80027ee <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_2000:
			g_gyro_range = 2000;
 80027de:	490f      	ldr	r1, [pc, #60]	; (800281c <mpu9250_gyro_config+0xe4>)
 80027e0:	f04f 0200 	mov.w	r2, #0
 80027e4:	4b11      	ldr	r3, [pc, #68]	; (800282c <mpu9250_gyro_config+0xf4>)
 80027e6:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 80027ea:	e000      	b.n	80027ee <mpu9250_gyro_config+0xb6>
		default:
			break;
 80027ec:	bf00      	nop
	}
	/*Configure the GYRO Range*/
	spi_data_buff[0] = MPU9250_ADDR_GYROCONFIG;
 80027ee:	4b10      	ldr	r3, [pc, #64]	; (8002830 <mpu9250_gyro_config+0xf8>)
 80027f0:	221b      	movs	r2, #27
 80027f2:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = mode;
 80027f4:	4a0e      	ldr	r2, [pc, #56]	; (8002830 <mpu9250_gyro_config+0xf8>)
 80027f6:	79fb      	ldrb	r3, [r7, #7]
 80027f8:	7053      	strb	r3, [r2, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 80027fa:	4b0d      	ldr	r3, [pc, #52]	; (8002830 <mpu9250_gyro_config+0xf8>)
 80027fc:	2102      	movs	r1, #2
 80027fe:	4618      	mov	r0, r3
 8002800:	f000 fa3c 	bl	8002c7c <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 8002804:	bf00      	nop
 8002806:	4b0b      	ldr	r3, [pc, #44]	; (8002834 <mpu9250_gyro_config+0xfc>)
 8002808:	781b      	ldrb	r3, [r3, #0]
 800280a:	2b00      	cmp	r3, #0
 800280c:	d0fb      	beq.n	8002806 <mpu9250_gyro_config+0xce>

	/*Reset flag*/
	g_tx_cmplt = 0;
 800280e:	4b09      	ldr	r3, [pc, #36]	; (8002834 <mpu9250_gyro_config+0xfc>)
 8002810:	2200      	movs	r2, #0
 8002812:	701a      	strb	r2, [r3, #0]

}
 8002814:	bf00      	nop
 8002816:	3708      	adds	r7, #8
 8002818:	46bd      	mov	sp, r7
 800281a:	bd80      	pop	{r7, pc}
 800281c:	20000320 	.word	0x20000320
 8002820:	406f4000 	.word	0x406f4000
 8002824:	407f4000 	.word	0x407f4000
 8002828:	408f4000 	.word	0x408f4000
 800282c:	409f4000 	.word	0x409f4000
 8002830:	20000308 	.word	0x20000308
 8002834:	2000030a 	.word	0x2000030a

08002838 <mpu9250_get_gyro_x>:
	Array_len_dummy =  sizeof(dummy_buff)/sizeof(uint8_t);

}

float mpu9250_get_gyro_x(void)
{
 8002838:	b580      	push	{r7, lr}
 800283a:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(9,10);
 800283c:	210a      	movs	r1, #10
 800283e:	2009      	movs	r0, #9
 8002840:	f7ff ff02 	bl	8002648 <mpu9250_gyro_get>
 8002844:	eef0 7a40 	vmov.f32	s15, s0
}
 8002848:	eeb0 0a67 	vmov.f32	s0, s15
 800284c:	bd80      	pop	{r7, pc}

0800284e <mpu9250_get_gyro_y>:

float mpu9250_get_gyro_y(void)
{
 800284e:	b580      	push	{r7, lr}
 8002850:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(11,12);
 8002852:	210c      	movs	r1, #12
 8002854:	200b      	movs	r0, #11
 8002856:	f7ff fef7 	bl	8002648 <mpu9250_gyro_get>
 800285a:	eef0 7a40 	vmov.f32	s15, s0
}
 800285e:	eeb0 0a67 	vmov.f32	s0, s15
 8002862:	bd80      	pop	{r7, pc}

08002864 <mpu9250_get_gyro_z>:

float mpu9250_get_gyro_z(void)
{
 8002864:	b580      	push	{r7, lr}
 8002866:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(13,14);
 8002868:	210e      	movs	r1, #14
 800286a:	200d      	movs	r0, #13
 800286c:	f7ff feec 	bl	8002648 <mpu9250_gyro_get>
 8002870:	eef0 7a40 	vmov.f32	s15, s0
}
 8002874:	eeb0 0a67 	vmov.f32	s0, s15
 8002878:	bd80      	pop	{r7, pc}
	...

0800287c <DMA2_Stream3_IRQHandler>:

/********************************************/

/*****************ISR************************/
void DMA2_Stream3_IRQHandler(void)
{
 800287c:	b480      	push	{r7}
 800287e:	af00      	add	r7, sp, #0
	if((DMA2->LISR) & LISR_TCIF3)
 8002880:	4b16      	ldr	r3, [pc, #88]	; (80028dc <DMA2_Stream3_IRQHandler+0x60>)
 8002882:	681b      	ldr	r3, [r3, #0]
 8002884:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8002888:	2b00      	cmp	r3, #0
 800288a:	d00f      	beq.n	80028ac <DMA2_Stream3_IRQHandler+0x30>
	{
		//do something...
		g_tx_cmplt = 1;
 800288c:	4b14      	ldr	r3, [pc, #80]	; (80028e0 <DMA2_Stream3_IRQHandler+0x64>)
 800288e:	2201      	movs	r2, #1
 8002890:	701a      	strb	r2, [r3, #0]
		//DMA2_Stream3->CR &= ~DMA_SxCR_EN;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTCIF3;
 8002892:	4b12      	ldr	r3, [pc, #72]	; (80028dc <DMA2_Stream3_IRQHandler+0x60>)
 8002894:	689b      	ldr	r3, [r3, #8]
 8002896:	4a11      	ldr	r2, [pc, #68]	; (80028dc <DMA2_Stream3_IRQHandler+0x60>)
 8002898:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800289c:	6093      	str	r3, [r2, #8]
		data_tx++;
 800289e:	4b11      	ldr	r3, [pc, #68]	; (80028e4 <DMA2_Stream3_IRQHandler+0x68>)
 80028a0:	881b      	ldrh	r3, [r3, #0]
 80028a2:	3301      	adds	r3, #1
 80028a4:	b29a      	uxth	r2, r3
 80028a6:	4b0f      	ldr	r3, [pc, #60]	; (80028e4 <DMA2_Stream3_IRQHandler+0x68>)
 80028a8:	801a      	strh	r2, [r3, #0]
        //do something...
		error_tx++;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTEIF3;
	}
}
 80028aa:	e011      	b.n	80028d0 <DMA2_Stream3_IRQHandler+0x54>
	else if((DMA2->LISR) & LISR_TEIF3)
 80028ac:	4b0b      	ldr	r3, [pc, #44]	; (80028dc <DMA2_Stream3_IRQHandler+0x60>)
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80028b4:	2b00      	cmp	r3, #0
 80028b6:	d00b      	beq.n	80028d0 <DMA2_Stream3_IRQHandler+0x54>
		error_tx++;
 80028b8:	4b0b      	ldr	r3, [pc, #44]	; (80028e8 <DMA2_Stream3_IRQHandler+0x6c>)
 80028ba:	781b      	ldrb	r3, [r3, #0]
 80028bc:	3301      	adds	r3, #1
 80028be:	b2da      	uxtb	r2, r3
 80028c0:	4b09      	ldr	r3, [pc, #36]	; (80028e8 <DMA2_Stream3_IRQHandler+0x6c>)
 80028c2:	701a      	strb	r2, [r3, #0]
		DMA2->LIFCR |=LIFCR_CTEIF3;
 80028c4:	4b05      	ldr	r3, [pc, #20]	; (80028dc <DMA2_Stream3_IRQHandler+0x60>)
 80028c6:	689b      	ldr	r3, [r3, #8]
 80028c8:	4a04      	ldr	r2, [pc, #16]	; (80028dc <DMA2_Stream3_IRQHandler+0x60>)
 80028ca:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80028ce:	6093      	str	r3, [r2, #8]
}
 80028d0:	bf00      	nop
 80028d2:	46bd      	mov	sp, r7
 80028d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028d8:	4770      	bx	lr
 80028da:	bf00      	nop
 80028dc:	40026400 	.word	0x40026400
 80028e0:	2000030a 	.word	0x2000030a
 80028e4:	2000030c 	.word	0x2000030c
 80028e8:	20000310 	.word	0x20000310

080028ec <DMA2_Stream2_IRQHandler>:

void DMA2_Stream2_IRQHandler(void)
{
 80028ec:	b480      	push	{r7}
 80028ee:	af00      	add	r7, sp, #0
	if((DMA2->LISR) & LISR_TCIF2)
 80028f0:	4b16      	ldr	r3, [pc, #88]	; (800294c <DMA2_Stream2_IRQHandler+0x60>)
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	d00f      	beq.n	800291c <DMA2_Stream2_IRQHandler+0x30>
	{
		//do something...
		g_rx_cmplt = 1;
 80028fc:	4b14      	ldr	r3, [pc, #80]	; (8002950 <DMA2_Stream2_IRQHandler+0x64>)
 80028fe:	2201      	movs	r2, #1
 8002900:	701a      	strb	r2, [r3, #0]
		//DMA2_Stream2->CR&=~DMA_SxCR_EN;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTCIF2;
 8002902:	4b12      	ldr	r3, [pc, #72]	; (800294c <DMA2_Stream2_IRQHandler+0x60>)
 8002904:	689b      	ldr	r3, [r3, #8]
 8002906:	4a11      	ldr	r2, [pc, #68]	; (800294c <DMA2_Stream2_IRQHandler+0x60>)
 8002908:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800290c:	6093      	str	r3, [r2, #8]
		data_rx++;
 800290e:	4b11      	ldr	r3, [pc, #68]	; (8002954 <DMA2_Stream2_IRQHandler+0x68>)
 8002910:	881b      	ldrh	r3, [r3, #0]
 8002912:	3301      	adds	r3, #1
 8002914:	b29a      	uxth	r2, r3
 8002916:	4b0f      	ldr	r3, [pc, #60]	; (8002954 <DMA2_Stream2_IRQHandler+0x68>)
 8002918:	801a      	strh	r2, [r3, #0]
        //do something...
		error_rx++;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTEIF2;
	}
}
 800291a:	e011      	b.n	8002940 <DMA2_Stream2_IRQHandler+0x54>
	else if((DMA2->LISR) & LISR_TEIF2)
 800291c:	4b0b      	ldr	r3, [pc, #44]	; (800294c <DMA2_Stream2_IRQHandler+0x60>)
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002924:	2b00      	cmp	r3, #0
 8002926:	d00b      	beq.n	8002940 <DMA2_Stream2_IRQHandler+0x54>
		error_rx++;
 8002928:	4b0b      	ldr	r3, [pc, #44]	; (8002958 <DMA2_Stream2_IRQHandler+0x6c>)
 800292a:	781b      	ldrb	r3, [r3, #0]
 800292c:	3301      	adds	r3, #1
 800292e:	b2da      	uxtb	r2, r3
 8002930:	4b09      	ldr	r3, [pc, #36]	; (8002958 <DMA2_Stream2_IRQHandler+0x6c>)
 8002932:	701a      	strb	r2, [r3, #0]
		DMA2->LIFCR |=LIFCR_CTEIF2;
 8002934:	4b05      	ldr	r3, [pc, #20]	; (800294c <DMA2_Stream2_IRQHandler+0x60>)
 8002936:	689b      	ldr	r3, [r3, #8]
 8002938:	4a04      	ldr	r2, [pc, #16]	; (800294c <DMA2_Stream2_IRQHandler+0x60>)
 800293a:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800293e:	6093      	str	r3, [r2, #8]
}
 8002940:	bf00      	nop
 8002942:	46bd      	mov	sp, r7
 8002944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002948:	4770      	bx	lr
 800294a:	bf00      	nop
 800294c:	40026400 	.word	0x40026400
 8002950:	2000030b 	.word	0x2000030b
 8002954:	2000030e 	.word	0x2000030e
 8002958:	20000311 	.word	0x20000311

0800295c <__NVIC_EnableIRQ>:
{
 800295c:	b480      	push	{r7}
 800295e:	b083      	sub	sp, #12
 8002960:	af00      	add	r7, sp, #0
 8002962:	4603      	mov	r3, r0
 8002964:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002966:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800296a:	2b00      	cmp	r3, #0
 800296c:	db0b      	blt.n	8002986 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800296e:	79fb      	ldrb	r3, [r7, #7]
 8002970:	f003 021f 	and.w	r2, r3, #31
 8002974:	4907      	ldr	r1, [pc, #28]	; (8002994 <__NVIC_EnableIRQ+0x38>)
 8002976:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800297a:	095b      	lsrs	r3, r3, #5
 800297c:	2001      	movs	r0, #1
 800297e:	fa00 f202 	lsl.w	r2, r0, r2
 8002982:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8002986:	bf00      	nop
 8002988:	370c      	adds	r7, #12
 800298a:	46bd      	mov	sp, r7
 800298c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002990:	4770      	bx	lr
 8002992:	bf00      	nop
 8002994:	e000e100 	.word	0xe000e100

08002998 <spi1_dma_init>:
#define HIFSR_TCIF5		(1U<<11)
#define HIFSR_TCIF6		(1U<<21)


void spi1_dma_init(void)
{
 8002998:	b480      	push	{r7}
 800299a:	af00      	add	r7, sp, #0

	/*************GPIO Configuration*****************/
	/*Enable clock to PORT of SPI pins*/
	RCC->AHB1ENR |= GPIOAEN;
 800299c:	4b56      	ldr	r3, [pc, #344]	; (8002af8 <spi1_dma_init+0x160>)
 800299e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029a0:	4a55      	ldr	r2, [pc, #340]	; (8002af8 <spi1_dma_init+0x160>)
 80029a2:	f043 0301 	orr.w	r3, r3, #1
 80029a6:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set SPI pins mode to alternate function mode*/
	/*PA5*/
	GPIOA->MODER &=~(1U<<10);
 80029a8:	4b54      	ldr	r3, [pc, #336]	; (8002afc <spi1_dma_init+0x164>)
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	4a53      	ldr	r2, [pc, #332]	; (8002afc <spi1_dma_init+0x164>)
 80029ae:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80029b2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<11);
 80029b4:	4b51      	ldr	r3, [pc, #324]	; (8002afc <spi1_dma_init+0x164>)
 80029b6:	681b      	ldr	r3, [r3, #0]
 80029b8:	4a50      	ldr	r2, [pc, #320]	; (8002afc <spi1_dma_init+0x164>)
 80029ba:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80029be:	6013      	str	r3, [r2, #0]

	/*PA6*/
	GPIOA->MODER &=~(1U<<12);
 80029c0:	4b4e      	ldr	r3, [pc, #312]	; (8002afc <spi1_dma_init+0x164>)
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	4a4d      	ldr	r2, [pc, #308]	; (8002afc <spi1_dma_init+0x164>)
 80029c6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80029ca:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<13);
 80029cc:	4b4b      	ldr	r3, [pc, #300]	; (8002afc <spi1_dma_init+0x164>)
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	4a4a      	ldr	r2, [pc, #296]	; (8002afc <spi1_dma_init+0x164>)
 80029d2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80029d6:	6013      	str	r3, [r2, #0]

	/*PA7*/
	GPIOA->MODER &=~(1U<<14);
 80029d8:	4b48      	ldr	r3, [pc, #288]	; (8002afc <spi1_dma_init+0x164>)
 80029da:	681b      	ldr	r3, [r3, #0]
 80029dc:	4a47      	ldr	r2, [pc, #284]	; (8002afc <spi1_dma_init+0x164>)
 80029de:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80029e2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<15);
 80029e4:	4b45      	ldr	r3, [pc, #276]	; (8002afc <spi1_dma_init+0x164>)
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	4a44      	ldr	r2, [pc, #272]	; (8002afc <spi1_dma_init+0x164>)
 80029ea:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80029ee:	6013      	str	r3, [r2, #0]

	/*Set alternate type to AF5(SPI1)*/
	/*PA5*/
	GPIOA->AFR[0]  |= (1U<<20);
 80029f0:	4b42      	ldr	r3, [pc, #264]	; (8002afc <spi1_dma_init+0x164>)
 80029f2:	6a1b      	ldr	r3, [r3, #32]
 80029f4:	4a41      	ldr	r2, [pc, #260]	; (8002afc <spi1_dma_init+0x164>)
 80029f6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80029fa:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<21);
 80029fc:	4b3f      	ldr	r3, [pc, #252]	; (8002afc <spi1_dma_init+0x164>)
 80029fe:	6a1b      	ldr	r3, [r3, #32]
 8002a00:	4a3e      	ldr	r2, [pc, #248]	; (8002afc <spi1_dma_init+0x164>)
 8002a02:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002a06:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<22);
 8002a08:	4b3c      	ldr	r3, [pc, #240]	; (8002afc <spi1_dma_init+0x164>)
 8002a0a:	6a1b      	ldr	r3, [r3, #32]
 8002a0c:	4a3b      	ldr	r2, [pc, #236]	; (8002afc <spi1_dma_init+0x164>)
 8002a0e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002a12:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<23);
 8002a14:	4b39      	ldr	r3, [pc, #228]	; (8002afc <spi1_dma_init+0x164>)
 8002a16:	6a1b      	ldr	r3, [r3, #32]
 8002a18:	4a38      	ldr	r2, [pc, #224]	; (8002afc <spi1_dma_init+0x164>)
 8002a1a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002a1e:	6213      	str	r3, [r2, #32]

	/*PA6*/
	GPIOA->AFR[0]  |= (1U<<24);
 8002a20:	4b36      	ldr	r3, [pc, #216]	; (8002afc <spi1_dma_init+0x164>)
 8002a22:	6a1b      	ldr	r3, [r3, #32]
 8002a24:	4a35      	ldr	r2, [pc, #212]	; (8002afc <spi1_dma_init+0x164>)
 8002a26:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002a2a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<25);
 8002a2c:	4b33      	ldr	r3, [pc, #204]	; (8002afc <spi1_dma_init+0x164>)
 8002a2e:	6a1b      	ldr	r3, [r3, #32]
 8002a30:	4a32      	ldr	r2, [pc, #200]	; (8002afc <spi1_dma_init+0x164>)
 8002a32:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 8002a36:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<26);
 8002a38:	4b30      	ldr	r3, [pc, #192]	; (8002afc <spi1_dma_init+0x164>)
 8002a3a:	6a1b      	ldr	r3, [r3, #32]
 8002a3c:	4a2f      	ldr	r2, [pc, #188]	; (8002afc <spi1_dma_init+0x164>)
 8002a3e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8002a42:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<27);
 8002a44:	4b2d      	ldr	r3, [pc, #180]	; (8002afc <spi1_dma_init+0x164>)
 8002a46:	6a1b      	ldr	r3, [r3, #32]
 8002a48:	4a2c      	ldr	r2, [pc, #176]	; (8002afc <spi1_dma_init+0x164>)
 8002a4a:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8002a4e:	6213      	str	r3, [r2, #32]

	/*PA7*/
	GPIOA->AFR[0]  |= (1U<<28);
 8002a50:	4b2a      	ldr	r3, [pc, #168]	; (8002afc <spi1_dma_init+0x164>)
 8002a52:	6a1b      	ldr	r3, [r3, #32]
 8002a54:	4a29      	ldr	r2, [pc, #164]	; (8002afc <spi1_dma_init+0x164>)
 8002a56:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002a5a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<29);
 8002a5c:	4b27      	ldr	r3, [pc, #156]	; (8002afc <spi1_dma_init+0x164>)
 8002a5e:	6a1b      	ldr	r3, [r3, #32]
 8002a60:	4a26      	ldr	r2, [pc, #152]	; (8002afc <spi1_dma_init+0x164>)
 8002a62:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 8002a66:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<30);
 8002a68:	4b24      	ldr	r3, [pc, #144]	; (8002afc <spi1_dma_init+0x164>)
 8002a6a:	6a1b      	ldr	r3, [r3, #32]
 8002a6c:	4a23      	ldr	r2, [pc, #140]	; (8002afc <spi1_dma_init+0x164>)
 8002a6e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8002a72:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<31);
 8002a74:	4b21      	ldr	r3, [pc, #132]	; (8002afc <spi1_dma_init+0x164>)
 8002a76:	6a1b      	ldr	r3, [r3, #32]
 8002a78:	4a20      	ldr	r2, [pc, #128]	; (8002afc <spi1_dma_init+0x164>)
 8002a7a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002a7e:	6213      	str	r3, [r2, #32]

	/*************SPI Configuration*****************/

	/*Enable clock access to SPI1 module*/
	RCC->APB2ENR |=SPI1EN;
 8002a80:	4b1d      	ldr	r3, [pc, #116]	; (8002af8 <spi1_dma_init+0x160>)
 8002a82:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002a84:	4a1c      	ldr	r2, [pc, #112]	; (8002af8 <spi1_dma_init+0x160>)
 8002a86:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002a8a:	6453      	str	r3, [r2, #68]	; 0x44

	/*Set software slave management*/
	SPI1->CR1 |= CR1_SSM|CR1_SSI;
 8002a8c:	4b1c      	ldr	r3, [pc, #112]	; (8002b00 <spi1_dma_init+0x168>)
 8002a8e:	681b      	ldr	r3, [r3, #0]
 8002a90:	4a1b      	ldr	r2, [pc, #108]	; (8002b00 <spi1_dma_init+0x168>)
 8002a92:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8002a96:	6013      	str	r3, [r2, #0]

	/*Set SPI to master mode*/
	SPI1->CR1 |=CR1_MSTR;
 8002a98:	4b19      	ldr	r3, [pc, #100]	; (8002b00 <spi1_dma_init+0x168>)
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	4a18      	ldr	r2, [pc, #96]	; (8002b00 <spi1_dma_init+0x168>)
 8002a9e:	f043 0304 	orr.w	r3, r3, #4
 8002aa2:	6013      	str	r3, [r2, #0]

	/*Set CPHA and CPOL*/
	SPI1->CR1 |=SPI_CR1_BR_0|CR1_PHA|CR1_CPOL;
 8002aa4:	4b16      	ldr	r3, [pc, #88]	; (8002b00 <spi1_dma_init+0x168>)
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	4a15      	ldr	r2, [pc, #84]	; (8002b00 <spi1_dma_init+0x168>)
 8002aaa:	f043 030b 	orr.w	r3, r3, #11
 8002aae:	6013      	str	r3, [r2, #0]

	/*Set clock divider : PCLCK/4*/
	SPI1->CR1 |=(1U<<3);
 8002ab0:	4b13      	ldr	r3, [pc, #76]	; (8002b00 <spi1_dma_init+0x168>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	4a12      	ldr	r2, [pc, #72]	; (8002b00 <spi1_dma_init+0x168>)
 8002ab6:	f043 0308 	orr.w	r3, r3, #8
 8002aba:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1U<<4);
 8002abc:	4b10      	ldr	r3, [pc, #64]	; (8002b00 <spi1_dma_init+0x168>)
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	4a0f      	ldr	r2, [pc, #60]	; (8002b00 <spi1_dma_init+0x168>)
 8002ac2:	f023 0310 	bic.w	r3, r3, #16
 8002ac6:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1U<<5);
 8002ac8:	4b0d      	ldr	r3, [pc, #52]	; (8002b00 <spi1_dma_init+0x168>)
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	4a0c      	ldr	r2, [pc, #48]	; (8002b00 <spi1_dma_init+0x168>)
 8002ace:	f023 0320 	bic.w	r3, r3, #32
 8002ad2:	6013      	str	r3, [r2, #0]
//	SPI1->CR1 |= (1U<<3);
//	SPI1->CR1 |= (1U<<4);
//	SPI1->CR1 &=~(1U<<5);

	/*Select to use DMA*/
	SPI1->CR2 |=CR2_RXDMAEN|CR2_TXDMAEN;
 8002ad4:	4b0a      	ldr	r3, [pc, #40]	; (8002b00 <spi1_dma_init+0x168>)
 8002ad6:	685b      	ldr	r3, [r3, #4]
 8002ad8:	4a09      	ldr	r2, [pc, #36]	; (8002b00 <spi1_dma_init+0x168>)
 8002ada:	f043 0303 	orr.w	r3, r3, #3
 8002ade:	6053      	str	r3, [r2, #4]

    /*Enable SPI*/
	SPI1->CR1 |=CR1_SPE;
 8002ae0:	4b07      	ldr	r3, [pc, #28]	; (8002b00 <spi1_dma_init+0x168>)
 8002ae2:	681b      	ldr	r3, [r3, #0]
 8002ae4:	4a06      	ldr	r2, [pc, #24]	; (8002b00 <spi1_dma_init+0x168>)
 8002ae6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002aea:	6013      	str	r3, [r2, #0]
}
 8002aec:	bf00      	nop
 8002aee:	46bd      	mov	sp, r7
 8002af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002af4:	4770      	bx	lr
 8002af6:	bf00      	nop
 8002af8:	40023800 	.word	0x40023800
 8002afc:	40020000 	.word	0x40020000
 8002b00:	40013000 	.word	0x40013000

08002b04 <dma2_stream3_spi_tx_init>:

void dma2_stream3_spi_tx_init(void)
{
 8002b04:	b580      	push	{r7, lr}
 8002b06:	af00      	add	r7, sp, #0
	/************DMA Configuration**********/
	/*Enable clock access to DMA*/
	RCC->AHB1ENR |= DMA2EN;
 8002b08:	4b2b      	ldr	r3, [pc, #172]	; (8002bb8 <dma2_stream3_spi_tx_init+0xb4>)
 8002b0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b0c:	4a2a      	ldr	r2, [pc, #168]	; (8002bb8 <dma2_stream3_spi_tx_init+0xb4>)
 8002b0e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002b12:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA2_Stream3->CR = 0;
 8002b14:	4b29      	ldr	r3, [pc, #164]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b16:	2200      	movs	r2, #0
 8002b18:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA2_Stream3->CR & DMA_SCR_EN)){}
 8002b1a:	bf00      	nop
 8002b1c:	4b27      	ldr	r3, [pc, #156]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	f003 0301 	and.w	r3, r3, #1
 8002b24:	2b00      	cmp	r3, #0
 8002b26:	d1f9      	bne.n	8002b1c <dma2_stream3_spi_tx_init+0x18>

    /*******Configure DMA Stream parameters************/
	/*Enable memory addr increment*/
	DMA2_Stream3->CR |= DMA_SCR_MINC;
 8002b28:	4b24      	ldr	r3, [pc, #144]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	4a23      	ldr	r2, [pc, #140]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b2e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002b32:	6013      	str	r3, [r2, #0]

	/*Select Channel :  CH3*/
	DMA2_Stream3->CR |= (1U<<25);
 8002b34:	4b21      	ldr	r3, [pc, #132]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	4a20      	ldr	r2, [pc, #128]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b3a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002b3e:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR |= (1U<<26);
 8002b40:	4b1e      	ldr	r3, [pc, #120]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	4a1d      	ldr	r2, [pc, #116]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b46:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8002b4a:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR &= ~(1U<<27);
 8002b4c:	4b1b      	ldr	r3, [pc, #108]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	4a1a      	ldr	r2, [pc, #104]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b52:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8002b56:	6013      	str	r3, [r2, #0]

	/*Set transfer direction : Memory to Peripheral*/
	DMA2_Stream3->CR |=(1U<<6);
 8002b58:	4b18      	ldr	r3, [pc, #96]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	4a17      	ldr	r2, [pc, #92]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002b62:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR &=~(1U<<7);
 8002b64:	4b15      	ldr	r3, [pc, #84]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	4a14      	ldr	r2, [pc, #80]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b6a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002b6e:	6013      	str	r3, [r2, #0]

	/*Enable transfer complete interrupt*/
	DMA2_Stream3->CR |= DMA_SCR_TCIE;
 8002b70:	4b12      	ldr	r3, [pc, #72]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	4a11      	ldr	r2, [pc, #68]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b76:	f043 0310 	orr.w	r3, r3, #16
 8002b7a:	6013      	str	r3, [r2, #0]

	/*Enable transfer error interrupt*/
	DMA2_Stream3->CR |= DMA_SCR_TEIE;
 8002b7c:	4b0f      	ldr	r3, [pc, #60]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	4a0e      	ldr	r2, [pc, #56]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b82:	f043 0304 	orr.w	r3, r3, #4
 8002b86:	6013      	str	r3, [r2, #0]

	/*Disable direct mode*/
	DMA2_Stream3->FCR |=DMA_SFCR_DMDIS;
 8002b88:	4b0c      	ldr	r3, [pc, #48]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b8a:	695b      	ldr	r3, [r3, #20]
 8002b8c:	4a0b      	ldr	r2, [pc, #44]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b8e:	f043 0304 	orr.w	r3, r3, #4
 8002b92:	6153      	str	r3, [r2, #20]

	/*Set DMA FIFO threshold*/
	DMA2_Stream3->FCR |=(1U<<0);
 8002b94:	4b09      	ldr	r3, [pc, #36]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b96:	695b      	ldr	r3, [r3, #20]
 8002b98:	4a08      	ldr	r2, [pc, #32]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002b9a:	f043 0301 	orr.w	r3, r3, #1
 8002b9e:	6153      	str	r3, [r2, #20]
	DMA2_Stream3->FCR |=(1U<<1);
 8002ba0:	4b06      	ldr	r3, [pc, #24]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002ba2:	695b      	ldr	r3, [r3, #20]
 8002ba4:	4a05      	ldr	r2, [pc, #20]	; (8002bbc <dma2_stream3_spi_tx_init+0xb8>)
 8002ba6:	f043 0302 	orr.w	r3, r3, #2
 8002baa:	6153      	str	r3, [r2, #20]

	/*Enable DMA Stream interrupt in the NVIC*/
	NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 8002bac:	203b      	movs	r0, #59	; 0x3b
 8002bae:	f7ff fed5 	bl	800295c <__NVIC_EnableIRQ>

}
 8002bb2:	bf00      	nop
 8002bb4:	bd80      	pop	{r7, pc}
 8002bb6:	bf00      	nop
 8002bb8:	40023800 	.word	0x40023800
 8002bbc:	40026458 	.word	0x40026458

08002bc0 <dma2_stream2_spi_rx_init>:

void dma2_stream2_spi_rx_init(void)
{
 8002bc0:	b580      	push	{r7, lr}
 8002bc2:	af00      	add	r7, sp, #0
	/************DMA Configuration**********/
	/*Enable clock access to DMA*/
	RCC->AHB1ENR |= DMA2EN;
 8002bc4:	4b2b      	ldr	r3, [pc, #172]	; (8002c74 <dma2_stream2_spi_rx_init+0xb4>)
 8002bc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bc8:	4a2a      	ldr	r2, [pc, #168]	; (8002c74 <dma2_stream2_spi_rx_init+0xb4>)
 8002bca:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002bce:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA2_Stream2->CR = 0;
 8002bd0:	4b29      	ldr	r3, [pc, #164]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002bd2:	2200      	movs	r2, #0
 8002bd4:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA2_Stream2->CR & DMA_SCR_EN)){}
 8002bd6:	bf00      	nop
 8002bd8:	4b27      	ldr	r3, [pc, #156]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002bda:	681b      	ldr	r3, [r3, #0]
 8002bdc:	f003 0301 	and.w	r3, r3, #1
 8002be0:	2b00      	cmp	r3, #0
 8002be2:	d1f9      	bne.n	8002bd8 <dma2_stream2_spi_rx_init+0x18>

    /*******Configure DMA Stream parameters************/
	/*Enable memory addr increment*/
	DMA2_Stream2->CR |= DMA_SCR_MINC;
 8002be4:	4b24      	ldr	r3, [pc, #144]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	4a23      	ldr	r2, [pc, #140]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002bea:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002bee:	6013      	str	r3, [r2, #0]

	/*Select Channel :  CH3*/
	DMA2_Stream2->CR |= (1U<<25);
 8002bf0:	4b21      	ldr	r3, [pc, #132]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	4a20      	ldr	r2, [pc, #128]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002bf6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002bfa:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR |= (1U<<26);
 8002bfc:	4b1e      	ldr	r3, [pc, #120]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	4a1d      	ldr	r2, [pc, #116]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c02:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8002c06:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR &= ~(1U<<27);
 8002c08:	4b1b      	ldr	r3, [pc, #108]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	4a1a      	ldr	r2, [pc, #104]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c0e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8002c12:	6013      	str	r3, [r2, #0]

	/*Set transfer direction : Peripheral to Memory*/
	DMA2_Stream2->CR &=~(1U<<6);
 8002c14:	4b18      	ldr	r3, [pc, #96]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c16:	681b      	ldr	r3, [r3, #0]
 8002c18:	4a17      	ldr	r2, [pc, #92]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c1a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002c1e:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR &=~(1U<<7);
 8002c20:	4b15      	ldr	r3, [pc, #84]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	4a14      	ldr	r2, [pc, #80]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c26:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002c2a:	6013      	str	r3, [r2, #0]

	/*Enable transfer complete interrupt*/
	DMA2_Stream2->CR |= DMA_SCR_TCIE;
 8002c2c:	4b12      	ldr	r3, [pc, #72]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	4a11      	ldr	r2, [pc, #68]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c32:	f043 0310 	orr.w	r3, r3, #16
 8002c36:	6013      	str	r3, [r2, #0]

	/*Enable transfer error interrupt*/
	DMA2_Stream2->CR |= DMA_SCR_TEIE;
 8002c38:	4b0f      	ldr	r3, [pc, #60]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4a0e      	ldr	r2, [pc, #56]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c3e:	f043 0304 	orr.w	r3, r3, #4
 8002c42:	6013      	str	r3, [r2, #0]

	/*Disable direct mode*/
	DMA2_Stream2->FCR |=DMA_SFCR_DMDIS;
 8002c44:	4b0c      	ldr	r3, [pc, #48]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c46:	695b      	ldr	r3, [r3, #20]
 8002c48:	4a0b      	ldr	r2, [pc, #44]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c4a:	f043 0304 	orr.w	r3, r3, #4
 8002c4e:	6153      	str	r3, [r2, #20]

	/*Set DMA FIFO threshold :  Full*/
	DMA2_Stream2->FCR |=(1U<<0);
 8002c50:	4b09      	ldr	r3, [pc, #36]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c52:	695b      	ldr	r3, [r3, #20]
 8002c54:	4a08      	ldr	r2, [pc, #32]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c56:	f043 0301 	orr.w	r3, r3, #1
 8002c5a:	6153      	str	r3, [r2, #20]
	DMA2_Stream2->FCR |=(1U<<1);
 8002c5c:	4b06      	ldr	r3, [pc, #24]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c5e:	695b      	ldr	r3, [r3, #20]
 8002c60:	4a05      	ldr	r2, [pc, #20]	; (8002c78 <dma2_stream2_spi_rx_init+0xb8>)
 8002c62:	f043 0302 	orr.w	r3, r3, #2
 8002c66:	6153      	str	r3, [r2, #20]

	/*Enable DMA Stream interrupt in the NVIC*/
	NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8002c68:	203a      	movs	r0, #58	; 0x3a
 8002c6a:	f7ff fe77 	bl	800295c <__NVIC_EnableIRQ>


}
 8002c6e:	bf00      	nop
 8002c70:	bd80      	pop	{r7, pc}
 8002c72:	bf00      	nop
 8002c74:	40023800 	.word	0x40023800
 8002c78:	40026440 	.word	0x40026440

08002c7c <dma2_stream3_spi_transfer>:

void dma2_stream3_spi_transfer(uint32_t msg_to_send, uint32_t msg_len)
{
 8002c7c:	b480      	push	{r7}
 8002c7e:	b083      	sub	sp, #12
 8002c80:	af00      	add	r7, sp, #0
 8002c82:	6078      	str	r0, [r7, #4]
 8002c84:	6039      	str	r1, [r7, #0]
	/*Clear interrupt flags*/
	DMA2->LIFCR = LIFCR_CTCIF3 |LIFCR_CTEIF3;
 8002c86:	4b0c      	ldr	r3, [pc, #48]	; (8002cb8 <dma2_stream3_spi_transfer+0x3c>)
 8002c88:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8002c8c:	609a      	str	r2, [r3, #8]

	/*Set Peripheral address*/
	DMA2_Stream3->PAR =	(uint32_t)(&(SPI1->DR));
 8002c8e:	4b0b      	ldr	r3, [pc, #44]	; (8002cbc <dma2_stream3_spi_transfer+0x40>)
 8002c90:	4a0b      	ldr	r2, [pc, #44]	; (8002cc0 <dma2_stream3_spi_transfer+0x44>)
 8002c92:	609a      	str	r2, [r3, #8]

	/*Set Memory address*/
	DMA2_Stream3->M0AR = msg_to_send;
 8002c94:	4a09      	ldr	r2, [pc, #36]	; (8002cbc <dma2_stream3_spi_transfer+0x40>)
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	60d3      	str	r3, [r2, #12]

	/*Set transfer length*/
	DMA2_Stream3->NDTR = msg_len;
 8002c9a:	4a08      	ldr	r2, [pc, #32]	; (8002cbc <dma2_stream3_spi_transfer+0x40>)
 8002c9c:	683b      	ldr	r3, [r7, #0]
 8002c9e:	6053      	str	r3, [r2, #4]

	/*Enable the DMA Stream*/
	DMA2_Stream3->CR |= DMA_SCR_EN;
 8002ca0:	4b06      	ldr	r3, [pc, #24]	; (8002cbc <dma2_stream3_spi_transfer+0x40>)
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	4a05      	ldr	r2, [pc, #20]	; (8002cbc <dma2_stream3_spi_transfer+0x40>)
 8002ca6:	f043 0301 	orr.w	r3, r3, #1
 8002caa:	6013      	str	r3, [r2, #0]
}
 8002cac:	bf00      	nop
 8002cae:	370c      	adds	r7, #12
 8002cb0:	46bd      	mov	sp, r7
 8002cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cb6:	4770      	bx	lr
 8002cb8:	40026400 	.word	0x40026400
 8002cbc:	40026458 	.word	0x40026458
 8002cc0:	4001300c 	.word	0x4001300c

08002cc4 <dma2_stream2_spi_receive>:

void dma2_stream2_spi_receive(uint32_t received_msg, uint32_t msg_len)
{
 8002cc4:	b480      	push	{r7}
 8002cc6:	b083      	sub	sp, #12
 8002cc8:	af00      	add	r7, sp, #0
 8002cca:	6078      	str	r0, [r7, #4]
 8002ccc:	6039      	str	r1, [r7, #0]
	/*Clear interrupt flags*/
	DMA2->LIFCR = LIFCR_CTCIF2 |LIFCR_CTEIF2;
 8002cce:	4b0c      	ldr	r3, [pc, #48]	; (8002d00 <dma2_stream2_spi_receive+0x3c>)
 8002cd0:	f44f 1220 	mov.w	r2, #2621440	; 0x280000
 8002cd4:	609a      	str	r2, [r3, #8]

	/*Set Peripheral address*/
	DMA2_Stream2->PAR =	(uint32_t)(&(SPI1->DR));
 8002cd6:	4b0b      	ldr	r3, [pc, #44]	; (8002d04 <dma2_stream2_spi_receive+0x40>)
 8002cd8:	4a0b      	ldr	r2, [pc, #44]	; (8002d08 <dma2_stream2_spi_receive+0x44>)
 8002cda:	609a      	str	r2, [r3, #8]

	/*Set Memory address*/
	DMA2_Stream2->M0AR = received_msg;
 8002cdc:	4a09      	ldr	r2, [pc, #36]	; (8002d04 <dma2_stream2_spi_receive+0x40>)
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	60d3      	str	r3, [r2, #12]

	/*Set transfer length*/
	DMA2_Stream2->NDTR = msg_len;
 8002ce2:	4a08      	ldr	r2, [pc, #32]	; (8002d04 <dma2_stream2_spi_receive+0x40>)
 8002ce4:	683b      	ldr	r3, [r7, #0]
 8002ce6:	6053      	str	r3, [r2, #4]

	/*Enable the DMA Stream*/
	DMA2_Stream2->CR |= DMA_SCR_EN;
 8002ce8:	4b06      	ldr	r3, [pc, #24]	; (8002d04 <dma2_stream2_spi_receive+0x40>)
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	4a05      	ldr	r2, [pc, #20]	; (8002d04 <dma2_stream2_spi_receive+0x40>)
 8002cee:	f043 0301 	orr.w	r3, r3, #1
 8002cf2:	6013      	str	r3, [r2, #0]

}
 8002cf4:	bf00      	nop
 8002cf6:	370c      	adds	r7, #12
 8002cf8:	46bd      	mov	sp, r7
 8002cfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cfe:	4770      	bx	lr
 8002d00:	40026400 	.word	0x40026400
 8002d04:	40026440 	.word	0x40026440
 8002d08:	4001300c 	.word	0x4001300c

08002d0c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002d0c:	b480      	push	{r7}
 8002d0e:	af00      	add	r7, sp, #0
	return 1;
 8002d10:	2301      	movs	r3, #1
}
 8002d12:	4618      	mov	r0, r3
 8002d14:	46bd      	mov	sp, r7
 8002d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d1a:	4770      	bx	lr

08002d1c <_kill>:

int _kill(int pid, int sig)
{
 8002d1c:	b580      	push	{r7, lr}
 8002d1e:	b082      	sub	sp, #8
 8002d20:	af00      	add	r7, sp, #0
 8002d22:	6078      	str	r0, [r7, #4]
 8002d24:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8002d26:	f000 fb07 	bl	8003338 <__errno>
 8002d2a:	4603      	mov	r3, r0
 8002d2c:	2216      	movs	r2, #22
 8002d2e:	601a      	str	r2, [r3, #0]
	return -1;
 8002d30:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002d34:	4618      	mov	r0, r3
 8002d36:	3708      	adds	r7, #8
 8002d38:	46bd      	mov	sp, r7
 8002d3a:	bd80      	pop	{r7, pc}

08002d3c <_exit>:

void _exit (int status)
{
 8002d3c:	b580      	push	{r7, lr}
 8002d3e:	b082      	sub	sp, #8
 8002d40:	af00      	add	r7, sp, #0
 8002d42:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002d44:	f04f 31ff 	mov.w	r1, #4294967295
 8002d48:	6878      	ldr	r0, [r7, #4]
 8002d4a:	f7ff ffe7 	bl	8002d1c <_kill>
	while (1) {}		/* Make sure we hang here */
 8002d4e:	e7fe      	b.n	8002d4e <_exit+0x12>

08002d50 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002d50:	b580      	push	{r7, lr}
 8002d52:	b086      	sub	sp, #24
 8002d54:	af00      	add	r7, sp, #0
 8002d56:	60f8      	str	r0, [r7, #12]
 8002d58:	60b9      	str	r1, [r7, #8]
 8002d5a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	617b      	str	r3, [r7, #20]
 8002d60:	e00a      	b.n	8002d78 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002d62:	f3af 8000 	nop.w
 8002d66:	4601      	mov	r1, r0
 8002d68:	68bb      	ldr	r3, [r7, #8]
 8002d6a:	1c5a      	adds	r2, r3, #1
 8002d6c:	60ba      	str	r2, [r7, #8]
 8002d6e:	b2ca      	uxtb	r2, r1
 8002d70:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002d72:	697b      	ldr	r3, [r7, #20]
 8002d74:	3301      	adds	r3, #1
 8002d76:	617b      	str	r3, [r7, #20]
 8002d78:	697a      	ldr	r2, [r7, #20]
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	429a      	cmp	r2, r3
 8002d7e:	dbf0      	blt.n	8002d62 <_read+0x12>
	}

return len;
 8002d80:	687b      	ldr	r3, [r7, #4]
}
 8002d82:	4618      	mov	r0, r3
 8002d84:	3718      	adds	r7, #24
 8002d86:	46bd      	mov	sp, r7
 8002d88:	bd80      	pop	{r7, pc}

08002d8a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002d8a:	b580      	push	{r7, lr}
 8002d8c:	b086      	sub	sp, #24
 8002d8e:	af00      	add	r7, sp, #0
 8002d90:	60f8      	str	r0, [r7, #12]
 8002d92:	60b9      	str	r1, [r7, #8]
 8002d94:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002d96:	2300      	movs	r3, #0
 8002d98:	617b      	str	r3, [r7, #20]
 8002d9a:	e009      	b.n	8002db0 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002d9c:	68bb      	ldr	r3, [r7, #8]
 8002d9e:	1c5a      	adds	r2, r3, #1
 8002da0:	60ba      	str	r2, [r7, #8]
 8002da2:	781b      	ldrb	r3, [r3, #0]
 8002da4:	4618      	mov	r0, r3
 8002da6:	f000 f96b 	bl	8003080 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002daa:	697b      	ldr	r3, [r7, #20]
 8002dac:	3301      	adds	r3, #1
 8002dae:	617b      	str	r3, [r7, #20]
 8002db0:	697a      	ldr	r2, [r7, #20]
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	429a      	cmp	r2, r3
 8002db6:	dbf1      	blt.n	8002d9c <_write+0x12>
	}
	return len;
 8002db8:	687b      	ldr	r3, [r7, #4]
}
 8002dba:	4618      	mov	r0, r3
 8002dbc:	3718      	adds	r7, #24
 8002dbe:	46bd      	mov	sp, r7
 8002dc0:	bd80      	pop	{r7, pc}

08002dc2 <_close>:

int _close(int file)
{
 8002dc2:	b480      	push	{r7}
 8002dc4:	b083      	sub	sp, #12
 8002dc6:	af00      	add	r7, sp, #0
 8002dc8:	6078      	str	r0, [r7, #4]
	return -1;
 8002dca:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002dce:	4618      	mov	r0, r3
 8002dd0:	370c      	adds	r7, #12
 8002dd2:	46bd      	mov	sp, r7
 8002dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dd8:	4770      	bx	lr

08002dda <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002dda:	b480      	push	{r7}
 8002ddc:	b083      	sub	sp, #12
 8002dde:	af00      	add	r7, sp, #0
 8002de0:	6078      	str	r0, [r7, #4]
 8002de2:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002de4:	683b      	ldr	r3, [r7, #0]
 8002de6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002dea:	605a      	str	r2, [r3, #4]
	return 0;
 8002dec:	2300      	movs	r3, #0
}
 8002dee:	4618      	mov	r0, r3
 8002df0:	370c      	adds	r7, #12
 8002df2:	46bd      	mov	sp, r7
 8002df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002df8:	4770      	bx	lr

08002dfa <_isatty>:

int _isatty(int file)
{
 8002dfa:	b480      	push	{r7}
 8002dfc:	b083      	sub	sp, #12
 8002dfe:	af00      	add	r7, sp, #0
 8002e00:	6078      	str	r0, [r7, #4]
	return 1;
 8002e02:	2301      	movs	r3, #1
}
 8002e04:	4618      	mov	r0, r3
 8002e06:	370c      	adds	r7, #12
 8002e08:	46bd      	mov	sp, r7
 8002e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e0e:	4770      	bx	lr

08002e10 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002e10:	b480      	push	{r7}
 8002e12:	b085      	sub	sp, #20
 8002e14:	af00      	add	r7, sp, #0
 8002e16:	60f8      	str	r0, [r7, #12]
 8002e18:	60b9      	str	r1, [r7, #8]
 8002e1a:	607a      	str	r2, [r7, #4]
	return 0;
 8002e1c:	2300      	movs	r3, #0
}
 8002e1e:	4618      	mov	r0, r3
 8002e20:	3714      	adds	r7, #20
 8002e22:	46bd      	mov	sp, r7
 8002e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e28:	4770      	bx	lr
	...

08002e2c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002e2c:	b580      	push	{r7, lr}
 8002e2e:	b086      	sub	sp, #24
 8002e30:	af00      	add	r7, sp, #0
 8002e32:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002e34:	4a14      	ldr	r2, [pc, #80]	; (8002e88 <_sbrk+0x5c>)
 8002e36:	4b15      	ldr	r3, [pc, #84]	; (8002e8c <_sbrk+0x60>)
 8002e38:	1ad3      	subs	r3, r2, r3
 8002e3a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002e3c:	697b      	ldr	r3, [r7, #20]
 8002e3e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002e40:	4b13      	ldr	r3, [pc, #76]	; (8002e90 <_sbrk+0x64>)
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	2b00      	cmp	r3, #0
 8002e46:	d102      	bne.n	8002e4e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002e48:	4b11      	ldr	r3, [pc, #68]	; (8002e90 <_sbrk+0x64>)
 8002e4a:	4a12      	ldr	r2, [pc, #72]	; (8002e94 <_sbrk+0x68>)
 8002e4c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002e4e:	4b10      	ldr	r3, [pc, #64]	; (8002e90 <_sbrk+0x64>)
 8002e50:	681a      	ldr	r2, [r3, #0]
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	4413      	add	r3, r2
 8002e56:	693a      	ldr	r2, [r7, #16]
 8002e58:	429a      	cmp	r2, r3
 8002e5a:	d207      	bcs.n	8002e6c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002e5c:	f000 fa6c 	bl	8003338 <__errno>
 8002e60:	4603      	mov	r3, r0
 8002e62:	220c      	movs	r2, #12
 8002e64:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002e66:	f04f 33ff 	mov.w	r3, #4294967295
 8002e6a:	e009      	b.n	8002e80 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002e6c:	4b08      	ldr	r3, [pc, #32]	; (8002e90 <_sbrk+0x64>)
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002e72:	4b07      	ldr	r3, [pc, #28]	; (8002e90 <_sbrk+0x64>)
 8002e74:	681a      	ldr	r2, [r3, #0]
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	4413      	add	r3, r2
 8002e7a:	4a05      	ldr	r2, [pc, #20]	; (8002e90 <_sbrk+0x64>)
 8002e7c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002e7e:	68fb      	ldr	r3, [r7, #12]
}
 8002e80:	4618      	mov	r0, r3
 8002e82:	3718      	adds	r7, #24
 8002e84:	46bd      	mov	sp, r7
 8002e86:	bd80      	pop	{r7, pc}
 8002e88:	20020000 	.word	0x20020000
 8002e8c:	00000400 	.word	0x00000400
 8002e90:	20000328 	.word	0x20000328
 8002e94:	20000340 	.word	0x20000340

08002e98 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002e98:	b480      	push	{r7}
 8002e9a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002e9c:	4b06      	ldr	r3, [pc, #24]	; (8002eb8 <SystemInit+0x20>)
 8002e9e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002ea2:	4a05      	ldr	r2, [pc, #20]	; (8002eb8 <SystemInit+0x20>)
 8002ea4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002ea8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002eac:	bf00      	nop
 8002eae:	46bd      	mov	sp, r7
 8002eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eb4:	4770      	bx	lr
 8002eb6:	bf00      	nop
 8002eb8:	e000ed00 	.word	0xe000ed00

08002ebc <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 8002ebc:	b480      	push	{r7}
 8002ebe:	b087      	sub	sp, #28
 8002ec0:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8002ec2:	2300      	movs	r3, #0
 8002ec4:	613b      	str	r3, [r7, #16]
 8002ec6:	2300      	movs	r3, #0
 8002ec8:	617b      	str	r3, [r7, #20]
 8002eca:	2302      	movs	r3, #2
 8002ecc:	60fb      	str	r3, [r7, #12]
 8002ece:	2300      	movs	r3, #0
 8002ed0:	60bb      	str	r3, [r7, #8]
 8002ed2:	2302      	movs	r3, #2
 8002ed4:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8002ed6:	4b34      	ldr	r3, [pc, #208]	; (8002fa8 <SystemCoreClockUpdate+0xec>)
 8002ed8:	689b      	ldr	r3, [r3, #8]
 8002eda:	f003 030c 	and.w	r3, r3, #12
 8002ede:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8002ee0:	693b      	ldr	r3, [r7, #16]
 8002ee2:	2b08      	cmp	r3, #8
 8002ee4:	d011      	beq.n	8002f0a <SystemCoreClockUpdate+0x4e>
 8002ee6:	693b      	ldr	r3, [r7, #16]
 8002ee8:	2b08      	cmp	r3, #8
 8002eea:	d844      	bhi.n	8002f76 <SystemCoreClockUpdate+0xba>
 8002eec:	693b      	ldr	r3, [r7, #16]
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d003      	beq.n	8002efa <SystemCoreClockUpdate+0x3e>
 8002ef2:	693b      	ldr	r3, [r7, #16]
 8002ef4:	2b04      	cmp	r3, #4
 8002ef6:	d004      	beq.n	8002f02 <SystemCoreClockUpdate+0x46>
 8002ef8:	e03d      	b.n	8002f76 <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 8002efa:	4b2c      	ldr	r3, [pc, #176]	; (8002fac <SystemCoreClockUpdate+0xf0>)
 8002efc:	4a2c      	ldr	r2, [pc, #176]	; (8002fb0 <SystemCoreClockUpdate+0xf4>)
 8002efe:	601a      	str	r2, [r3, #0]
      break;
 8002f00:	e03d      	b.n	8002f7e <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 8002f02:	4b2a      	ldr	r3, [pc, #168]	; (8002fac <SystemCoreClockUpdate+0xf0>)
 8002f04:	4a2b      	ldr	r2, [pc, #172]	; (8002fb4 <SystemCoreClockUpdate+0xf8>)
 8002f06:	601a      	str	r2, [r3, #0]
      break;
 8002f08:	e039      	b.n	8002f7e <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8002f0a:	4b27      	ldr	r3, [pc, #156]	; (8002fa8 <SystemCoreClockUpdate+0xec>)
 8002f0c:	685b      	ldr	r3, [r3, #4]
 8002f0e:	0d9b      	lsrs	r3, r3, #22
 8002f10:	f003 0301 	and.w	r3, r3, #1
 8002f14:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002f16:	4b24      	ldr	r3, [pc, #144]	; (8002fa8 <SystemCoreClockUpdate+0xec>)
 8002f18:	685b      	ldr	r3, [r3, #4]
 8002f1a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002f1e:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 8002f20:	68bb      	ldr	r3, [r7, #8]
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d00c      	beq.n	8002f40 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8002f26:	4a23      	ldr	r2, [pc, #140]	; (8002fb4 <SystemCoreClockUpdate+0xf8>)
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f2e:	4a1e      	ldr	r2, [pc, #120]	; (8002fa8 <SystemCoreClockUpdate+0xec>)
 8002f30:	6852      	ldr	r2, [r2, #4]
 8002f32:	0992      	lsrs	r2, r2, #6
 8002f34:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002f38:	fb02 f303 	mul.w	r3, r2, r3
 8002f3c:	617b      	str	r3, [r7, #20]
 8002f3e:	e00b      	b.n	8002f58 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8002f40:	4a1b      	ldr	r2, [pc, #108]	; (8002fb0 <SystemCoreClockUpdate+0xf4>)
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f48:	4a17      	ldr	r2, [pc, #92]	; (8002fa8 <SystemCoreClockUpdate+0xec>)
 8002f4a:	6852      	ldr	r2, [r2, #4]
 8002f4c:	0992      	lsrs	r2, r2, #6
 8002f4e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002f52:	fb02 f303 	mul.w	r3, r2, r3
 8002f56:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8002f58:	4b13      	ldr	r3, [pc, #76]	; (8002fa8 <SystemCoreClockUpdate+0xec>)
 8002f5a:	685b      	ldr	r3, [r3, #4]
 8002f5c:	0c1b      	lsrs	r3, r3, #16
 8002f5e:	f003 0303 	and.w	r3, r3, #3
 8002f62:	3301      	adds	r3, #1
 8002f64:	005b      	lsls	r3, r3, #1
 8002f66:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 8002f68:	697a      	ldr	r2, [r7, #20]
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f70:	4a0e      	ldr	r2, [pc, #56]	; (8002fac <SystemCoreClockUpdate+0xf0>)
 8002f72:	6013      	str	r3, [r2, #0]
      break;
 8002f74:	e003      	b.n	8002f7e <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 8002f76:	4b0d      	ldr	r3, [pc, #52]	; (8002fac <SystemCoreClockUpdate+0xf0>)
 8002f78:	4a0d      	ldr	r2, [pc, #52]	; (8002fb0 <SystemCoreClockUpdate+0xf4>)
 8002f7a:	601a      	str	r2, [r3, #0]
      break;
 8002f7c:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 8002f7e:	4b0a      	ldr	r3, [pc, #40]	; (8002fa8 <SystemCoreClockUpdate+0xec>)
 8002f80:	689b      	ldr	r3, [r3, #8]
 8002f82:	091b      	lsrs	r3, r3, #4
 8002f84:	f003 030f 	and.w	r3, r3, #15
 8002f88:	4a0b      	ldr	r2, [pc, #44]	; (8002fb8 <SystemCoreClockUpdate+0xfc>)
 8002f8a:	5cd3      	ldrb	r3, [r2, r3]
 8002f8c:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8002f8e:	4b07      	ldr	r3, [pc, #28]	; (8002fac <SystemCoreClockUpdate+0xf0>)
 8002f90:	681a      	ldr	r2, [r3, #0]
 8002f92:	693b      	ldr	r3, [r7, #16]
 8002f94:	fa22 f303 	lsr.w	r3, r2, r3
 8002f98:	4a04      	ldr	r2, [pc, #16]	; (8002fac <SystemCoreClockUpdate+0xf0>)
 8002f9a:	6013      	str	r3, [r2, #0]
}
 8002f9c:	bf00      	nop
 8002f9e:	371c      	adds	r7, #28
 8002fa0:	46bd      	mov	sp, r7
 8002fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fa6:	4770      	bx	lr
 8002fa8:	40023800 	.word	0x40023800
 8002fac:	20000028 	.word	0x20000028
 8002fb0:	00f42400 	.word	0x00f42400
 8002fb4:	017d7840 	.word	0x017d7840
 8002fb8:	080089f0 	.word	0x080089f0

08002fbc <systick_counter_init>:
#define CTRL_ENABLE		(1U<<0)
#define CTRL_TICKINT	(1U<<1)
#define CTRL_CLKSRC		(1U<<2)

void systick_counter_init(void)
{
 8002fbc:	b480      	push	{r7}
 8002fbe:	af00      	add	r7, sp, #0
	/*Disable systick before setup*/
	SysTick->CTRL = 0;
 8002fc0:	4b08      	ldr	r3, [pc, #32]	; (8002fe4 <systick_counter_init+0x28>)
 8002fc2:	2200      	movs	r2, #0
 8002fc4:	601a      	str	r2, [r3, #0]

	/*Load Systick reload register with maximum value*/
	SysTick->LOAD = 0x00FFFFFF;
 8002fc6:	4b07      	ldr	r3, [pc, #28]	; (8002fe4 <systick_counter_init+0x28>)
 8002fc8:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8002fcc:	605a      	str	r2, [r3, #4]

	/*Clear Systick current value register*/
	SysTick->VAL = 0;
 8002fce:	4b05      	ldr	r3, [pc, #20]	; (8002fe4 <systick_counter_init+0x28>)
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	609a      	str	r2, [r3, #8]

	/*Select internal clock source and enable SysTick*/
	SysTick->CTRL = CTRL_CLKSRC | CTRL_ENABLE;
 8002fd4:	4b03      	ldr	r3, [pc, #12]	; (8002fe4 <systick_counter_init+0x28>)
 8002fd6:	2205      	movs	r2, #5
 8002fd8:	601a      	str	r2, [r3, #0]


}
 8002fda:	bf00      	nop
 8002fdc:	46bd      	mov	sp, r7
 8002fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fe2:	4770      	bx	lr
 8002fe4:	e000e010 	.word	0xe000e010

08002fe8 <__NVIC_EnableIRQ>:
{
 8002fe8:	b480      	push	{r7}
 8002fea:	b083      	sub	sp, #12
 8002fec:	af00      	add	r7, sp, #0
 8002fee:	4603      	mov	r3, r0
 8002ff0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002ff2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ff6:	2b00      	cmp	r3, #0
 8002ff8:	db0b      	blt.n	8003012 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002ffa:	79fb      	ldrb	r3, [r7, #7]
 8002ffc:	f003 021f 	and.w	r2, r3, #31
 8003000:	4907      	ldr	r1, [pc, #28]	; (8003020 <__NVIC_EnableIRQ+0x38>)
 8003002:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003006:	095b      	lsrs	r3, r3, #5
 8003008:	2001      	movs	r0, #1
 800300a:	fa00 f202 	lsl.w	r2, r0, r2
 800300e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8003012:	bf00      	nop
 8003014:	370c      	adds	r7, #12
 8003016:	46bd      	mov	sp, r7
 8003018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800301c:	4770      	bx	lr
 800301e:	bf00      	nop
 8003020:	e000e100 	.word	0xe000e100

08003024 <tim2_1khz_interrupt_init>:
	return 1;
}


float tim2_1khz_interrupt_init(void)
{
 8003024:	b580      	push	{r7, lr}
 8003026:	af00      	add	r7, sp, #0
	/*enable clock access to tim2*/
	RCC->APB1ENR |= TIM2EN;
 8003028:	4b13      	ldr	r3, [pc, #76]	; (8003078 <tim2_1khz_interrupt_init+0x54>)
 800302a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800302c:	4a12      	ldr	r2, [pc, #72]	; (8003078 <tim2_1khz_interrupt_init+0x54>)
 800302e:	f043 0301 	orr.w	r3, r3, #1
 8003032:	6413      	str	r3, [r2, #64]	; 0x40

	/*Set prescaler value*/
	TIM2->PSC = 16-1;  // (clk_freq) 16 000 000/ (prescaler) 16 = 1 000 000 (1MHz)
 8003034:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003038:	220f      	movs	r2, #15
 800303a:	629a      	str	r2, [r3, #40]	; 0x28

	/*Set auto-reload value*/
	TIM2->ARR = 1000-1;  // 1 000 / 1 000 000 = 1e-3s = 1 ms
 800303c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003040:	f240 32e7 	movw	r2, #999	; 0x3e7
 8003044:	62da      	str	r2, [r3, #44]	; 0x2c

	/*Clear counter*/
	TIM2->CNT = 0;	// komplettes Register Null-setzen
 8003046:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800304a:	2200      	movs	r2, #0
 800304c:	625a      	str	r2, [r3, #36]	; 0x24

	/*Enable timer*/
	TIM2->CR1 = CR1_CEN;
 800304e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003052:	2201      	movs	r2, #1
 8003054:	601a      	str	r2, [r3, #0]

	/*Enable TIM interrupt*/
	TIM2->DIER |= DIER_UIE;
 8003056:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800305a:	68db      	ldr	r3, [r3, #12]
 800305c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003060:	f043 0301 	orr.w	r3, r3, #1
 8003064:	60d3      	str	r3, [r2, #12]

	/*Enable TIM interrupt in NVIC*/
	NVIC_EnableIRQ(TIM2_IRQn);
 8003066:	201c      	movs	r0, #28
 8003068:	f7ff ffbe 	bl	8002fe8 <__NVIC_EnableIRQ>

	return 0.001;
 800306c:	4b03      	ldr	r3, [pc, #12]	; (800307c <tim2_1khz_interrupt_init+0x58>)
 800306e:	ee07 3a90 	vmov	s15, r3
}
 8003072:	eeb0 0a67 	vmov.f32	s0, s15
 8003076:	bd80      	pop	{r7, pc}
 8003078:	40023800 	.word	0x40023800
 800307c:	3a83126f 	.word	0x3a83126f

08003080 <__io_putchar>:
static void uart_set_baudrate(uint32_t periph_clk, uint32_t baudrate);
static void uart2_write(int ch);


int __io_putchar(int ch)
{
 8003080:	b580      	push	{r7, lr}
 8003082:	b082      	sub	sp, #8
 8003084:	af00      	add	r7, sp, #0
 8003086:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8003088:	6878      	ldr	r0, [r7, #4]
 800308a:	f000 f805 	bl	8003098 <uart2_write>
	return ch;
 800308e:	687b      	ldr	r3, [r7, #4]
}
 8003090:	4618      	mov	r0, r3
 8003092:	3708      	adds	r7, #8
 8003094:	46bd      	mov	sp, r7
 8003096:	bd80      	pop	{r7, pc}

08003098 <uart2_write>:
	/*7. Enable uart module*/
	 USART2->CR1 |= CR1_UE;
}

static void uart2_write(int ch)
{
 8003098:	b480      	push	{r7}
 800309a:	b083      	sub	sp, #12
 800309c:	af00      	add	r7, sp, #0
 800309e:	6078      	str	r0, [r7, #4]
	/*Make sure the transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}
 80030a0:	bf00      	nop
 80030a2:	4b08      	ldr	r3, [pc, #32]	; (80030c4 <uart2_write+0x2c>)
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d0f9      	beq.n	80030a2 <uart2_write+0xa>

	/*Write to transmit data register*/
	USART2->DR = (ch & 0xFF);
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	4a04      	ldr	r2, [pc, #16]	; (80030c4 <uart2_write+0x2c>)
 80030b2:	b2db      	uxtb	r3, r3
 80030b4:	6053      	str	r3, [r2, #4]
}
 80030b6:	bf00      	nop
 80030b8:	370c      	adds	r7, #12
 80030ba:	46bd      	mov	sp, r7
 80030bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c0:	4770      	bx	lr
 80030c2:	bf00      	nop
 80030c4:	40004400 	.word	0x40004400

080030c8 <__NVIC_EnableIRQ>:
{
 80030c8:	b480      	push	{r7}
 80030ca:	b083      	sub	sp, #12
 80030cc:	af00      	add	r7, sp, #0
 80030ce:	4603      	mov	r3, r0
 80030d0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80030d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	db0b      	blt.n	80030f2 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80030da:	79fb      	ldrb	r3, [r7, #7]
 80030dc:	f003 021f 	and.w	r2, r3, #31
 80030e0:	4907      	ldr	r1, [pc, #28]	; (8003100 <__NVIC_EnableIRQ+0x38>)
 80030e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030e6:	095b      	lsrs	r3, r3, #5
 80030e8:	2001      	movs	r0, #1
 80030ea:	fa00 f202 	lsl.w	r2, r0, r2
 80030ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80030f2:	bf00      	nop
 80030f4:	370c      	adds	r7, #12
 80030f6:	46bd      	mov	sp, r7
 80030f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030fc:	4770      	bx	lr
 80030fe:	bf00      	nop
 8003100:	e000e100 	.word	0xe000e100

08003104 <uart2_rx_tx_init>:
uint8_t g_tx_cmplt_uart;

uint8_t g_uart_cmplt;

void uart2_rx_tx_init(void)
{
 8003104:	b580      	push	{r7, lr}
 8003106:	af00      	add	r7, sp, #0
	/*************Configure UART GPIO pin********************/
	/*1.Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
 8003108:	4b3a      	ldr	r3, [pc, #232]	; (80031f4 <uart2_rx_tx_init+0xf0>)
 800310a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800310c:	4a39      	ldr	r2, [pc, #228]	; (80031f4 <uart2_rx_tx_init+0xf0>)
 800310e:	f043 0301 	orr.w	r3, r3, #1
 8003112:	6313      	str	r3, [r2, #48]	; 0x30

	/*2.Set PA2 mode to alternate function mode*/
	GPIOA->MODER &= ~(1U<<4);
 8003114:	4b38      	ldr	r3, [pc, #224]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	4a37      	ldr	r2, [pc, #220]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800311a:	f023 0310 	bic.w	r3, r3, #16
 800311e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=	 (1U<<5);
 8003120:	4b35      	ldr	r3, [pc, #212]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	4a34      	ldr	r2, [pc, #208]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003126:	f043 0320 	orr.w	r3, r3, #32
 800312a:	6013      	str	r3, [r2, #0]

	/*3.Set PA3 mode to alternate function mode*/
	GPIOA->MODER &= ~(1U<<6);
 800312c:	4b32      	ldr	r3, [pc, #200]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	4a31      	ldr	r2, [pc, #196]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003132:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003136:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=	 (1U<<7);
 8003138:	4b2f      	ldr	r3, [pc, #188]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	4a2e      	ldr	r2, [pc, #184]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800313e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003142:	6013      	str	r3, [r2, #0]

	/*4.Set PA2 alternate function function type to AF7(UART2_TX)*/
	GPIOA->AFR[0] |= (1U<<8);
 8003144:	4b2c      	ldr	r3, [pc, #176]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003146:	6a1b      	ldr	r3, [r3, #32]
 8003148:	4a2b      	ldr	r2, [pc, #172]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800314a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800314e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 8003150:	4b29      	ldr	r3, [pc, #164]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003152:	6a1b      	ldr	r3, [r3, #32]
 8003154:	4a28      	ldr	r2, [pc, #160]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003156:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800315a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 800315c:	4b26      	ldr	r3, [pc, #152]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800315e:	6a1b      	ldr	r3, [r3, #32]
 8003160:	4a25      	ldr	r2, [pc, #148]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003162:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003166:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<11);
 8003168:	4b23      	ldr	r3, [pc, #140]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800316a:	6a1b      	ldr	r3, [r3, #32]
 800316c:	4a22      	ldr	r2, [pc, #136]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800316e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003172:	6213      	str	r3, [r2, #32]

	/*5.Set PA3 alternate function function type to AF7(UART2_TX)*/
	GPIOA->AFR[0] |= (1U<<12);
 8003174:	4b20      	ldr	r3, [pc, #128]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003176:	6a1b      	ldr	r3, [r3, #32]
 8003178:	4a1f      	ldr	r2, [pc, #124]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800317a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800317e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<13);
 8003180:	4b1d      	ldr	r3, [pc, #116]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003182:	6a1b      	ldr	r3, [r3, #32]
 8003184:	4a1c      	ldr	r2, [pc, #112]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003186:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800318a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<14);
 800318c:	4b1a      	ldr	r3, [pc, #104]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800318e:	6a1b      	ldr	r3, [r3, #32]
 8003190:	4a19      	ldr	r2, [pc, #100]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 8003192:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003196:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<15);
 8003198:	4b17      	ldr	r3, [pc, #92]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800319a:	6a1b      	ldr	r3, [r3, #32]
 800319c:	4a16      	ldr	r2, [pc, #88]	; (80031f8 <uart2_rx_tx_init+0xf4>)
 800319e:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80031a2:	6213      	str	r3, [r2, #32]
	/*************Configure UART Module********************/

	/*6. Enable clock access to UART2*/
	RCC->APB1ENR |= UART2EN;
 80031a4:	4b13      	ldr	r3, [pc, #76]	; (80031f4 <uart2_rx_tx_init+0xf0>)
 80031a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80031a8:	4a12      	ldr	r2, [pc, #72]	; (80031f4 <uart2_rx_tx_init+0xf0>)
 80031aa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80031ae:	6413      	str	r3, [r2, #64]	; 0x40

	/*7. Set baudrate*/
	uart_set_baudrate(CLK,UART_BAUDRATE);
 80031b0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80031b4:	4811      	ldr	r0, [pc, #68]	; (80031fc <uart2_rx_tx_init+0xf8>)
 80031b6:	f000 f839 	bl	800322c <uart_set_baudrate>

	/*8. Select to use DMA for TX and RX*/
	USART2->CR3 = CR3_DMAT |CR3_DMAR;
 80031ba:	4b11      	ldr	r3, [pc, #68]	; (8003200 <uart2_rx_tx_init+0xfc>)
 80031bc:	22c0      	movs	r2, #192	; 0xc0
 80031be:	615a      	str	r2, [r3, #20]

	/*9. Set transfer direction*/
	 USART2->CR1 = CR1_TE |CR1_RE;
 80031c0:	4b0f      	ldr	r3, [pc, #60]	; (8003200 <uart2_rx_tx_init+0xfc>)
 80031c2:	220c      	movs	r2, #12
 80031c4:	60da      	str	r2, [r3, #12]

	/*10.Clear TC flag*/
	 USART2->SR &=~SR_TC;
 80031c6:	4b0e      	ldr	r3, [pc, #56]	; (8003200 <uart2_rx_tx_init+0xfc>)
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	4a0d      	ldr	r2, [pc, #52]	; (8003200 <uart2_rx_tx_init+0xfc>)
 80031cc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80031d0:	6013      	str	r3, [r2, #0]

	/*11.Enable TCIE*/
	 USART2->CR1 |=CR1_TCIE;
 80031d2:	4b0b      	ldr	r3, [pc, #44]	; (8003200 <uart2_rx_tx_init+0xfc>)
 80031d4:	68db      	ldr	r3, [r3, #12]
 80031d6:	4a0a      	ldr	r2, [pc, #40]	; (8003200 <uart2_rx_tx_init+0xfc>)
 80031d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80031dc:	60d3      	str	r3, [r2, #12]

	/*12. Enable uart module*/
	 USART2->CR1 |= CR1_UE;
 80031de:	4b08      	ldr	r3, [pc, #32]	; (8003200 <uart2_rx_tx_init+0xfc>)
 80031e0:	68db      	ldr	r3, [r3, #12]
 80031e2:	4a07      	ldr	r2, [pc, #28]	; (8003200 <uart2_rx_tx_init+0xfc>)
 80031e4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80031e8:	60d3      	str	r3, [r2, #12]

	 /*13.Enable USART2 interrupt in the NVIC*/
	 NVIC_EnableIRQ(USART2_IRQn);
 80031ea:	2026      	movs	r0, #38	; 0x26
 80031ec:	f7ff ff6c 	bl	80030c8 <__NVIC_EnableIRQ>

}
 80031f0:	bf00      	nop
 80031f2:	bd80      	pop	{r7, pc}
 80031f4:	40023800 	.word	0x40023800
 80031f8:	40020000 	.word	0x40020000
 80031fc:	00f42400 	.word	0x00f42400
 8003200:	40004400 	.word	0x40004400

08003204 <compute_uart_bd>:
	DMA1_Stream6->CR |= DMA_SCR_EN;

}

static uint16_t compute_uart_bd(uint32_t periph_clk, uint32_t baudrate)
{
 8003204:	b480      	push	{r7}
 8003206:	b083      	sub	sp, #12
 8003208:	af00      	add	r7, sp, #0
 800320a:	6078      	str	r0, [r7, #4]
 800320c:	6039      	str	r1, [r7, #0]
	return ((periph_clk +( baudrate/2U ))/baudrate);
 800320e:	683b      	ldr	r3, [r7, #0]
 8003210:	085a      	lsrs	r2, r3, #1
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	441a      	add	r2, r3
 8003216:	683b      	ldr	r3, [r7, #0]
 8003218:	fbb2 f3f3 	udiv	r3, r2, r3
 800321c:	b29b      	uxth	r3, r3
}
 800321e:	4618      	mov	r0, r3
 8003220:	370c      	adds	r7, #12
 8003222:	46bd      	mov	sp, r7
 8003224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003228:	4770      	bx	lr
	...

0800322c <uart_set_baudrate>:


static void uart_set_baudrate(uint32_t periph_clk, uint32_t baudrate)
{
 800322c:	b580      	push	{r7, lr}
 800322e:	b082      	sub	sp, #8
 8003230:	af00      	add	r7, sp, #0
 8003232:	6078      	str	r0, [r7, #4]
 8003234:	6039      	str	r1, [r7, #0]
	USART2->BRR  = compute_uart_bd(periph_clk,baudrate);
 8003236:	6839      	ldr	r1, [r7, #0]
 8003238:	6878      	ldr	r0, [r7, #4]
 800323a:	f7ff ffe3 	bl	8003204 <compute_uart_bd>
 800323e:	4603      	mov	r3, r0
 8003240:	461a      	mov	r2, r3
 8003242:	4b03      	ldr	r3, [pc, #12]	; (8003250 <uart_set_baudrate+0x24>)
 8003244:	609a      	str	r2, [r3, #8]
}
 8003246:	bf00      	nop
 8003248:	3708      	adds	r7, #8
 800324a:	46bd      	mov	sp, r7
 800324c:	bd80      	pop	{r7, pc}
 800324e:	bf00      	nop
 8003250:	40004400 	.word	0x40004400

08003254 <DMA1_Stream6_IRQHandler>:


void DMA1_Stream6_IRQHandler(void)
{
 8003254:	b480      	push	{r7}
 8003256:	af00      	add	r7, sp, #0
	if((DMA1->HISR) & HIFSR_TCIF6)
 8003258:	4b09      	ldr	r3, [pc, #36]	; (8003280 <DMA1_Stream6_IRQHandler+0x2c>)
 800325a:	685b      	ldr	r3, [r3, #4]
 800325c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003260:	2b00      	cmp	r3, #0
 8003262:	d008      	beq.n	8003276 <DMA1_Stream6_IRQHandler+0x22>
	{
		//do_ssomething
		g_tx_cmplt_uart = 1;
 8003264:	4b07      	ldr	r3, [pc, #28]	; (8003284 <DMA1_Stream6_IRQHandler+0x30>)
 8003266:	2201      	movs	r2, #1
 8003268:	701a      	strb	r2, [r3, #0]
		/*Clear the flag*/
		DMA1->HIFCR |= HIFCR_CTCIF6;
 800326a:	4b05      	ldr	r3, [pc, #20]	; (8003280 <DMA1_Stream6_IRQHandler+0x2c>)
 800326c:	68db      	ldr	r3, [r3, #12]
 800326e:	4a04      	ldr	r2, [pc, #16]	; (8003280 <DMA1_Stream6_IRQHandler+0x2c>)
 8003270:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003274:	60d3      	str	r3, [r2, #12]
	}
}
 8003276:	bf00      	nop
 8003278:	46bd      	mov	sp, r7
 800327a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800327e:	4770      	bx	lr
 8003280:	40026000 	.word	0x40026000
 8003284:	2000032d 	.word	0x2000032d

08003288 <DMA1_Stream5_IRQHandler>:


void DMA1_Stream5_IRQHandler(void)
{
 8003288:	b480      	push	{r7}
 800328a:	af00      	add	r7, sp, #0
	if((DMA1->HISR) & HIFSR_TCIF5)
 800328c:	4b09      	ldr	r3, [pc, #36]	; (80032b4 <DMA1_Stream5_IRQHandler+0x2c>)
 800328e:	685b      	ldr	r3, [r3, #4]
 8003290:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003294:	2b00      	cmp	r3, #0
 8003296:	d008      	beq.n	80032aa <DMA1_Stream5_IRQHandler+0x22>
	{

		g_rx_cmplt_uart = 1;
 8003298:	4b07      	ldr	r3, [pc, #28]	; (80032b8 <DMA1_Stream5_IRQHandler+0x30>)
 800329a:	2201      	movs	r2, #1
 800329c:	701a      	strb	r2, [r3, #0]

		//do_ssomething


		/*Clear the flag*/
		DMA1->HIFCR |= HIFCR_CTCIF5;
 800329e:	4b05      	ldr	r3, [pc, #20]	; (80032b4 <DMA1_Stream5_IRQHandler+0x2c>)
 80032a0:	68db      	ldr	r3, [r3, #12]
 80032a2:	4a04      	ldr	r2, [pc, #16]	; (80032b4 <DMA1_Stream5_IRQHandler+0x2c>)
 80032a4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80032a8:	60d3      	str	r3, [r2, #12]
	}
}
 80032aa:	bf00      	nop
 80032ac:	46bd      	mov	sp, r7
 80032ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032b2:	4770      	bx	lr
 80032b4:	40026000 	.word	0x40026000
 80032b8:	2000032c 	.word	0x2000032c

080032bc <USART2_IRQHandler>:
//g_uart_cmplt
void USART2_IRQHandler(void)
{
 80032bc:	b480      	push	{r7}
 80032be:	af00      	add	r7, sp, #0
	g_uart_cmplt  = 1;
 80032c0:	4b06      	ldr	r3, [pc, #24]	; (80032dc <USART2_IRQHandler+0x20>)
 80032c2:	2201      	movs	r2, #1
 80032c4:	701a      	strb	r2, [r3, #0]

	/*Clear TC interrupt flag*/
	USART2->SR &=~SR_TC;
 80032c6:	4b06      	ldr	r3, [pc, #24]	; (80032e0 <USART2_IRQHandler+0x24>)
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	4a05      	ldr	r2, [pc, #20]	; (80032e0 <USART2_IRQHandler+0x24>)
 80032cc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80032d0:	6013      	str	r3, [r2, #0]
}
 80032d2:	bf00      	nop
 80032d4:	46bd      	mov	sp, r7
 80032d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032da:	4770      	bx	lr
 80032dc:	2000032e 	.word	0x2000032e
 80032e0:	40004400 	.word	0x40004400

080032e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80032e4:	480d      	ldr	r0, [pc, #52]	; (800331c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80032e6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80032e8:	f7ff fdd6 	bl	8002e98 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80032ec:	480c      	ldr	r0, [pc, #48]	; (8003320 <LoopForever+0x6>)
  ldr r1, =_edata
 80032ee:	490d      	ldr	r1, [pc, #52]	; (8003324 <LoopForever+0xa>)
  ldr r2, =_sidata
 80032f0:	4a0d      	ldr	r2, [pc, #52]	; (8003328 <LoopForever+0xe>)
  movs r3, #0
 80032f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80032f4:	e002      	b.n	80032fc <LoopCopyDataInit>

080032f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80032f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80032f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80032fa:	3304      	adds	r3, #4

080032fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80032fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80032fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003300:	d3f9      	bcc.n	80032f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003302:	4a0a      	ldr	r2, [pc, #40]	; (800332c <LoopForever+0x12>)
  ldr r4, =_ebss
 8003304:	4c0a      	ldr	r4, [pc, #40]	; (8003330 <LoopForever+0x16>)
  movs r3, #0
 8003306:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003308:	e001      	b.n	800330e <LoopFillZerobss>

0800330a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800330a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800330c:	3204      	adds	r2, #4

0800330e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800330e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003310:	d3fb      	bcc.n	800330a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8003312:	f000 f817 	bl	8003344 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8003316:	f7fe fd99 	bl	8001e4c <main>

0800331a <LoopForever>:

LoopForever:
    b LoopForever
 800331a:	e7fe      	b.n	800331a <LoopForever>
  ldr   r0, =_estack
 800331c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8003320:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003324:	20000200 	.word	0x20000200
  ldr r2, =_sidata
 8003328:	08009284 	.word	0x08009284
  ldr r2, =_sbss
 800332c:	20000200 	.word	0x20000200
  ldr r4, =_ebss
 8003330:	20000340 	.word	0x20000340

08003334 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003334:	e7fe      	b.n	8003334 <ADC_IRQHandler>
	...

08003338 <__errno>:
 8003338:	4b01      	ldr	r3, [pc, #4]	; (8003340 <__errno+0x8>)
 800333a:	6818      	ldr	r0, [r3, #0]
 800333c:	4770      	bx	lr
 800333e:	bf00      	nop
 8003340:	2000002c 	.word	0x2000002c

08003344 <__libc_init_array>:
 8003344:	b570      	push	{r4, r5, r6, lr}
 8003346:	4d0d      	ldr	r5, [pc, #52]	; (800337c <__libc_init_array+0x38>)
 8003348:	4c0d      	ldr	r4, [pc, #52]	; (8003380 <__libc_init_array+0x3c>)
 800334a:	1b64      	subs	r4, r4, r5
 800334c:	10a4      	asrs	r4, r4, #2
 800334e:	2600      	movs	r6, #0
 8003350:	42a6      	cmp	r6, r4
 8003352:	d109      	bne.n	8003368 <__libc_init_array+0x24>
 8003354:	4d0b      	ldr	r5, [pc, #44]	; (8003384 <__libc_init_array+0x40>)
 8003356:	4c0c      	ldr	r4, [pc, #48]	; (8003388 <__libc_init_array+0x44>)
 8003358:	f005 fb3e 	bl	80089d8 <_init>
 800335c:	1b64      	subs	r4, r4, r5
 800335e:	10a4      	asrs	r4, r4, #2
 8003360:	2600      	movs	r6, #0
 8003362:	42a6      	cmp	r6, r4
 8003364:	d105      	bne.n	8003372 <__libc_init_array+0x2e>
 8003366:	bd70      	pop	{r4, r5, r6, pc}
 8003368:	f855 3b04 	ldr.w	r3, [r5], #4
 800336c:	4798      	blx	r3
 800336e:	3601      	adds	r6, #1
 8003370:	e7ee      	b.n	8003350 <__libc_init_array+0xc>
 8003372:	f855 3b04 	ldr.w	r3, [r5], #4
 8003376:	4798      	blx	r3
 8003378:	3601      	adds	r6, #1
 800337a:	e7f2      	b.n	8003362 <__libc_init_array+0x1e>
 800337c:	0800927c 	.word	0x0800927c
 8003380:	0800927c 	.word	0x0800927c
 8003384:	0800927c 	.word	0x0800927c
 8003388:	08009280 	.word	0x08009280

0800338c <memset>:
 800338c:	4402      	add	r2, r0
 800338e:	4603      	mov	r3, r0
 8003390:	4293      	cmp	r3, r2
 8003392:	d100      	bne.n	8003396 <memset+0xa>
 8003394:	4770      	bx	lr
 8003396:	f803 1b01 	strb.w	r1, [r3], #1
 800339a:	e7f9      	b.n	8003390 <memset+0x4>

0800339c <__cvt>:
 800339c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80033a0:	ec55 4b10 	vmov	r4, r5, d0
 80033a4:	2d00      	cmp	r5, #0
 80033a6:	460e      	mov	r6, r1
 80033a8:	4619      	mov	r1, r3
 80033aa:	462b      	mov	r3, r5
 80033ac:	bfbb      	ittet	lt
 80033ae:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80033b2:	461d      	movlt	r5, r3
 80033b4:	2300      	movge	r3, #0
 80033b6:	232d      	movlt	r3, #45	; 0x2d
 80033b8:	700b      	strb	r3, [r1, #0]
 80033ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80033bc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80033c0:	4691      	mov	r9, r2
 80033c2:	f023 0820 	bic.w	r8, r3, #32
 80033c6:	bfbc      	itt	lt
 80033c8:	4622      	movlt	r2, r4
 80033ca:	4614      	movlt	r4, r2
 80033cc:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80033d0:	d005      	beq.n	80033de <__cvt+0x42>
 80033d2:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80033d6:	d100      	bne.n	80033da <__cvt+0x3e>
 80033d8:	3601      	adds	r6, #1
 80033da:	2102      	movs	r1, #2
 80033dc:	e000      	b.n	80033e0 <__cvt+0x44>
 80033de:	2103      	movs	r1, #3
 80033e0:	ab03      	add	r3, sp, #12
 80033e2:	9301      	str	r3, [sp, #4]
 80033e4:	ab02      	add	r3, sp, #8
 80033e6:	9300      	str	r3, [sp, #0]
 80033e8:	ec45 4b10 	vmov	d0, r4, r5
 80033ec:	4653      	mov	r3, sl
 80033ee:	4632      	mov	r2, r6
 80033f0:	f001 fdae 	bl	8004f50 <_dtoa_r>
 80033f4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80033f8:	4607      	mov	r7, r0
 80033fa:	d102      	bne.n	8003402 <__cvt+0x66>
 80033fc:	f019 0f01 	tst.w	r9, #1
 8003400:	d022      	beq.n	8003448 <__cvt+0xac>
 8003402:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8003406:	eb07 0906 	add.w	r9, r7, r6
 800340a:	d110      	bne.n	800342e <__cvt+0x92>
 800340c:	783b      	ldrb	r3, [r7, #0]
 800340e:	2b30      	cmp	r3, #48	; 0x30
 8003410:	d10a      	bne.n	8003428 <__cvt+0x8c>
 8003412:	2200      	movs	r2, #0
 8003414:	2300      	movs	r3, #0
 8003416:	4620      	mov	r0, r4
 8003418:	4629      	mov	r1, r5
 800341a:	f7fd fb5d 	bl	8000ad8 <__aeabi_dcmpeq>
 800341e:	b918      	cbnz	r0, 8003428 <__cvt+0x8c>
 8003420:	f1c6 0601 	rsb	r6, r6, #1
 8003424:	f8ca 6000 	str.w	r6, [sl]
 8003428:	f8da 3000 	ldr.w	r3, [sl]
 800342c:	4499      	add	r9, r3
 800342e:	2200      	movs	r2, #0
 8003430:	2300      	movs	r3, #0
 8003432:	4620      	mov	r0, r4
 8003434:	4629      	mov	r1, r5
 8003436:	f7fd fb4f 	bl	8000ad8 <__aeabi_dcmpeq>
 800343a:	b108      	cbz	r0, 8003440 <__cvt+0xa4>
 800343c:	f8cd 900c 	str.w	r9, [sp, #12]
 8003440:	2230      	movs	r2, #48	; 0x30
 8003442:	9b03      	ldr	r3, [sp, #12]
 8003444:	454b      	cmp	r3, r9
 8003446:	d307      	bcc.n	8003458 <__cvt+0xbc>
 8003448:	9b03      	ldr	r3, [sp, #12]
 800344a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800344c:	1bdb      	subs	r3, r3, r7
 800344e:	4638      	mov	r0, r7
 8003450:	6013      	str	r3, [r2, #0]
 8003452:	b004      	add	sp, #16
 8003454:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003458:	1c59      	adds	r1, r3, #1
 800345a:	9103      	str	r1, [sp, #12]
 800345c:	701a      	strb	r2, [r3, #0]
 800345e:	e7f0      	b.n	8003442 <__cvt+0xa6>

08003460 <__exponent>:
 8003460:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003462:	4603      	mov	r3, r0
 8003464:	2900      	cmp	r1, #0
 8003466:	bfb8      	it	lt
 8003468:	4249      	neglt	r1, r1
 800346a:	f803 2b02 	strb.w	r2, [r3], #2
 800346e:	bfb4      	ite	lt
 8003470:	222d      	movlt	r2, #45	; 0x2d
 8003472:	222b      	movge	r2, #43	; 0x2b
 8003474:	2909      	cmp	r1, #9
 8003476:	7042      	strb	r2, [r0, #1]
 8003478:	dd2a      	ble.n	80034d0 <__exponent+0x70>
 800347a:	f10d 0407 	add.w	r4, sp, #7
 800347e:	46a4      	mov	ip, r4
 8003480:	270a      	movs	r7, #10
 8003482:	46a6      	mov	lr, r4
 8003484:	460a      	mov	r2, r1
 8003486:	fb91 f6f7 	sdiv	r6, r1, r7
 800348a:	fb07 1516 	mls	r5, r7, r6, r1
 800348e:	3530      	adds	r5, #48	; 0x30
 8003490:	2a63      	cmp	r2, #99	; 0x63
 8003492:	f104 34ff 	add.w	r4, r4, #4294967295
 8003496:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800349a:	4631      	mov	r1, r6
 800349c:	dcf1      	bgt.n	8003482 <__exponent+0x22>
 800349e:	3130      	adds	r1, #48	; 0x30
 80034a0:	f1ae 0502 	sub.w	r5, lr, #2
 80034a4:	f804 1c01 	strb.w	r1, [r4, #-1]
 80034a8:	1c44      	adds	r4, r0, #1
 80034aa:	4629      	mov	r1, r5
 80034ac:	4561      	cmp	r1, ip
 80034ae:	d30a      	bcc.n	80034c6 <__exponent+0x66>
 80034b0:	f10d 0209 	add.w	r2, sp, #9
 80034b4:	eba2 020e 	sub.w	r2, r2, lr
 80034b8:	4565      	cmp	r5, ip
 80034ba:	bf88      	it	hi
 80034bc:	2200      	movhi	r2, #0
 80034be:	4413      	add	r3, r2
 80034c0:	1a18      	subs	r0, r3, r0
 80034c2:	b003      	add	sp, #12
 80034c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80034c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80034ca:	f804 2f01 	strb.w	r2, [r4, #1]!
 80034ce:	e7ed      	b.n	80034ac <__exponent+0x4c>
 80034d0:	2330      	movs	r3, #48	; 0x30
 80034d2:	3130      	adds	r1, #48	; 0x30
 80034d4:	7083      	strb	r3, [r0, #2]
 80034d6:	70c1      	strb	r1, [r0, #3]
 80034d8:	1d03      	adds	r3, r0, #4
 80034da:	e7f1      	b.n	80034c0 <__exponent+0x60>

080034dc <_printf_float>:
 80034dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034e0:	ed2d 8b02 	vpush	{d8}
 80034e4:	b08d      	sub	sp, #52	; 0x34
 80034e6:	460c      	mov	r4, r1
 80034e8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80034ec:	4616      	mov	r6, r2
 80034ee:	461f      	mov	r7, r3
 80034f0:	4605      	mov	r5, r0
 80034f2:	f002 ff7f 	bl	80063f4 <_localeconv_r>
 80034f6:	f8d0 a000 	ldr.w	sl, [r0]
 80034fa:	4650      	mov	r0, sl
 80034fc:	f7fc fe70 	bl	80001e0 <strlen>
 8003500:	2300      	movs	r3, #0
 8003502:	930a      	str	r3, [sp, #40]	; 0x28
 8003504:	6823      	ldr	r3, [r4, #0]
 8003506:	9305      	str	r3, [sp, #20]
 8003508:	f8d8 3000 	ldr.w	r3, [r8]
 800350c:	f894 b018 	ldrb.w	fp, [r4, #24]
 8003510:	3307      	adds	r3, #7
 8003512:	f023 0307 	bic.w	r3, r3, #7
 8003516:	f103 0208 	add.w	r2, r3, #8
 800351a:	f8c8 2000 	str.w	r2, [r8]
 800351e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003522:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8003526:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800352a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800352e:	9307      	str	r3, [sp, #28]
 8003530:	f8cd 8018 	str.w	r8, [sp, #24]
 8003534:	ee08 0a10 	vmov	s16, r0
 8003538:	4b9f      	ldr	r3, [pc, #636]	; (80037b8 <_printf_float+0x2dc>)
 800353a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800353e:	f04f 32ff 	mov.w	r2, #4294967295
 8003542:	f7fd fafb 	bl	8000b3c <__aeabi_dcmpun>
 8003546:	bb88      	cbnz	r0, 80035ac <_printf_float+0xd0>
 8003548:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800354c:	4b9a      	ldr	r3, [pc, #616]	; (80037b8 <_printf_float+0x2dc>)
 800354e:	f04f 32ff 	mov.w	r2, #4294967295
 8003552:	f7fd fad5 	bl	8000b00 <__aeabi_dcmple>
 8003556:	bb48      	cbnz	r0, 80035ac <_printf_float+0xd0>
 8003558:	2200      	movs	r2, #0
 800355a:	2300      	movs	r3, #0
 800355c:	4640      	mov	r0, r8
 800355e:	4649      	mov	r1, r9
 8003560:	f7fd fac4 	bl	8000aec <__aeabi_dcmplt>
 8003564:	b110      	cbz	r0, 800356c <_printf_float+0x90>
 8003566:	232d      	movs	r3, #45	; 0x2d
 8003568:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800356c:	4b93      	ldr	r3, [pc, #588]	; (80037bc <_printf_float+0x2e0>)
 800356e:	4894      	ldr	r0, [pc, #592]	; (80037c0 <_printf_float+0x2e4>)
 8003570:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8003574:	bf94      	ite	ls
 8003576:	4698      	movls	r8, r3
 8003578:	4680      	movhi	r8, r0
 800357a:	2303      	movs	r3, #3
 800357c:	6123      	str	r3, [r4, #16]
 800357e:	9b05      	ldr	r3, [sp, #20]
 8003580:	f023 0204 	bic.w	r2, r3, #4
 8003584:	6022      	str	r2, [r4, #0]
 8003586:	f04f 0900 	mov.w	r9, #0
 800358a:	9700      	str	r7, [sp, #0]
 800358c:	4633      	mov	r3, r6
 800358e:	aa0b      	add	r2, sp, #44	; 0x2c
 8003590:	4621      	mov	r1, r4
 8003592:	4628      	mov	r0, r5
 8003594:	f000 f9d8 	bl	8003948 <_printf_common>
 8003598:	3001      	adds	r0, #1
 800359a:	f040 8090 	bne.w	80036be <_printf_float+0x1e2>
 800359e:	f04f 30ff 	mov.w	r0, #4294967295
 80035a2:	b00d      	add	sp, #52	; 0x34
 80035a4:	ecbd 8b02 	vpop	{d8}
 80035a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035ac:	4642      	mov	r2, r8
 80035ae:	464b      	mov	r3, r9
 80035b0:	4640      	mov	r0, r8
 80035b2:	4649      	mov	r1, r9
 80035b4:	f7fd fac2 	bl	8000b3c <__aeabi_dcmpun>
 80035b8:	b140      	cbz	r0, 80035cc <_printf_float+0xf0>
 80035ba:	464b      	mov	r3, r9
 80035bc:	2b00      	cmp	r3, #0
 80035be:	bfbc      	itt	lt
 80035c0:	232d      	movlt	r3, #45	; 0x2d
 80035c2:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80035c6:	487f      	ldr	r0, [pc, #508]	; (80037c4 <_printf_float+0x2e8>)
 80035c8:	4b7f      	ldr	r3, [pc, #508]	; (80037c8 <_printf_float+0x2ec>)
 80035ca:	e7d1      	b.n	8003570 <_printf_float+0x94>
 80035cc:	6863      	ldr	r3, [r4, #4]
 80035ce:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80035d2:	9206      	str	r2, [sp, #24]
 80035d4:	1c5a      	adds	r2, r3, #1
 80035d6:	d13f      	bne.n	8003658 <_printf_float+0x17c>
 80035d8:	2306      	movs	r3, #6
 80035da:	6063      	str	r3, [r4, #4]
 80035dc:	9b05      	ldr	r3, [sp, #20]
 80035de:	6861      	ldr	r1, [r4, #4]
 80035e0:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80035e4:	2300      	movs	r3, #0
 80035e6:	9303      	str	r3, [sp, #12]
 80035e8:	ab0a      	add	r3, sp, #40	; 0x28
 80035ea:	e9cd b301 	strd	fp, r3, [sp, #4]
 80035ee:	ab09      	add	r3, sp, #36	; 0x24
 80035f0:	ec49 8b10 	vmov	d0, r8, r9
 80035f4:	9300      	str	r3, [sp, #0]
 80035f6:	6022      	str	r2, [r4, #0]
 80035f8:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80035fc:	4628      	mov	r0, r5
 80035fe:	f7ff fecd 	bl	800339c <__cvt>
 8003602:	9b06      	ldr	r3, [sp, #24]
 8003604:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003606:	2b47      	cmp	r3, #71	; 0x47
 8003608:	4680      	mov	r8, r0
 800360a:	d108      	bne.n	800361e <_printf_float+0x142>
 800360c:	1cc8      	adds	r0, r1, #3
 800360e:	db02      	blt.n	8003616 <_printf_float+0x13a>
 8003610:	6863      	ldr	r3, [r4, #4]
 8003612:	4299      	cmp	r1, r3
 8003614:	dd41      	ble.n	800369a <_printf_float+0x1be>
 8003616:	f1ab 0b02 	sub.w	fp, fp, #2
 800361a:	fa5f fb8b 	uxtb.w	fp, fp
 800361e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8003622:	d820      	bhi.n	8003666 <_printf_float+0x18a>
 8003624:	3901      	subs	r1, #1
 8003626:	465a      	mov	r2, fp
 8003628:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800362c:	9109      	str	r1, [sp, #36]	; 0x24
 800362e:	f7ff ff17 	bl	8003460 <__exponent>
 8003632:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003634:	1813      	adds	r3, r2, r0
 8003636:	2a01      	cmp	r2, #1
 8003638:	4681      	mov	r9, r0
 800363a:	6123      	str	r3, [r4, #16]
 800363c:	dc02      	bgt.n	8003644 <_printf_float+0x168>
 800363e:	6822      	ldr	r2, [r4, #0]
 8003640:	07d2      	lsls	r2, r2, #31
 8003642:	d501      	bpl.n	8003648 <_printf_float+0x16c>
 8003644:	3301      	adds	r3, #1
 8003646:	6123      	str	r3, [r4, #16]
 8003648:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800364c:	2b00      	cmp	r3, #0
 800364e:	d09c      	beq.n	800358a <_printf_float+0xae>
 8003650:	232d      	movs	r3, #45	; 0x2d
 8003652:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003656:	e798      	b.n	800358a <_printf_float+0xae>
 8003658:	9a06      	ldr	r2, [sp, #24]
 800365a:	2a47      	cmp	r2, #71	; 0x47
 800365c:	d1be      	bne.n	80035dc <_printf_float+0x100>
 800365e:	2b00      	cmp	r3, #0
 8003660:	d1bc      	bne.n	80035dc <_printf_float+0x100>
 8003662:	2301      	movs	r3, #1
 8003664:	e7b9      	b.n	80035da <_printf_float+0xfe>
 8003666:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800366a:	d118      	bne.n	800369e <_printf_float+0x1c2>
 800366c:	2900      	cmp	r1, #0
 800366e:	6863      	ldr	r3, [r4, #4]
 8003670:	dd0b      	ble.n	800368a <_printf_float+0x1ae>
 8003672:	6121      	str	r1, [r4, #16]
 8003674:	b913      	cbnz	r3, 800367c <_printf_float+0x1a0>
 8003676:	6822      	ldr	r2, [r4, #0]
 8003678:	07d0      	lsls	r0, r2, #31
 800367a:	d502      	bpl.n	8003682 <_printf_float+0x1a6>
 800367c:	3301      	adds	r3, #1
 800367e:	440b      	add	r3, r1
 8003680:	6123      	str	r3, [r4, #16]
 8003682:	65a1      	str	r1, [r4, #88]	; 0x58
 8003684:	f04f 0900 	mov.w	r9, #0
 8003688:	e7de      	b.n	8003648 <_printf_float+0x16c>
 800368a:	b913      	cbnz	r3, 8003692 <_printf_float+0x1b6>
 800368c:	6822      	ldr	r2, [r4, #0]
 800368e:	07d2      	lsls	r2, r2, #31
 8003690:	d501      	bpl.n	8003696 <_printf_float+0x1ba>
 8003692:	3302      	adds	r3, #2
 8003694:	e7f4      	b.n	8003680 <_printf_float+0x1a4>
 8003696:	2301      	movs	r3, #1
 8003698:	e7f2      	b.n	8003680 <_printf_float+0x1a4>
 800369a:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800369e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80036a0:	4299      	cmp	r1, r3
 80036a2:	db05      	blt.n	80036b0 <_printf_float+0x1d4>
 80036a4:	6823      	ldr	r3, [r4, #0]
 80036a6:	6121      	str	r1, [r4, #16]
 80036a8:	07d8      	lsls	r0, r3, #31
 80036aa:	d5ea      	bpl.n	8003682 <_printf_float+0x1a6>
 80036ac:	1c4b      	adds	r3, r1, #1
 80036ae:	e7e7      	b.n	8003680 <_printf_float+0x1a4>
 80036b0:	2900      	cmp	r1, #0
 80036b2:	bfd4      	ite	le
 80036b4:	f1c1 0202 	rsble	r2, r1, #2
 80036b8:	2201      	movgt	r2, #1
 80036ba:	4413      	add	r3, r2
 80036bc:	e7e0      	b.n	8003680 <_printf_float+0x1a4>
 80036be:	6823      	ldr	r3, [r4, #0]
 80036c0:	055a      	lsls	r2, r3, #21
 80036c2:	d407      	bmi.n	80036d4 <_printf_float+0x1f8>
 80036c4:	6923      	ldr	r3, [r4, #16]
 80036c6:	4642      	mov	r2, r8
 80036c8:	4631      	mov	r1, r6
 80036ca:	4628      	mov	r0, r5
 80036cc:	47b8      	blx	r7
 80036ce:	3001      	adds	r0, #1
 80036d0:	d12c      	bne.n	800372c <_printf_float+0x250>
 80036d2:	e764      	b.n	800359e <_printf_float+0xc2>
 80036d4:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80036d8:	f240 80e0 	bls.w	800389c <_printf_float+0x3c0>
 80036dc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80036e0:	2200      	movs	r2, #0
 80036e2:	2300      	movs	r3, #0
 80036e4:	f7fd f9f8 	bl	8000ad8 <__aeabi_dcmpeq>
 80036e8:	2800      	cmp	r0, #0
 80036ea:	d034      	beq.n	8003756 <_printf_float+0x27a>
 80036ec:	4a37      	ldr	r2, [pc, #220]	; (80037cc <_printf_float+0x2f0>)
 80036ee:	2301      	movs	r3, #1
 80036f0:	4631      	mov	r1, r6
 80036f2:	4628      	mov	r0, r5
 80036f4:	47b8      	blx	r7
 80036f6:	3001      	adds	r0, #1
 80036f8:	f43f af51 	beq.w	800359e <_printf_float+0xc2>
 80036fc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003700:	429a      	cmp	r2, r3
 8003702:	db02      	blt.n	800370a <_printf_float+0x22e>
 8003704:	6823      	ldr	r3, [r4, #0]
 8003706:	07d8      	lsls	r0, r3, #31
 8003708:	d510      	bpl.n	800372c <_printf_float+0x250>
 800370a:	ee18 3a10 	vmov	r3, s16
 800370e:	4652      	mov	r2, sl
 8003710:	4631      	mov	r1, r6
 8003712:	4628      	mov	r0, r5
 8003714:	47b8      	blx	r7
 8003716:	3001      	adds	r0, #1
 8003718:	f43f af41 	beq.w	800359e <_printf_float+0xc2>
 800371c:	f04f 0800 	mov.w	r8, #0
 8003720:	f104 091a 	add.w	r9, r4, #26
 8003724:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003726:	3b01      	subs	r3, #1
 8003728:	4543      	cmp	r3, r8
 800372a:	dc09      	bgt.n	8003740 <_printf_float+0x264>
 800372c:	6823      	ldr	r3, [r4, #0]
 800372e:	079b      	lsls	r3, r3, #30
 8003730:	f100 8105 	bmi.w	800393e <_printf_float+0x462>
 8003734:	68e0      	ldr	r0, [r4, #12]
 8003736:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003738:	4298      	cmp	r0, r3
 800373a:	bfb8      	it	lt
 800373c:	4618      	movlt	r0, r3
 800373e:	e730      	b.n	80035a2 <_printf_float+0xc6>
 8003740:	2301      	movs	r3, #1
 8003742:	464a      	mov	r2, r9
 8003744:	4631      	mov	r1, r6
 8003746:	4628      	mov	r0, r5
 8003748:	47b8      	blx	r7
 800374a:	3001      	adds	r0, #1
 800374c:	f43f af27 	beq.w	800359e <_printf_float+0xc2>
 8003750:	f108 0801 	add.w	r8, r8, #1
 8003754:	e7e6      	b.n	8003724 <_printf_float+0x248>
 8003756:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003758:	2b00      	cmp	r3, #0
 800375a:	dc39      	bgt.n	80037d0 <_printf_float+0x2f4>
 800375c:	4a1b      	ldr	r2, [pc, #108]	; (80037cc <_printf_float+0x2f0>)
 800375e:	2301      	movs	r3, #1
 8003760:	4631      	mov	r1, r6
 8003762:	4628      	mov	r0, r5
 8003764:	47b8      	blx	r7
 8003766:	3001      	adds	r0, #1
 8003768:	f43f af19 	beq.w	800359e <_printf_float+0xc2>
 800376c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003770:	4313      	orrs	r3, r2
 8003772:	d102      	bne.n	800377a <_printf_float+0x29e>
 8003774:	6823      	ldr	r3, [r4, #0]
 8003776:	07d9      	lsls	r1, r3, #31
 8003778:	d5d8      	bpl.n	800372c <_printf_float+0x250>
 800377a:	ee18 3a10 	vmov	r3, s16
 800377e:	4652      	mov	r2, sl
 8003780:	4631      	mov	r1, r6
 8003782:	4628      	mov	r0, r5
 8003784:	47b8      	blx	r7
 8003786:	3001      	adds	r0, #1
 8003788:	f43f af09 	beq.w	800359e <_printf_float+0xc2>
 800378c:	f04f 0900 	mov.w	r9, #0
 8003790:	f104 0a1a 	add.w	sl, r4, #26
 8003794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003796:	425b      	negs	r3, r3
 8003798:	454b      	cmp	r3, r9
 800379a:	dc01      	bgt.n	80037a0 <_printf_float+0x2c4>
 800379c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800379e:	e792      	b.n	80036c6 <_printf_float+0x1ea>
 80037a0:	2301      	movs	r3, #1
 80037a2:	4652      	mov	r2, sl
 80037a4:	4631      	mov	r1, r6
 80037a6:	4628      	mov	r0, r5
 80037a8:	47b8      	blx	r7
 80037aa:	3001      	adds	r0, #1
 80037ac:	f43f aef7 	beq.w	800359e <_printf_float+0xc2>
 80037b0:	f109 0901 	add.w	r9, r9, #1
 80037b4:	e7ee      	b.n	8003794 <_printf_float+0x2b8>
 80037b6:	bf00      	nop
 80037b8:	7fefffff 	.word	0x7fefffff
 80037bc:	08008a04 	.word	0x08008a04
 80037c0:	08008a08 	.word	0x08008a08
 80037c4:	08008a10 	.word	0x08008a10
 80037c8:	08008a0c 	.word	0x08008a0c
 80037cc:	08008a14 	.word	0x08008a14
 80037d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80037d2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80037d4:	429a      	cmp	r2, r3
 80037d6:	bfa8      	it	ge
 80037d8:	461a      	movge	r2, r3
 80037da:	2a00      	cmp	r2, #0
 80037dc:	4691      	mov	r9, r2
 80037de:	dc37      	bgt.n	8003850 <_printf_float+0x374>
 80037e0:	f04f 0b00 	mov.w	fp, #0
 80037e4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80037e8:	f104 021a 	add.w	r2, r4, #26
 80037ec:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80037ee:	9305      	str	r3, [sp, #20]
 80037f0:	eba3 0309 	sub.w	r3, r3, r9
 80037f4:	455b      	cmp	r3, fp
 80037f6:	dc33      	bgt.n	8003860 <_printf_float+0x384>
 80037f8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80037fc:	429a      	cmp	r2, r3
 80037fe:	db3b      	blt.n	8003878 <_printf_float+0x39c>
 8003800:	6823      	ldr	r3, [r4, #0]
 8003802:	07da      	lsls	r2, r3, #31
 8003804:	d438      	bmi.n	8003878 <_printf_float+0x39c>
 8003806:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003808:	9a05      	ldr	r2, [sp, #20]
 800380a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800380c:	1a9a      	subs	r2, r3, r2
 800380e:	eba3 0901 	sub.w	r9, r3, r1
 8003812:	4591      	cmp	r9, r2
 8003814:	bfa8      	it	ge
 8003816:	4691      	movge	r9, r2
 8003818:	f1b9 0f00 	cmp.w	r9, #0
 800381c:	dc35      	bgt.n	800388a <_printf_float+0x3ae>
 800381e:	f04f 0800 	mov.w	r8, #0
 8003822:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003826:	f104 0a1a 	add.w	sl, r4, #26
 800382a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800382e:	1a9b      	subs	r3, r3, r2
 8003830:	eba3 0309 	sub.w	r3, r3, r9
 8003834:	4543      	cmp	r3, r8
 8003836:	f77f af79 	ble.w	800372c <_printf_float+0x250>
 800383a:	2301      	movs	r3, #1
 800383c:	4652      	mov	r2, sl
 800383e:	4631      	mov	r1, r6
 8003840:	4628      	mov	r0, r5
 8003842:	47b8      	blx	r7
 8003844:	3001      	adds	r0, #1
 8003846:	f43f aeaa 	beq.w	800359e <_printf_float+0xc2>
 800384a:	f108 0801 	add.w	r8, r8, #1
 800384e:	e7ec      	b.n	800382a <_printf_float+0x34e>
 8003850:	4613      	mov	r3, r2
 8003852:	4631      	mov	r1, r6
 8003854:	4642      	mov	r2, r8
 8003856:	4628      	mov	r0, r5
 8003858:	47b8      	blx	r7
 800385a:	3001      	adds	r0, #1
 800385c:	d1c0      	bne.n	80037e0 <_printf_float+0x304>
 800385e:	e69e      	b.n	800359e <_printf_float+0xc2>
 8003860:	2301      	movs	r3, #1
 8003862:	4631      	mov	r1, r6
 8003864:	4628      	mov	r0, r5
 8003866:	9205      	str	r2, [sp, #20]
 8003868:	47b8      	blx	r7
 800386a:	3001      	adds	r0, #1
 800386c:	f43f ae97 	beq.w	800359e <_printf_float+0xc2>
 8003870:	9a05      	ldr	r2, [sp, #20]
 8003872:	f10b 0b01 	add.w	fp, fp, #1
 8003876:	e7b9      	b.n	80037ec <_printf_float+0x310>
 8003878:	ee18 3a10 	vmov	r3, s16
 800387c:	4652      	mov	r2, sl
 800387e:	4631      	mov	r1, r6
 8003880:	4628      	mov	r0, r5
 8003882:	47b8      	blx	r7
 8003884:	3001      	adds	r0, #1
 8003886:	d1be      	bne.n	8003806 <_printf_float+0x32a>
 8003888:	e689      	b.n	800359e <_printf_float+0xc2>
 800388a:	9a05      	ldr	r2, [sp, #20]
 800388c:	464b      	mov	r3, r9
 800388e:	4442      	add	r2, r8
 8003890:	4631      	mov	r1, r6
 8003892:	4628      	mov	r0, r5
 8003894:	47b8      	blx	r7
 8003896:	3001      	adds	r0, #1
 8003898:	d1c1      	bne.n	800381e <_printf_float+0x342>
 800389a:	e680      	b.n	800359e <_printf_float+0xc2>
 800389c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800389e:	2a01      	cmp	r2, #1
 80038a0:	dc01      	bgt.n	80038a6 <_printf_float+0x3ca>
 80038a2:	07db      	lsls	r3, r3, #31
 80038a4:	d538      	bpl.n	8003918 <_printf_float+0x43c>
 80038a6:	2301      	movs	r3, #1
 80038a8:	4642      	mov	r2, r8
 80038aa:	4631      	mov	r1, r6
 80038ac:	4628      	mov	r0, r5
 80038ae:	47b8      	blx	r7
 80038b0:	3001      	adds	r0, #1
 80038b2:	f43f ae74 	beq.w	800359e <_printf_float+0xc2>
 80038b6:	ee18 3a10 	vmov	r3, s16
 80038ba:	4652      	mov	r2, sl
 80038bc:	4631      	mov	r1, r6
 80038be:	4628      	mov	r0, r5
 80038c0:	47b8      	blx	r7
 80038c2:	3001      	adds	r0, #1
 80038c4:	f43f ae6b 	beq.w	800359e <_printf_float+0xc2>
 80038c8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80038cc:	2200      	movs	r2, #0
 80038ce:	2300      	movs	r3, #0
 80038d0:	f7fd f902 	bl	8000ad8 <__aeabi_dcmpeq>
 80038d4:	b9d8      	cbnz	r0, 800390e <_printf_float+0x432>
 80038d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80038d8:	f108 0201 	add.w	r2, r8, #1
 80038dc:	3b01      	subs	r3, #1
 80038de:	4631      	mov	r1, r6
 80038e0:	4628      	mov	r0, r5
 80038e2:	47b8      	blx	r7
 80038e4:	3001      	adds	r0, #1
 80038e6:	d10e      	bne.n	8003906 <_printf_float+0x42a>
 80038e8:	e659      	b.n	800359e <_printf_float+0xc2>
 80038ea:	2301      	movs	r3, #1
 80038ec:	4652      	mov	r2, sl
 80038ee:	4631      	mov	r1, r6
 80038f0:	4628      	mov	r0, r5
 80038f2:	47b8      	blx	r7
 80038f4:	3001      	adds	r0, #1
 80038f6:	f43f ae52 	beq.w	800359e <_printf_float+0xc2>
 80038fa:	f108 0801 	add.w	r8, r8, #1
 80038fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003900:	3b01      	subs	r3, #1
 8003902:	4543      	cmp	r3, r8
 8003904:	dcf1      	bgt.n	80038ea <_printf_float+0x40e>
 8003906:	464b      	mov	r3, r9
 8003908:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800390c:	e6dc      	b.n	80036c8 <_printf_float+0x1ec>
 800390e:	f04f 0800 	mov.w	r8, #0
 8003912:	f104 0a1a 	add.w	sl, r4, #26
 8003916:	e7f2      	b.n	80038fe <_printf_float+0x422>
 8003918:	2301      	movs	r3, #1
 800391a:	4642      	mov	r2, r8
 800391c:	e7df      	b.n	80038de <_printf_float+0x402>
 800391e:	2301      	movs	r3, #1
 8003920:	464a      	mov	r2, r9
 8003922:	4631      	mov	r1, r6
 8003924:	4628      	mov	r0, r5
 8003926:	47b8      	blx	r7
 8003928:	3001      	adds	r0, #1
 800392a:	f43f ae38 	beq.w	800359e <_printf_float+0xc2>
 800392e:	f108 0801 	add.w	r8, r8, #1
 8003932:	68e3      	ldr	r3, [r4, #12]
 8003934:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003936:	1a5b      	subs	r3, r3, r1
 8003938:	4543      	cmp	r3, r8
 800393a:	dcf0      	bgt.n	800391e <_printf_float+0x442>
 800393c:	e6fa      	b.n	8003734 <_printf_float+0x258>
 800393e:	f04f 0800 	mov.w	r8, #0
 8003942:	f104 0919 	add.w	r9, r4, #25
 8003946:	e7f4      	b.n	8003932 <_printf_float+0x456>

08003948 <_printf_common>:
 8003948:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800394c:	4616      	mov	r6, r2
 800394e:	4699      	mov	r9, r3
 8003950:	688a      	ldr	r2, [r1, #8]
 8003952:	690b      	ldr	r3, [r1, #16]
 8003954:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003958:	4293      	cmp	r3, r2
 800395a:	bfb8      	it	lt
 800395c:	4613      	movlt	r3, r2
 800395e:	6033      	str	r3, [r6, #0]
 8003960:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003964:	4607      	mov	r7, r0
 8003966:	460c      	mov	r4, r1
 8003968:	b10a      	cbz	r2, 800396e <_printf_common+0x26>
 800396a:	3301      	adds	r3, #1
 800396c:	6033      	str	r3, [r6, #0]
 800396e:	6823      	ldr	r3, [r4, #0]
 8003970:	0699      	lsls	r1, r3, #26
 8003972:	bf42      	ittt	mi
 8003974:	6833      	ldrmi	r3, [r6, #0]
 8003976:	3302      	addmi	r3, #2
 8003978:	6033      	strmi	r3, [r6, #0]
 800397a:	6825      	ldr	r5, [r4, #0]
 800397c:	f015 0506 	ands.w	r5, r5, #6
 8003980:	d106      	bne.n	8003990 <_printf_common+0x48>
 8003982:	f104 0a19 	add.w	sl, r4, #25
 8003986:	68e3      	ldr	r3, [r4, #12]
 8003988:	6832      	ldr	r2, [r6, #0]
 800398a:	1a9b      	subs	r3, r3, r2
 800398c:	42ab      	cmp	r3, r5
 800398e:	dc26      	bgt.n	80039de <_printf_common+0x96>
 8003990:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003994:	1e13      	subs	r3, r2, #0
 8003996:	6822      	ldr	r2, [r4, #0]
 8003998:	bf18      	it	ne
 800399a:	2301      	movne	r3, #1
 800399c:	0692      	lsls	r2, r2, #26
 800399e:	d42b      	bmi.n	80039f8 <_printf_common+0xb0>
 80039a0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80039a4:	4649      	mov	r1, r9
 80039a6:	4638      	mov	r0, r7
 80039a8:	47c0      	blx	r8
 80039aa:	3001      	adds	r0, #1
 80039ac:	d01e      	beq.n	80039ec <_printf_common+0xa4>
 80039ae:	6823      	ldr	r3, [r4, #0]
 80039b0:	68e5      	ldr	r5, [r4, #12]
 80039b2:	6832      	ldr	r2, [r6, #0]
 80039b4:	f003 0306 	and.w	r3, r3, #6
 80039b8:	2b04      	cmp	r3, #4
 80039ba:	bf08      	it	eq
 80039bc:	1aad      	subeq	r5, r5, r2
 80039be:	68a3      	ldr	r3, [r4, #8]
 80039c0:	6922      	ldr	r2, [r4, #16]
 80039c2:	bf0c      	ite	eq
 80039c4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80039c8:	2500      	movne	r5, #0
 80039ca:	4293      	cmp	r3, r2
 80039cc:	bfc4      	itt	gt
 80039ce:	1a9b      	subgt	r3, r3, r2
 80039d0:	18ed      	addgt	r5, r5, r3
 80039d2:	2600      	movs	r6, #0
 80039d4:	341a      	adds	r4, #26
 80039d6:	42b5      	cmp	r5, r6
 80039d8:	d11a      	bne.n	8003a10 <_printf_common+0xc8>
 80039da:	2000      	movs	r0, #0
 80039dc:	e008      	b.n	80039f0 <_printf_common+0xa8>
 80039de:	2301      	movs	r3, #1
 80039e0:	4652      	mov	r2, sl
 80039e2:	4649      	mov	r1, r9
 80039e4:	4638      	mov	r0, r7
 80039e6:	47c0      	blx	r8
 80039e8:	3001      	adds	r0, #1
 80039ea:	d103      	bne.n	80039f4 <_printf_common+0xac>
 80039ec:	f04f 30ff 	mov.w	r0, #4294967295
 80039f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039f4:	3501      	adds	r5, #1
 80039f6:	e7c6      	b.n	8003986 <_printf_common+0x3e>
 80039f8:	18e1      	adds	r1, r4, r3
 80039fa:	1c5a      	adds	r2, r3, #1
 80039fc:	2030      	movs	r0, #48	; 0x30
 80039fe:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003a02:	4422      	add	r2, r4
 8003a04:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003a08:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003a0c:	3302      	adds	r3, #2
 8003a0e:	e7c7      	b.n	80039a0 <_printf_common+0x58>
 8003a10:	2301      	movs	r3, #1
 8003a12:	4622      	mov	r2, r4
 8003a14:	4649      	mov	r1, r9
 8003a16:	4638      	mov	r0, r7
 8003a18:	47c0      	blx	r8
 8003a1a:	3001      	adds	r0, #1
 8003a1c:	d0e6      	beq.n	80039ec <_printf_common+0xa4>
 8003a1e:	3601      	adds	r6, #1
 8003a20:	e7d9      	b.n	80039d6 <_printf_common+0x8e>
	...

08003a24 <_printf_i>:
 8003a24:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003a28:	7e0f      	ldrb	r7, [r1, #24]
 8003a2a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003a2c:	2f78      	cmp	r7, #120	; 0x78
 8003a2e:	4691      	mov	r9, r2
 8003a30:	4680      	mov	r8, r0
 8003a32:	460c      	mov	r4, r1
 8003a34:	469a      	mov	sl, r3
 8003a36:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003a3a:	d807      	bhi.n	8003a4c <_printf_i+0x28>
 8003a3c:	2f62      	cmp	r7, #98	; 0x62
 8003a3e:	d80a      	bhi.n	8003a56 <_printf_i+0x32>
 8003a40:	2f00      	cmp	r7, #0
 8003a42:	f000 80d8 	beq.w	8003bf6 <_printf_i+0x1d2>
 8003a46:	2f58      	cmp	r7, #88	; 0x58
 8003a48:	f000 80a3 	beq.w	8003b92 <_printf_i+0x16e>
 8003a4c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003a50:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003a54:	e03a      	b.n	8003acc <_printf_i+0xa8>
 8003a56:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003a5a:	2b15      	cmp	r3, #21
 8003a5c:	d8f6      	bhi.n	8003a4c <_printf_i+0x28>
 8003a5e:	a101      	add	r1, pc, #4	; (adr r1, 8003a64 <_printf_i+0x40>)
 8003a60:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003a64:	08003abd 	.word	0x08003abd
 8003a68:	08003ad1 	.word	0x08003ad1
 8003a6c:	08003a4d 	.word	0x08003a4d
 8003a70:	08003a4d 	.word	0x08003a4d
 8003a74:	08003a4d 	.word	0x08003a4d
 8003a78:	08003a4d 	.word	0x08003a4d
 8003a7c:	08003ad1 	.word	0x08003ad1
 8003a80:	08003a4d 	.word	0x08003a4d
 8003a84:	08003a4d 	.word	0x08003a4d
 8003a88:	08003a4d 	.word	0x08003a4d
 8003a8c:	08003a4d 	.word	0x08003a4d
 8003a90:	08003bdd 	.word	0x08003bdd
 8003a94:	08003b01 	.word	0x08003b01
 8003a98:	08003bbf 	.word	0x08003bbf
 8003a9c:	08003a4d 	.word	0x08003a4d
 8003aa0:	08003a4d 	.word	0x08003a4d
 8003aa4:	08003bff 	.word	0x08003bff
 8003aa8:	08003a4d 	.word	0x08003a4d
 8003aac:	08003b01 	.word	0x08003b01
 8003ab0:	08003a4d 	.word	0x08003a4d
 8003ab4:	08003a4d 	.word	0x08003a4d
 8003ab8:	08003bc7 	.word	0x08003bc7
 8003abc:	682b      	ldr	r3, [r5, #0]
 8003abe:	1d1a      	adds	r2, r3, #4
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	602a      	str	r2, [r5, #0]
 8003ac4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003ac8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003acc:	2301      	movs	r3, #1
 8003ace:	e0a3      	b.n	8003c18 <_printf_i+0x1f4>
 8003ad0:	6820      	ldr	r0, [r4, #0]
 8003ad2:	6829      	ldr	r1, [r5, #0]
 8003ad4:	0606      	lsls	r6, r0, #24
 8003ad6:	f101 0304 	add.w	r3, r1, #4
 8003ada:	d50a      	bpl.n	8003af2 <_printf_i+0xce>
 8003adc:	680e      	ldr	r6, [r1, #0]
 8003ade:	602b      	str	r3, [r5, #0]
 8003ae0:	2e00      	cmp	r6, #0
 8003ae2:	da03      	bge.n	8003aec <_printf_i+0xc8>
 8003ae4:	232d      	movs	r3, #45	; 0x2d
 8003ae6:	4276      	negs	r6, r6
 8003ae8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003aec:	485e      	ldr	r0, [pc, #376]	; (8003c68 <_printf_i+0x244>)
 8003aee:	230a      	movs	r3, #10
 8003af0:	e019      	b.n	8003b26 <_printf_i+0x102>
 8003af2:	680e      	ldr	r6, [r1, #0]
 8003af4:	602b      	str	r3, [r5, #0]
 8003af6:	f010 0f40 	tst.w	r0, #64	; 0x40
 8003afa:	bf18      	it	ne
 8003afc:	b236      	sxthne	r6, r6
 8003afe:	e7ef      	b.n	8003ae0 <_printf_i+0xbc>
 8003b00:	682b      	ldr	r3, [r5, #0]
 8003b02:	6820      	ldr	r0, [r4, #0]
 8003b04:	1d19      	adds	r1, r3, #4
 8003b06:	6029      	str	r1, [r5, #0]
 8003b08:	0601      	lsls	r1, r0, #24
 8003b0a:	d501      	bpl.n	8003b10 <_printf_i+0xec>
 8003b0c:	681e      	ldr	r6, [r3, #0]
 8003b0e:	e002      	b.n	8003b16 <_printf_i+0xf2>
 8003b10:	0646      	lsls	r6, r0, #25
 8003b12:	d5fb      	bpl.n	8003b0c <_printf_i+0xe8>
 8003b14:	881e      	ldrh	r6, [r3, #0]
 8003b16:	4854      	ldr	r0, [pc, #336]	; (8003c68 <_printf_i+0x244>)
 8003b18:	2f6f      	cmp	r7, #111	; 0x6f
 8003b1a:	bf0c      	ite	eq
 8003b1c:	2308      	moveq	r3, #8
 8003b1e:	230a      	movne	r3, #10
 8003b20:	2100      	movs	r1, #0
 8003b22:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003b26:	6865      	ldr	r5, [r4, #4]
 8003b28:	60a5      	str	r5, [r4, #8]
 8003b2a:	2d00      	cmp	r5, #0
 8003b2c:	bfa2      	ittt	ge
 8003b2e:	6821      	ldrge	r1, [r4, #0]
 8003b30:	f021 0104 	bicge.w	r1, r1, #4
 8003b34:	6021      	strge	r1, [r4, #0]
 8003b36:	b90e      	cbnz	r6, 8003b3c <_printf_i+0x118>
 8003b38:	2d00      	cmp	r5, #0
 8003b3a:	d04d      	beq.n	8003bd8 <_printf_i+0x1b4>
 8003b3c:	4615      	mov	r5, r2
 8003b3e:	fbb6 f1f3 	udiv	r1, r6, r3
 8003b42:	fb03 6711 	mls	r7, r3, r1, r6
 8003b46:	5dc7      	ldrb	r7, [r0, r7]
 8003b48:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003b4c:	4637      	mov	r7, r6
 8003b4e:	42bb      	cmp	r3, r7
 8003b50:	460e      	mov	r6, r1
 8003b52:	d9f4      	bls.n	8003b3e <_printf_i+0x11a>
 8003b54:	2b08      	cmp	r3, #8
 8003b56:	d10b      	bne.n	8003b70 <_printf_i+0x14c>
 8003b58:	6823      	ldr	r3, [r4, #0]
 8003b5a:	07de      	lsls	r6, r3, #31
 8003b5c:	d508      	bpl.n	8003b70 <_printf_i+0x14c>
 8003b5e:	6923      	ldr	r3, [r4, #16]
 8003b60:	6861      	ldr	r1, [r4, #4]
 8003b62:	4299      	cmp	r1, r3
 8003b64:	bfde      	ittt	le
 8003b66:	2330      	movle	r3, #48	; 0x30
 8003b68:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003b6c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8003b70:	1b52      	subs	r2, r2, r5
 8003b72:	6122      	str	r2, [r4, #16]
 8003b74:	f8cd a000 	str.w	sl, [sp]
 8003b78:	464b      	mov	r3, r9
 8003b7a:	aa03      	add	r2, sp, #12
 8003b7c:	4621      	mov	r1, r4
 8003b7e:	4640      	mov	r0, r8
 8003b80:	f7ff fee2 	bl	8003948 <_printf_common>
 8003b84:	3001      	adds	r0, #1
 8003b86:	d14c      	bne.n	8003c22 <_printf_i+0x1fe>
 8003b88:	f04f 30ff 	mov.w	r0, #4294967295
 8003b8c:	b004      	add	sp, #16
 8003b8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003b92:	4835      	ldr	r0, [pc, #212]	; (8003c68 <_printf_i+0x244>)
 8003b94:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8003b98:	6829      	ldr	r1, [r5, #0]
 8003b9a:	6823      	ldr	r3, [r4, #0]
 8003b9c:	f851 6b04 	ldr.w	r6, [r1], #4
 8003ba0:	6029      	str	r1, [r5, #0]
 8003ba2:	061d      	lsls	r5, r3, #24
 8003ba4:	d514      	bpl.n	8003bd0 <_printf_i+0x1ac>
 8003ba6:	07df      	lsls	r7, r3, #31
 8003ba8:	bf44      	itt	mi
 8003baa:	f043 0320 	orrmi.w	r3, r3, #32
 8003bae:	6023      	strmi	r3, [r4, #0]
 8003bb0:	b91e      	cbnz	r6, 8003bba <_printf_i+0x196>
 8003bb2:	6823      	ldr	r3, [r4, #0]
 8003bb4:	f023 0320 	bic.w	r3, r3, #32
 8003bb8:	6023      	str	r3, [r4, #0]
 8003bba:	2310      	movs	r3, #16
 8003bbc:	e7b0      	b.n	8003b20 <_printf_i+0xfc>
 8003bbe:	6823      	ldr	r3, [r4, #0]
 8003bc0:	f043 0320 	orr.w	r3, r3, #32
 8003bc4:	6023      	str	r3, [r4, #0]
 8003bc6:	2378      	movs	r3, #120	; 0x78
 8003bc8:	4828      	ldr	r0, [pc, #160]	; (8003c6c <_printf_i+0x248>)
 8003bca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003bce:	e7e3      	b.n	8003b98 <_printf_i+0x174>
 8003bd0:	0659      	lsls	r1, r3, #25
 8003bd2:	bf48      	it	mi
 8003bd4:	b2b6      	uxthmi	r6, r6
 8003bd6:	e7e6      	b.n	8003ba6 <_printf_i+0x182>
 8003bd8:	4615      	mov	r5, r2
 8003bda:	e7bb      	b.n	8003b54 <_printf_i+0x130>
 8003bdc:	682b      	ldr	r3, [r5, #0]
 8003bde:	6826      	ldr	r6, [r4, #0]
 8003be0:	6961      	ldr	r1, [r4, #20]
 8003be2:	1d18      	adds	r0, r3, #4
 8003be4:	6028      	str	r0, [r5, #0]
 8003be6:	0635      	lsls	r5, r6, #24
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	d501      	bpl.n	8003bf0 <_printf_i+0x1cc>
 8003bec:	6019      	str	r1, [r3, #0]
 8003bee:	e002      	b.n	8003bf6 <_printf_i+0x1d2>
 8003bf0:	0670      	lsls	r0, r6, #25
 8003bf2:	d5fb      	bpl.n	8003bec <_printf_i+0x1c8>
 8003bf4:	8019      	strh	r1, [r3, #0]
 8003bf6:	2300      	movs	r3, #0
 8003bf8:	6123      	str	r3, [r4, #16]
 8003bfa:	4615      	mov	r5, r2
 8003bfc:	e7ba      	b.n	8003b74 <_printf_i+0x150>
 8003bfe:	682b      	ldr	r3, [r5, #0]
 8003c00:	1d1a      	adds	r2, r3, #4
 8003c02:	602a      	str	r2, [r5, #0]
 8003c04:	681d      	ldr	r5, [r3, #0]
 8003c06:	6862      	ldr	r2, [r4, #4]
 8003c08:	2100      	movs	r1, #0
 8003c0a:	4628      	mov	r0, r5
 8003c0c:	f7fc faf0 	bl	80001f0 <memchr>
 8003c10:	b108      	cbz	r0, 8003c16 <_printf_i+0x1f2>
 8003c12:	1b40      	subs	r0, r0, r5
 8003c14:	6060      	str	r0, [r4, #4]
 8003c16:	6863      	ldr	r3, [r4, #4]
 8003c18:	6123      	str	r3, [r4, #16]
 8003c1a:	2300      	movs	r3, #0
 8003c1c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003c20:	e7a8      	b.n	8003b74 <_printf_i+0x150>
 8003c22:	6923      	ldr	r3, [r4, #16]
 8003c24:	462a      	mov	r2, r5
 8003c26:	4649      	mov	r1, r9
 8003c28:	4640      	mov	r0, r8
 8003c2a:	47d0      	blx	sl
 8003c2c:	3001      	adds	r0, #1
 8003c2e:	d0ab      	beq.n	8003b88 <_printf_i+0x164>
 8003c30:	6823      	ldr	r3, [r4, #0]
 8003c32:	079b      	lsls	r3, r3, #30
 8003c34:	d413      	bmi.n	8003c5e <_printf_i+0x23a>
 8003c36:	68e0      	ldr	r0, [r4, #12]
 8003c38:	9b03      	ldr	r3, [sp, #12]
 8003c3a:	4298      	cmp	r0, r3
 8003c3c:	bfb8      	it	lt
 8003c3e:	4618      	movlt	r0, r3
 8003c40:	e7a4      	b.n	8003b8c <_printf_i+0x168>
 8003c42:	2301      	movs	r3, #1
 8003c44:	4632      	mov	r2, r6
 8003c46:	4649      	mov	r1, r9
 8003c48:	4640      	mov	r0, r8
 8003c4a:	47d0      	blx	sl
 8003c4c:	3001      	adds	r0, #1
 8003c4e:	d09b      	beq.n	8003b88 <_printf_i+0x164>
 8003c50:	3501      	adds	r5, #1
 8003c52:	68e3      	ldr	r3, [r4, #12]
 8003c54:	9903      	ldr	r1, [sp, #12]
 8003c56:	1a5b      	subs	r3, r3, r1
 8003c58:	42ab      	cmp	r3, r5
 8003c5a:	dcf2      	bgt.n	8003c42 <_printf_i+0x21e>
 8003c5c:	e7eb      	b.n	8003c36 <_printf_i+0x212>
 8003c5e:	2500      	movs	r5, #0
 8003c60:	f104 0619 	add.w	r6, r4, #25
 8003c64:	e7f5      	b.n	8003c52 <_printf_i+0x22e>
 8003c66:	bf00      	nop
 8003c68:	08008a16 	.word	0x08008a16
 8003c6c:	08008a27 	.word	0x08008a27

08003c70 <_scanf_float>:
 8003c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c74:	b087      	sub	sp, #28
 8003c76:	4617      	mov	r7, r2
 8003c78:	9303      	str	r3, [sp, #12]
 8003c7a:	688b      	ldr	r3, [r1, #8]
 8003c7c:	1e5a      	subs	r2, r3, #1
 8003c7e:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8003c82:	bf83      	ittte	hi
 8003c84:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8003c88:	195b      	addhi	r3, r3, r5
 8003c8a:	9302      	strhi	r3, [sp, #8]
 8003c8c:	2300      	movls	r3, #0
 8003c8e:	bf86      	itte	hi
 8003c90:	f240 135d 	movwhi	r3, #349	; 0x15d
 8003c94:	608b      	strhi	r3, [r1, #8]
 8003c96:	9302      	strls	r3, [sp, #8]
 8003c98:	680b      	ldr	r3, [r1, #0]
 8003c9a:	468b      	mov	fp, r1
 8003c9c:	2500      	movs	r5, #0
 8003c9e:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8003ca2:	f84b 3b1c 	str.w	r3, [fp], #28
 8003ca6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8003caa:	4680      	mov	r8, r0
 8003cac:	460c      	mov	r4, r1
 8003cae:	465e      	mov	r6, fp
 8003cb0:	46aa      	mov	sl, r5
 8003cb2:	46a9      	mov	r9, r5
 8003cb4:	9501      	str	r5, [sp, #4]
 8003cb6:	68a2      	ldr	r2, [r4, #8]
 8003cb8:	b152      	cbz	r2, 8003cd0 <_scanf_float+0x60>
 8003cba:	683b      	ldr	r3, [r7, #0]
 8003cbc:	781b      	ldrb	r3, [r3, #0]
 8003cbe:	2b4e      	cmp	r3, #78	; 0x4e
 8003cc0:	d864      	bhi.n	8003d8c <_scanf_float+0x11c>
 8003cc2:	2b40      	cmp	r3, #64	; 0x40
 8003cc4:	d83c      	bhi.n	8003d40 <_scanf_float+0xd0>
 8003cc6:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8003cca:	b2c8      	uxtb	r0, r1
 8003ccc:	280e      	cmp	r0, #14
 8003cce:	d93a      	bls.n	8003d46 <_scanf_float+0xd6>
 8003cd0:	f1b9 0f00 	cmp.w	r9, #0
 8003cd4:	d003      	beq.n	8003cde <_scanf_float+0x6e>
 8003cd6:	6823      	ldr	r3, [r4, #0]
 8003cd8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003cdc:	6023      	str	r3, [r4, #0]
 8003cde:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003ce2:	f1ba 0f01 	cmp.w	sl, #1
 8003ce6:	f200 8113 	bhi.w	8003f10 <_scanf_float+0x2a0>
 8003cea:	455e      	cmp	r6, fp
 8003cec:	f200 8105 	bhi.w	8003efa <_scanf_float+0x28a>
 8003cf0:	2501      	movs	r5, #1
 8003cf2:	4628      	mov	r0, r5
 8003cf4:	b007      	add	sp, #28
 8003cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cfa:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8003cfe:	2a0d      	cmp	r2, #13
 8003d00:	d8e6      	bhi.n	8003cd0 <_scanf_float+0x60>
 8003d02:	a101      	add	r1, pc, #4	; (adr r1, 8003d08 <_scanf_float+0x98>)
 8003d04:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003d08:	08003e47 	.word	0x08003e47
 8003d0c:	08003cd1 	.word	0x08003cd1
 8003d10:	08003cd1 	.word	0x08003cd1
 8003d14:	08003cd1 	.word	0x08003cd1
 8003d18:	08003ea7 	.word	0x08003ea7
 8003d1c:	08003e7f 	.word	0x08003e7f
 8003d20:	08003cd1 	.word	0x08003cd1
 8003d24:	08003cd1 	.word	0x08003cd1
 8003d28:	08003e55 	.word	0x08003e55
 8003d2c:	08003cd1 	.word	0x08003cd1
 8003d30:	08003cd1 	.word	0x08003cd1
 8003d34:	08003cd1 	.word	0x08003cd1
 8003d38:	08003cd1 	.word	0x08003cd1
 8003d3c:	08003e0d 	.word	0x08003e0d
 8003d40:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003d44:	e7db      	b.n	8003cfe <_scanf_float+0x8e>
 8003d46:	290e      	cmp	r1, #14
 8003d48:	d8c2      	bhi.n	8003cd0 <_scanf_float+0x60>
 8003d4a:	a001      	add	r0, pc, #4	; (adr r0, 8003d50 <_scanf_float+0xe0>)
 8003d4c:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8003d50:	08003dff 	.word	0x08003dff
 8003d54:	08003cd1 	.word	0x08003cd1
 8003d58:	08003dff 	.word	0x08003dff
 8003d5c:	08003e93 	.word	0x08003e93
 8003d60:	08003cd1 	.word	0x08003cd1
 8003d64:	08003dad 	.word	0x08003dad
 8003d68:	08003de9 	.word	0x08003de9
 8003d6c:	08003de9 	.word	0x08003de9
 8003d70:	08003de9 	.word	0x08003de9
 8003d74:	08003de9 	.word	0x08003de9
 8003d78:	08003de9 	.word	0x08003de9
 8003d7c:	08003de9 	.word	0x08003de9
 8003d80:	08003de9 	.word	0x08003de9
 8003d84:	08003de9 	.word	0x08003de9
 8003d88:	08003de9 	.word	0x08003de9
 8003d8c:	2b6e      	cmp	r3, #110	; 0x6e
 8003d8e:	d809      	bhi.n	8003da4 <_scanf_float+0x134>
 8003d90:	2b60      	cmp	r3, #96	; 0x60
 8003d92:	d8b2      	bhi.n	8003cfa <_scanf_float+0x8a>
 8003d94:	2b54      	cmp	r3, #84	; 0x54
 8003d96:	d077      	beq.n	8003e88 <_scanf_float+0x218>
 8003d98:	2b59      	cmp	r3, #89	; 0x59
 8003d9a:	d199      	bne.n	8003cd0 <_scanf_float+0x60>
 8003d9c:	2d07      	cmp	r5, #7
 8003d9e:	d197      	bne.n	8003cd0 <_scanf_float+0x60>
 8003da0:	2508      	movs	r5, #8
 8003da2:	e029      	b.n	8003df8 <_scanf_float+0x188>
 8003da4:	2b74      	cmp	r3, #116	; 0x74
 8003da6:	d06f      	beq.n	8003e88 <_scanf_float+0x218>
 8003da8:	2b79      	cmp	r3, #121	; 0x79
 8003daa:	e7f6      	b.n	8003d9a <_scanf_float+0x12a>
 8003dac:	6821      	ldr	r1, [r4, #0]
 8003dae:	05c8      	lsls	r0, r1, #23
 8003db0:	d51a      	bpl.n	8003de8 <_scanf_float+0x178>
 8003db2:	9b02      	ldr	r3, [sp, #8]
 8003db4:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8003db8:	6021      	str	r1, [r4, #0]
 8003dba:	f109 0901 	add.w	r9, r9, #1
 8003dbe:	b11b      	cbz	r3, 8003dc8 <_scanf_float+0x158>
 8003dc0:	3b01      	subs	r3, #1
 8003dc2:	3201      	adds	r2, #1
 8003dc4:	9302      	str	r3, [sp, #8]
 8003dc6:	60a2      	str	r2, [r4, #8]
 8003dc8:	68a3      	ldr	r3, [r4, #8]
 8003dca:	3b01      	subs	r3, #1
 8003dcc:	60a3      	str	r3, [r4, #8]
 8003dce:	6923      	ldr	r3, [r4, #16]
 8003dd0:	3301      	adds	r3, #1
 8003dd2:	6123      	str	r3, [r4, #16]
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	3b01      	subs	r3, #1
 8003dd8:	2b00      	cmp	r3, #0
 8003dda:	607b      	str	r3, [r7, #4]
 8003ddc:	f340 8084 	ble.w	8003ee8 <_scanf_float+0x278>
 8003de0:	683b      	ldr	r3, [r7, #0]
 8003de2:	3301      	adds	r3, #1
 8003de4:	603b      	str	r3, [r7, #0]
 8003de6:	e766      	b.n	8003cb6 <_scanf_float+0x46>
 8003de8:	eb1a 0f05 	cmn.w	sl, r5
 8003dec:	f47f af70 	bne.w	8003cd0 <_scanf_float+0x60>
 8003df0:	6822      	ldr	r2, [r4, #0]
 8003df2:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8003df6:	6022      	str	r2, [r4, #0]
 8003df8:	f806 3b01 	strb.w	r3, [r6], #1
 8003dfc:	e7e4      	b.n	8003dc8 <_scanf_float+0x158>
 8003dfe:	6822      	ldr	r2, [r4, #0]
 8003e00:	0610      	lsls	r0, r2, #24
 8003e02:	f57f af65 	bpl.w	8003cd0 <_scanf_float+0x60>
 8003e06:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003e0a:	e7f4      	b.n	8003df6 <_scanf_float+0x186>
 8003e0c:	f1ba 0f00 	cmp.w	sl, #0
 8003e10:	d10e      	bne.n	8003e30 <_scanf_float+0x1c0>
 8003e12:	f1b9 0f00 	cmp.w	r9, #0
 8003e16:	d10e      	bne.n	8003e36 <_scanf_float+0x1c6>
 8003e18:	6822      	ldr	r2, [r4, #0]
 8003e1a:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003e1e:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003e22:	d108      	bne.n	8003e36 <_scanf_float+0x1c6>
 8003e24:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003e28:	6022      	str	r2, [r4, #0]
 8003e2a:	f04f 0a01 	mov.w	sl, #1
 8003e2e:	e7e3      	b.n	8003df8 <_scanf_float+0x188>
 8003e30:	f1ba 0f02 	cmp.w	sl, #2
 8003e34:	d055      	beq.n	8003ee2 <_scanf_float+0x272>
 8003e36:	2d01      	cmp	r5, #1
 8003e38:	d002      	beq.n	8003e40 <_scanf_float+0x1d0>
 8003e3a:	2d04      	cmp	r5, #4
 8003e3c:	f47f af48 	bne.w	8003cd0 <_scanf_float+0x60>
 8003e40:	3501      	adds	r5, #1
 8003e42:	b2ed      	uxtb	r5, r5
 8003e44:	e7d8      	b.n	8003df8 <_scanf_float+0x188>
 8003e46:	f1ba 0f01 	cmp.w	sl, #1
 8003e4a:	f47f af41 	bne.w	8003cd0 <_scanf_float+0x60>
 8003e4e:	f04f 0a02 	mov.w	sl, #2
 8003e52:	e7d1      	b.n	8003df8 <_scanf_float+0x188>
 8003e54:	b97d      	cbnz	r5, 8003e76 <_scanf_float+0x206>
 8003e56:	f1b9 0f00 	cmp.w	r9, #0
 8003e5a:	f47f af3c 	bne.w	8003cd6 <_scanf_float+0x66>
 8003e5e:	6822      	ldr	r2, [r4, #0]
 8003e60:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8003e64:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8003e68:	f47f af39 	bne.w	8003cde <_scanf_float+0x6e>
 8003e6c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003e70:	6022      	str	r2, [r4, #0]
 8003e72:	2501      	movs	r5, #1
 8003e74:	e7c0      	b.n	8003df8 <_scanf_float+0x188>
 8003e76:	2d03      	cmp	r5, #3
 8003e78:	d0e2      	beq.n	8003e40 <_scanf_float+0x1d0>
 8003e7a:	2d05      	cmp	r5, #5
 8003e7c:	e7de      	b.n	8003e3c <_scanf_float+0x1cc>
 8003e7e:	2d02      	cmp	r5, #2
 8003e80:	f47f af26 	bne.w	8003cd0 <_scanf_float+0x60>
 8003e84:	2503      	movs	r5, #3
 8003e86:	e7b7      	b.n	8003df8 <_scanf_float+0x188>
 8003e88:	2d06      	cmp	r5, #6
 8003e8a:	f47f af21 	bne.w	8003cd0 <_scanf_float+0x60>
 8003e8e:	2507      	movs	r5, #7
 8003e90:	e7b2      	b.n	8003df8 <_scanf_float+0x188>
 8003e92:	6822      	ldr	r2, [r4, #0]
 8003e94:	0591      	lsls	r1, r2, #22
 8003e96:	f57f af1b 	bpl.w	8003cd0 <_scanf_float+0x60>
 8003e9a:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8003e9e:	6022      	str	r2, [r4, #0]
 8003ea0:	f8cd 9004 	str.w	r9, [sp, #4]
 8003ea4:	e7a8      	b.n	8003df8 <_scanf_float+0x188>
 8003ea6:	6822      	ldr	r2, [r4, #0]
 8003ea8:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8003eac:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8003eb0:	d006      	beq.n	8003ec0 <_scanf_float+0x250>
 8003eb2:	0550      	lsls	r0, r2, #21
 8003eb4:	f57f af0c 	bpl.w	8003cd0 <_scanf_float+0x60>
 8003eb8:	f1b9 0f00 	cmp.w	r9, #0
 8003ebc:	f43f af0f 	beq.w	8003cde <_scanf_float+0x6e>
 8003ec0:	0591      	lsls	r1, r2, #22
 8003ec2:	bf58      	it	pl
 8003ec4:	9901      	ldrpl	r1, [sp, #4]
 8003ec6:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8003eca:	bf58      	it	pl
 8003ecc:	eba9 0101 	subpl.w	r1, r9, r1
 8003ed0:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8003ed4:	bf58      	it	pl
 8003ed6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8003eda:	6022      	str	r2, [r4, #0]
 8003edc:	f04f 0900 	mov.w	r9, #0
 8003ee0:	e78a      	b.n	8003df8 <_scanf_float+0x188>
 8003ee2:	f04f 0a03 	mov.w	sl, #3
 8003ee6:	e787      	b.n	8003df8 <_scanf_float+0x188>
 8003ee8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8003eec:	4639      	mov	r1, r7
 8003eee:	4640      	mov	r0, r8
 8003ef0:	4798      	blx	r3
 8003ef2:	2800      	cmp	r0, #0
 8003ef4:	f43f aedf 	beq.w	8003cb6 <_scanf_float+0x46>
 8003ef8:	e6ea      	b.n	8003cd0 <_scanf_float+0x60>
 8003efa:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003efe:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003f02:	463a      	mov	r2, r7
 8003f04:	4640      	mov	r0, r8
 8003f06:	4798      	blx	r3
 8003f08:	6923      	ldr	r3, [r4, #16]
 8003f0a:	3b01      	subs	r3, #1
 8003f0c:	6123      	str	r3, [r4, #16]
 8003f0e:	e6ec      	b.n	8003cea <_scanf_float+0x7a>
 8003f10:	1e6b      	subs	r3, r5, #1
 8003f12:	2b06      	cmp	r3, #6
 8003f14:	d825      	bhi.n	8003f62 <_scanf_float+0x2f2>
 8003f16:	2d02      	cmp	r5, #2
 8003f18:	d836      	bhi.n	8003f88 <_scanf_float+0x318>
 8003f1a:	455e      	cmp	r6, fp
 8003f1c:	f67f aee8 	bls.w	8003cf0 <_scanf_float+0x80>
 8003f20:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003f24:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003f28:	463a      	mov	r2, r7
 8003f2a:	4640      	mov	r0, r8
 8003f2c:	4798      	blx	r3
 8003f2e:	6923      	ldr	r3, [r4, #16]
 8003f30:	3b01      	subs	r3, #1
 8003f32:	6123      	str	r3, [r4, #16]
 8003f34:	e7f1      	b.n	8003f1a <_scanf_float+0x2aa>
 8003f36:	9802      	ldr	r0, [sp, #8]
 8003f38:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003f3c:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8003f40:	9002      	str	r0, [sp, #8]
 8003f42:	463a      	mov	r2, r7
 8003f44:	4640      	mov	r0, r8
 8003f46:	4798      	blx	r3
 8003f48:	6923      	ldr	r3, [r4, #16]
 8003f4a:	3b01      	subs	r3, #1
 8003f4c:	6123      	str	r3, [r4, #16]
 8003f4e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003f52:	fa5f fa8a 	uxtb.w	sl, sl
 8003f56:	f1ba 0f02 	cmp.w	sl, #2
 8003f5a:	d1ec      	bne.n	8003f36 <_scanf_float+0x2c6>
 8003f5c:	3d03      	subs	r5, #3
 8003f5e:	b2ed      	uxtb	r5, r5
 8003f60:	1b76      	subs	r6, r6, r5
 8003f62:	6823      	ldr	r3, [r4, #0]
 8003f64:	05da      	lsls	r2, r3, #23
 8003f66:	d52f      	bpl.n	8003fc8 <_scanf_float+0x358>
 8003f68:	055b      	lsls	r3, r3, #21
 8003f6a:	d510      	bpl.n	8003f8e <_scanf_float+0x31e>
 8003f6c:	455e      	cmp	r6, fp
 8003f6e:	f67f aebf 	bls.w	8003cf0 <_scanf_float+0x80>
 8003f72:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003f76:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8003f7a:	463a      	mov	r2, r7
 8003f7c:	4640      	mov	r0, r8
 8003f7e:	4798      	blx	r3
 8003f80:	6923      	ldr	r3, [r4, #16]
 8003f82:	3b01      	subs	r3, #1
 8003f84:	6123      	str	r3, [r4, #16]
 8003f86:	e7f1      	b.n	8003f6c <_scanf_float+0x2fc>
 8003f88:	46aa      	mov	sl, r5
 8003f8a:	9602      	str	r6, [sp, #8]
 8003f8c:	e7df      	b.n	8003f4e <_scanf_float+0x2de>
 8003f8e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8003f92:	6923      	ldr	r3, [r4, #16]
 8003f94:	2965      	cmp	r1, #101	; 0x65
 8003f96:	f103 33ff 	add.w	r3, r3, #4294967295
 8003f9a:	f106 35ff 	add.w	r5, r6, #4294967295
 8003f9e:	6123      	str	r3, [r4, #16]
 8003fa0:	d00c      	beq.n	8003fbc <_scanf_float+0x34c>
 8003fa2:	2945      	cmp	r1, #69	; 0x45
 8003fa4:	d00a      	beq.n	8003fbc <_scanf_float+0x34c>
 8003fa6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003faa:	463a      	mov	r2, r7
 8003fac:	4640      	mov	r0, r8
 8003fae:	4798      	blx	r3
 8003fb0:	6923      	ldr	r3, [r4, #16]
 8003fb2:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8003fb6:	3b01      	subs	r3, #1
 8003fb8:	1eb5      	subs	r5, r6, #2
 8003fba:	6123      	str	r3, [r4, #16]
 8003fbc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003fc0:	463a      	mov	r2, r7
 8003fc2:	4640      	mov	r0, r8
 8003fc4:	4798      	blx	r3
 8003fc6:	462e      	mov	r6, r5
 8003fc8:	6825      	ldr	r5, [r4, #0]
 8003fca:	f015 0510 	ands.w	r5, r5, #16
 8003fce:	d159      	bne.n	8004084 <_scanf_float+0x414>
 8003fd0:	7035      	strb	r5, [r6, #0]
 8003fd2:	6823      	ldr	r3, [r4, #0]
 8003fd4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8003fd8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003fdc:	d11b      	bne.n	8004016 <_scanf_float+0x3a6>
 8003fde:	9b01      	ldr	r3, [sp, #4]
 8003fe0:	454b      	cmp	r3, r9
 8003fe2:	eba3 0209 	sub.w	r2, r3, r9
 8003fe6:	d123      	bne.n	8004030 <_scanf_float+0x3c0>
 8003fe8:	2200      	movs	r2, #0
 8003fea:	4659      	mov	r1, fp
 8003fec:	4640      	mov	r0, r8
 8003fee:	f000 fe99 	bl	8004d24 <_strtod_r>
 8003ff2:	6822      	ldr	r2, [r4, #0]
 8003ff4:	9b03      	ldr	r3, [sp, #12]
 8003ff6:	f012 0f02 	tst.w	r2, #2
 8003ffa:	ec57 6b10 	vmov	r6, r7, d0
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	d021      	beq.n	8004046 <_scanf_float+0x3d6>
 8004002:	9903      	ldr	r1, [sp, #12]
 8004004:	1d1a      	adds	r2, r3, #4
 8004006:	600a      	str	r2, [r1, #0]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	e9c3 6700 	strd	r6, r7, [r3]
 800400e:	68e3      	ldr	r3, [r4, #12]
 8004010:	3301      	adds	r3, #1
 8004012:	60e3      	str	r3, [r4, #12]
 8004014:	e66d      	b.n	8003cf2 <_scanf_float+0x82>
 8004016:	9b04      	ldr	r3, [sp, #16]
 8004018:	2b00      	cmp	r3, #0
 800401a:	d0e5      	beq.n	8003fe8 <_scanf_float+0x378>
 800401c:	9905      	ldr	r1, [sp, #20]
 800401e:	230a      	movs	r3, #10
 8004020:	462a      	mov	r2, r5
 8004022:	3101      	adds	r1, #1
 8004024:	4640      	mov	r0, r8
 8004026:	f000 ff05 	bl	8004e34 <_strtol_r>
 800402a:	9b04      	ldr	r3, [sp, #16]
 800402c:	9e05      	ldr	r6, [sp, #20]
 800402e:	1ac2      	subs	r2, r0, r3
 8004030:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8004034:	429e      	cmp	r6, r3
 8004036:	bf28      	it	cs
 8004038:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800403c:	4912      	ldr	r1, [pc, #72]	; (8004088 <_scanf_float+0x418>)
 800403e:	4630      	mov	r0, r6
 8004040:	f000 f82c 	bl	800409c <siprintf>
 8004044:	e7d0      	b.n	8003fe8 <_scanf_float+0x378>
 8004046:	9903      	ldr	r1, [sp, #12]
 8004048:	f012 0f04 	tst.w	r2, #4
 800404c:	f103 0204 	add.w	r2, r3, #4
 8004050:	600a      	str	r2, [r1, #0]
 8004052:	d1d9      	bne.n	8004008 <_scanf_float+0x398>
 8004054:	f8d3 8000 	ldr.w	r8, [r3]
 8004058:	ee10 2a10 	vmov	r2, s0
 800405c:	ee10 0a10 	vmov	r0, s0
 8004060:	463b      	mov	r3, r7
 8004062:	4639      	mov	r1, r7
 8004064:	f7fc fd6a 	bl	8000b3c <__aeabi_dcmpun>
 8004068:	b128      	cbz	r0, 8004076 <_scanf_float+0x406>
 800406a:	4808      	ldr	r0, [pc, #32]	; (800408c <_scanf_float+0x41c>)
 800406c:	f000 f810 	bl	8004090 <nanf>
 8004070:	ed88 0a00 	vstr	s0, [r8]
 8004074:	e7cb      	b.n	800400e <_scanf_float+0x39e>
 8004076:	4630      	mov	r0, r6
 8004078:	4639      	mov	r1, r7
 800407a:	f7fc fdbd 	bl	8000bf8 <__aeabi_d2f>
 800407e:	f8c8 0000 	str.w	r0, [r8]
 8004082:	e7c4      	b.n	800400e <_scanf_float+0x39e>
 8004084:	2500      	movs	r5, #0
 8004086:	e634      	b.n	8003cf2 <_scanf_float+0x82>
 8004088:	08008a38 	.word	0x08008a38
 800408c:	08008ea8 	.word	0x08008ea8

08004090 <nanf>:
 8004090:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8004098 <nanf+0x8>
 8004094:	4770      	bx	lr
 8004096:	bf00      	nop
 8004098:	7fc00000 	.word	0x7fc00000

0800409c <siprintf>:
 800409c:	b40e      	push	{r1, r2, r3}
 800409e:	b500      	push	{lr}
 80040a0:	b09c      	sub	sp, #112	; 0x70
 80040a2:	ab1d      	add	r3, sp, #116	; 0x74
 80040a4:	9002      	str	r0, [sp, #8]
 80040a6:	9006      	str	r0, [sp, #24]
 80040a8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80040ac:	4809      	ldr	r0, [pc, #36]	; (80040d4 <siprintf+0x38>)
 80040ae:	9107      	str	r1, [sp, #28]
 80040b0:	9104      	str	r1, [sp, #16]
 80040b2:	4909      	ldr	r1, [pc, #36]	; (80040d8 <siprintf+0x3c>)
 80040b4:	f853 2b04 	ldr.w	r2, [r3], #4
 80040b8:	9105      	str	r1, [sp, #20]
 80040ba:	6800      	ldr	r0, [r0, #0]
 80040bc:	9301      	str	r3, [sp, #4]
 80040be:	a902      	add	r1, sp, #8
 80040c0:	f002 ffdc 	bl	800707c <_svfiprintf_r>
 80040c4:	9b02      	ldr	r3, [sp, #8]
 80040c6:	2200      	movs	r2, #0
 80040c8:	701a      	strb	r2, [r3, #0]
 80040ca:	b01c      	add	sp, #112	; 0x70
 80040cc:	f85d eb04 	ldr.w	lr, [sp], #4
 80040d0:	b003      	add	sp, #12
 80040d2:	4770      	bx	lr
 80040d4:	2000002c 	.word	0x2000002c
 80040d8:	ffff0208 	.word	0xffff0208

080040dc <sulp>:
 80040dc:	b570      	push	{r4, r5, r6, lr}
 80040de:	4604      	mov	r4, r0
 80040e0:	460d      	mov	r5, r1
 80040e2:	ec45 4b10 	vmov	d0, r4, r5
 80040e6:	4616      	mov	r6, r2
 80040e8:	f002 fd26 	bl	8006b38 <__ulp>
 80040ec:	ec51 0b10 	vmov	r0, r1, d0
 80040f0:	b17e      	cbz	r6, 8004112 <sulp+0x36>
 80040f2:	f3c5 530a 	ubfx	r3, r5, #20, #11
 80040f6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	dd09      	ble.n	8004112 <sulp+0x36>
 80040fe:	051b      	lsls	r3, r3, #20
 8004100:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8004104:	2400      	movs	r4, #0
 8004106:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800410a:	4622      	mov	r2, r4
 800410c:	462b      	mov	r3, r5
 800410e:	f7fc fa7b 	bl	8000608 <__aeabi_dmul>
 8004112:	bd70      	pop	{r4, r5, r6, pc}
 8004114:	0000      	movs	r0, r0
	...

08004118 <_strtod_l>:
 8004118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800411c:	ed2d 8b02 	vpush	{d8}
 8004120:	b09d      	sub	sp, #116	; 0x74
 8004122:	461f      	mov	r7, r3
 8004124:	2300      	movs	r3, #0
 8004126:	9318      	str	r3, [sp, #96]	; 0x60
 8004128:	4ba2      	ldr	r3, [pc, #648]	; (80043b4 <_strtod_l+0x29c>)
 800412a:	9213      	str	r2, [sp, #76]	; 0x4c
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	9305      	str	r3, [sp, #20]
 8004130:	4604      	mov	r4, r0
 8004132:	4618      	mov	r0, r3
 8004134:	4688      	mov	r8, r1
 8004136:	f7fc f853 	bl	80001e0 <strlen>
 800413a:	f04f 0a00 	mov.w	sl, #0
 800413e:	4605      	mov	r5, r0
 8004140:	f04f 0b00 	mov.w	fp, #0
 8004144:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8004148:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800414a:	781a      	ldrb	r2, [r3, #0]
 800414c:	2a2b      	cmp	r2, #43	; 0x2b
 800414e:	d04e      	beq.n	80041ee <_strtod_l+0xd6>
 8004150:	d83b      	bhi.n	80041ca <_strtod_l+0xb2>
 8004152:	2a0d      	cmp	r2, #13
 8004154:	d834      	bhi.n	80041c0 <_strtod_l+0xa8>
 8004156:	2a08      	cmp	r2, #8
 8004158:	d834      	bhi.n	80041c4 <_strtod_l+0xac>
 800415a:	2a00      	cmp	r2, #0
 800415c:	d03e      	beq.n	80041dc <_strtod_l+0xc4>
 800415e:	2300      	movs	r3, #0
 8004160:	930a      	str	r3, [sp, #40]	; 0x28
 8004162:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8004164:	7833      	ldrb	r3, [r6, #0]
 8004166:	2b30      	cmp	r3, #48	; 0x30
 8004168:	f040 80b0 	bne.w	80042cc <_strtod_l+0x1b4>
 800416c:	7873      	ldrb	r3, [r6, #1]
 800416e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8004172:	2b58      	cmp	r3, #88	; 0x58
 8004174:	d168      	bne.n	8004248 <_strtod_l+0x130>
 8004176:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004178:	9301      	str	r3, [sp, #4]
 800417a:	ab18      	add	r3, sp, #96	; 0x60
 800417c:	9702      	str	r7, [sp, #8]
 800417e:	9300      	str	r3, [sp, #0]
 8004180:	4a8d      	ldr	r2, [pc, #564]	; (80043b8 <_strtod_l+0x2a0>)
 8004182:	ab19      	add	r3, sp, #100	; 0x64
 8004184:	a917      	add	r1, sp, #92	; 0x5c
 8004186:	4620      	mov	r0, r4
 8004188:	f001 fe2c 	bl	8005de4 <__gethex>
 800418c:	f010 0707 	ands.w	r7, r0, #7
 8004190:	4605      	mov	r5, r0
 8004192:	d005      	beq.n	80041a0 <_strtod_l+0x88>
 8004194:	2f06      	cmp	r7, #6
 8004196:	d12c      	bne.n	80041f2 <_strtod_l+0xda>
 8004198:	3601      	adds	r6, #1
 800419a:	2300      	movs	r3, #0
 800419c:	9617      	str	r6, [sp, #92]	; 0x5c
 800419e:	930a      	str	r3, [sp, #40]	; 0x28
 80041a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80041a2:	2b00      	cmp	r3, #0
 80041a4:	f040 8590 	bne.w	8004cc8 <_strtod_l+0xbb0>
 80041a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80041aa:	b1eb      	cbz	r3, 80041e8 <_strtod_l+0xd0>
 80041ac:	4652      	mov	r2, sl
 80041ae:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 80041b2:	ec43 2b10 	vmov	d0, r2, r3
 80041b6:	b01d      	add	sp, #116	; 0x74
 80041b8:	ecbd 8b02 	vpop	{d8}
 80041bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041c0:	2a20      	cmp	r2, #32
 80041c2:	d1cc      	bne.n	800415e <_strtod_l+0x46>
 80041c4:	3301      	adds	r3, #1
 80041c6:	9317      	str	r3, [sp, #92]	; 0x5c
 80041c8:	e7be      	b.n	8004148 <_strtod_l+0x30>
 80041ca:	2a2d      	cmp	r2, #45	; 0x2d
 80041cc:	d1c7      	bne.n	800415e <_strtod_l+0x46>
 80041ce:	2201      	movs	r2, #1
 80041d0:	920a      	str	r2, [sp, #40]	; 0x28
 80041d2:	1c5a      	adds	r2, r3, #1
 80041d4:	9217      	str	r2, [sp, #92]	; 0x5c
 80041d6:	785b      	ldrb	r3, [r3, #1]
 80041d8:	2b00      	cmp	r3, #0
 80041da:	d1c2      	bne.n	8004162 <_strtod_l+0x4a>
 80041dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80041de:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80041e2:	2b00      	cmp	r3, #0
 80041e4:	f040 856e 	bne.w	8004cc4 <_strtod_l+0xbac>
 80041e8:	4652      	mov	r2, sl
 80041ea:	465b      	mov	r3, fp
 80041ec:	e7e1      	b.n	80041b2 <_strtod_l+0x9a>
 80041ee:	2200      	movs	r2, #0
 80041f0:	e7ee      	b.n	80041d0 <_strtod_l+0xb8>
 80041f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80041f4:	b13a      	cbz	r2, 8004206 <_strtod_l+0xee>
 80041f6:	2135      	movs	r1, #53	; 0x35
 80041f8:	a81a      	add	r0, sp, #104	; 0x68
 80041fa:	f002 fda8 	bl	8006d4e <__copybits>
 80041fe:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004200:	4620      	mov	r0, r4
 8004202:	f002 f967 	bl	80064d4 <_Bfree>
 8004206:	3f01      	subs	r7, #1
 8004208:	2f04      	cmp	r7, #4
 800420a:	d806      	bhi.n	800421a <_strtod_l+0x102>
 800420c:	e8df f007 	tbb	[pc, r7]
 8004210:	1714030a 	.word	0x1714030a
 8004214:	0a          	.byte	0x0a
 8004215:	00          	.byte	0x00
 8004216:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 800421a:	0728      	lsls	r0, r5, #28
 800421c:	d5c0      	bpl.n	80041a0 <_strtod_l+0x88>
 800421e:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8004222:	e7bd      	b.n	80041a0 <_strtod_l+0x88>
 8004224:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 8004228:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800422a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800422e:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8004232:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004236:	e7f0      	b.n	800421a <_strtod_l+0x102>
 8004238:	f8df b180 	ldr.w	fp, [pc, #384]	; 80043bc <_strtod_l+0x2a4>
 800423c:	e7ed      	b.n	800421a <_strtod_l+0x102>
 800423e:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8004242:	f04f 3aff 	mov.w	sl, #4294967295
 8004246:	e7e8      	b.n	800421a <_strtod_l+0x102>
 8004248:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800424a:	1c5a      	adds	r2, r3, #1
 800424c:	9217      	str	r2, [sp, #92]	; 0x5c
 800424e:	785b      	ldrb	r3, [r3, #1]
 8004250:	2b30      	cmp	r3, #48	; 0x30
 8004252:	d0f9      	beq.n	8004248 <_strtod_l+0x130>
 8004254:	2b00      	cmp	r3, #0
 8004256:	d0a3      	beq.n	80041a0 <_strtod_l+0x88>
 8004258:	2301      	movs	r3, #1
 800425a:	f04f 0900 	mov.w	r9, #0
 800425e:	9304      	str	r3, [sp, #16]
 8004260:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004262:	9308      	str	r3, [sp, #32]
 8004264:	f8cd 901c 	str.w	r9, [sp, #28]
 8004268:	464f      	mov	r7, r9
 800426a:	220a      	movs	r2, #10
 800426c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800426e:	7806      	ldrb	r6, [r0, #0]
 8004270:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8004274:	b2d9      	uxtb	r1, r3
 8004276:	2909      	cmp	r1, #9
 8004278:	d92a      	bls.n	80042d0 <_strtod_l+0x1b8>
 800427a:	9905      	ldr	r1, [sp, #20]
 800427c:	462a      	mov	r2, r5
 800427e:	f003 f85a 	bl	8007336 <strncmp>
 8004282:	b398      	cbz	r0, 80042ec <_strtod_l+0x1d4>
 8004284:	2000      	movs	r0, #0
 8004286:	4632      	mov	r2, r6
 8004288:	463d      	mov	r5, r7
 800428a:	9005      	str	r0, [sp, #20]
 800428c:	4603      	mov	r3, r0
 800428e:	2a65      	cmp	r2, #101	; 0x65
 8004290:	d001      	beq.n	8004296 <_strtod_l+0x17e>
 8004292:	2a45      	cmp	r2, #69	; 0x45
 8004294:	d118      	bne.n	80042c8 <_strtod_l+0x1b0>
 8004296:	b91d      	cbnz	r5, 80042a0 <_strtod_l+0x188>
 8004298:	9a04      	ldr	r2, [sp, #16]
 800429a:	4302      	orrs	r2, r0
 800429c:	d09e      	beq.n	80041dc <_strtod_l+0xc4>
 800429e:	2500      	movs	r5, #0
 80042a0:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 80042a4:	f108 0201 	add.w	r2, r8, #1
 80042a8:	9217      	str	r2, [sp, #92]	; 0x5c
 80042aa:	f898 2001 	ldrb.w	r2, [r8, #1]
 80042ae:	2a2b      	cmp	r2, #43	; 0x2b
 80042b0:	d075      	beq.n	800439e <_strtod_l+0x286>
 80042b2:	2a2d      	cmp	r2, #45	; 0x2d
 80042b4:	d07b      	beq.n	80043ae <_strtod_l+0x296>
 80042b6:	f04f 0c00 	mov.w	ip, #0
 80042ba:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 80042be:	2909      	cmp	r1, #9
 80042c0:	f240 8082 	bls.w	80043c8 <_strtod_l+0x2b0>
 80042c4:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80042c8:	2600      	movs	r6, #0
 80042ca:	e09d      	b.n	8004408 <_strtod_l+0x2f0>
 80042cc:	2300      	movs	r3, #0
 80042ce:	e7c4      	b.n	800425a <_strtod_l+0x142>
 80042d0:	2f08      	cmp	r7, #8
 80042d2:	bfd8      	it	le
 80042d4:	9907      	ldrle	r1, [sp, #28]
 80042d6:	f100 0001 	add.w	r0, r0, #1
 80042da:	bfda      	itte	le
 80042dc:	fb02 3301 	mlale	r3, r2, r1, r3
 80042e0:	9307      	strle	r3, [sp, #28]
 80042e2:	fb02 3909 	mlagt	r9, r2, r9, r3
 80042e6:	3701      	adds	r7, #1
 80042e8:	9017      	str	r0, [sp, #92]	; 0x5c
 80042ea:	e7bf      	b.n	800426c <_strtod_l+0x154>
 80042ec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80042ee:	195a      	adds	r2, r3, r5
 80042f0:	9217      	str	r2, [sp, #92]	; 0x5c
 80042f2:	5d5a      	ldrb	r2, [r3, r5]
 80042f4:	2f00      	cmp	r7, #0
 80042f6:	d037      	beq.n	8004368 <_strtod_l+0x250>
 80042f8:	9005      	str	r0, [sp, #20]
 80042fa:	463d      	mov	r5, r7
 80042fc:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8004300:	2b09      	cmp	r3, #9
 8004302:	d912      	bls.n	800432a <_strtod_l+0x212>
 8004304:	2301      	movs	r3, #1
 8004306:	e7c2      	b.n	800428e <_strtod_l+0x176>
 8004308:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800430a:	1c5a      	adds	r2, r3, #1
 800430c:	9217      	str	r2, [sp, #92]	; 0x5c
 800430e:	785a      	ldrb	r2, [r3, #1]
 8004310:	3001      	adds	r0, #1
 8004312:	2a30      	cmp	r2, #48	; 0x30
 8004314:	d0f8      	beq.n	8004308 <_strtod_l+0x1f0>
 8004316:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800431a:	2b08      	cmp	r3, #8
 800431c:	f200 84d9 	bhi.w	8004cd2 <_strtod_l+0xbba>
 8004320:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004322:	9005      	str	r0, [sp, #20]
 8004324:	2000      	movs	r0, #0
 8004326:	9308      	str	r3, [sp, #32]
 8004328:	4605      	mov	r5, r0
 800432a:	3a30      	subs	r2, #48	; 0x30
 800432c:	f100 0301 	add.w	r3, r0, #1
 8004330:	d014      	beq.n	800435c <_strtod_l+0x244>
 8004332:	9905      	ldr	r1, [sp, #20]
 8004334:	4419      	add	r1, r3
 8004336:	9105      	str	r1, [sp, #20]
 8004338:	462b      	mov	r3, r5
 800433a:	eb00 0e05 	add.w	lr, r0, r5
 800433e:	210a      	movs	r1, #10
 8004340:	4573      	cmp	r3, lr
 8004342:	d113      	bne.n	800436c <_strtod_l+0x254>
 8004344:	182b      	adds	r3, r5, r0
 8004346:	2b08      	cmp	r3, #8
 8004348:	f105 0501 	add.w	r5, r5, #1
 800434c:	4405      	add	r5, r0
 800434e:	dc1c      	bgt.n	800438a <_strtod_l+0x272>
 8004350:	9907      	ldr	r1, [sp, #28]
 8004352:	230a      	movs	r3, #10
 8004354:	fb03 2301 	mla	r3, r3, r1, r2
 8004358:	9307      	str	r3, [sp, #28]
 800435a:	2300      	movs	r3, #0
 800435c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800435e:	1c51      	adds	r1, r2, #1
 8004360:	9117      	str	r1, [sp, #92]	; 0x5c
 8004362:	7852      	ldrb	r2, [r2, #1]
 8004364:	4618      	mov	r0, r3
 8004366:	e7c9      	b.n	80042fc <_strtod_l+0x1e4>
 8004368:	4638      	mov	r0, r7
 800436a:	e7d2      	b.n	8004312 <_strtod_l+0x1fa>
 800436c:	2b08      	cmp	r3, #8
 800436e:	dc04      	bgt.n	800437a <_strtod_l+0x262>
 8004370:	9e07      	ldr	r6, [sp, #28]
 8004372:	434e      	muls	r6, r1
 8004374:	9607      	str	r6, [sp, #28]
 8004376:	3301      	adds	r3, #1
 8004378:	e7e2      	b.n	8004340 <_strtod_l+0x228>
 800437a:	f103 0c01 	add.w	ip, r3, #1
 800437e:	f1bc 0f10 	cmp.w	ip, #16
 8004382:	bfd8      	it	le
 8004384:	fb01 f909 	mulle.w	r9, r1, r9
 8004388:	e7f5      	b.n	8004376 <_strtod_l+0x25e>
 800438a:	2d10      	cmp	r5, #16
 800438c:	bfdc      	itt	le
 800438e:	230a      	movle	r3, #10
 8004390:	fb03 2909 	mlale	r9, r3, r9, r2
 8004394:	e7e1      	b.n	800435a <_strtod_l+0x242>
 8004396:	2300      	movs	r3, #0
 8004398:	9305      	str	r3, [sp, #20]
 800439a:	2301      	movs	r3, #1
 800439c:	e77c      	b.n	8004298 <_strtod_l+0x180>
 800439e:	f04f 0c00 	mov.w	ip, #0
 80043a2:	f108 0202 	add.w	r2, r8, #2
 80043a6:	9217      	str	r2, [sp, #92]	; 0x5c
 80043a8:	f898 2002 	ldrb.w	r2, [r8, #2]
 80043ac:	e785      	b.n	80042ba <_strtod_l+0x1a2>
 80043ae:	f04f 0c01 	mov.w	ip, #1
 80043b2:	e7f6      	b.n	80043a2 <_strtod_l+0x28a>
 80043b4:	08008cec 	.word	0x08008cec
 80043b8:	08008a40 	.word	0x08008a40
 80043bc:	7ff00000 	.word	0x7ff00000
 80043c0:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80043c2:	1c51      	adds	r1, r2, #1
 80043c4:	9117      	str	r1, [sp, #92]	; 0x5c
 80043c6:	7852      	ldrb	r2, [r2, #1]
 80043c8:	2a30      	cmp	r2, #48	; 0x30
 80043ca:	d0f9      	beq.n	80043c0 <_strtod_l+0x2a8>
 80043cc:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 80043d0:	2908      	cmp	r1, #8
 80043d2:	f63f af79 	bhi.w	80042c8 <_strtod_l+0x1b0>
 80043d6:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 80043da:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80043dc:	9206      	str	r2, [sp, #24]
 80043de:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80043e0:	1c51      	adds	r1, r2, #1
 80043e2:	9117      	str	r1, [sp, #92]	; 0x5c
 80043e4:	7852      	ldrb	r2, [r2, #1]
 80043e6:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 80043ea:	2e09      	cmp	r6, #9
 80043ec:	d937      	bls.n	800445e <_strtod_l+0x346>
 80043ee:	9e06      	ldr	r6, [sp, #24]
 80043f0:	1b89      	subs	r1, r1, r6
 80043f2:	2908      	cmp	r1, #8
 80043f4:	f644 661f 	movw	r6, #19999	; 0x4e1f
 80043f8:	dc02      	bgt.n	8004400 <_strtod_l+0x2e8>
 80043fa:	4576      	cmp	r6, lr
 80043fc:	bfa8      	it	ge
 80043fe:	4676      	movge	r6, lr
 8004400:	f1bc 0f00 	cmp.w	ip, #0
 8004404:	d000      	beq.n	8004408 <_strtod_l+0x2f0>
 8004406:	4276      	negs	r6, r6
 8004408:	2d00      	cmp	r5, #0
 800440a:	d14d      	bne.n	80044a8 <_strtod_l+0x390>
 800440c:	9904      	ldr	r1, [sp, #16]
 800440e:	4301      	orrs	r1, r0
 8004410:	f47f aec6 	bne.w	80041a0 <_strtod_l+0x88>
 8004414:	2b00      	cmp	r3, #0
 8004416:	f47f aee1 	bne.w	80041dc <_strtod_l+0xc4>
 800441a:	2a69      	cmp	r2, #105	; 0x69
 800441c:	d027      	beq.n	800446e <_strtod_l+0x356>
 800441e:	dc24      	bgt.n	800446a <_strtod_l+0x352>
 8004420:	2a49      	cmp	r2, #73	; 0x49
 8004422:	d024      	beq.n	800446e <_strtod_l+0x356>
 8004424:	2a4e      	cmp	r2, #78	; 0x4e
 8004426:	f47f aed9 	bne.w	80041dc <_strtod_l+0xc4>
 800442a:	499f      	ldr	r1, [pc, #636]	; (80046a8 <_strtod_l+0x590>)
 800442c:	a817      	add	r0, sp, #92	; 0x5c
 800442e:	f001 ff31 	bl	8006294 <__match>
 8004432:	2800      	cmp	r0, #0
 8004434:	f43f aed2 	beq.w	80041dc <_strtod_l+0xc4>
 8004438:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800443a:	781b      	ldrb	r3, [r3, #0]
 800443c:	2b28      	cmp	r3, #40	; 0x28
 800443e:	d12d      	bne.n	800449c <_strtod_l+0x384>
 8004440:	499a      	ldr	r1, [pc, #616]	; (80046ac <_strtod_l+0x594>)
 8004442:	aa1a      	add	r2, sp, #104	; 0x68
 8004444:	a817      	add	r0, sp, #92	; 0x5c
 8004446:	f001 ff39 	bl	80062bc <__hexnan>
 800444a:	2805      	cmp	r0, #5
 800444c:	d126      	bne.n	800449c <_strtod_l+0x384>
 800444e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004450:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8004454:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8004458:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 800445c:	e6a0      	b.n	80041a0 <_strtod_l+0x88>
 800445e:	210a      	movs	r1, #10
 8004460:	fb01 2e0e 	mla	lr, r1, lr, r2
 8004464:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8004468:	e7b9      	b.n	80043de <_strtod_l+0x2c6>
 800446a:	2a6e      	cmp	r2, #110	; 0x6e
 800446c:	e7db      	b.n	8004426 <_strtod_l+0x30e>
 800446e:	4990      	ldr	r1, [pc, #576]	; (80046b0 <_strtod_l+0x598>)
 8004470:	a817      	add	r0, sp, #92	; 0x5c
 8004472:	f001 ff0f 	bl	8006294 <__match>
 8004476:	2800      	cmp	r0, #0
 8004478:	f43f aeb0 	beq.w	80041dc <_strtod_l+0xc4>
 800447c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800447e:	498d      	ldr	r1, [pc, #564]	; (80046b4 <_strtod_l+0x59c>)
 8004480:	3b01      	subs	r3, #1
 8004482:	a817      	add	r0, sp, #92	; 0x5c
 8004484:	9317      	str	r3, [sp, #92]	; 0x5c
 8004486:	f001 ff05 	bl	8006294 <__match>
 800448a:	b910      	cbnz	r0, 8004492 <_strtod_l+0x37a>
 800448c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800448e:	3301      	adds	r3, #1
 8004490:	9317      	str	r3, [sp, #92]	; 0x5c
 8004492:	f8df b230 	ldr.w	fp, [pc, #560]	; 80046c4 <_strtod_l+0x5ac>
 8004496:	f04f 0a00 	mov.w	sl, #0
 800449a:	e681      	b.n	80041a0 <_strtod_l+0x88>
 800449c:	4886      	ldr	r0, [pc, #536]	; (80046b8 <_strtod_l+0x5a0>)
 800449e:	f002 feef 	bl	8007280 <nan>
 80044a2:	ec5b ab10 	vmov	sl, fp, d0
 80044a6:	e67b      	b.n	80041a0 <_strtod_l+0x88>
 80044a8:	9b05      	ldr	r3, [sp, #20]
 80044aa:	9807      	ldr	r0, [sp, #28]
 80044ac:	1af3      	subs	r3, r6, r3
 80044ae:	2f00      	cmp	r7, #0
 80044b0:	bf08      	it	eq
 80044b2:	462f      	moveq	r7, r5
 80044b4:	2d10      	cmp	r5, #16
 80044b6:	9306      	str	r3, [sp, #24]
 80044b8:	46a8      	mov	r8, r5
 80044ba:	bfa8      	it	ge
 80044bc:	f04f 0810 	movge.w	r8, #16
 80044c0:	f7fc f828 	bl	8000514 <__aeabi_ui2d>
 80044c4:	2d09      	cmp	r5, #9
 80044c6:	4682      	mov	sl, r0
 80044c8:	468b      	mov	fp, r1
 80044ca:	dd13      	ble.n	80044f4 <_strtod_l+0x3dc>
 80044cc:	4b7b      	ldr	r3, [pc, #492]	; (80046bc <_strtod_l+0x5a4>)
 80044ce:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80044d2:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 80044d6:	f7fc f897 	bl	8000608 <__aeabi_dmul>
 80044da:	4682      	mov	sl, r0
 80044dc:	4648      	mov	r0, r9
 80044de:	468b      	mov	fp, r1
 80044e0:	f7fc f818 	bl	8000514 <__aeabi_ui2d>
 80044e4:	4602      	mov	r2, r0
 80044e6:	460b      	mov	r3, r1
 80044e8:	4650      	mov	r0, sl
 80044ea:	4659      	mov	r1, fp
 80044ec:	f7fb fed6 	bl	800029c <__adddf3>
 80044f0:	4682      	mov	sl, r0
 80044f2:	468b      	mov	fp, r1
 80044f4:	2d0f      	cmp	r5, #15
 80044f6:	dc38      	bgt.n	800456a <_strtod_l+0x452>
 80044f8:	9b06      	ldr	r3, [sp, #24]
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	f43f ae50 	beq.w	80041a0 <_strtod_l+0x88>
 8004500:	dd24      	ble.n	800454c <_strtod_l+0x434>
 8004502:	2b16      	cmp	r3, #22
 8004504:	dc0b      	bgt.n	800451e <_strtod_l+0x406>
 8004506:	496d      	ldr	r1, [pc, #436]	; (80046bc <_strtod_l+0x5a4>)
 8004508:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800450c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004510:	4652      	mov	r2, sl
 8004512:	465b      	mov	r3, fp
 8004514:	f7fc f878 	bl	8000608 <__aeabi_dmul>
 8004518:	4682      	mov	sl, r0
 800451a:	468b      	mov	fp, r1
 800451c:	e640      	b.n	80041a0 <_strtod_l+0x88>
 800451e:	9a06      	ldr	r2, [sp, #24]
 8004520:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8004524:	4293      	cmp	r3, r2
 8004526:	db20      	blt.n	800456a <_strtod_l+0x452>
 8004528:	4c64      	ldr	r4, [pc, #400]	; (80046bc <_strtod_l+0x5a4>)
 800452a:	f1c5 050f 	rsb	r5, r5, #15
 800452e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004532:	4652      	mov	r2, sl
 8004534:	465b      	mov	r3, fp
 8004536:	e9d1 0100 	ldrd	r0, r1, [r1]
 800453a:	f7fc f865 	bl	8000608 <__aeabi_dmul>
 800453e:	9b06      	ldr	r3, [sp, #24]
 8004540:	1b5d      	subs	r5, r3, r5
 8004542:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004546:	e9d4 2300 	ldrd	r2, r3, [r4]
 800454a:	e7e3      	b.n	8004514 <_strtod_l+0x3fc>
 800454c:	9b06      	ldr	r3, [sp, #24]
 800454e:	3316      	adds	r3, #22
 8004550:	db0b      	blt.n	800456a <_strtod_l+0x452>
 8004552:	9b05      	ldr	r3, [sp, #20]
 8004554:	1b9e      	subs	r6, r3, r6
 8004556:	4b59      	ldr	r3, [pc, #356]	; (80046bc <_strtod_l+0x5a4>)
 8004558:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 800455c:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004560:	4650      	mov	r0, sl
 8004562:	4659      	mov	r1, fp
 8004564:	f7fc f97a 	bl	800085c <__aeabi_ddiv>
 8004568:	e7d6      	b.n	8004518 <_strtod_l+0x400>
 800456a:	9b06      	ldr	r3, [sp, #24]
 800456c:	eba5 0808 	sub.w	r8, r5, r8
 8004570:	4498      	add	r8, r3
 8004572:	f1b8 0f00 	cmp.w	r8, #0
 8004576:	dd74      	ble.n	8004662 <_strtod_l+0x54a>
 8004578:	f018 030f 	ands.w	r3, r8, #15
 800457c:	d00a      	beq.n	8004594 <_strtod_l+0x47c>
 800457e:	494f      	ldr	r1, [pc, #316]	; (80046bc <_strtod_l+0x5a4>)
 8004580:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004584:	4652      	mov	r2, sl
 8004586:	465b      	mov	r3, fp
 8004588:	e9d1 0100 	ldrd	r0, r1, [r1]
 800458c:	f7fc f83c 	bl	8000608 <__aeabi_dmul>
 8004590:	4682      	mov	sl, r0
 8004592:	468b      	mov	fp, r1
 8004594:	f038 080f 	bics.w	r8, r8, #15
 8004598:	d04f      	beq.n	800463a <_strtod_l+0x522>
 800459a:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 800459e:	dd22      	ble.n	80045e6 <_strtod_l+0x4ce>
 80045a0:	2500      	movs	r5, #0
 80045a2:	462e      	mov	r6, r5
 80045a4:	9507      	str	r5, [sp, #28]
 80045a6:	9505      	str	r5, [sp, #20]
 80045a8:	2322      	movs	r3, #34	; 0x22
 80045aa:	f8df b118 	ldr.w	fp, [pc, #280]	; 80046c4 <_strtod_l+0x5ac>
 80045ae:	6023      	str	r3, [r4, #0]
 80045b0:	f04f 0a00 	mov.w	sl, #0
 80045b4:	9b07      	ldr	r3, [sp, #28]
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	f43f adf2 	beq.w	80041a0 <_strtod_l+0x88>
 80045bc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80045be:	4620      	mov	r0, r4
 80045c0:	f001 ff88 	bl	80064d4 <_Bfree>
 80045c4:	9905      	ldr	r1, [sp, #20]
 80045c6:	4620      	mov	r0, r4
 80045c8:	f001 ff84 	bl	80064d4 <_Bfree>
 80045cc:	4631      	mov	r1, r6
 80045ce:	4620      	mov	r0, r4
 80045d0:	f001 ff80 	bl	80064d4 <_Bfree>
 80045d4:	9907      	ldr	r1, [sp, #28]
 80045d6:	4620      	mov	r0, r4
 80045d8:	f001 ff7c 	bl	80064d4 <_Bfree>
 80045dc:	4629      	mov	r1, r5
 80045de:	4620      	mov	r0, r4
 80045e0:	f001 ff78 	bl	80064d4 <_Bfree>
 80045e4:	e5dc      	b.n	80041a0 <_strtod_l+0x88>
 80045e6:	4b36      	ldr	r3, [pc, #216]	; (80046c0 <_strtod_l+0x5a8>)
 80045e8:	9304      	str	r3, [sp, #16]
 80045ea:	2300      	movs	r3, #0
 80045ec:	ea4f 1828 	mov.w	r8, r8, asr #4
 80045f0:	4650      	mov	r0, sl
 80045f2:	4659      	mov	r1, fp
 80045f4:	4699      	mov	r9, r3
 80045f6:	f1b8 0f01 	cmp.w	r8, #1
 80045fa:	dc21      	bgt.n	8004640 <_strtod_l+0x528>
 80045fc:	b10b      	cbz	r3, 8004602 <_strtod_l+0x4ea>
 80045fe:	4682      	mov	sl, r0
 8004600:	468b      	mov	fp, r1
 8004602:	4b2f      	ldr	r3, [pc, #188]	; (80046c0 <_strtod_l+0x5a8>)
 8004604:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8004608:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 800460c:	4652      	mov	r2, sl
 800460e:	465b      	mov	r3, fp
 8004610:	e9d9 0100 	ldrd	r0, r1, [r9]
 8004614:	f7fb fff8 	bl	8000608 <__aeabi_dmul>
 8004618:	4b2a      	ldr	r3, [pc, #168]	; (80046c4 <_strtod_l+0x5ac>)
 800461a:	460a      	mov	r2, r1
 800461c:	400b      	ands	r3, r1
 800461e:	492a      	ldr	r1, [pc, #168]	; (80046c8 <_strtod_l+0x5b0>)
 8004620:	428b      	cmp	r3, r1
 8004622:	4682      	mov	sl, r0
 8004624:	d8bc      	bhi.n	80045a0 <_strtod_l+0x488>
 8004626:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800462a:	428b      	cmp	r3, r1
 800462c:	bf86      	itte	hi
 800462e:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 80046cc <_strtod_l+0x5b4>
 8004632:	f04f 3aff 	movhi.w	sl, #4294967295
 8004636:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 800463a:	2300      	movs	r3, #0
 800463c:	9304      	str	r3, [sp, #16]
 800463e:	e084      	b.n	800474a <_strtod_l+0x632>
 8004640:	f018 0f01 	tst.w	r8, #1
 8004644:	d005      	beq.n	8004652 <_strtod_l+0x53a>
 8004646:	9b04      	ldr	r3, [sp, #16]
 8004648:	e9d3 2300 	ldrd	r2, r3, [r3]
 800464c:	f7fb ffdc 	bl	8000608 <__aeabi_dmul>
 8004650:	2301      	movs	r3, #1
 8004652:	9a04      	ldr	r2, [sp, #16]
 8004654:	3208      	adds	r2, #8
 8004656:	f109 0901 	add.w	r9, r9, #1
 800465a:	ea4f 0868 	mov.w	r8, r8, asr #1
 800465e:	9204      	str	r2, [sp, #16]
 8004660:	e7c9      	b.n	80045f6 <_strtod_l+0x4de>
 8004662:	d0ea      	beq.n	800463a <_strtod_l+0x522>
 8004664:	f1c8 0800 	rsb	r8, r8, #0
 8004668:	f018 020f 	ands.w	r2, r8, #15
 800466c:	d00a      	beq.n	8004684 <_strtod_l+0x56c>
 800466e:	4b13      	ldr	r3, [pc, #76]	; (80046bc <_strtod_l+0x5a4>)
 8004670:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004674:	4650      	mov	r0, sl
 8004676:	4659      	mov	r1, fp
 8004678:	e9d3 2300 	ldrd	r2, r3, [r3]
 800467c:	f7fc f8ee 	bl	800085c <__aeabi_ddiv>
 8004680:	4682      	mov	sl, r0
 8004682:	468b      	mov	fp, r1
 8004684:	ea5f 1828 	movs.w	r8, r8, asr #4
 8004688:	d0d7      	beq.n	800463a <_strtod_l+0x522>
 800468a:	f1b8 0f1f 	cmp.w	r8, #31
 800468e:	dd1f      	ble.n	80046d0 <_strtod_l+0x5b8>
 8004690:	2500      	movs	r5, #0
 8004692:	462e      	mov	r6, r5
 8004694:	9507      	str	r5, [sp, #28]
 8004696:	9505      	str	r5, [sp, #20]
 8004698:	2322      	movs	r3, #34	; 0x22
 800469a:	f04f 0a00 	mov.w	sl, #0
 800469e:	f04f 0b00 	mov.w	fp, #0
 80046a2:	6023      	str	r3, [r4, #0]
 80046a4:	e786      	b.n	80045b4 <_strtod_l+0x49c>
 80046a6:	bf00      	nop
 80046a8:	08008a11 	.word	0x08008a11
 80046ac:	08008a54 	.word	0x08008a54
 80046b0:	08008a09 	.word	0x08008a09
 80046b4:	08008b94 	.word	0x08008b94
 80046b8:	08008ea8 	.word	0x08008ea8
 80046bc:	08008d88 	.word	0x08008d88
 80046c0:	08008d60 	.word	0x08008d60
 80046c4:	7ff00000 	.word	0x7ff00000
 80046c8:	7ca00000 	.word	0x7ca00000
 80046cc:	7fefffff 	.word	0x7fefffff
 80046d0:	f018 0310 	ands.w	r3, r8, #16
 80046d4:	bf18      	it	ne
 80046d6:	236a      	movne	r3, #106	; 0x6a
 80046d8:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8004a88 <_strtod_l+0x970>
 80046dc:	9304      	str	r3, [sp, #16]
 80046de:	4650      	mov	r0, sl
 80046e0:	4659      	mov	r1, fp
 80046e2:	2300      	movs	r3, #0
 80046e4:	f018 0f01 	tst.w	r8, #1
 80046e8:	d004      	beq.n	80046f4 <_strtod_l+0x5dc>
 80046ea:	e9d9 2300 	ldrd	r2, r3, [r9]
 80046ee:	f7fb ff8b 	bl	8000608 <__aeabi_dmul>
 80046f2:	2301      	movs	r3, #1
 80046f4:	ea5f 0868 	movs.w	r8, r8, asr #1
 80046f8:	f109 0908 	add.w	r9, r9, #8
 80046fc:	d1f2      	bne.n	80046e4 <_strtod_l+0x5cc>
 80046fe:	b10b      	cbz	r3, 8004704 <_strtod_l+0x5ec>
 8004700:	4682      	mov	sl, r0
 8004702:	468b      	mov	fp, r1
 8004704:	9b04      	ldr	r3, [sp, #16]
 8004706:	b1c3      	cbz	r3, 800473a <_strtod_l+0x622>
 8004708:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800470c:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8004710:	2b00      	cmp	r3, #0
 8004712:	4659      	mov	r1, fp
 8004714:	dd11      	ble.n	800473a <_strtod_l+0x622>
 8004716:	2b1f      	cmp	r3, #31
 8004718:	f340 8124 	ble.w	8004964 <_strtod_l+0x84c>
 800471c:	2b34      	cmp	r3, #52	; 0x34
 800471e:	bfde      	ittt	le
 8004720:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8004724:	f04f 33ff 	movle.w	r3, #4294967295
 8004728:	fa03 f202 	lslle.w	r2, r3, r2
 800472c:	f04f 0a00 	mov.w	sl, #0
 8004730:	bfcc      	ite	gt
 8004732:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8004736:	ea02 0b01 	andle.w	fp, r2, r1
 800473a:	2200      	movs	r2, #0
 800473c:	2300      	movs	r3, #0
 800473e:	4650      	mov	r0, sl
 8004740:	4659      	mov	r1, fp
 8004742:	f7fc f9c9 	bl	8000ad8 <__aeabi_dcmpeq>
 8004746:	2800      	cmp	r0, #0
 8004748:	d1a2      	bne.n	8004690 <_strtod_l+0x578>
 800474a:	9b07      	ldr	r3, [sp, #28]
 800474c:	9300      	str	r3, [sp, #0]
 800474e:	9908      	ldr	r1, [sp, #32]
 8004750:	462b      	mov	r3, r5
 8004752:	463a      	mov	r2, r7
 8004754:	4620      	mov	r0, r4
 8004756:	f001 ff25 	bl	80065a4 <__s2b>
 800475a:	9007      	str	r0, [sp, #28]
 800475c:	2800      	cmp	r0, #0
 800475e:	f43f af1f 	beq.w	80045a0 <_strtod_l+0x488>
 8004762:	9b05      	ldr	r3, [sp, #20]
 8004764:	1b9e      	subs	r6, r3, r6
 8004766:	9b06      	ldr	r3, [sp, #24]
 8004768:	2b00      	cmp	r3, #0
 800476a:	bfb4      	ite	lt
 800476c:	4633      	movlt	r3, r6
 800476e:	2300      	movge	r3, #0
 8004770:	930c      	str	r3, [sp, #48]	; 0x30
 8004772:	9b06      	ldr	r3, [sp, #24]
 8004774:	2500      	movs	r5, #0
 8004776:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800477a:	9312      	str	r3, [sp, #72]	; 0x48
 800477c:	462e      	mov	r6, r5
 800477e:	9b07      	ldr	r3, [sp, #28]
 8004780:	4620      	mov	r0, r4
 8004782:	6859      	ldr	r1, [r3, #4]
 8004784:	f001 fe66 	bl	8006454 <_Balloc>
 8004788:	9005      	str	r0, [sp, #20]
 800478a:	2800      	cmp	r0, #0
 800478c:	f43f af0c 	beq.w	80045a8 <_strtod_l+0x490>
 8004790:	9b07      	ldr	r3, [sp, #28]
 8004792:	691a      	ldr	r2, [r3, #16]
 8004794:	3202      	adds	r2, #2
 8004796:	f103 010c 	add.w	r1, r3, #12
 800479a:	0092      	lsls	r2, r2, #2
 800479c:	300c      	adds	r0, #12
 800479e:	f001 fe4b 	bl	8006438 <memcpy>
 80047a2:	ec4b ab10 	vmov	d0, sl, fp
 80047a6:	aa1a      	add	r2, sp, #104	; 0x68
 80047a8:	a919      	add	r1, sp, #100	; 0x64
 80047aa:	4620      	mov	r0, r4
 80047ac:	f002 fa40 	bl	8006c30 <__d2b>
 80047b0:	ec4b ab18 	vmov	d8, sl, fp
 80047b4:	9018      	str	r0, [sp, #96]	; 0x60
 80047b6:	2800      	cmp	r0, #0
 80047b8:	f43f aef6 	beq.w	80045a8 <_strtod_l+0x490>
 80047bc:	2101      	movs	r1, #1
 80047be:	4620      	mov	r0, r4
 80047c0:	f001 ff8a 	bl	80066d8 <__i2b>
 80047c4:	4606      	mov	r6, r0
 80047c6:	2800      	cmp	r0, #0
 80047c8:	f43f aeee 	beq.w	80045a8 <_strtod_l+0x490>
 80047cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80047ce:	9904      	ldr	r1, [sp, #16]
 80047d0:	2b00      	cmp	r3, #0
 80047d2:	bfab      	itete	ge
 80047d4:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 80047d6:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 80047d8:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 80047da:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 80047de:	bfac      	ite	ge
 80047e0:	eb03 0902 	addge.w	r9, r3, r2
 80047e4:	1ad7      	sublt	r7, r2, r3
 80047e6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80047e8:	eba3 0801 	sub.w	r8, r3, r1
 80047ec:	4490      	add	r8, r2
 80047ee:	4ba1      	ldr	r3, [pc, #644]	; (8004a74 <_strtod_l+0x95c>)
 80047f0:	f108 38ff 	add.w	r8, r8, #4294967295
 80047f4:	4598      	cmp	r8, r3
 80047f6:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80047fa:	f280 80c7 	bge.w	800498c <_strtod_l+0x874>
 80047fe:	eba3 0308 	sub.w	r3, r3, r8
 8004802:	2b1f      	cmp	r3, #31
 8004804:	eba2 0203 	sub.w	r2, r2, r3
 8004808:	f04f 0101 	mov.w	r1, #1
 800480c:	f300 80b1 	bgt.w	8004972 <_strtod_l+0x85a>
 8004810:	fa01 f303 	lsl.w	r3, r1, r3
 8004814:	930d      	str	r3, [sp, #52]	; 0x34
 8004816:	2300      	movs	r3, #0
 8004818:	9308      	str	r3, [sp, #32]
 800481a:	eb09 0802 	add.w	r8, r9, r2
 800481e:	9b04      	ldr	r3, [sp, #16]
 8004820:	45c1      	cmp	r9, r8
 8004822:	4417      	add	r7, r2
 8004824:	441f      	add	r7, r3
 8004826:	464b      	mov	r3, r9
 8004828:	bfa8      	it	ge
 800482a:	4643      	movge	r3, r8
 800482c:	42bb      	cmp	r3, r7
 800482e:	bfa8      	it	ge
 8004830:	463b      	movge	r3, r7
 8004832:	2b00      	cmp	r3, #0
 8004834:	bfc2      	ittt	gt
 8004836:	eba8 0803 	subgt.w	r8, r8, r3
 800483a:	1aff      	subgt	r7, r7, r3
 800483c:	eba9 0903 	subgt.w	r9, r9, r3
 8004840:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004842:	2b00      	cmp	r3, #0
 8004844:	dd17      	ble.n	8004876 <_strtod_l+0x75e>
 8004846:	4631      	mov	r1, r6
 8004848:	461a      	mov	r2, r3
 800484a:	4620      	mov	r0, r4
 800484c:	f002 f804 	bl	8006858 <__pow5mult>
 8004850:	4606      	mov	r6, r0
 8004852:	2800      	cmp	r0, #0
 8004854:	f43f aea8 	beq.w	80045a8 <_strtod_l+0x490>
 8004858:	4601      	mov	r1, r0
 800485a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800485c:	4620      	mov	r0, r4
 800485e:	f001 ff51 	bl	8006704 <__multiply>
 8004862:	900b      	str	r0, [sp, #44]	; 0x2c
 8004864:	2800      	cmp	r0, #0
 8004866:	f43f ae9f 	beq.w	80045a8 <_strtod_l+0x490>
 800486a:	9918      	ldr	r1, [sp, #96]	; 0x60
 800486c:	4620      	mov	r0, r4
 800486e:	f001 fe31 	bl	80064d4 <_Bfree>
 8004872:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004874:	9318      	str	r3, [sp, #96]	; 0x60
 8004876:	f1b8 0f00 	cmp.w	r8, #0
 800487a:	f300 808c 	bgt.w	8004996 <_strtod_l+0x87e>
 800487e:	9b06      	ldr	r3, [sp, #24]
 8004880:	2b00      	cmp	r3, #0
 8004882:	dd08      	ble.n	8004896 <_strtod_l+0x77e>
 8004884:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004886:	9905      	ldr	r1, [sp, #20]
 8004888:	4620      	mov	r0, r4
 800488a:	f001 ffe5 	bl	8006858 <__pow5mult>
 800488e:	9005      	str	r0, [sp, #20]
 8004890:	2800      	cmp	r0, #0
 8004892:	f43f ae89 	beq.w	80045a8 <_strtod_l+0x490>
 8004896:	2f00      	cmp	r7, #0
 8004898:	dd08      	ble.n	80048ac <_strtod_l+0x794>
 800489a:	9905      	ldr	r1, [sp, #20]
 800489c:	463a      	mov	r2, r7
 800489e:	4620      	mov	r0, r4
 80048a0:	f002 f834 	bl	800690c <__lshift>
 80048a4:	9005      	str	r0, [sp, #20]
 80048a6:	2800      	cmp	r0, #0
 80048a8:	f43f ae7e 	beq.w	80045a8 <_strtod_l+0x490>
 80048ac:	f1b9 0f00 	cmp.w	r9, #0
 80048b0:	dd08      	ble.n	80048c4 <_strtod_l+0x7ac>
 80048b2:	4631      	mov	r1, r6
 80048b4:	464a      	mov	r2, r9
 80048b6:	4620      	mov	r0, r4
 80048b8:	f002 f828 	bl	800690c <__lshift>
 80048bc:	4606      	mov	r6, r0
 80048be:	2800      	cmp	r0, #0
 80048c0:	f43f ae72 	beq.w	80045a8 <_strtod_l+0x490>
 80048c4:	9a05      	ldr	r2, [sp, #20]
 80048c6:	9918      	ldr	r1, [sp, #96]	; 0x60
 80048c8:	4620      	mov	r0, r4
 80048ca:	f002 f8ab 	bl	8006a24 <__mdiff>
 80048ce:	4605      	mov	r5, r0
 80048d0:	2800      	cmp	r0, #0
 80048d2:	f43f ae69 	beq.w	80045a8 <_strtod_l+0x490>
 80048d6:	68c3      	ldr	r3, [r0, #12]
 80048d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80048da:	2300      	movs	r3, #0
 80048dc:	60c3      	str	r3, [r0, #12]
 80048de:	4631      	mov	r1, r6
 80048e0:	f002 f884 	bl	80069ec <__mcmp>
 80048e4:	2800      	cmp	r0, #0
 80048e6:	da60      	bge.n	80049aa <_strtod_l+0x892>
 80048e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80048ea:	ea53 030a 	orrs.w	r3, r3, sl
 80048ee:	f040 8082 	bne.w	80049f6 <_strtod_l+0x8de>
 80048f2:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	d17d      	bne.n	80049f6 <_strtod_l+0x8de>
 80048fa:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80048fe:	0d1b      	lsrs	r3, r3, #20
 8004900:	051b      	lsls	r3, r3, #20
 8004902:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004906:	d976      	bls.n	80049f6 <_strtod_l+0x8de>
 8004908:	696b      	ldr	r3, [r5, #20]
 800490a:	b913      	cbnz	r3, 8004912 <_strtod_l+0x7fa>
 800490c:	692b      	ldr	r3, [r5, #16]
 800490e:	2b01      	cmp	r3, #1
 8004910:	dd71      	ble.n	80049f6 <_strtod_l+0x8de>
 8004912:	4629      	mov	r1, r5
 8004914:	2201      	movs	r2, #1
 8004916:	4620      	mov	r0, r4
 8004918:	f001 fff8 	bl	800690c <__lshift>
 800491c:	4631      	mov	r1, r6
 800491e:	4605      	mov	r5, r0
 8004920:	f002 f864 	bl	80069ec <__mcmp>
 8004924:	2800      	cmp	r0, #0
 8004926:	dd66      	ble.n	80049f6 <_strtod_l+0x8de>
 8004928:	9904      	ldr	r1, [sp, #16]
 800492a:	4a53      	ldr	r2, [pc, #332]	; (8004a78 <_strtod_l+0x960>)
 800492c:	465b      	mov	r3, fp
 800492e:	2900      	cmp	r1, #0
 8004930:	f000 8081 	beq.w	8004a36 <_strtod_l+0x91e>
 8004934:	ea02 010b 	and.w	r1, r2, fp
 8004938:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800493c:	dc7b      	bgt.n	8004a36 <_strtod_l+0x91e>
 800493e:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004942:	f77f aea9 	ble.w	8004698 <_strtod_l+0x580>
 8004946:	4b4d      	ldr	r3, [pc, #308]	; (8004a7c <_strtod_l+0x964>)
 8004948:	4650      	mov	r0, sl
 800494a:	4659      	mov	r1, fp
 800494c:	2200      	movs	r2, #0
 800494e:	f7fb fe5b 	bl	8000608 <__aeabi_dmul>
 8004952:	460b      	mov	r3, r1
 8004954:	4303      	orrs	r3, r0
 8004956:	bf08      	it	eq
 8004958:	2322      	moveq	r3, #34	; 0x22
 800495a:	4682      	mov	sl, r0
 800495c:	468b      	mov	fp, r1
 800495e:	bf08      	it	eq
 8004960:	6023      	streq	r3, [r4, #0]
 8004962:	e62b      	b.n	80045bc <_strtod_l+0x4a4>
 8004964:	f04f 32ff 	mov.w	r2, #4294967295
 8004968:	fa02 f303 	lsl.w	r3, r2, r3
 800496c:	ea03 0a0a 	and.w	sl, r3, sl
 8004970:	e6e3      	b.n	800473a <_strtod_l+0x622>
 8004972:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8004976:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 800497a:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 800497e:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8004982:	fa01 f308 	lsl.w	r3, r1, r8
 8004986:	9308      	str	r3, [sp, #32]
 8004988:	910d      	str	r1, [sp, #52]	; 0x34
 800498a:	e746      	b.n	800481a <_strtod_l+0x702>
 800498c:	2300      	movs	r3, #0
 800498e:	9308      	str	r3, [sp, #32]
 8004990:	2301      	movs	r3, #1
 8004992:	930d      	str	r3, [sp, #52]	; 0x34
 8004994:	e741      	b.n	800481a <_strtod_l+0x702>
 8004996:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004998:	4642      	mov	r2, r8
 800499a:	4620      	mov	r0, r4
 800499c:	f001 ffb6 	bl	800690c <__lshift>
 80049a0:	9018      	str	r0, [sp, #96]	; 0x60
 80049a2:	2800      	cmp	r0, #0
 80049a4:	f47f af6b 	bne.w	800487e <_strtod_l+0x766>
 80049a8:	e5fe      	b.n	80045a8 <_strtod_l+0x490>
 80049aa:	465f      	mov	r7, fp
 80049ac:	d16e      	bne.n	8004a8c <_strtod_l+0x974>
 80049ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80049b0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80049b4:	b342      	cbz	r2, 8004a08 <_strtod_l+0x8f0>
 80049b6:	4a32      	ldr	r2, [pc, #200]	; (8004a80 <_strtod_l+0x968>)
 80049b8:	4293      	cmp	r3, r2
 80049ba:	d128      	bne.n	8004a0e <_strtod_l+0x8f6>
 80049bc:	9b04      	ldr	r3, [sp, #16]
 80049be:	4651      	mov	r1, sl
 80049c0:	b1eb      	cbz	r3, 80049fe <_strtod_l+0x8e6>
 80049c2:	4b2d      	ldr	r3, [pc, #180]	; (8004a78 <_strtod_l+0x960>)
 80049c4:	403b      	ands	r3, r7
 80049c6:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80049ca:	f04f 32ff 	mov.w	r2, #4294967295
 80049ce:	d819      	bhi.n	8004a04 <_strtod_l+0x8ec>
 80049d0:	0d1b      	lsrs	r3, r3, #20
 80049d2:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80049d6:	fa02 f303 	lsl.w	r3, r2, r3
 80049da:	4299      	cmp	r1, r3
 80049dc:	d117      	bne.n	8004a0e <_strtod_l+0x8f6>
 80049de:	4b29      	ldr	r3, [pc, #164]	; (8004a84 <_strtod_l+0x96c>)
 80049e0:	429f      	cmp	r7, r3
 80049e2:	d102      	bne.n	80049ea <_strtod_l+0x8d2>
 80049e4:	3101      	adds	r1, #1
 80049e6:	f43f addf 	beq.w	80045a8 <_strtod_l+0x490>
 80049ea:	4b23      	ldr	r3, [pc, #140]	; (8004a78 <_strtod_l+0x960>)
 80049ec:	403b      	ands	r3, r7
 80049ee:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 80049f2:	f04f 0a00 	mov.w	sl, #0
 80049f6:	9b04      	ldr	r3, [sp, #16]
 80049f8:	2b00      	cmp	r3, #0
 80049fa:	d1a4      	bne.n	8004946 <_strtod_l+0x82e>
 80049fc:	e5de      	b.n	80045bc <_strtod_l+0x4a4>
 80049fe:	f04f 33ff 	mov.w	r3, #4294967295
 8004a02:	e7ea      	b.n	80049da <_strtod_l+0x8c2>
 8004a04:	4613      	mov	r3, r2
 8004a06:	e7e8      	b.n	80049da <_strtod_l+0x8c2>
 8004a08:	ea53 030a 	orrs.w	r3, r3, sl
 8004a0c:	d08c      	beq.n	8004928 <_strtod_l+0x810>
 8004a0e:	9b08      	ldr	r3, [sp, #32]
 8004a10:	b1db      	cbz	r3, 8004a4a <_strtod_l+0x932>
 8004a12:	423b      	tst	r3, r7
 8004a14:	d0ef      	beq.n	80049f6 <_strtod_l+0x8de>
 8004a16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004a18:	9a04      	ldr	r2, [sp, #16]
 8004a1a:	4650      	mov	r0, sl
 8004a1c:	4659      	mov	r1, fp
 8004a1e:	b1c3      	cbz	r3, 8004a52 <_strtod_l+0x93a>
 8004a20:	f7ff fb5c 	bl	80040dc <sulp>
 8004a24:	4602      	mov	r2, r0
 8004a26:	460b      	mov	r3, r1
 8004a28:	ec51 0b18 	vmov	r0, r1, d8
 8004a2c:	f7fb fc36 	bl	800029c <__adddf3>
 8004a30:	4682      	mov	sl, r0
 8004a32:	468b      	mov	fp, r1
 8004a34:	e7df      	b.n	80049f6 <_strtod_l+0x8de>
 8004a36:	4013      	ands	r3, r2
 8004a38:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8004a3c:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8004a40:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8004a44:	f04f 3aff 	mov.w	sl, #4294967295
 8004a48:	e7d5      	b.n	80049f6 <_strtod_l+0x8de>
 8004a4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004a4c:	ea13 0f0a 	tst.w	r3, sl
 8004a50:	e7e0      	b.n	8004a14 <_strtod_l+0x8fc>
 8004a52:	f7ff fb43 	bl	80040dc <sulp>
 8004a56:	4602      	mov	r2, r0
 8004a58:	460b      	mov	r3, r1
 8004a5a:	ec51 0b18 	vmov	r0, r1, d8
 8004a5e:	f7fb fc1b 	bl	8000298 <__aeabi_dsub>
 8004a62:	2200      	movs	r2, #0
 8004a64:	2300      	movs	r3, #0
 8004a66:	4682      	mov	sl, r0
 8004a68:	468b      	mov	fp, r1
 8004a6a:	f7fc f835 	bl	8000ad8 <__aeabi_dcmpeq>
 8004a6e:	2800      	cmp	r0, #0
 8004a70:	d0c1      	beq.n	80049f6 <_strtod_l+0x8de>
 8004a72:	e611      	b.n	8004698 <_strtod_l+0x580>
 8004a74:	fffffc02 	.word	0xfffffc02
 8004a78:	7ff00000 	.word	0x7ff00000
 8004a7c:	39500000 	.word	0x39500000
 8004a80:	000fffff 	.word	0x000fffff
 8004a84:	7fefffff 	.word	0x7fefffff
 8004a88:	08008a68 	.word	0x08008a68
 8004a8c:	4631      	mov	r1, r6
 8004a8e:	4628      	mov	r0, r5
 8004a90:	f002 f92a 	bl	8006ce8 <__ratio>
 8004a94:	ec59 8b10 	vmov	r8, r9, d0
 8004a98:	ee10 0a10 	vmov	r0, s0
 8004a9c:	2200      	movs	r2, #0
 8004a9e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004aa2:	4649      	mov	r1, r9
 8004aa4:	f7fc f82c 	bl	8000b00 <__aeabi_dcmple>
 8004aa8:	2800      	cmp	r0, #0
 8004aaa:	d07a      	beq.n	8004ba2 <_strtod_l+0xa8a>
 8004aac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	d04a      	beq.n	8004b48 <_strtod_l+0xa30>
 8004ab2:	4b95      	ldr	r3, [pc, #596]	; (8004d08 <_strtod_l+0xbf0>)
 8004ab4:	2200      	movs	r2, #0
 8004ab6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004aba:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8004d08 <_strtod_l+0xbf0>
 8004abe:	f04f 0800 	mov.w	r8, #0
 8004ac2:	4b92      	ldr	r3, [pc, #584]	; (8004d0c <_strtod_l+0xbf4>)
 8004ac4:	403b      	ands	r3, r7
 8004ac6:	930d      	str	r3, [sp, #52]	; 0x34
 8004ac8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004aca:	4b91      	ldr	r3, [pc, #580]	; (8004d10 <_strtod_l+0xbf8>)
 8004acc:	429a      	cmp	r2, r3
 8004ace:	f040 80b0 	bne.w	8004c32 <_strtod_l+0xb1a>
 8004ad2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004ad6:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8004ada:	ec4b ab10 	vmov	d0, sl, fp
 8004ade:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8004ae2:	f002 f829 	bl	8006b38 <__ulp>
 8004ae6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004aea:	ec53 2b10 	vmov	r2, r3, d0
 8004aee:	f7fb fd8b 	bl	8000608 <__aeabi_dmul>
 8004af2:	4652      	mov	r2, sl
 8004af4:	465b      	mov	r3, fp
 8004af6:	f7fb fbd1 	bl	800029c <__adddf3>
 8004afa:	460b      	mov	r3, r1
 8004afc:	4983      	ldr	r1, [pc, #524]	; (8004d0c <_strtod_l+0xbf4>)
 8004afe:	4a85      	ldr	r2, [pc, #532]	; (8004d14 <_strtod_l+0xbfc>)
 8004b00:	4019      	ands	r1, r3
 8004b02:	4291      	cmp	r1, r2
 8004b04:	4682      	mov	sl, r0
 8004b06:	d960      	bls.n	8004bca <_strtod_l+0xab2>
 8004b08:	ee18 3a90 	vmov	r3, s17
 8004b0c:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8004b10:	4293      	cmp	r3, r2
 8004b12:	d104      	bne.n	8004b1e <_strtod_l+0xa06>
 8004b14:	ee18 3a10 	vmov	r3, s16
 8004b18:	3301      	adds	r3, #1
 8004b1a:	f43f ad45 	beq.w	80045a8 <_strtod_l+0x490>
 8004b1e:	f8df b200 	ldr.w	fp, [pc, #512]	; 8004d20 <_strtod_l+0xc08>
 8004b22:	f04f 3aff 	mov.w	sl, #4294967295
 8004b26:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004b28:	4620      	mov	r0, r4
 8004b2a:	f001 fcd3 	bl	80064d4 <_Bfree>
 8004b2e:	9905      	ldr	r1, [sp, #20]
 8004b30:	4620      	mov	r0, r4
 8004b32:	f001 fccf 	bl	80064d4 <_Bfree>
 8004b36:	4631      	mov	r1, r6
 8004b38:	4620      	mov	r0, r4
 8004b3a:	f001 fccb 	bl	80064d4 <_Bfree>
 8004b3e:	4629      	mov	r1, r5
 8004b40:	4620      	mov	r0, r4
 8004b42:	f001 fcc7 	bl	80064d4 <_Bfree>
 8004b46:	e61a      	b.n	800477e <_strtod_l+0x666>
 8004b48:	f1ba 0f00 	cmp.w	sl, #0
 8004b4c:	d11b      	bne.n	8004b86 <_strtod_l+0xa6e>
 8004b4e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004b52:	b9f3      	cbnz	r3, 8004b92 <_strtod_l+0xa7a>
 8004b54:	4b6c      	ldr	r3, [pc, #432]	; (8004d08 <_strtod_l+0xbf0>)
 8004b56:	2200      	movs	r2, #0
 8004b58:	4640      	mov	r0, r8
 8004b5a:	4649      	mov	r1, r9
 8004b5c:	f7fb ffc6 	bl	8000aec <__aeabi_dcmplt>
 8004b60:	b9d0      	cbnz	r0, 8004b98 <_strtod_l+0xa80>
 8004b62:	4640      	mov	r0, r8
 8004b64:	4649      	mov	r1, r9
 8004b66:	4b6c      	ldr	r3, [pc, #432]	; (8004d18 <_strtod_l+0xc00>)
 8004b68:	2200      	movs	r2, #0
 8004b6a:	f7fb fd4d 	bl	8000608 <__aeabi_dmul>
 8004b6e:	4680      	mov	r8, r0
 8004b70:	4689      	mov	r9, r1
 8004b72:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8004b76:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 8004b7a:	9315      	str	r3, [sp, #84]	; 0x54
 8004b7c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8004b80:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004b84:	e79d      	b.n	8004ac2 <_strtod_l+0x9aa>
 8004b86:	f1ba 0f01 	cmp.w	sl, #1
 8004b8a:	d102      	bne.n	8004b92 <_strtod_l+0xa7a>
 8004b8c:	2f00      	cmp	r7, #0
 8004b8e:	f43f ad83 	beq.w	8004698 <_strtod_l+0x580>
 8004b92:	4b62      	ldr	r3, [pc, #392]	; (8004d1c <_strtod_l+0xc04>)
 8004b94:	2200      	movs	r2, #0
 8004b96:	e78e      	b.n	8004ab6 <_strtod_l+0x99e>
 8004b98:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8004d18 <_strtod_l+0xc00>
 8004b9c:	f04f 0800 	mov.w	r8, #0
 8004ba0:	e7e7      	b.n	8004b72 <_strtod_l+0xa5a>
 8004ba2:	4b5d      	ldr	r3, [pc, #372]	; (8004d18 <_strtod_l+0xc00>)
 8004ba4:	4640      	mov	r0, r8
 8004ba6:	4649      	mov	r1, r9
 8004ba8:	2200      	movs	r2, #0
 8004baa:	f7fb fd2d 	bl	8000608 <__aeabi_dmul>
 8004bae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004bb0:	4680      	mov	r8, r0
 8004bb2:	4689      	mov	r9, r1
 8004bb4:	b933      	cbnz	r3, 8004bc4 <_strtod_l+0xaac>
 8004bb6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004bba:	900e      	str	r0, [sp, #56]	; 0x38
 8004bbc:	930f      	str	r3, [sp, #60]	; 0x3c
 8004bbe:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8004bc2:	e7dd      	b.n	8004b80 <_strtod_l+0xa68>
 8004bc4:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 8004bc8:	e7f9      	b.n	8004bbe <_strtod_l+0xaa6>
 8004bca:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8004bce:	9b04      	ldr	r3, [sp, #16]
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	d1a8      	bne.n	8004b26 <_strtod_l+0xa0e>
 8004bd4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004bd8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004bda:	0d1b      	lsrs	r3, r3, #20
 8004bdc:	051b      	lsls	r3, r3, #20
 8004bde:	429a      	cmp	r2, r3
 8004be0:	d1a1      	bne.n	8004b26 <_strtod_l+0xa0e>
 8004be2:	4640      	mov	r0, r8
 8004be4:	4649      	mov	r1, r9
 8004be6:	f7fc f857 	bl	8000c98 <__aeabi_d2lz>
 8004bea:	f7fb fcdf 	bl	80005ac <__aeabi_l2d>
 8004bee:	4602      	mov	r2, r0
 8004bf0:	460b      	mov	r3, r1
 8004bf2:	4640      	mov	r0, r8
 8004bf4:	4649      	mov	r1, r9
 8004bf6:	f7fb fb4f 	bl	8000298 <__aeabi_dsub>
 8004bfa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004bfc:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004c00:	ea43 030a 	orr.w	r3, r3, sl
 8004c04:	4313      	orrs	r3, r2
 8004c06:	4680      	mov	r8, r0
 8004c08:	4689      	mov	r9, r1
 8004c0a:	d055      	beq.n	8004cb8 <_strtod_l+0xba0>
 8004c0c:	a336      	add	r3, pc, #216	; (adr r3, 8004ce8 <_strtod_l+0xbd0>)
 8004c0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c12:	f7fb ff6b 	bl	8000aec <__aeabi_dcmplt>
 8004c16:	2800      	cmp	r0, #0
 8004c18:	f47f acd0 	bne.w	80045bc <_strtod_l+0x4a4>
 8004c1c:	a334      	add	r3, pc, #208	; (adr r3, 8004cf0 <_strtod_l+0xbd8>)
 8004c1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c22:	4640      	mov	r0, r8
 8004c24:	4649      	mov	r1, r9
 8004c26:	f7fb ff7f 	bl	8000b28 <__aeabi_dcmpgt>
 8004c2a:	2800      	cmp	r0, #0
 8004c2c:	f43f af7b 	beq.w	8004b26 <_strtod_l+0xa0e>
 8004c30:	e4c4      	b.n	80045bc <_strtod_l+0x4a4>
 8004c32:	9b04      	ldr	r3, [sp, #16]
 8004c34:	b333      	cbz	r3, 8004c84 <_strtod_l+0xb6c>
 8004c36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004c38:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004c3c:	d822      	bhi.n	8004c84 <_strtod_l+0xb6c>
 8004c3e:	a32e      	add	r3, pc, #184	; (adr r3, 8004cf8 <_strtod_l+0xbe0>)
 8004c40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c44:	4640      	mov	r0, r8
 8004c46:	4649      	mov	r1, r9
 8004c48:	f7fb ff5a 	bl	8000b00 <__aeabi_dcmple>
 8004c4c:	b1a0      	cbz	r0, 8004c78 <_strtod_l+0xb60>
 8004c4e:	4649      	mov	r1, r9
 8004c50:	4640      	mov	r0, r8
 8004c52:	f7fb ffb1 	bl	8000bb8 <__aeabi_d2uiz>
 8004c56:	2801      	cmp	r0, #1
 8004c58:	bf38      	it	cc
 8004c5a:	2001      	movcc	r0, #1
 8004c5c:	f7fb fc5a 	bl	8000514 <__aeabi_ui2d>
 8004c60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c62:	4680      	mov	r8, r0
 8004c64:	4689      	mov	r9, r1
 8004c66:	bb23      	cbnz	r3, 8004cb2 <_strtod_l+0xb9a>
 8004c68:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8004c6c:	9010      	str	r0, [sp, #64]	; 0x40
 8004c6e:	9311      	str	r3, [sp, #68]	; 0x44
 8004c70:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8004c74:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8004c78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c7a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004c7c:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8004c80:	1a9b      	subs	r3, r3, r2
 8004c82:	9309      	str	r3, [sp, #36]	; 0x24
 8004c84:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004c88:	eeb0 0a48 	vmov.f32	s0, s16
 8004c8c:	eef0 0a68 	vmov.f32	s1, s17
 8004c90:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8004c94:	f001 ff50 	bl	8006b38 <__ulp>
 8004c98:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8004c9c:	ec53 2b10 	vmov	r2, r3, d0
 8004ca0:	f7fb fcb2 	bl	8000608 <__aeabi_dmul>
 8004ca4:	ec53 2b18 	vmov	r2, r3, d8
 8004ca8:	f7fb faf8 	bl	800029c <__adddf3>
 8004cac:	4682      	mov	sl, r0
 8004cae:	468b      	mov	fp, r1
 8004cb0:	e78d      	b.n	8004bce <_strtod_l+0xab6>
 8004cb2:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 8004cb6:	e7db      	b.n	8004c70 <_strtod_l+0xb58>
 8004cb8:	a311      	add	r3, pc, #68	; (adr r3, 8004d00 <_strtod_l+0xbe8>)
 8004cba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004cbe:	f7fb ff15 	bl	8000aec <__aeabi_dcmplt>
 8004cc2:	e7b2      	b.n	8004c2a <_strtod_l+0xb12>
 8004cc4:	2300      	movs	r3, #0
 8004cc6:	930a      	str	r3, [sp, #40]	; 0x28
 8004cc8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004cca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004ccc:	6013      	str	r3, [r2, #0]
 8004cce:	f7ff ba6b 	b.w	80041a8 <_strtod_l+0x90>
 8004cd2:	2a65      	cmp	r2, #101	; 0x65
 8004cd4:	f43f ab5f 	beq.w	8004396 <_strtod_l+0x27e>
 8004cd8:	2a45      	cmp	r2, #69	; 0x45
 8004cda:	f43f ab5c 	beq.w	8004396 <_strtod_l+0x27e>
 8004cde:	2301      	movs	r3, #1
 8004ce0:	f7ff bb94 	b.w	800440c <_strtod_l+0x2f4>
 8004ce4:	f3af 8000 	nop.w
 8004ce8:	94a03595 	.word	0x94a03595
 8004cec:	3fdfffff 	.word	0x3fdfffff
 8004cf0:	35afe535 	.word	0x35afe535
 8004cf4:	3fe00000 	.word	0x3fe00000
 8004cf8:	ffc00000 	.word	0xffc00000
 8004cfc:	41dfffff 	.word	0x41dfffff
 8004d00:	94a03595 	.word	0x94a03595
 8004d04:	3fcfffff 	.word	0x3fcfffff
 8004d08:	3ff00000 	.word	0x3ff00000
 8004d0c:	7ff00000 	.word	0x7ff00000
 8004d10:	7fe00000 	.word	0x7fe00000
 8004d14:	7c9fffff 	.word	0x7c9fffff
 8004d18:	3fe00000 	.word	0x3fe00000
 8004d1c:	bff00000 	.word	0xbff00000
 8004d20:	7fefffff 	.word	0x7fefffff

08004d24 <_strtod_r>:
 8004d24:	4b01      	ldr	r3, [pc, #4]	; (8004d2c <_strtod_r+0x8>)
 8004d26:	f7ff b9f7 	b.w	8004118 <_strtod_l>
 8004d2a:	bf00      	nop
 8004d2c:	20000094 	.word	0x20000094

08004d30 <_strtol_l.constprop.0>:
 8004d30:	2b01      	cmp	r3, #1
 8004d32:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d36:	d001      	beq.n	8004d3c <_strtol_l.constprop.0+0xc>
 8004d38:	2b24      	cmp	r3, #36	; 0x24
 8004d3a:	d906      	bls.n	8004d4a <_strtol_l.constprop.0+0x1a>
 8004d3c:	f7fe fafc 	bl	8003338 <__errno>
 8004d40:	2316      	movs	r3, #22
 8004d42:	6003      	str	r3, [r0, #0]
 8004d44:	2000      	movs	r0, #0
 8004d46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004d4a:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8004e30 <_strtol_l.constprop.0+0x100>
 8004d4e:	460d      	mov	r5, r1
 8004d50:	462e      	mov	r6, r5
 8004d52:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004d56:	f814 700c 	ldrb.w	r7, [r4, ip]
 8004d5a:	f017 0708 	ands.w	r7, r7, #8
 8004d5e:	d1f7      	bne.n	8004d50 <_strtol_l.constprop.0+0x20>
 8004d60:	2c2d      	cmp	r4, #45	; 0x2d
 8004d62:	d132      	bne.n	8004dca <_strtol_l.constprop.0+0x9a>
 8004d64:	782c      	ldrb	r4, [r5, #0]
 8004d66:	2701      	movs	r7, #1
 8004d68:	1cb5      	adds	r5, r6, #2
 8004d6a:	2b00      	cmp	r3, #0
 8004d6c:	d05b      	beq.n	8004e26 <_strtol_l.constprop.0+0xf6>
 8004d6e:	2b10      	cmp	r3, #16
 8004d70:	d109      	bne.n	8004d86 <_strtol_l.constprop.0+0x56>
 8004d72:	2c30      	cmp	r4, #48	; 0x30
 8004d74:	d107      	bne.n	8004d86 <_strtol_l.constprop.0+0x56>
 8004d76:	782c      	ldrb	r4, [r5, #0]
 8004d78:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8004d7c:	2c58      	cmp	r4, #88	; 0x58
 8004d7e:	d14d      	bne.n	8004e1c <_strtol_l.constprop.0+0xec>
 8004d80:	786c      	ldrb	r4, [r5, #1]
 8004d82:	2310      	movs	r3, #16
 8004d84:	3502      	adds	r5, #2
 8004d86:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8004d8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8004d8e:	f04f 0c00 	mov.w	ip, #0
 8004d92:	fbb8 f9f3 	udiv	r9, r8, r3
 8004d96:	4666      	mov	r6, ip
 8004d98:	fb03 8a19 	mls	sl, r3, r9, r8
 8004d9c:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8004da0:	f1be 0f09 	cmp.w	lr, #9
 8004da4:	d816      	bhi.n	8004dd4 <_strtol_l.constprop.0+0xa4>
 8004da6:	4674      	mov	r4, lr
 8004da8:	42a3      	cmp	r3, r4
 8004daa:	dd24      	ble.n	8004df6 <_strtol_l.constprop.0+0xc6>
 8004dac:	f1bc 0f00 	cmp.w	ip, #0
 8004db0:	db1e      	blt.n	8004df0 <_strtol_l.constprop.0+0xc0>
 8004db2:	45b1      	cmp	r9, r6
 8004db4:	d31c      	bcc.n	8004df0 <_strtol_l.constprop.0+0xc0>
 8004db6:	d101      	bne.n	8004dbc <_strtol_l.constprop.0+0x8c>
 8004db8:	45a2      	cmp	sl, r4
 8004dba:	db19      	blt.n	8004df0 <_strtol_l.constprop.0+0xc0>
 8004dbc:	fb06 4603 	mla	r6, r6, r3, r4
 8004dc0:	f04f 0c01 	mov.w	ip, #1
 8004dc4:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004dc8:	e7e8      	b.n	8004d9c <_strtol_l.constprop.0+0x6c>
 8004dca:	2c2b      	cmp	r4, #43	; 0x2b
 8004dcc:	bf04      	itt	eq
 8004dce:	782c      	ldrbeq	r4, [r5, #0]
 8004dd0:	1cb5      	addeq	r5, r6, #2
 8004dd2:	e7ca      	b.n	8004d6a <_strtol_l.constprop.0+0x3a>
 8004dd4:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8004dd8:	f1be 0f19 	cmp.w	lr, #25
 8004ddc:	d801      	bhi.n	8004de2 <_strtol_l.constprop.0+0xb2>
 8004dde:	3c37      	subs	r4, #55	; 0x37
 8004de0:	e7e2      	b.n	8004da8 <_strtol_l.constprop.0+0x78>
 8004de2:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 8004de6:	f1be 0f19 	cmp.w	lr, #25
 8004dea:	d804      	bhi.n	8004df6 <_strtol_l.constprop.0+0xc6>
 8004dec:	3c57      	subs	r4, #87	; 0x57
 8004dee:	e7db      	b.n	8004da8 <_strtol_l.constprop.0+0x78>
 8004df0:	f04f 3cff 	mov.w	ip, #4294967295
 8004df4:	e7e6      	b.n	8004dc4 <_strtol_l.constprop.0+0x94>
 8004df6:	f1bc 0f00 	cmp.w	ip, #0
 8004dfa:	da05      	bge.n	8004e08 <_strtol_l.constprop.0+0xd8>
 8004dfc:	2322      	movs	r3, #34	; 0x22
 8004dfe:	6003      	str	r3, [r0, #0]
 8004e00:	4646      	mov	r6, r8
 8004e02:	b942      	cbnz	r2, 8004e16 <_strtol_l.constprop.0+0xe6>
 8004e04:	4630      	mov	r0, r6
 8004e06:	e79e      	b.n	8004d46 <_strtol_l.constprop.0+0x16>
 8004e08:	b107      	cbz	r7, 8004e0c <_strtol_l.constprop.0+0xdc>
 8004e0a:	4276      	negs	r6, r6
 8004e0c:	2a00      	cmp	r2, #0
 8004e0e:	d0f9      	beq.n	8004e04 <_strtol_l.constprop.0+0xd4>
 8004e10:	f1bc 0f00 	cmp.w	ip, #0
 8004e14:	d000      	beq.n	8004e18 <_strtol_l.constprop.0+0xe8>
 8004e16:	1e69      	subs	r1, r5, #1
 8004e18:	6011      	str	r1, [r2, #0]
 8004e1a:	e7f3      	b.n	8004e04 <_strtol_l.constprop.0+0xd4>
 8004e1c:	2430      	movs	r4, #48	; 0x30
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	d1b1      	bne.n	8004d86 <_strtol_l.constprop.0+0x56>
 8004e22:	2308      	movs	r3, #8
 8004e24:	e7af      	b.n	8004d86 <_strtol_l.constprop.0+0x56>
 8004e26:	2c30      	cmp	r4, #48	; 0x30
 8004e28:	d0a5      	beq.n	8004d76 <_strtol_l.constprop.0+0x46>
 8004e2a:	230a      	movs	r3, #10
 8004e2c:	e7ab      	b.n	8004d86 <_strtol_l.constprop.0+0x56>
 8004e2e:	bf00      	nop
 8004e30:	08008a91 	.word	0x08008a91

08004e34 <_strtol_r>:
 8004e34:	f7ff bf7c 	b.w	8004d30 <_strtol_l.constprop.0>

08004e38 <quorem>:
 8004e38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004e3c:	6903      	ldr	r3, [r0, #16]
 8004e3e:	690c      	ldr	r4, [r1, #16]
 8004e40:	42a3      	cmp	r3, r4
 8004e42:	4607      	mov	r7, r0
 8004e44:	f2c0 8081 	blt.w	8004f4a <quorem+0x112>
 8004e48:	3c01      	subs	r4, #1
 8004e4a:	f101 0814 	add.w	r8, r1, #20
 8004e4e:	f100 0514 	add.w	r5, r0, #20
 8004e52:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004e56:	9301      	str	r3, [sp, #4]
 8004e58:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004e5c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004e60:	3301      	adds	r3, #1
 8004e62:	429a      	cmp	r2, r3
 8004e64:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8004e68:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8004e6c:	fbb2 f6f3 	udiv	r6, r2, r3
 8004e70:	d331      	bcc.n	8004ed6 <quorem+0x9e>
 8004e72:	f04f 0e00 	mov.w	lr, #0
 8004e76:	4640      	mov	r0, r8
 8004e78:	46ac      	mov	ip, r5
 8004e7a:	46f2      	mov	sl, lr
 8004e7c:	f850 2b04 	ldr.w	r2, [r0], #4
 8004e80:	b293      	uxth	r3, r2
 8004e82:	fb06 e303 	mla	r3, r6, r3, lr
 8004e86:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8004e8a:	b29b      	uxth	r3, r3
 8004e8c:	ebaa 0303 	sub.w	r3, sl, r3
 8004e90:	f8dc a000 	ldr.w	sl, [ip]
 8004e94:	0c12      	lsrs	r2, r2, #16
 8004e96:	fa13 f38a 	uxtah	r3, r3, sl
 8004e9a:	fb06 e202 	mla	r2, r6, r2, lr
 8004e9e:	9300      	str	r3, [sp, #0]
 8004ea0:	9b00      	ldr	r3, [sp, #0]
 8004ea2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8004ea6:	b292      	uxth	r2, r2
 8004ea8:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8004eac:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8004eb0:	f8bd 3000 	ldrh.w	r3, [sp]
 8004eb4:	4581      	cmp	r9, r0
 8004eb6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004eba:	f84c 3b04 	str.w	r3, [ip], #4
 8004ebe:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8004ec2:	d2db      	bcs.n	8004e7c <quorem+0x44>
 8004ec4:	f855 300b 	ldr.w	r3, [r5, fp]
 8004ec8:	b92b      	cbnz	r3, 8004ed6 <quorem+0x9e>
 8004eca:	9b01      	ldr	r3, [sp, #4]
 8004ecc:	3b04      	subs	r3, #4
 8004ece:	429d      	cmp	r5, r3
 8004ed0:	461a      	mov	r2, r3
 8004ed2:	d32e      	bcc.n	8004f32 <quorem+0xfa>
 8004ed4:	613c      	str	r4, [r7, #16]
 8004ed6:	4638      	mov	r0, r7
 8004ed8:	f001 fd88 	bl	80069ec <__mcmp>
 8004edc:	2800      	cmp	r0, #0
 8004ede:	db24      	blt.n	8004f2a <quorem+0xf2>
 8004ee0:	3601      	adds	r6, #1
 8004ee2:	4628      	mov	r0, r5
 8004ee4:	f04f 0c00 	mov.w	ip, #0
 8004ee8:	f858 2b04 	ldr.w	r2, [r8], #4
 8004eec:	f8d0 e000 	ldr.w	lr, [r0]
 8004ef0:	b293      	uxth	r3, r2
 8004ef2:	ebac 0303 	sub.w	r3, ip, r3
 8004ef6:	0c12      	lsrs	r2, r2, #16
 8004ef8:	fa13 f38e 	uxtah	r3, r3, lr
 8004efc:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8004f00:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8004f04:	b29b      	uxth	r3, r3
 8004f06:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004f0a:	45c1      	cmp	r9, r8
 8004f0c:	f840 3b04 	str.w	r3, [r0], #4
 8004f10:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8004f14:	d2e8      	bcs.n	8004ee8 <quorem+0xb0>
 8004f16:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004f1a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8004f1e:	b922      	cbnz	r2, 8004f2a <quorem+0xf2>
 8004f20:	3b04      	subs	r3, #4
 8004f22:	429d      	cmp	r5, r3
 8004f24:	461a      	mov	r2, r3
 8004f26:	d30a      	bcc.n	8004f3e <quorem+0x106>
 8004f28:	613c      	str	r4, [r7, #16]
 8004f2a:	4630      	mov	r0, r6
 8004f2c:	b003      	add	sp, #12
 8004f2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f32:	6812      	ldr	r2, [r2, #0]
 8004f34:	3b04      	subs	r3, #4
 8004f36:	2a00      	cmp	r2, #0
 8004f38:	d1cc      	bne.n	8004ed4 <quorem+0x9c>
 8004f3a:	3c01      	subs	r4, #1
 8004f3c:	e7c7      	b.n	8004ece <quorem+0x96>
 8004f3e:	6812      	ldr	r2, [r2, #0]
 8004f40:	3b04      	subs	r3, #4
 8004f42:	2a00      	cmp	r2, #0
 8004f44:	d1f0      	bne.n	8004f28 <quorem+0xf0>
 8004f46:	3c01      	subs	r4, #1
 8004f48:	e7eb      	b.n	8004f22 <quorem+0xea>
 8004f4a:	2000      	movs	r0, #0
 8004f4c:	e7ee      	b.n	8004f2c <quorem+0xf4>
	...

08004f50 <_dtoa_r>:
 8004f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f54:	ed2d 8b04 	vpush	{d8-d9}
 8004f58:	ec57 6b10 	vmov	r6, r7, d0
 8004f5c:	b093      	sub	sp, #76	; 0x4c
 8004f5e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8004f60:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8004f64:	9106      	str	r1, [sp, #24]
 8004f66:	ee10 aa10 	vmov	sl, s0
 8004f6a:	4604      	mov	r4, r0
 8004f6c:	9209      	str	r2, [sp, #36]	; 0x24
 8004f6e:	930c      	str	r3, [sp, #48]	; 0x30
 8004f70:	46bb      	mov	fp, r7
 8004f72:	b975      	cbnz	r5, 8004f92 <_dtoa_r+0x42>
 8004f74:	2010      	movs	r0, #16
 8004f76:	f001 fa45 	bl	8006404 <malloc>
 8004f7a:	4602      	mov	r2, r0
 8004f7c:	6260      	str	r0, [r4, #36]	; 0x24
 8004f7e:	b920      	cbnz	r0, 8004f8a <_dtoa_r+0x3a>
 8004f80:	4ba7      	ldr	r3, [pc, #668]	; (8005220 <_dtoa_r+0x2d0>)
 8004f82:	21ea      	movs	r1, #234	; 0xea
 8004f84:	48a7      	ldr	r0, [pc, #668]	; (8005224 <_dtoa_r+0x2d4>)
 8004f86:	f002 facb 	bl	8007520 <__assert_func>
 8004f8a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8004f8e:	6005      	str	r5, [r0, #0]
 8004f90:	60c5      	str	r5, [r0, #12]
 8004f92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f94:	6819      	ldr	r1, [r3, #0]
 8004f96:	b151      	cbz	r1, 8004fae <_dtoa_r+0x5e>
 8004f98:	685a      	ldr	r2, [r3, #4]
 8004f9a:	604a      	str	r2, [r1, #4]
 8004f9c:	2301      	movs	r3, #1
 8004f9e:	4093      	lsls	r3, r2
 8004fa0:	608b      	str	r3, [r1, #8]
 8004fa2:	4620      	mov	r0, r4
 8004fa4:	f001 fa96 	bl	80064d4 <_Bfree>
 8004fa8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004faa:	2200      	movs	r2, #0
 8004fac:	601a      	str	r2, [r3, #0]
 8004fae:	1e3b      	subs	r3, r7, #0
 8004fb0:	bfaa      	itet	ge
 8004fb2:	2300      	movge	r3, #0
 8004fb4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8004fb8:	f8c8 3000 	strge.w	r3, [r8]
 8004fbc:	4b9a      	ldr	r3, [pc, #616]	; (8005228 <_dtoa_r+0x2d8>)
 8004fbe:	bfbc      	itt	lt
 8004fc0:	2201      	movlt	r2, #1
 8004fc2:	f8c8 2000 	strlt.w	r2, [r8]
 8004fc6:	ea33 030b 	bics.w	r3, r3, fp
 8004fca:	d11b      	bne.n	8005004 <_dtoa_r+0xb4>
 8004fcc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004fce:	f242 730f 	movw	r3, #9999	; 0x270f
 8004fd2:	6013      	str	r3, [r2, #0]
 8004fd4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004fd8:	4333      	orrs	r3, r6
 8004fda:	f000 8592 	beq.w	8005b02 <_dtoa_r+0xbb2>
 8004fde:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004fe0:	b963      	cbnz	r3, 8004ffc <_dtoa_r+0xac>
 8004fe2:	4b92      	ldr	r3, [pc, #584]	; (800522c <_dtoa_r+0x2dc>)
 8004fe4:	e022      	b.n	800502c <_dtoa_r+0xdc>
 8004fe6:	4b92      	ldr	r3, [pc, #584]	; (8005230 <_dtoa_r+0x2e0>)
 8004fe8:	9301      	str	r3, [sp, #4]
 8004fea:	3308      	adds	r3, #8
 8004fec:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8004fee:	6013      	str	r3, [r2, #0]
 8004ff0:	9801      	ldr	r0, [sp, #4]
 8004ff2:	b013      	add	sp, #76	; 0x4c
 8004ff4:	ecbd 8b04 	vpop	{d8-d9}
 8004ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004ffc:	4b8b      	ldr	r3, [pc, #556]	; (800522c <_dtoa_r+0x2dc>)
 8004ffe:	9301      	str	r3, [sp, #4]
 8005000:	3303      	adds	r3, #3
 8005002:	e7f3      	b.n	8004fec <_dtoa_r+0x9c>
 8005004:	2200      	movs	r2, #0
 8005006:	2300      	movs	r3, #0
 8005008:	4650      	mov	r0, sl
 800500a:	4659      	mov	r1, fp
 800500c:	f7fb fd64 	bl	8000ad8 <__aeabi_dcmpeq>
 8005010:	ec4b ab19 	vmov	d9, sl, fp
 8005014:	4680      	mov	r8, r0
 8005016:	b158      	cbz	r0, 8005030 <_dtoa_r+0xe0>
 8005018:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800501a:	2301      	movs	r3, #1
 800501c:	6013      	str	r3, [r2, #0]
 800501e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005020:	2b00      	cmp	r3, #0
 8005022:	f000 856b 	beq.w	8005afc <_dtoa_r+0xbac>
 8005026:	4883      	ldr	r0, [pc, #524]	; (8005234 <_dtoa_r+0x2e4>)
 8005028:	6018      	str	r0, [r3, #0]
 800502a:	1e43      	subs	r3, r0, #1
 800502c:	9301      	str	r3, [sp, #4]
 800502e:	e7df      	b.n	8004ff0 <_dtoa_r+0xa0>
 8005030:	ec4b ab10 	vmov	d0, sl, fp
 8005034:	aa10      	add	r2, sp, #64	; 0x40
 8005036:	a911      	add	r1, sp, #68	; 0x44
 8005038:	4620      	mov	r0, r4
 800503a:	f001 fdf9 	bl	8006c30 <__d2b>
 800503e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 8005042:	ee08 0a10 	vmov	s16, r0
 8005046:	2d00      	cmp	r5, #0
 8005048:	f000 8084 	beq.w	8005154 <_dtoa_r+0x204>
 800504c:	ee19 3a90 	vmov	r3, s19
 8005050:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005054:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8005058:	4656      	mov	r6, sl
 800505a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800505e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8005062:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8005066:	4b74      	ldr	r3, [pc, #464]	; (8005238 <_dtoa_r+0x2e8>)
 8005068:	2200      	movs	r2, #0
 800506a:	4630      	mov	r0, r6
 800506c:	4639      	mov	r1, r7
 800506e:	f7fb f913 	bl	8000298 <__aeabi_dsub>
 8005072:	a365      	add	r3, pc, #404	; (adr r3, 8005208 <_dtoa_r+0x2b8>)
 8005074:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005078:	f7fb fac6 	bl	8000608 <__aeabi_dmul>
 800507c:	a364      	add	r3, pc, #400	; (adr r3, 8005210 <_dtoa_r+0x2c0>)
 800507e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005082:	f7fb f90b 	bl	800029c <__adddf3>
 8005086:	4606      	mov	r6, r0
 8005088:	4628      	mov	r0, r5
 800508a:	460f      	mov	r7, r1
 800508c:	f7fb fa52 	bl	8000534 <__aeabi_i2d>
 8005090:	a361      	add	r3, pc, #388	; (adr r3, 8005218 <_dtoa_r+0x2c8>)
 8005092:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005096:	f7fb fab7 	bl	8000608 <__aeabi_dmul>
 800509a:	4602      	mov	r2, r0
 800509c:	460b      	mov	r3, r1
 800509e:	4630      	mov	r0, r6
 80050a0:	4639      	mov	r1, r7
 80050a2:	f7fb f8fb 	bl	800029c <__adddf3>
 80050a6:	4606      	mov	r6, r0
 80050a8:	460f      	mov	r7, r1
 80050aa:	f7fb fd5d 	bl	8000b68 <__aeabi_d2iz>
 80050ae:	2200      	movs	r2, #0
 80050b0:	9000      	str	r0, [sp, #0]
 80050b2:	2300      	movs	r3, #0
 80050b4:	4630      	mov	r0, r6
 80050b6:	4639      	mov	r1, r7
 80050b8:	f7fb fd18 	bl	8000aec <__aeabi_dcmplt>
 80050bc:	b150      	cbz	r0, 80050d4 <_dtoa_r+0x184>
 80050be:	9800      	ldr	r0, [sp, #0]
 80050c0:	f7fb fa38 	bl	8000534 <__aeabi_i2d>
 80050c4:	4632      	mov	r2, r6
 80050c6:	463b      	mov	r3, r7
 80050c8:	f7fb fd06 	bl	8000ad8 <__aeabi_dcmpeq>
 80050cc:	b910      	cbnz	r0, 80050d4 <_dtoa_r+0x184>
 80050ce:	9b00      	ldr	r3, [sp, #0]
 80050d0:	3b01      	subs	r3, #1
 80050d2:	9300      	str	r3, [sp, #0]
 80050d4:	9b00      	ldr	r3, [sp, #0]
 80050d6:	2b16      	cmp	r3, #22
 80050d8:	d85a      	bhi.n	8005190 <_dtoa_r+0x240>
 80050da:	9a00      	ldr	r2, [sp, #0]
 80050dc:	4b57      	ldr	r3, [pc, #348]	; (800523c <_dtoa_r+0x2ec>)
 80050de:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80050e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80050e6:	ec51 0b19 	vmov	r0, r1, d9
 80050ea:	f7fb fcff 	bl	8000aec <__aeabi_dcmplt>
 80050ee:	2800      	cmp	r0, #0
 80050f0:	d050      	beq.n	8005194 <_dtoa_r+0x244>
 80050f2:	9b00      	ldr	r3, [sp, #0]
 80050f4:	3b01      	subs	r3, #1
 80050f6:	9300      	str	r3, [sp, #0]
 80050f8:	2300      	movs	r3, #0
 80050fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80050fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80050fe:	1b5d      	subs	r5, r3, r5
 8005100:	1e6b      	subs	r3, r5, #1
 8005102:	9305      	str	r3, [sp, #20]
 8005104:	bf45      	ittet	mi
 8005106:	f1c5 0301 	rsbmi	r3, r5, #1
 800510a:	9304      	strmi	r3, [sp, #16]
 800510c:	2300      	movpl	r3, #0
 800510e:	2300      	movmi	r3, #0
 8005110:	bf4c      	ite	mi
 8005112:	9305      	strmi	r3, [sp, #20]
 8005114:	9304      	strpl	r3, [sp, #16]
 8005116:	9b00      	ldr	r3, [sp, #0]
 8005118:	2b00      	cmp	r3, #0
 800511a:	db3d      	blt.n	8005198 <_dtoa_r+0x248>
 800511c:	9b05      	ldr	r3, [sp, #20]
 800511e:	9a00      	ldr	r2, [sp, #0]
 8005120:	920a      	str	r2, [sp, #40]	; 0x28
 8005122:	4413      	add	r3, r2
 8005124:	9305      	str	r3, [sp, #20]
 8005126:	2300      	movs	r3, #0
 8005128:	9307      	str	r3, [sp, #28]
 800512a:	9b06      	ldr	r3, [sp, #24]
 800512c:	2b09      	cmp	r3, #9
 800512e:	f200 8089 	bhi.w	8005244 <_dtoa_r+0x2f4>
 8005132:	2b05      	cmp	r3, #5
 8005134:	bfc4      	itt	gt
 8005136:	3b04      	subgt	r3, #4
 8005138:	9306      	strgt	r3, [sp, #24]
 800513a:	9b06      	ldr	r3, [sp, #24]
 800513c:	f1a3 0302 	sub.w	r3, r3, #2
 8005140:	bfcc      	ite	gt
 8005142:	2500      	movgt	r5, #0
 8005144:	2501      	movle	r5, #1
 8005146:	2b03      	cmp	r3, #3
 8005148:	f200 8087 	bhi.w	800525a <_dtoa_r+0x30a>
 800514c:	e8df f003 	tbb	[pc, r3]
 8005150:	59383a2d 	.word	0x59383a2d
 8005154:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8005158:	441d      	add	r5, r3
 800515a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800515e:	2b20      	cmp	r3, #32
 8005160:	bfc1      	itttt	gt
 8005162:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8005166:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800516a:	fa0b f303 	lslgt.w	r3, fp, r3
 800516e:	fa26 f000 	lsrgt.w	r0, r6, r0
 8005172:	bfda      	itte	le
 8005174:	f1c3 0320 	rsble	r3, r3, #32
 8005178:	fa06 f003 	lslle.w	r0, r6, r3
 800517c:	4318      	orrgt	r0, r3
 800517e:	f7fb f9c9 	bl	8000514 <__aeabi_ui2d>
 8005182:	2301      	movs	r3, #1
 8005184:	4606      	mov	r6, r0
 8005186:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800518a:	3d01      	subs	r5, #1
 800518c:	930e      	str	r3, [sp, #56]	; 0x38
 800518e:	e76a      	b.n	8005066 <_dtoa_r+0x116>
 8005190:	2301      	movs	r3, #1
 8005192:	e7b2      	b.n	80050fa <_dtoa_r+0x1aa>
 8005194:	900b      	str	r0, [sp, #44]	; 0x2c
 8005196:	e7b1      	b.n	80050fc <_dtoa_r+0x1ac>
 8005198:	9b04      	ldr	r3, [sp, #16]
 800519a:	9a00      	ldr	r2, [sp, #0]
 800519c:	1a9b      	subs	r3, r3, r2
 800519e:	9304      	str	r3, [sp, #16]
 80051a0:	4253      	negs	r3, r2
 80051a2:	9307      	str	r3, [sp, #28]
 80051a4:	2300      	movs	r3, #0
 80051a6:	930a      	str	r3, [sp, #40]	; 0x28
 80051a8:	e7bf      	b.n	800512a <_dtoa_r+0x1da>
 80051aa:	2300      	movs	r3, #0
 80051ac:	9308      	str	r3, [sp, #32]
 80051ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80051b0:	2b00      	cmp	r3, #0
 80051b2:	dc55      	bgt.n	8005260 <_dtoa_r+0x310>
 80051b4:	2301      	movs	r3, #1
 80051b6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80051ba:	461a      	mov	r2, r3
 80051bc:	9209      	str	r2, [sp, #36]	; 0x24
 80051be:	e00c      	b.n	80051da <_dtoa_r+0x28a>
 80051c0:	2301      	movs	r3, #1
 80051c2:	e7f3      	b.n	80051ac <_dtoa_r+0x25c>
 80051c4:	2300      	movs	r3, #0
 80051c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80051c8:	9308      	str	r3, [sp, #32]
 80051ca:	9b00      	ldr	r3, [sp, #0]
 80051cc:	4413      	add	r3, r2
 80051ce:	9302      	str	r3, [sp, #8]
 80051d0:	3301      	adds	r3, #1
 80051d2:	2b01      	cmp	r3, #1
 80051d4:	9303      	str	r3, [sp, #12]
 80051d6:	bfb8      	it	lt
 80051d8:	2301      	movlt	r3, #1
 80051da:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80051dc:	2200      	movs	r2, #0
 80051de:	6042      	str	r2, [r0, #4]
 80051e0:	2204      	movs	r2, #4
 80051e2:	f102 0614 	add.w	r6, r2, #20
 80051e6:	429e      	cmp	r6, r3
 80051e8:	6841      	ldr	r1, [r0, #4]
 80051ea:	d93d      	bls.n	8005268 <_dtoa_r+0x318>
 80051ec:	4620      	mov	r0, r4
 80051ee:	f001 f931 	bl	8006454 <_Balloc>
 80051f2:	9001      	str	r0, [sp, #4]
 80051f4:	2800      	cmp	r0, #0
 80051f6:	d13b      	bne.n	8005270 <_dtoa_r+0x320>
 80051f8:	4b11      	ldr	r3, [pc, #68]	; (8005240 <_dtoa_r+0x2f0>)
 80051fa:	4602      	mov	r2, r0
 80051fc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8005200:	e6c0      	b.n	8004f84 <_dtoa_r+0x34>
 8005202:	2301      	movs	r3, #1
 8005204:	e7df      	b.n	80051c6 <_dtoa_r+0x276>
 8005206:	bf00      	nop
 8005208:	636f4361 	.word	0x636f4361
 800520c:	3fd287a7 	.word	0x3fd287a7
 8005210:	8b60c8b3 	.word	0x8b60c8b3
 8005214:	3fc68a28 	.word	0x3fc68a28
 8005218:	509f79fb 	.word	0x509f79fb
 800521c:	3fd34413 	.word	0x3fd34413
 8005220:	08008b9e 	.word	0x08008b9e
 8005224:	08008bb5 	.word	0x08008bb5
 8005228:	7ff00000 	.word	0x7ff00000
 800522c:	08008b9a 	.word	0x08008b9a
 8005230:	08008b91 	.word	0x08008b91
 8005234:	08008a15 	.word	0x08008a15
 8005238:	3ff80000 	.word	0x3ff80000
 800523c:	08008d88 	.word	0x08008d88
 8005240:	08008c10 	.word	0x08008c10
 8005244:	2501      	movs	r5, #1
 8005246:	2300      	movs	r3, #0
 8005248:	9306      	str	r3, [sp, #24]
 800524a:	9508      	str	r5, [sp, #32]
 800524c:	f04f 33ff 	mov.w	r3, #4294967295
 8005250:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8005254:	2200      	movs	r2, #0
 8005256:	2312      	movs	r3, #18
 8005258:	e7b0      	b.n	80051bc <_dtoa_r+0x26c>
 800525a:	2301      	movs	r3, #1
 800525c:	9308      	str	r3, [sp, #32]
 800525e:	e7f5      	b.n	800524c <_dtoa_r+0x2fc>
 8005260:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005262:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8005266:	e7b8      	b.n	80051da <_dtoa_r+0x28a>
 8005268:	3101      	adds	r1, #1
 800526a:	6041      	str	r1, [r0, #4]
 800526c:	0052      	lsls	r2, r2, #1
 800526e:	e7b8      	b.n	80051e2 <_dtoa_r+0x292>
 8005270:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005272:	9a01      	ldr	r2, [sp, #4]
 8005274:	601a      	str	r2, [r3, #0]
 8005276:	9b03      	ldr	r3, [sp, #12]
 8005278:	2b0e      	cmp	r3, #14
 800527a:	f200 809d 	bhi.w	80053b8 <_dtoa_r+0x468>
 800527e:	2d00      	cmp	r5, #0
 8005280:	f000 809a 	beq.w	80053b8 <_dtoa_r+0x468>
 8005284:	9b00      	ldr	r3, [sp, #0]
 8005286:	2b00      	cmp	r3, #0
 8005288:	dd32      	ble.n	80052f0 <_dtoa_r+0x3a0>
 800528a:	4ab7      	ldr	r2, [pc, #732]	; (8005568 <_dtoa_r+0x618>)
 800528c:	f003 030f 	and.w	r3, r3, #15
 8005290:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8005294:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005298:	9b00      	ldr	r3, [sp, #0]
 800529a:	05d8      	lsls	r0, r3, #23
 800529c:	ea4f 1723 	mov.w	r7, r3, asr #4
 80052a0:	d516      	bpl.n	80052d0 <_dtoa_r+0x380>
 80052a2:	4bb2      	ldr	r3, [pc, #712]	; (800556c <_dtoa_r+0x61c>)
 80052a4:	ec51 0b19 	vmov	r0, r1, d9
 80052a8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80052ac:	f7fb fad6 	bl	800085c <__aeabi_ddiv>
 80052b0:	f007 070f 	and.w	r7, r7, #15
 80052b4:	4682      	mov	sl, r0
 80052b6:	468b      	mov	fp, r1
 80052b8:	2503      	movs	r5, #3
 80052ba:	4eac      	ldr	r6, [pc, #688]	; (800556c <_dtoa_r+0x61c>)
 80052bc:	b957      	cbnz	r7, 80052d4 <_dtoa_r+0x384>
 80052be:	4642      	mov	r2, r8
 80052c0:	464b      	mov	r3, r9
 80052c2:	4650      	mov	r0, sl
 80052c4:	4659      	mov	r1, fp
 80052c6:	f7fb fac9 	bl	800085c <__aeabi_ddiv>
 80052ca:	4682      	mov	sl, r0
 80052cc:	468b      	mov	fp, r1
 80052ce:	e028      	b.n	8005322 <_dtoa_r+0x3d2>
 80052d0:	2502      	movs	r5, #2
 80052d2:	e7f2      	b.n	80052ba <_dtoa_r+0x36a>
 80052d4:	07f9      	lsls	r1, r7, #31
 80052d6:	d508      	bpl.n	80052ea <_dtoa_r+0x39a>
 80052d8:	4640      	mov	r0, r8
 80052da:	4649      	mov	r1, r9
 80052dc:	e9d6 2300 	ldrd	r2, r3, [r6]
 80052e0:	f7fb f992 	bl	8000608 <__aeabi_dmul>
 80052e4:	3501      	adds	r5, #1
 80052e6:	4680      	mov	r8, r0
 80052e8:	4689      	mov	r9, r1
 80052ea:	107f      	asrs	r7, r7, #1
 80052ec:	3608      	adds	r6, #8
 80052ee:	e7e5      	b.n	80052bc <_dtoa_r+0x36c>
 80052f0:	f000 809b 	beq.w	800542a <_dtoa_r+0x4da>
 80052f4:	9b00      	ldr	r3, [sp, #0]
 80052f6:	4f9d      	ldr	r7, [pc, #628]	; (800556c <_dtoa_r+0x61c>)
 80052f8:	425e      	negs	r6, r3
 80052fa:	4b9b      	ldr	r3, [pc, #620]	; (8005568 <_dtoa_r+0x618>)
 80052fc:	f006 020f 	and.w	r2, r6, #15
 8005300:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005304:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005308:	ec51 0b19 	vmov	r0, r1, d9
 800530c:	f7fb f97c 	bl	8000608 <__aeabi_dmul>
 8005310:	1136      	asrs	r6, r6, #4
 8005312:	4682      	mov	sl, r0
 8005314:	468b      	mov	fp, r1
 8005316:	2300      	movs	r3, #0
 8005318:	2502      	movs	r5, #2
 800531a:	2e00      	cmp	r6, #0
 800531c:	d17a      	bne.n	8005414 <_dtoa_r+0x4c4>
 800531e:	2b00      	cmp	r3, #0
 8005320:	d1d3      	bne.n	80052ca <_dtoa_r+0x37a>
 8005322:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005324:	2b00      	cmp	r3, #0
 8005326:	f000 8082 	beq.w	800542e <_dtoa_r+0x4de>
 800532a:	4b91      	ldr	r3, [pc, #580]	; (8005570 <_dtoa_r+0x620>)
 800532c:	2200      	movs	r2, #0
 800532e:	4650      	mov	r0, sl
 8005330:	4659      	mov	r1, fp
 8005332:	f7fb fbdb 	bl	8000aec <__aeabi_dcmplt>
 8005336:	2800      	cmp	r0, #0
 8005338:	d079      	beq.n	800542e <_dtoa_r+0x4de>
 800533a:	9b03      	ldr	r3, [sp, #12]
 800533c:	2b00      	cmp	r3, #0
 800533e:	d076      	beq.n	800542e <_dtoa_r+0x4de>
 8005340:	9b02      	ldr	r3, [sp, #8]
 8005342:	2b00      	cmp	r3, #0
 8005344:	dd36      	ble.n	80053b4 <_dtoa_r+0x464>
 8005346:	9b00      	ldr	r3, [sp, #0]
 8005348:	4650      	mov	r0, sl
 800534a:	4659      	mov	r1, fp
 800534c:	1e5f      	subs	r7, r3, #1
 800534e:	2200      	movs	r2, #0
 8005350:	4b88      	ldr	r3, [pc, #544]	; (8005574 <_dtoa_r+0x624>)
 8005352:	f7fb f959 	bl	8000608 <__aeabi_dmul>
 8005356:	9e02      	ldr	r6, [sp, #8]
 8005358:	4682      	mov	sl, r0
 800535a:	468b      	mov	fp, r1
 800535c:	3501      	adds	r5, #1
 800535e:	4628      	mov	r0, r5
 8005360:	f7fb f8e8 	bl	8000534 <__aeabi_i2d>
 8005364:	4652      	mov	r2, sl
 8005366:	465b      	mov	r3, fp
 8005368:	f7fb f94e 	bl	8000608 <__aeabi_dmul>
 800536c:	4b82      	ldr	r3, [pc, #520]	; (8005578 <_dtoa_r+0x628>)
 800536e:	2200      	movs	r2, #0
 8005370:	f7fa ff94 	bl	800029c <__adddf3>
 8005374:	46d0      	mov	r8, sl
 8005376:	46d9      	mov	r9, fp
 8005378:	4682      	mov	sl, r0
 800537a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800537e:	2e00      	cmp	r6, #0
 8005380:	d158      	bne.n	8005434 <_dtoa_r+0x4e4>
 8005382:	4b7e      	ldr	r3, [pc, #504]	; (800557c <_dtoa_r+0x62c>)
 8005384:	2200      	movs	r2, #0
 8005386:	4640      	mov	r0, r8
 8005388:	4649      	mov	r1, r9
 800538a:	f7fa ff85 	bl	8000298 <__aeabi_dsub>
 800538e:	4652      	mov	r2, sl
 8005390:	465b      	mov	r3, fp
 8005392:	4680      	mov	r8, r0
 8005394:	4689      	mov	r9, r1
 8005396:	f7fb fbc7 	bl	8000b28 <__aeabi_dcmpgt>
 800539a:	2800      	cmp	r0, #0
 800539c:	f040 8295 	bne.w	80058ca <_dtoa_r+0x97a>
 80053a0:	4652      	mov	r2, sl
 80053a2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 80053a6:	4640      	mov	r0, r8
 80053a8:	4649      	mov	r1, r9
 80053aa:	f7fb fb9f 	bl	8000aec <__aeabi_dcmplt>
 80053ae:	2800      	cmp	r0, #0
 80053b0:	f040 8289 	bne.w	80058c6 <_dtoa_r+0x976>
 80053b4:	ec5b ab19 	vmov	sl, fp, d9
 80053b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	f2c0 8148 	blt.w	8005650 <_dtoa_r+0x700>
 80053c0:	9a00      	ldr	r2, [sp, #0]
 80053c2:	2a0e      	cmp	r2, #14
 80053c4:	f300 8144 	bgt.w	8005650 <_dtoa_r+0x700>
 80053c8:	4b67      	ldr	r3, [pc, #412]	; (8005568 <_dtoa_r+0x618>)
 80053ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80053ce:	e9d3 8900 	ldrd	r8, r9, [r3]
 80053d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80053d4:	2b00      	cmp	r3, #0
 80053d6:	f280 80d5 	bge.w	8005584 <_dtoa_r+0x634>
 80053da:	9b03      	ldr	r3, [sp, #12]
 80053dc:	2b00      	cmp	r3, #0
 80053de:	f300 80d1 	bgt.w	8005584 <_dtoa_r+0x634>
 80053e2:	f040 826f 	bne.w	80058c4 <_dtoa_r+0x974>
 80053e6:	4b65      	ldr	r3, [pc, #404]	; (800557c <_dtoa_r+0x62c>)
 80053e8:	2200      	movs	r2, #0
 80053ea:	4640      	mov	r0, r8
 80053ec:	4649      	mov	r1, r9
 80053ee:	f7fb f90b 	bl	8000608 <__aeabi_dmul>
 80053f2:	4652      	mov	r2, sl
 80053f4:	465b      	mov	r3, fp
 80053f6:	f7fb fb8d 	bl	8000b14 <__aeabi_dcmpge>
 80053fa:	9e03      	ldr	r6, [sp, #12]
 80053fc:	4637      	mov	r7, r6
 80053fe:	2800      	cmp	r0, #0
 8005400:	f040 8245 	bne.w	800588e <_dtoa_r+0x93e>
 8005404:	9d01      	ldr	r5, [sp, #4]
 8005406:	2331      	movs	r3, #49	; 0x31
 8005408:	f805 3b01 	strb.w	r3, [r5], #1
 800540c:	9b00      	ldr	r3, [sp, #0]
 800540e:	3301      	adds	r3, #1
 8005410:	9300      	str	r3, [sp, #0]
 8005412:	e240      	b.n	8005896 <_dtoa_r+0x946>
 8005414:	07f2      	lsls	r2, r6, #31
 8005416:	d505      	bpl.n	8005424 <_dtoa_r+0x4d4>
 8005418:	e9d7 2300 	ldrd	r2, r3, [r7]
 800541c:	f7fb f8f4 	bl	8000608 <__aeabi_dmul>
 8005420:	3501      	adds	r5, #1
 8005422:	2301      	movs	r3, #1
 8005424:	1076      	asrs	r6, r6, #1
 8005426:	3708      	adds	r7, #8
 8005428:	e777      	b.n	800531a <_dtoa_r+0x3ca>
 800542a:	2502      	movs	r5, #2
 800542c:	e779      	b.n	8005322 <_dtoa_r+0x3d2>
 800542e:	9f00      	ldr	r7, [sp, #0]
 8005430:	9e03      	ldr	r6, [sp, #12]
 8005432:	e794      	b.n	800535e <_dtoa_r+0x40e>
 8005434:	9901      	ldr	r1, [sp, #4]
 8005436:	4b4c      	ldr	r3, [pc, #304]	; (8005568 <_dtoa_r+0x618>)
 8005438:	4431      	add	r1, r6
 800543a:	910d      	str	r1, [sp, #52]	; 0x34
 800543c:	9908      	ldr	r1, [sp, #32]
 800543e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8005442:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8005446:	2900      	cmp	r1, #0
 8005448:	d043      	beq.n	80054d2 <_dtoa_r+0x582>
 800544a:	494d      	ldr	r1, [pc, #308]	; (8005580 <_dtoa_r+0x630>)
 800544c:	2000      	movs	r0, #0
 800544e:	f7fb fa05 	bl	800085c <__aeabi_ddiv>
 8005452:	4652      	mov	r2, sl
 8005454:	465b      	mov	r3, fp
 8005456:	f7fa ff1f 	bl	8000298 <__aeabi_dsub>
 800545a:	9d01      	ldr	r5, [sp, #4]
 800545c:	4682      	mov	sl, r0
 800545e:	468b      	mov	fp, r1
 8005460:	4649      	mov	r1, r9
 8005462:	4640      	mov	r0, r8
 8005464:	f7fb fb80 	bl	8000b68 <__aeabi_d2iz>
 8005468:	4606      	mov	r6, r0
 800546a:	f7fb f863 	bl	8000534 <__aeabi_i2d>
 800546e:	4602      	mov	r2, r0
 8005470:	460b      	mov	r3, r1
 8005472:	4640      	mov	r0, r8
 8005474:	4649      	mov	r1, r9
 8005476:	f7fa ff0f 	bl	8000298 <__aeabi_dsub>
 800547a:	3630      	adds	r6, #48	; 0x30
 800547c:	f805 6b01 	strb.w	r6, [r5], #1
 8005480:	4652      	mov	r2, sl
 8005482:	465b      	mov	r3, fp
 8005484:	4680      	mov	r8, r0
 8005486:	4689      	mov	r9, r1
 8005488:	f7fb fb30 	bl	8000aec <__aeabi_dcmplt>
 800548c:	2800      	cmp	r0, #0
 800548e:	d163      	bne.n	8005558 <_dtoa_r+0x608>
 8005490:	4642      	mov	r2, r8
 8005492:	464b      	mov	r3, r9
 8005494:	4936      	ldr	r1, [pc, #216]	; (8005570 <_dtoa_r+0x620>)
 8005496:	2000      	movs	r0, #0
 8005498:	f7fa fefe 	bl	8000298 <__aeabi_dsub>
 800549c:	4652      	mov	r2, sl
 800549e:	465b      	mov	r3, fp
 80054a0:	f7fb fb24 	bl	8000aec <__aeabi_dcmplt>
 80054a4:	2800      	cmp	r0, #0
 80054a6:	f040 80b5 	bne.w	8005614 <_dtoa_r+0x6c4>
 80054aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80054ac:	429d      	cmp	r5, r3
 80054ae:	d081      	beq.n	80053b4 <_dtoa_r+0x464>
 80054b0:	4b30      	ldr	r3, [pc, #192]	; (8005574 <_dtoa_r+0x624>)
 80054b2:	2200      	movs	r2, #0
 80054b4:	4650      	mov	r0, sl
 80054b6:	4659      	mov	r1, fp
 80054b8:	f7fb f8a6 	bl	8000608 <__aeabi_dmul>
 80054bc:	4b2d      	ldr	r3, [pc, #180]	; (8005574 <_dtoa_r+0x624>)
 80054be:	4682      	mov	sl, r0
 80054c0:	468b      	mov	fp, r1
 80054c2:	4640      	mov	r0, r8
 80054c4:	4649      	mov	r1, r9
 80054c6:	2200      	movs	r2, #0
 80054c8:	f7fb f89e 	bl	8000608 <__aeabi_dmul>
 80054cc:	4680      	mov	r8, r0
 80054ce:	4689      	mov	r9, r1
 80054d0:	e7c6      	b.n	8005460 <_dtoa_r+0x510>
 80054d2:	4650      	mov	r0, sl
 80054d4:	4659      	mov	r1, fp
 80054d6:	f7fb f897 	bl	8000608 <__aeabi_dmul>
 80054da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80054dc:	9d01      	ldr	r5, [sp, #4]
 80054de:	930f      	str	r3, [sp, #60]	; 0x3c
 80054e0:	4682      	mov	sl, r0
 80054e2:	468b      	mov	fp, r1
 80054e4:	4649      	mov	r1, r9
 80054e6:	4640      	mov	r0, r8
 80054e8:	f7fb fb3e 	bl	8000b68 <__aeabi_d2iz>
 80054ec:	4606      	mov	r6, r0
 80054ee:	f7fb f821 	bl	8000534 <__aeabi_i2d>
 80054f2:	3630      	adds	r6, #48	; 0x30
 80054f4:	4602      	mov	r2, r0
 80054f6:	460b      	mov	r3, r1
 80054f8:	4640      	mov	r0, r8
 80054fa:	4649      	mov	r1, r9
 80054fc:	f7fa fecc 	bl	8000298 <__aeabi_dsub>
 8005500:	f805 6b01 	strb.w	r6, [r5], #1
 8005504:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005506:	429d      	cmp	r5, r3
 8005508:	4680      	mov	r8, r0
 800550a:	4689      	mov	r9, r1
 800550c:	f04f 0200 	mov.w	r2, #0
 8005510:	d124      	bne.n	800555c <_dtoa_r+0x60c>
 8005512:	4b1b      	ldr	r3, [pc, #108]	; (8005580 <_dtoa_r+0x630>)
 8005514:	4650      	mov	r0, sl
 8005516:	4659      	mov	r1, fp
 8005518:	f7fa fec0 	bl	800029c <__adddf3>
 800551c:	4602      	mov	r2, r0
 800551e:	460b      	mov	r3, r1
 8005520:	4640      	mov	r0, r8
 8005522:	4649      	mov	r1, r9
 8005524:	f7fb fb00 	bl	8000b28 <__aeabi_dcmpgt>
 8005528:	2800      	cmp	r0, #0
 800552a:	d173      	bne.n	8005614 <_dtoa_r+0x6c4>
 800552c:	4652      	mov	r2, sl
 800552e:	465b      	mov	r3, fp
 8005530:	4913      	ldr	r1, [pc, #76]	; (8005580 <_dtoa_r+0x630>)
 8005532:	2000      	movs	r0, #0
 8005534:	f7fa feb0 	bl	8000298 <__aeabi_dsub>
 8005538:	4602      	mov	r2, r0
 800553a:	460b      	mov	r3, r1
 800553c:	4640      	mov	r0, r8
 800553e:	4649      	mov	r1, r9
 8005540:	f7fb fad4 	bl	8000aec <__aeabi_dcmplt>
 8005544:	2800      	cmp	r0, #0
 8005546:	f43f af35 	beq.w	80053b4 <_dtoa_r+0x464>
 800554a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800554c:	1e6b      	subs	r3, r5, #1
 800554e:	930f      	str	r3, [sp, #60]	; 0x3c
 8005550:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005554:	2b30      	cmp	r3, #48	; 0x30
 8005556:	d0f8      	beq.n	800554a <_dtoa_r+0x5fa>
 8005558:	9700      	str	r7, [sp, #0]
 800555a:	e049      	b.n	80055f0 <_dtoa_r+0x6a0>
 800555c:	4b05      	ldr	r3, [pc, #20]	; (8005574 <_dtoa_r+0x624>)
 800555e:	f7fb f853 	bl	8000608 <__aeabi_dmul>
 8005562:	4680      	mov	r8, r0
 8005564:	4689      	mov	r9, r1
 8005566:	e7bd      	b.n	80054e4 <_dtoa_r+0x594>
 8005568:	08008d88 	.word	0x08008d88
 800556c:	08008d60 	.word	0x08008d60
 8005570:	3ff00000 	.word	0x3ff00000
 8005574:	40240000 	.word	0x40240000
 8005578:	401c0000 	.word	0x401c0000
 800557c:	40140000 	.word	0x40140000
 8005580:	3fe00000 	.word	0x3fe00000
 8005584:	9d01      	ldr	r5, [sp, #4]
 8005586:	4656      	mov	r6, sl
 8005588:	465f      	mov	r7, fp
 800558a:	4642      	mov	r2, r8
 800558c:	464b      	mov	r3, r9
 800558e:	4630      	mov	r0, r6
 8005590:	4639      	mov	r1, r7
 8005592:	f7fb f963 	bl	800085c <__aeabi_ddiv>
 8005596:	f7fb fae7 	bl	8000b68 <__aeabi_d2iz>
 800559a:	4682      	mov	sl, r0
 800559c:	f7fa ffca 	bl	8000534 <__aeabi_i2d>
 80055a0:	4642      	mov	r2, r8
 80055a2:	464b      	mov	r3, r9
 80055a4:	f7fb f830 	bl	8000608 <__aeabi_dmul>
 80055a8:	4602      	mov	r2, r0
 80055aa:	460b      	mov	r3, r1
 80055ac:	4630      	mov	r0, r6
 80055ae:	4639      	mov	r1, r7
 80055b0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 80055b4:	f7fa fe70 	bl	8000298 <__aeabi_dsub>
 80055b8:	f805 6b01 	strb.w	r6, [r5], #1
 80055bc:	9e01      	ldr	r6, [sp, #4]
 80055be:	9f03      	ldr	r7, [sp, #12]
 80055c0:	1bae      	subs	r6, r5, r6
 80055c2:	42b7      	cmp	r7, r6
 80055c4:	4602      	mov	r2, r0
 80055c6:	460b      	mov	r3, r1
 80055c8:	d135      	bne.n	8005636 <_dtoa_r+0x6e6>
 80055ca:	f7fa fe67 	bl	800029c <__adddf3>
 80055ce:	4642      	mov	r2, r8
 80055d0:	464b      	mov	r3, r9
 80055d2:	4606      	mov	r6, r0
 80055d4:	460f      	mov	r7, r1
 80055d6:	f7fb faa7 	bl	8000b28 <__aeabi_dcmpgt>
 80055da:	b9d0      	cbnz	r0, 8005612 <_dtoa_r+0x6c2>
 80055dc:	4642      	mov	r2, r8
 80055de:	464b      	mov	r3, r9
 80055e0:	4630      	mov	r0, r6
 80055e2:	4639      	mov	r1, r7
 80055e4:	f7fb fa78 	bl	8000ad8 <__aeabi_dcmpeq>
 80055e8:	b110      	cbz	r0, 80055f0 <_dtoa_r+0x6a0>
 80055ea:	f01a 0f01 	tst.w	sl, #1
 80055ee:	d110      	bne.n	8005612 <_dtoa_r+0x6c2>
 80055f0:	4620      	mov	r0, r4
 80055f2:	ee18 1a10 	vmov	r1, s16
 80055f6:	f000 ff6d 	bl	80064d4 <_Bfree>
 80055fa:	2300      	movs	r3, #0
 80055fc:	9800      	ldr	r0, [sp, #0]
 80055fe:	702b      	strb	r3, [r5, #0]
 8005600:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005602:	3001      	adds	r0, #1
 8005604:	6018      	str	r0, [r3, #0]
 8005606:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005608:	2b00      	cmp	r3, #0
 800560a:	f43f acf1 	beq.w	8004ff0 <_dtoa_r+0xa0>
 800560e:	601d      	str	r5, [r3, #0]
 8005610:	e4ee      	b.n	8004ff0 <_dtoa_r+0xa0>
 8005612:	9f00      	ldr	r7, [sp, #0]
 8005614:	462b      	mov	r3, r5
 8005616:	461d      	mov	r5, r3
 8005618:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800561c:	2a39      	cmp	r2, #57	; 0x39
 800561e:	d106      	bne.n	800562e <_dtoa_r+0x6de>
 8005620:	9a01      	ldr	r2, [sp, #4]
 8005622:	429a      	cmp	r2, r3
 8005624:	d1f7      	bne.n	8005616 <_dtoa_r+0x6c6>
 8005626:	9901      	ldr	r1, [sp, #4]
 8005628:	2230      	movs	r2, #48	; 0x30
 800562a:	3701      	adds	r7, #1
 800562c:	700a      	strb	r2, [r1, #0]
 800562e:	781a      	ldrb	r2, [r3, #0]
 8005630:	3201      	adds	r2, #1
 8005632:	701a      	strb	r2, [r3, #0]
 8005634:	e790      	b.n	8005558 <_dtoa_r+0x608>
 8005636:	4ba6      	ldr	r3, [pc, #664]	; (80058d0 <_dtoa_r+0x980>)
 8005638:	2200      	movs	r2, #0
 800563a:	f7fa ffe5 	bl	8000608 <__aeabi_dmul>
 800563e:	2200      	movs	r2, #0
 8005640:	2300      	movs	r3, #0
 8005642:	4606      	mov	r6, r0
 8005644:	460f      	mov	r7, r1
 8005646:	f7fb fa47 	bl	8000ad8 <__aeabi_dcmpeq>
 800564a:	2800      	cmp	r0, #0
 800564c:	d09d      	beq.n	800558a <_dtoa_r+0x63a>
 800564e:	e7cf      	b.n	80055f0 <_dtoa_r+0x6a0>
 8005650:	9a08      	ldr	r2, [sp, #32]
 8005652:	2a00      	cmp	r2, #0
 8005654:	f000 80d7 	beq.w	8005806 <_dtoa_r+0x8b6>
 8005658:	9a06      	ldr	r2, [sp, #24]
 800565a:	2a01      	cmp	r2, #1
 800565c:	f300 80ba 	bgt.w	80057d4 <_dtoa_r+0x884>
 8005660:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005662:	2a00      	cmp	r2, #0
 8005664:	f000 80b2 	beq.w	80057cc <_dtoa_r+0x87c>
 8005668:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800566c:	9e07      	ldr	r6, [sp, #28]
 800566e:	9d04      	ldr	r5, [sp, #16]
 8005670:	9a04      	ldr	r2, [sp, #16]
 8005672:	441a      	add	r2, r3
 8005674:	9204      	str	r2, [sp, #16]
 8005676:	9a05      	ldr	r2, [sp, #20]
 8005678:	2101      	movs	r1, #1
 800567a:	441a      	add	r2, r3
 800567c:	4620      	mov	r0, r4
 800567e:	9205      	str	r2, [sp, #20]
 8005680:	f001 f82a 	bl	80066d8 <__i2b>
 8005684:	4607      	mov	r7, r0
 8005686:	2d00      	cmp	r5, #0
 8005688:	dd0c      	ble.n	80056a4 <_dtoa_r+0x754>
 800568a:	9b05      	ldr	r3, [sp, #20]
 800568c:	2b00      	cmp	r3, #0
 800568e:	dd09      	ble.n	80056a4 <_dtoa_r+0x754>
 8005690:	42ab      	cmp	r3, r5
 8005692:	9a04      	ldr	r2, [sp, #16]
 8005694:	bfa8      	it	ge
 8005696:	462b      	movge	r3, r5
 8005698:	1ad2      	subs	r2, r2, r3
 800569a:	9204      	str	r2, [sp, #16]
 800569c:	9a05      	ldr	r2, [sp, #20]
 800569e:	1aed      	subs	r5, r5, r3
 80056a0:	1ad3      	subs	r3, r2, r3
 80056a2:	9305      	str	r3, [sp, #20]
 80056a4:	9b07      	ldr	r3, [sp, #28]
 80056a6:	b31b      	cbz	r3, 80056f0 <_dtoa_r+0x7a0>
 80056a8:	9b08      	ldr	r3, [sp, #32]
 80056aa:	2b00      	cmp	r3, #0
 80056ac:	f000 80af 	beq.w	800580e <_dtoa_r+0x8be>
 80056b0:	2e00      	cmp	r6, #0
 80056b2:	dd13      	ble.n	80056dc <_dtoa_r+0x78c>
 80056b4:	4639      	mov	r1, r7
 80056b6:	4632      	mov	r2, r6
 80056b8:	4620      	mov	r0, r4
 80056ba:	f001 f8cd 	bl	8006858 <__pow5mult>
 80056be:	ee18 2a10 	vmov	r2, s16
 80056c2:	4601      	mov	r1, r0
 80056c4:	4607      	mov	r7, r0
 80056c6:	4620      	mov	r0, r4
 80056c8:	f001 f81c 	bl	8006704 <__multiply>
 80056cc:	ee18 1a10 	vmov	r1, s16
 80056d0:	4680      	mov	r8, r0
 80056d2:	4620      	mov	r0, r4
 80056d4:	f000 fefe 	bl	80064d4 <_Bfree>
 80056d8:	ee08 8a10 	vmov	s16, r8
 80056dc:	9b07      	ldr	r3, [sp, #28]
 80056de:	1b9a      	subs	r2, r3, r6
 80056e0:	d006      	beq.n	80056f0 <_dtoa_r+0x7a0>
 80056e2:	ee18 1a10 	vmov	r1, s16
 80056e6:	4620      	mov	r0, r4
 80056e8:	f001 f8b6 	bl	8006858 <__pow5mult>
 80056ec:	ee08 0a10 	vmov	s16, r0
 80056f0:	2101      	movs	r1, #1
 80056f2:	4620      	mov	r0, r4
 80056f4:	f000 fff0 	bl	80066d8 <__i2b>
 80056f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	4606      	mov	r6, r0
 80056fe:	f340 8088 	ble.w	8005812 <_dtoa_r+0x8c2>
 8005702:	461a      	mov	r2, r3
 8005704:	4601      	mov	r1, r0
 8005706:	4620      	mov	r0, r4
 8005708:	f001 f8a6 	bl	8006858 <__pow5mult>
 800570c:	9b06      	ldr	r3, [sp, #24]
 800570e:	2b01      	cmp	r3, #1
 8005710:	4606      	mov	r6, r0
 8005712:	f340 8081 	ble.w	8005818 <_dtoa_r+0x8c8>
 8005716:	f04f 0800 	mov.w	r8, #0
 800571a:	6933      	ldr	r3, [r6, #16]
 800571c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8005720:	6918      	ldr	r0, [r3, #16]
 8005722:	f000 ff89 	bl	8006638 <__hi0bits>
 8005726:	f1c0 0020 	rsb	r0, r0, #32
 800572a:	9b05      	ldr	r3, [sp, #20]
 800572c:	4418      	add	r0, r3
 800572e:	f010 001f 	ands.w	r0, r0, #31
 8005732:	f000 8092 	beq.w	800585a <_dtoa_r+0x90a>
 8005736:	f1c0 0320 	rsb	r3, r0, #32
 800573a:	2b04      	cmp	r3, #4
 800573c:	f340 808a 	ble.w	8005854 <_dtoa_r+0x904>
 8005740:	f1c0 001c 	rsb	r0, r0, #28
 8005744:	9b04      	ldr	r3, [sp, #16]
 8005746:	4403      	add	r3, r0
 8005748:	9304      	str	r3, [sp, #16]
 800574a:	9b05      	ldr	r3, [sp, #20]
 800574c:	4403      	add	r3, r0
 800574e:	4405      	add	r5, r0
 8005750:	9305      	str	r3, [sp, #20]
 8005752:	9b04      	ldr	r3, [sp, #16]
 8005754:	2b00      	cmp	r3, #0
 8005756:	dd07      	ble.n	8005768 <_dtoa_r+0x818>
 8005758:	ee18 1a10 	vmov	r1, s16
 800575c:	461a      	mov	r2, r3
 800575e:	4620      	mov	r0, r4
 8005760:	f001 f8d4 	bl	800690c <__lshift>
 8005764:	ee08 0a10 	vmov	s16, r0
 8005768:	9b05      	ldr	r3, [sp, #20]
 800576a:	2b00      	cmp	r3, #0
 800576c:	dd05      	ble.n	800577a <_dtoa_r+0x82a>
 800576e:	4631      	mov	r1, r6
 8005770:	461a      	mov	r2, r3
 8005772:	4620      	mov	r0, r4
 8005774:	f001 f8ca 	bl	800690c <__lshift>
 8005778:	4606      	mov	r6, r0
 800577a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800577c:	2b00      	cmp	r3, #0
 800577e:	d06e      	beq.n	800585e <_dtoa_r+0x90e>
 8005780:	ee18 0a10 	vmov	r0, s16
 8005784:	4631      	mov	r1, r6
 8005786:	f001 f931 	bl	80069ec <__mcmp>
 800578a:	2800      	cmp	r0, #0
 800578c:	da67      	bge.n	800585e <_dtoa_r+0x90e>
 800578e:	9b00      	ldr	r3, [sp, #0]
 8005790:	3b01      	subs	r3, #1
 8005792:	ee18 1a10 	vmov	r1, s16
 8005796:	9300      	str	r3, [sp, #0]
 8005798:	220a      	movs	r2, #10
 800579a:	2300      	movs	r3, #0
 800579c:	4620      	mov	r0, r4
 800579e:	f000 febb 	bl	8006518 <__multadd>
 80057a2:	9b08      	ldr	r3, [sp, #32]
 80057a4:	ee08 0a10 	vmov	s16, r0
 80057a8:	2b00      	cmp	r3, #0
 80057aa:	f000 81b1 	beq.w	8005b10 <_dtoa_r+0xbc0>
 80057ae:	2300      	movs	r3, #0
 80057b0:	4639      	mov	r1, r7
 80057b2:	220a      	movs	r2, #10
 80057b4:	4620      	mov	r0, r4
 80057b6:	f000 feaf 	bl	8006518 <__multadd>
 80057ba:	9b02      	ldr	r3, [sp, #8]
 80057bc:	2b00      	cmp	r3, #0
 80057be:	4607      	mov	r7, r0
 80057c0:	f300 808e 	bgt.w	80058e0 <_dtoa_r+0x990>
 80057c4:	9b06      	ldr	r3, [sp, #24]
 80057c6:	2b02      	cmp	r3, #2
 80057c8:	dc51      	bgt.n	800586e <_dtoa_r+0x91e>
 80057ca:	e089      	b.n	80058e0 <_dtoa_r+0x990>
 80057cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80057ce:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80057d2:	e74b      	b.n	800566c <_dtoa_r+0x71c>
 80057d4:	9b03      	ldr	r3, [sp, #12]
 80057d6:	1e5e      	subs	r6, r3, #1
 80057d8:	9b07      	ldr	r3, [sp, #28]
 80057da:	42b3      	cmp	r3, r6
 80057dc:	bfbf      	itttt	lt
 80057de:	9b07      	ldrlt	r3, [sp, #28]
 80057e0:	9607      	strlt	r6, [sp, #28]
 80057e2:	1af2      	sublt	r2, r6, r3
 80057e4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 80057e6:	bfb6      	itet	lt
 80057e8:	189b      	addlt	r3, r3, r2
 80057ea:	1b9e      	subge	r6, r3, r6
 80057ec:	930a      	strlt	r3, [sp, #40]	; 0x28
 80057ee:	9b03      	ldr	r3, [sp, #12]
 80057f0:	bfb8      	it	lt
 80057f2:	2600      	movlt	r6, #0
 80057f4:	2b00      	cmp	r3, #0
 80057f6:	bfb7      	itett	lt
 80057f8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 80057fc:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8005800:	1a9d      	sublt	r5, r3, r2
 8005802:	2300      	movlt	r3, #0
 8005804:	e734      	b.n	8005670 <_dtoa_r+0x720>
 8005806:	9e07      	ldr	r6, [sp, #28]
 8005808:	9d04      	ldr	r5, [sp, #16]
 800580a:	9f08      	ldr	r7, [sp, #32]
 800580c:	e73b      	b.n	8005686 <_dtoa_r+0x736>
 800580e:	9a07      	ldr	r2, [sp, #28]
 8005810:	e767      	b.n	80056e2 <_dtoa_r+0x792>
 8005812:	9b06      	ldr	r3, [sp, #24]
 8005814:	2b01      	cmp	r3, #1
 8005816:	dc18      	bgt.n	800584a <_dtoa_r+0x8fa>
 8005818:	f1ba 0f00 	cmp.w	sl, #0
 800581c:	d115      	bne.n	800584a <_dtoa_r+0x8fa>
 800581e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005822:	b993      	cbnz	r3, 800584a <_dtoa_r+0x8fa>
 8005824:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8005828:	0d1b      	lsrs	r3, r3, #20
 800582a:	051b      	lsls	r3, r3, #20
 800582c:	b183      	cbz	r3, 8005850 <_dtoa_r+0x900>
 800582e:	9b04      	ldr	r3, [sp, #16]
 8005830:	3301      	adds	r3, #1
 8005832:	9304      	str	r3, [sp, #16]
 8005834:	9b05      	ldr	r3, [sp, #20]
 8005836:	3301      	adds	r3, #1
 8005838:	9305      	str	r3, [sp, #20]
 800583a:	f04f 0801 	mov.w	r8, #1
 800583e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005840:	2b00      	cmp	r3, #0
 8005842:	f47f af6a 	bne.w	800571a <_dtoa_r+0x7ca>
 8005846:	2001      	movs	r0, #1
 8005848:	e76f      	b.n	800572a <_dtoa_r+0x7da>
 800584a:	f04f 0800 	mov.w	r8, #0
 800584e:	e7f6      	b.n	800583e <_dtoa_r+0x8ee>
 8005850:	4698      	mov	r8, r3
 8005852:	e7f4      	b.n	800583e <_dtoa_r+0x8ee>
 8005854:	f43f af7d 	beq.w	8005752 <_dtoa_r+0x802>
 8005858:	4618      	mov	r0, r3
 800585a:	301c      	adds	r0, #28
 800585c:	e772      	b.n	8005744 <_dtoa_r+0x7f4>
 800585e:	9b03      	ldr	r3, [sp, #12]
 8005860:	2b00      	cmp	r3, #0
 8005862:	dc37      	bgt.n	80058d4 <_dtoa_r+0x984>
 8005864:	9b06      	ldr	r3, [sp, #24]
 8005866:	2b02      	cmp	r3, #2
 8005868:	dd34      	ble.n	80058d4 <_dtoa_r+0x984>
 800586a:	9b03      	ldr	r3, [sp, #12]
 800586c:	9302      	str	r3, [sp, #8]
 800586e:	9b02      	ldr	r3, [sp, #8]
 8005870:	b96b      	cbnz	r3, 800588e <_dtoa_r+0x93e>
 8005872:	4631      	mov	r1, r6
 8005874:	2205      	movs	r2, #5
 8005876:	4620      	mov	r0, r4
 8005878:	f000 fe4e 	bl	8006518 <__multadd>
 800587c:	4601      	mov	r1, r0
 800587e:	4606      	mov	r6, r0
 8005880:	ee18 0a10 	vmov	r0, s16
 8005884:	f001 f8b2 	bl	80069ec <__mcmp>
 8005888:	2800      	cmp	r0, #0
 800588a:	f73f adbb 	bgt.w	8005404 <_dtoa_r+0x4b4>
 800588e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005890:	9d01      	ldr	r5, [sp, #4]
 8005892:	43db      	mvns	r3, r3
 8005894:	9300      	str	r3, [sp, #0]
 8005896:	f04f 0800 	mov.w	r8, #0
 800589a:	4631      	mov	r1, r6
 800589c:	4620      	mov	r0, r4
 800589e:	f000 fe19 	bl	80064d4 <_Bfree>
 80058a2:	2f00      	cmp	r7, #0
 80058a4:	f43f aea4 	beq.w	80055f0 <_dtoa_r+0x6a0>
 80058a8:	f1b8 0f00 	cmp.w	r8, #0
 80058ac:	d005      	beq.n	80058ba <_dtoa_r+0x96a>
 80058ae:	45b8      	cmp	r8, r7
 80058b0:	d003      	beq.n	80058ba <_dtoa_r+0x96a>
 80058b2:	4641      	mov	r1, r8
 80058b4:	4620      	mov	r0, r4
 80058b6:	f000 fe0d 	bl	80064d4 <_Bfree>
 80058ba:	4639      	mov	r1, r7
 80058bc:	4620      	mov	r0, r4
 80058be:	f000 fe09 	bl	80064d4 <_Bfree>
 80058c2:	e695      	b.n	80055f0 <_dtoa_r+0x6a0>
 80058c4:	2600      	movs	r6, #0
 80058c6:	4637      	mov	r7, r6
 80058c8:	e7e1      	b.n	800588e <_dtoa_r+0x93e>
 80058ca:	9700      	str	r7, [sp, #0]
 80058cc:	4637      	mov	r7, r6
 80058ce:	e599      	b.n	8005404 <_dtoa_r+0x4b4>
 80058d0:	40240000 	.word	0x40240000
 80058d4:	9b08      	ldr	r3, [sp, #32]
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	f000 80ca 	beq.w	8005a70 <_dtoa_r+0xb20>
 80058dc:	9b03      	ldr	r3, [sp, #12]
 80058de:	9302      	str	r3, [sp, #8]
 80058e0:	2d00      	cmp	r5, #0
 80058e2:	dd05      	ble.n	80058f0 <_dtoa_r+0x9a0>
 80058e4:	4639      	mov	r1, r7
 80058e6:	462a      	mov	r2, r5
 80058e8:	4620      	mov	r0, r4
 80058ea:	f001 f80f 	bl	800690c <__lshift>
 80058ee:	4607      	mov	r7, r0
 80058f0:	f1b8 0f00 	cmp.w	r8, #0
 80058f4:	d05b      	beq.n	80059ae <_dtoa_r+0xa5e>
 80058f6:	6879      	ldr	r1, [r7, #4]
 80058f8:	4620      	mov	r0, r4
 80058fa:	f000 fdab 	bl	8006454 <_Balloc>
 80058fe:	4605      	mov	r5, r0
 8005900:	b928      	cbnz	r0, 800590e <_dtoa_r+0x9be>
 8005902:	4b87      	ldr	r3, [pc, #540]	; (8005b20 <_dtoa_r+0xbd0>)
 8005904:	4602      	mov	r2, r0
 8005906:	f240 21ea 	movw	r1, #746	; 0x2ea
 800590a:	f7ff bb3b 	b.w	8004f84 <_dtoa_r+0x34>
 800590e:	693a      	ldr	r2, [r7, #16]
 8005910:	3202      	adds	r2, #2
 8005912:	0092      	lsls	r2, r2, #2
 8005914:	f107 010c 	add.w	r1, r7, #12
 8005918:	300c      	adds	r0, #12
 800591a:	f000 fd8d 	bl	8006438 <memcpy>
 800591e:	2201      	movs	r2, #1
 8005920:	4629      	mov	r1, r5
 8005922:	4620      	mov	r0, r4
 8005924:	f000 fff2 	bl	800690c <__lshift>
 8005928:	9b01      	ldr	r3, [sp, #4]
 800592a:	f103 0901 	add.w	r9, r3, #1
 800592e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8005932:	4413      	add	r3, r2
 8005934:	9305      	str	r3, [sp, #20]
 8005936:	f00a 0301 	and.w	r3, sl, #1
 800593a:	46b8      	mov	r8, r7
 800593c:	9304      	str	r3, [sp, #16]
 800593e:	4607      	mov	r7, r0
 8005940:	4631      	mov	r1, r6
 8005942:	ee18 0a10 	vmov	r0, s16
 8005946:	f7ff fa77 	bl	8004e38 <quorem>
 800594a:	4641      	mov	r1, r8
 800594c:	9002      	str	r0, [sp, #8]
 800594e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8005952:	ee18 0a10 	vmov	r0, s16
 8005956:	f001 f849 	bl	80069ec <__mcmp>
 800595a:	463a      	mov	r2, r7
 800595c:	9003      	str	r0, [sp, #12]
 800595e:	4631      	mov	r1, r6
 8005960:	4620      	mov	r0, r4
 8005962:	f001 f85f 	bl	8006a24 <__mdiff>
 8005966:	68c2      	ldr	r2, [r0, #12]
 8005968:	f109 3bff 	add.w	fp, r9, #4294967295
 800596c:	4605      	mov	r5, r0
 800596e:	bb02      	cbnz	r2, 80059b2 <_dtoa_r+0xa62>
 8005970:	4601      	mov	r1, r0
 8005972:	ee18 0a10 	vmov	r0, s16
 8005976:	f001 f839 	bl	80069ec <__mcmp>
 800597a:	4602      	mov	r2, r0
 800597c:	4629      	mov	r1, r5
 800597e:	4620      	mov	r0, r4
 8005980:	9207      	str	r2, [sp, #28]
 8005982:	f000 fda7 	bl	80064d4 <_Bfree>
 8005986:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800598a:	ea43 0102 	orr.w	r1, r3, r2
 800598e:	9b04      	ldr	r3, [sp, #16]
 8005990:	430b      	orrs	r3, r1
 8005992:	464d      	mov	r5, r9
 8005994:	d10f      	bne.n	80059b6 <_dtoa_r+0xa66>
 8005996:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800599a:	d02a      	beq.n	80059f2 <_dtoa_r+0xaa2>
 800599c:	9b03      	ldr	r3, [sp, #12]
 800599e:	2b00      	cmp	r3, #0
 80059a0:	dd02      	ble.n	80059a8 <_dtoa_r+0xa58>
 80059a2:	9b02      	ldr	r3, [sp, #8]
 80059a4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 80059a8:	f88b a000 	strb.w	sl, [fp]
 80059ac:	e775      	b.n	800589a <_dtoa_r+0x94a>
 80059ae:	4638      	mov	r0, r7
 80059b0:	e7ba      	b.n	8005928 <_dtoa_r+0x9d8>
 80059b2:	2201      	movs	r2, #1
 80059b4:	e7e2      	b.n	800597c <_dtoa_r+0xa2c>
 80059b6:	9b03      	ldr	r3, [sp, #12]
 80059b8:	2b00      	cmp	r3, #0
 80059ba:	db04      	blt.n	80059c6 <_dtoa_r+0xa76>
 80059bc:	9906      	ldr	r1, [sp, #24]
 80059be:	430b      	orrs	r3, r1
 80059c0:	9904      	ldr	r1, [sp, #16]
 80059c2:	430b      	orrs	r3, r1
 80059c4:	d122      	bne.n	8005a0c <_dtoa_r+0xabc>
 80059c6:	2a00      	cmp	r2, #0
 80059c8:	ddee      	ble.n	80059a8 <_dtoa_r+0xa58>
 80059ca:	ee18 1a10 	vmov	r1, s16
 80059ce:	2201      	movs	r2, #1
 80059d0:	4620      	mov	r0, r4
 80059d2:	f000 ff9b 	bl	800690c <__lshift>
 80059d6:	4631      	mov	r1, r6
 80059d8:	ee08 0a10 	vmov	s16, r0
 80059dc:	f001 f806 	bl	80069ec <__mcmp>
 80059e0:	2800      	cmp	r0, #0
 80059e2:	dc03      	bgt.n	80059ec <_dtoa_r+0xa9c>
 80059e4:	d1e0      	bne.n	80059a8 <_dtoa_r+0xa58>
 80059e6:	f01a 0f01 	tst.w	sl, #1
 80059ea:	d0dd      	beq.n	80059a8 <_dtoa_r+0xa58>
 80059ec:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80059f0:	d1d7      	bne.n	80059a2 <_dtoa_r+0xa52>
 80059f2:	2339      	movs	r3, #57	; 0x39
 80059f4:	f88b 3000 	strb.w	r3, [fp]
 80059f8:	462b      	mov	r3, r5
 80059fa:	461d      	mov	r5, r3
 80059fc:	3b01      	subs	r3, #1
 80059fe:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8005a02:	2a39      	cmp	r2, #57	; 0x39
 8005a04:	d071      	beq.n	8005aea <_dtoa_r+0xb9a>
 8005a06:	3201      	adds	r2, #1
 8005a08:	701a      	strb	r2, [r3, #0]
 8005a0a:	e746      	b.n	800589a <_dtoa_r+0x94a>
 8005a0c:	2a00      	cmp	r2, #0
 8005a0e:	dd07      	ble.n	8005a20 <_dtoa_r+0xad0>
 8005a10:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005a14:	d0ed      	beq.n	80059f2 <_dtoa_r+0xaa2>
 8005a16:	f10a 0301 	add.w	r3, sl, #1
 8005a1a:	f88b 3000 	strb.w	r3, [fp]
 8005a1e:	e73c      	b.n	800589a <_dtoa_r+0x94a>
 8005a20:	9b05      	ldr	r3, [sp, #20]
 8005a22:	f809 ac01 	strb.w	sl, [r9, #-1]
 8005a26:	4599      	cmp	r9, r3
 8005a28:	d047      	beq.n	8005aba <_dtoa_r+0xb6a>
 8005a2a:	ee18 1a10 	vmov	r1, s16
 8005a2e:	2300      	movs	r3, #0
 8005a30:	220a      	movs	r2, #10
 8005a32:	4620      	mov	r0, r4
 8005a34:	f000 fd70 	bl	8006518 <__multadd>
 8005a38:	45b8      	cmp	r8, r7
 8005a3a:	ee08 0a10 	vmov	s16, r0
 8005a3e:	f04f 0300 	mov.w	r3, #0
 8005a42:	f04f 020a 	mov.w	r2, #10
 8005a46:	4641      	mov	r1, r8
 8005a48:	4620      	mov	r0, r4
 8005a4a:	d106      	bne.n	8005a5a <_dtoa_r+0xb0a>
 8005a4c:	f000 fd64 	bl	8006518 <__multadd>
 8005a50:	4680      	mov	r8, r0
 8005a52:	4607      	mov	r7, r0
 8005a54:	f109 0901 	add.w	r9, r9, #1
 8005a58:	e772      	b.n	8005940 <_dtoa_r+0x9f0>
 8005a5a:	f000 fd5d 	bl	8006518 <__multadd>
 8005a5e:	4639      	mov	r1, r7
 8005a60:	4680      	mov	r8, r0
 8005a62:	2300      	movs	r3, #0
 8005a64:	220a      	movs	r2, #10
 8005a66:	4620      	mov	r0, r4
 8005a68:	f000 fd56 	bl	8006518 <__multadd>
 8005a6c:	4607      	mov	r7, r0
 8005a6e:	e7f1      	b.n	8005a54 <_dtoa_r+0xb04>
 8005a70:	9b03      	ldr	r3, [sp, #12]
 8005a72:	9302      	str	r3, [sp, #8]
 8005a74:	9d01      	ldr	r5, [sp, #4]
 8005a76:	ee18 0a10 	vmov	r0, s16
 8005a7a:	4631      	mov	r1, r6
 8005a7c:	f7ff f9dc 	bl	8004e38 <quorem>
 8005a80:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8005a84:	9b01      	ldr	r3, [sp, #4]
 8005a86:	f805 ab01 	strb.w	sl, [r5], #1
 8005a8a:	1aea      	subs	r2, r5, r3
 8005a8c:	9b02      	ldr	r3, [sp, #8]
 8005a8e:	4293      	cmp	r3, r2
 8005a90:	dd09      	ble.n	8005aa6 <_dtoa_r+0xb56>
 8005a92:	ee18 1a10 	vmov	r1, s16
 8005a96:	2300      	movs	r3, #0
 8005a98:	220a      	movs	r2, #10
 8005a9a:	4620      	mov	r0, r4
 8005a9c:	f000 fd3c 	bl	8006518 <__multadd>
 8005aa0:	ee08 0a10 	vmov	s16, r0
 8005aa4:	e7e7      	b.n	8005a76 <_dtoa_r+0xb26>
 8005aa6:	9b02      	ldr	r3, [sp, #8]
 8005aa8:	2b00      	cmp	r3, #0
 8005aaa:	bfc8      	it	gt
 8005aac:	461d      	movgt	r5, r3
 8005aae:	9b01      	ldr	r3, [sp, #4]
 8005ab0:	bfd8      	it	le
 8005ab2:	2501      	movle	r5, #1
 8005ab4:	441d      	add	r5, r3
 8005ab6:	f04f 0800 	mov.w	r8, #0
 8005aba:	ee18 1a10 	vmov	r1, s16
 8005abe:	2201      	movs	r2, #1
 8005ac0:	4620      	mov	r0, r4
 8005ac2:	f000 ff23 	bl	800690c <__lshift>
 8005ac6:	4631      	mov	r1, r6
 8005ac8:	ee08 0a10 	vmov	s16, r0
 8005acc:	f000 ff8e 	bl	80069ec <__mcmp>
 8005ad0:	2800      	cmp	r0, #0
 8005ad2:	dc91      	bgt.n	80059f8 <_dtoa_r+0xaa8>
 8005ad4:	d102      	bne.n	8005adc <_dtoa_r+0xb8c>
 8005ad6:	f01a 0f01 	tst.w	sl, #1
 8005ada:	d18d      	bne.n	80059f8 <_dtoa_r+0xaa8>
 8005adc:	462b      	mov	r3, r5
 8005ade:	461d      	mov	r5, r3
 8005ae0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005ae4:	2a30      	cmp	r2, #48	; 0x30
 8005ae6:	d0fa      	beq.n	8005ade <_dtoa_r+0xb8e>
 8005ae8:	e6d7      	b.n	800589a <_dtoa_r+0x94a>
 8005aea:	9a01      	ldr	r2, [sp, #4]
 8005aec:	429a      	cmp	r2, r3
 8005aee:	d184      	bne.n	80059fa <_dtoa_r+0xaaa>
 8005af0:	9b00      	ldr	r3, [sp, #0]
 8005af2:	3301      	adds	r3, #1
 8005af4:	9300      	str	r3, [sp, #0]
 8005af6:	2331      	movs	r3, #49	; 0x31
 8005af8:	7013      	strb	r3, [r2, #0]
 8005afa:	e6ce      	b.n	800589a <_dtoa_r+0x94a>
 8005afc:	4b09      	ldr	r3, [pc, #36]	; (8005b24 <_dtoa_r+0xbd4>)
 8005afe:	f7ff ba95 	b.w	800502c <_dtoa_r+0xdc>
 8005b02:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005b04:	2b00      	cmp	r3, #0
 8005b06:	f47f aa6e 	bne.w	8004fe6 <_dtoa_r+0x96>
 8005b0a:	4b07      	ldr	r3, [pc, #28]	; (8005b28 <_dtoa_r+0xbd8>)
 8005b0c:	f7ff ba8e 	b.w	800502c <_dtoa_r+0xdc>
 8005b10:	9b02      	ldr	r3, [sp, #8]
 8005b12:	2b00      	cmp	r3, #0
 8005b14:	dcae      	bgt.n	8005a74 <_dtoa_r+0xb24>
 8005b16:	9b06      	ldr	r3, [sp, #24]
 8005b18:	2b02      	cmp	r3, #2
 8005b1a:	f73f aea8 	bgt.w	800586e <_dtoa_r+0x91e>
 8005b1e:	e7a9      	b.n	8005a74 <_dtoa_r+0xb24>
 8005b20:	08008c10 	.word	0x08008c10
 8005b24:	08008a14 	.word	0x08008a14
 8005b28:	08008b91 	.word	0x08008b91

08005b2c <std>:
 8005b2c:	2300      	movs	r3, #0
 8005b2e:	b510      	push	{r4, lr}
 8005b30:	4604      	mov	r4, r0
 8005b32:	e9c0 3300 	strd	r3, r3, [r0]
 8005b36:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005b3a:	6083      	str	r3, [r0, #8]
 8005b3c:	8181      	strh	r1, [r0, #12]
 8005b3e:	6643      	str	r3, [r0, #100]	; 0x64
 8005b40:	81c2      	strh	r2, [r0, #14]
 8005b42:	6183      	str	r3, [r0, #24]
 8005b44:	4619      	mov	r1, r3
 8005b46:	2208      	movs	r2, #8
 8005b48:	305c      	adds	r0, #92	; 0x5c
 8005b4a:	f7fd fc1f 	bl	800338c <memset>
 8005b4e:	4b05      	ldr	r3, [pc, #20]	; (8005b64 <std+0x38>)
 8005b50:	6263      	str	r3, [r4, #36]	; 0x24
 8005b52:	4b05      	ldr	r3, [pc, #20]	; (8005b68 <std+0x3c>)
 8005b54:	62a3      	str	r3, [r4, #40]	; 0x28
 8005b56:	4b05      	ldr	r3, [pc, #20]	; (8005b6c <std+0x40>)
 8005b58:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005b5a:	4b05      	ldr	r3, [pc, #20]	; (8005b70 <std+0x44>)
 8005b5c:	6224      	str	r4, [r4, #32]
 8005b5e:	6323      	str	r3, [r4, #48]	; 0x30
 8005b60:	bd10      	pop	{r4, pc}
 8005b62:	bf00      	nop
 8005b64:	080072b1 	.word	0x080072b1
 8005b68:	080072d3 	.word	0x080072d3
 8005b6c:	0800730b 	.word	0x0800730b
 8005b70:	0800732f 	.word	0x0800732f

08005b74 <_cleanup_r>:
 8005b74:	4901      	ldr	r1, [pc, #4]	; (8005b7c <_cleanup_r+0x8>)
 8005b76:	f000 b8af 	b.w	8005cd8 <_fwalk_reent>
 8005b7a:	bf00      	nop
 8005b7c:	08007689 	.word	0x08007689

08005b80 <__sfmoreglue>:
 8005b80:	b570      	push	{r4, r5, r6, lr}
 8005b82:	2268      	movs	r2, #104	; 0x68
 8005b84:	1e4d      	subs	r5, r1, #1
 8005b86:	4355      	muls	r5, r2
 8005b88:	460e      	mov	r6, r1
 8005b8a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005b8e:	f001 f9a5 	bl	8006edc <_malloc_r>
 8005b92:	4604      	mov	r4, r0
 8005b94:	b140      	cbz	r0, 8005ba8 <__sfmoreglue+0x28>
 8005b96:	2100      	movs	r1, #0
 8005b98:	e9c0 1600 	strd	r1, r6, [r0]
 8005b9c:	300c      	adds	r0, #12
 8005b9e:	60a0      	str	r0, [r4, #8]
 8005ba0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005ba4:	f7fd fbf2 	bl	800338c <memset>
 8005ba8:	4620      	mov	r0, r4
 8005baa:	bd70      	pop	{r4, r5, r6, pc}

08005bac <__sfp_lock_acquire>:
 8005bac:	4801      	ldr	r0, [pc, #4]	; (8005bb4 <__sfp_lock_acquire+0x8>)
 8005bae:	f000 bc26 	b.w	80063fe <__retarget_lock_acquire_recursive>
 8005bb2:	bf00      	nop
 8005bb4:	20000330 	.word	0x20000330

08005bb8 <__sfp_lock_release>:
 8005bb8:	4801      	ldr	r0, [pc, #4]	; (8005bc0 <__sfp_lock_release+0x8>)
 8005bba:	f000 bc21 	b.w	8006400 <__retarget_lock_release_recursive>
 8005bbe:	bf00      	nop
 8005bc0:	20000330 	.word	0x20000330

08005bc4 <__sinit_lock_acquire>:
 8005bc4:	4801      	ldr	r0, [pc, #4]	; (8005bcc <__sinit_lock_acquire+0x8>)
 8005bc6:	f000 bc1a 	b.w	80063fe <__retarget_lock_acquire_recursive>
 8005bca:	bf00      	nop
 8005bcc:	20000331 	.word	0x20000331

08005bd0 <__sinit_lock_release>:
 8005bd0:	4801      	ldr	r0, [pc, #4]	; (8005bd8 <__sinit_lock_release+0x8>)
 8005bd2:	f000 bc15 	b.w	8006400 <__retarget_lock_release_recursive>
 8005bd6:	bf00      	nop
 8005bd8:	20000331 	.word	0x20000331

08005bdc <__sinit>:
 8005bdc:	b510      	push	{r4, lr}
 8005bde:	4604      	mov	r4, r0
 8005be0:	f7ff fff0 	bl	8005bc4 <__sinit_lock_acquire>
 8005be4:	69a3      	ldr	r3, [r4, #24]
 8005be6:	b11b      	cbz	r3, 8005bf0 <__sinit+0x14>
 8005be8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005bec:	f7ff bff0 	b.w	8005bd0 <__sinit_lock_release>
 8005bf0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8005bf4:	6523      	str	r3, [r4, #80]	; 0x50
 8005bf6:	4b13      	ldr	r3, [pc, #76]	; (8005c44 <__sinit+0x68>)
 8005bf8:	4a13      	ldr	r2, [pc, #76]	; (8005c48 <__sinit+0x6c>)
 8005bfa:	681b      	ldr	r3, [r3, #0]
 8005bfc:	62a2      	str	r2, [r4, #40]	; 0x28
 8005bfe:	42a3      	cmp	r3, r4
 8005c00:	bf04      	itt	eq
 8005c02:	2301      	moveq	r3, #1
 8005c04:	61a3      	streq	r3, [r4, #24]
 8005c06:	4620      	mov	r0, r4
 8005c08:	f000 f820 	bl	8005c4c <__sfp>
 8005c0c:	6060      	str	r0, [r4, #4]
 8005c0e:	4620      	mov	r0, r4
 8005c10:	f000 f81c 	bl	8005c4c <__sfp>
 8005c14:	60a0      	str	r0, [r4, #8]
 8005c16:	4620      	mov	r0, r4
 8005c18:	f000 f818 	bl	8005c4c <__sfp>
 8005c1c:	2200      	movs	r2, #0
 8005c1e:	60e0      	str	r0, [r4, #12]
 8005c20:	2104      	movs	r1, #4
 8005c22:	6860      	ldr	r0, [r4, #4]
 8005c24:	f7ff ff82 	bl	8005b2c <std>
 8005c28:	68a0      	ldr	r0, [r4, #8]
 8005c2a:	2201      	movs	r2, #1
 8005c2c:	2109      	movs	r1, #9
 8005c2e:	f7ff ff7d 	bl	8005b2c <std>
 8005c32:	68e0      	ldr	r0, [r4, #12]
 8005c34:	2202      	movs	r2, #2
 8005c36:	2112      	movs	r1, #18
 8005c38:	f7ff ff78 	bl	8005b2c <std>
 8005c3c:	2301      	movs	r3, #1
 8005c3e:	61a3      	str	r3, [r4, #24]
 8005c40:	e7d2      	b.n	8005be8 <__sinit+0xc>
 8005c42:	bf00      	nop
 8005c44:	08008a00 	.word	0x08008a00
 8005c48:	08005b75 	.word	0x08005b75

08005c4c <__sfp>:
 8005c4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c4e:	4607      	mov	r7, r0
 8005c50:	f7ff ffac 	bl	8005bac <__sfp_lock_acquire>
 8005c54:	4b1e      	ldr	r3, [pc, #120]	; (8005cd0 <__sfp+0x84>)
 8005c56:	681e      	ldr	r6, [r3, #0]
 8005c58:	69b3      	ldr	r3, [r6, #24]
 8005c5a:	b913      	cbnz	r3, 8005c62 <__sfp+0x16>
 8005c5c:	4630      	mov	r0, r6
 8005c5e:	f7ff ffbd 	bl	8005bdc <__sinit>
 8005c62:	3648      	adds	r6, #72	; 0x48
 8005c64:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8005c68:	3b01      	subs	r3, #1
 8005c6a:	d503      	bpl.n	8005c74 <__sfp+0x28>
 8005c6c:	6833      	ldr	r3, [r6, #0]
 8005c6e:	b30b      	cbz	r3, 8005cb4 <__sfp+0x68>
 8005c70:	6836      	ldr	r6, [r6, #0]
 8005c72:	e7f7      	b.n	8005c64 <__sfp+0x18>
 8005c74:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005c78:	b9d5      	cbnz	r5, 8005cb0 <__sfp+0x64>
 8005c7a:	4b16      	ldr	r3, [pc, #88]	; (8005cd4 <__sfp+0x88>)
 8005c7c:	60e3      	str	r3, [r4, #12]
 8005c7e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8005c82:	6665      	str	r5, [r4, #100]	; 0x64
 8005c84:	f000 fbba 	bl	80063fc <__retarget_lock_init_recursive>
 8005c88:	f7ff ff96 	bl	8005bb8 <__sfp_lock_release>
 8005c8c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8005c90:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8005c94:	6025      	str	r5, [r4, #0]
 8005c96:	61a5      	str	r5, [r4, #24]
 8005c98:	2208      	movs	r2, #8
 8005c9a:	4629      	mov	r1, r5
 8005c9c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8005ca0:	f7fd fb74 	bl	800338c <memset>
 8005ca4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8005ca8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8005cac:	4620      	mov	r0, r4
 8005cae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005cb0:	3468      	adds	r4, #104	; 0x68
 8005cb2:	e7d9      	b.n	8005c68 <__sfp+0x1c>
 8005cb4:	2104      	movs	r1, #4
 8005cb6:	4638      	mov	r0, r7
 8005cb8:	f7ff ff62 	bl	8005b80 <__sfmoreglue>
 8005cbc:	4604      	mov	r4, r0
 8005cbe:	6030      	str	r0, [r6, #0]
 8005cc0:	2800      	cmp	r0, #0
 8005cc2:	d1d5      	bne.n	8005c70 <__sfp+0x24>
 8005cc4:	f7ff ff78 	bl	8005bb8 <__sfp_lock_release>
 8005cc8:	230c      	movs	r3, #12
 8005cca:	603b      	str	r3, [r7, #0]
 8005ccc:	e7ee      	b.n	8005cac <__sfp+0x60>
 8005cce:	bf00      	nop
 8005cd0:	08008a00 	.word	0x08008a00
 8005cd4:	ffff0001 	.word	0xffff0001

08005cd8 <_fwalk_reent>:
 8005cd8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005cdc:	4606      	mov	r6, r0
 8005cde:	4688      	mov	r8, r1
 8005ce0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8005ce4:	2700      	movs	r7, #0
 8005ce6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8005cea:	f1b9 0901 	subs.w	r9, r9, #1
 8005cee:	d505      	bpl.n	8005cfc <_fwalk_reent+0x24>
 8005cf0:	6824      	ldr	r4, [r4, #0]
 8005cf2:	2c00      	cmp	r4, #0
 8005cf4:	d1f7      	bne.n	8005ce6 <_fwalk_reent+0xe>
 8005cf6:	4638      	mov	r0, r7
 8005cf8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005cfc:	89ab      	ldrh	r3, [r5, #12]
 8005cfe:	2b01      	cmp	r3, #1
 8005d00:	d907      	bls.n	8005d12 <_fwalk_reent+0x3a>
 8005d02:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005d06:	3301      	adds	r3, #1
 8005d08:	d003      	beq.n	8005d12 <_fwalk_reent+0x3a>
 8005d0a:	4629      	mov	r1, r5
 8005d0c:	4630      	mov	r0, r6
 8005d0e:	47c0      	blx	r8
 8005d10:	4307      	orrs	r7, r0
 8005d12:	3568      	adds	r5, #104	; 0x68
 8005d14:	e7e9      	b.n	8005cea <_fwalk_reent+0x12>

08005d16 <rshift>:
 8005d16:	6903      	ldr	r3, [r0, #16]
 8005d18:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005d1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005d20:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005d24:	f100 0414 	add.w	r4, r0, #20
 8005d28:	dd45      	ble.n	8005db6 <rshift+0xa0>
 8005d2a:	f011 011f 	ands.w	r1, r1, #31
 8005d2e:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005d32:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005d36:	d10c      	bne.n	8005d52 <rshift+0x3c>
 8005d38:	f100 0710 	add.w	r7, r0, #16
 8005d3c:	4629      	mov	r1, r5
 8005d3e:	42b1      	cmp	r1, r6
 8005d40:	d334      	bcc.n	8005dac <rshift+0x96>
 8005d42:	1a9b      	subs	r3, r3, r2
 8005d44:	009b      	lsls	r3, r3, #2
 8005d46:	1eea      	subs	r2, r5, #3
 8005d48:	4296      	cmp	r6, r2
 8005d4a:	bf38      	it	cc
 8005d4c:	2300      	movcc	r3, #0
 8005d4e:	4423      	add	r3, r4
 8005d50:	e015      	b.n	8005d7e <rshift+0x68>
 8005d52:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005d56:	f1c1 0820 	rsb	r8, r1, #32
 8005d5a:	40cf      	lsrs	r7, r1
 8005d5c:	f105 0e04 	add.w	lr, r5, #4
 8005d60:	46a1      	mov	r9, r4
 8005d62:	4576      	cmp	r6, lr
 8005d64:	46f4      	mov	ip, lr
 8005d66:	d815      	bhi.n	8005d94 <rshift+0x7e>
 8005d68:	1a9a      	subs	r2, r3, r2
 8005d6a:	0092      	lsls	r2, r2, #2
 8005d6c:	3a04      	subs	r2, #4
 8005d6e:	3501      	adds	r5, #1
 8005d70:	42ae      	cmp	r6, r5
 8005d72:	bf38      	it	cc
 8005d74:	2200      	movcc	r2, #0
 8005d76:	18a3      	adds	r3, r4, r2
 8005d78:	50a7      	str	r7, [r4, r2]
 8005d7a:	b107      	cbz	r7, 8005d7e <rshift+0x68>
 8005d7c:	3304      	adds	r3, #4
 8005d7e:	1b1a      	subs	r2, r3, r4
 8005d80:	42a3      	cmp	r3, r4
 8005d82:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005d86:	bf08      	it	eq
 8005d88:	2300      	moveq	r3, #0
 8005d8a:	6102      	str	r2, [r0, #16]
 8005d8c:	bf08      	it	eq
 8005d8e:	6143      	streq	r3, [r0, #20]
 8005d90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005d94:	f8dc c000 	ldr.w	ip, [ip]
 8005d98:	fa0c fc08 	lsl.w	ip, ip, r8
 8005d9c:	ea4c 0707 	orr.w	r7, ip, r7
 8005da0:	f849 7b04 	str.w	r7, [r9], #4
 8005da4:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005da8:	40cf      	lsrs	r7, r1
 8005daa:	e7da      	b.n	8005d62 <rshift+0x4c>
 8005dac:	f851 cb04 	ldr.w	ip, [r1], #4
 8005db0:	f847 cf04 	str.w	ip, [r7, #4]!
 8005db4:	e7c3      	b.n	8005d3e <rshift+0x28>
 8005db6:	4623      	mov	r3, r4
 8005db8:	e7e1      	b.n	8005d7e <rshift+0x68>

08005dba <__hexdig_fun>:
 8005dba:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8005dbe:	2b09      	cmp	r3, #9
 8005dc0:	d802      	bhi.n	8005dc8 <__hexdig_fun+0xe>
 8005dc2:	3820      	subs	r0, #32
 8005dc4:	b2c0      	uxtb	r0, r0
 8005dc6:	4770      	bx	lr
 8005dc8:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8005dcc:	2b05      	cmp	r3, #5
 8005dce:	d801      	bhi.n	8005dd4 <__hexdig_fun+0x1a>
 8005dd0:	3847      	subs	r0, #71	; 0x47
 8005dd2:	e7f7      	b.n	8005dc4 <__hexdig_fun+0xa>
 8005dd4:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005dd8:	2b05      	cmp	r3, #5
 8005dda:	d801      	bhi.n	8005de0 <__hexdig_fun+0x26>
 8005ddc:	3827      	subs	r0, #39	; 0x27
 8005dde:	e7f1      	b.n	8005dc4 <__hexdig_fun+0xa>
 8005de0:	2000      	movs	r0, #0
 8005de2:	4770      	bx	lr

08005de4 <__gethex>:
 8005de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005de8:	ed2d 8b02 	vpush	{d8}
 8005dec:	b089      	sub	sp, #36	; 0x24
 8005dee:	ee08 0a10 	vmov	s16, r0
 8005df2:	9304      	str	r3, [sp, #16]
 8005df4:	4bb4      	ldr	r3, [pc, #720]	; (80060c8 <__gethex+0x2e4>)
 8005df6:	681b      	ldr	r3, [r3, #0]
 8005df8:	9301      	str	r3, [sp, #4]
 8005dfa:	4618      	mov	r0, r3
 8005dfc:	468b      	mov	fp, r1
 8005dfe:	4690      	mov	r8, r2
 8005e00:	f7fa f9ee 	bl	80001e0 <strlen>
 8005e04:	9b01      	ldr	r3, [sp, #4]
 8005e06:	f8db 2000 	ldr.w	r2, [fp]
 8005e0a:	4403      	add	r3, r0
 8005e0c:	4682      	mov	sl, r0
 8005e0e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8005e12:	9305      	str	r3, [sp, #20]
 8005e14:	1c93      	adds	r3, r2, #2
 8005e16:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8005e1a:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005e1e:	32fe      	adds	r2, #254	; 0xfe
 8005e20:	18d1      	adds	r1, r2, r3
 8005e22:	461f      	mov	r7, r3
 8005e24:	f813 0b01 	ldrb.w	r0, [r3], #1
 8005e28:	9100      	str	r1, [sp, #0]
 8005e2a:	2830      	cmp	r0, #48	; 0x30
 8005e2c:	d0f8      	beq.n	8005e20 <__gethex+0x3c>
 8005e2e:	f7ff ffc4 	bl	8005dba <__hexdig_fun>
 8005e32:	4604      	mov	r4, r0
 8005e34:	2800      	cmp	r0, #0
 8005e36:	d13a      	bne.n	8005eae <__gethex+0xca>
 8005e38:	9901      	ldr	r1, [sp, #4]
 8005e3a:	4652      	mov	r2, sl
 8005e3c:	4638      	mov	r0, r7
 8005e3e:	f001 fa7a 	bl	8007336 <strncmp>
 8005e42:	4605      	mov	r5, r0
 8005e44:	2800      	cmp	r0, #0
 8005e46:	d168      	bne.n	8005f1a <__gethex+0x136>
 8005e48:	f817 000a 	ldrb.w	r0, [r7, sl]
 8005e4c:	eb07 060a 	add.w	r6, r7, sl
 8005e50:	f7ff ffb3 	bl	8005dba <__hexdig_fun>
 8005e54:	2800      	cmp	r0, #0
 8005e56:	d062      	beq.n	8005f1e <__gethex+0x13a>
 8005e58:	4633      	mov	r3, r6
 8005e5a:	7818      	ldrb	r0, [r3, #0]
 8005e5c:	2830      	cmp	r0, #48	; 0x30
 8005e5e:	461f      	mov	r7, r3
 8005e60:	f103 0301 	add.w	r3, r3, #1
 8005e64:	d0f9      	beq.n	8005e5a <__gethex+0x76>
 8005e66:	f7ff ffa8 	bl	8005dba <__hexdig_fun>
 8005e6a:	2301      	movs	r3, #1
 8005e6c:	fab0 f480 	clz	r4, r0
 8005e70:	0964      	lsrs	r4, r4, #5
 8005e72:	4635      	mov	r5, r6
 8005e74:	9300      	str	r3, [sp, #0]
 8005e76:	463a      	mov	r2, r7
 8005e78:	4616      	mov	r6, r2
 8005e7a:	3201      	adds	r2, #1
 8005e7c:	7830      	ldrb	r0, [r6, #0]
 8005e7e:	f7ff ff9c 	bl	8005dba <__hexdig_fun>
 8005e82:	2800      	cmp	r0, #0
 8005e84:	d1f8      	bne.n	8005e78 <__gethex+0x94>
 8005e86:	9901      	ldr	r1, [sp, #4]
 8005e88:	4652      	mov	r2, sl
 8005e8a:	4630      	mov	r0, r6
 8005e8c:	f001 fa53 	bl	8007336 <strncmp>
 8005e90:	b980      	cbnz	r0, 8005eb4 <__gethex+0xd0>
 8005e92:	b94d      	cbnz	r5, 8005ea8 <__gethex+0xc4>
 8005e94:	eb06 050a 	add.w	r5, r6, sl
 8005e98:	462a      	mov	r2, r5
 8005e9a:	4616      	mov	r6, r2
 8005e9c:	3201      	adds	r2, #1
 8005e9e:	7830      	ldrb	r0, [r6, #0]
 8005ea0:	f7ff ff8b 	bl	8005dba <__hexdig_fun>
 8005ea4:	2800      	cmp	r0, #0
 8005ea6:	d1f8      	bne.n	8005e9a <__gethex+0xb6>
 8005ea8:	1bad      	subs	r5, r5, r6
 8005eaa:	00ad      	lsls	r5, r5, #2
 8005eac:	e004      	b.n	8005eb8 <__gethex+0xd4>
 8005eae:	2400      	movs	r4, #0
 8005eb0:	4625      	mov	r5, r4
 8005eb2:	e7e0      	b.n	8005e76 <__gethex+0x92>
 8005eb4:	2d00      	cmp	r5, #0
 8005eb6:	d1f7      	bne.n	8005ea8 <__gethex+0xc4>
 8005eb8:	7833      	ldrb	r3, [r6, #0]
 8005eba:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005ebe:	2b50      	cmp	r3, #80	; 0x50
 8005ec0:	d13b      	bne.n	8005f3a <__gethex+0x156>
 8005ec2:	7873      	ldrb	r3, [r6, #1]
 8005ec4:	2b2b      	cmp	r3, #43	; 0x2b
 8005ec6:	d02c      	beq.n	8005f22 <__gethex+0x13e>
 8005ec8:	2b2d      	cmp	r3, #45	; 0x2d
 8005eca:	d02e      	beq.n	8005f2a <__gethex+0x146>
 8005ecc:	1c71      	adds	r1, r6, #1
 8005ece:	f04f 0900 	mov.w	r9, #0
 8005ed2:	7808      	ldrb	r0, [r1, #0]
 8005ed4:	f7ff ff71 	bl	8005dba <__hexdig_fun>
 8005ed8:	1e43      	subs	r3, r0, #1
 8005eda:	b2db      	uxtb	r3, r3
 8005edc:	2b18      	cmp	r3, #24
 8005ede:	d82c      	bhi.n	8005f3a <__gethex+0x156>
 8005ee0:	f1a0 0210 	sub.w	r2, r0, #16
 8005ee4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005ee8:	f7ff ff67 	bl	8005dba <__hexdig_fun>
 8005eec:	1e43      	subs	r3, r0, #1
 8005eee:	b2db      	uxtb	r3, r3
 8005ef0:	2b18      	cmp	r3, #24
 8005ef2:	d91d      	bls.n	8005f30 <__gethex+0x14c>
 8005ef4:	f1b9 0f00 	cmp.w	r9, #0
 8005ef8:	d000      	beq.n	8005efc <__gethex+0x118>
 8005efa:	4252      	negs	r2, r2
 8005efc:	4415      	add	r5, r2
 8005efe:	f8cb 1000 	str.w	r1, [fp]
 8005f02:	b1e4      	cbz	r4, 8005f3e <__gethex+0x15a>
 8005f04:	9b00      	ldr	r3, [sp, #0]
 8005f06:	2b00      	cmp	r3, #0
 8005f08:	bf14      	ite	ne
 8005f0a:	2700      	movne	r7, #0
 8005f0c:	2706      	moveq	r7, #6
 8005f0e:	4638      	mov	r0, r7
 8005f10:	b009      	add	sp, #36	; 0x24
 8005f12:	ecbd 8b02 	vpop	{d8}
 8005f16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f1a:	463e      	mov	r6, r7
 8005f1c:	4625      	mov	r5, r4
 8005f1e:	2401      	movs	r4, #1
 8005f20:	e7ca      	b.n	8005eb8 <__gethex+0xd4>
 8005f22:	f04f 0900 	mov.w	r9, #0
 8005f26:	1cb1      	adds	r1, r6, #2
 8005f28:	e7d3      	b.n	8005ed2 <__gethex+0xee>
 8005f2a:	f04f 0901 	mov.w	r9, #1
 8005f2e:	e7fa      	b.n	8005f26 <__gethex+0x142>
 8005f30:	230a      	movs	r3, #10
 8005f32:	fb03 0202 	mla	r2, r3, r2, r0
 8005f36:	3a10      	subs	r2, #16
 8005f38:	e7d4      	b.n	8005ee4 <__gethex+0x100>
 8005f3a:	4631      	mov	r1, r6
 8005f3c:	e7df      	b.n	8005efe <__gethex+0x11a>
 8005f3e:	1bf3      	subs	r3, r6, r7
 8005f40:	3b01      	subs	r3, #1
 8005f42:	4621      	mov	r1, r4
 8005f44:	2b07      	cmp	r3, #7
 8005f46:	dc0b      	bgt.n	8005f60 <__gethex+0x17c>
 8005f48:	ee18 0a10 	vmov	r0, s16
 8005f4c:	f000 fa82 	bl	8006454 <_Balloc>
 8005f50:	4604      	mov	r4, r0
 8005f52:	b940      	cbnz	r0, 8005f66 <__gethex+0x182>
 8005f54:	4b5d      	ldr	r3, [pc, #372]	; (80060cc <__gethex+0x2e8>)
 8005f56:	4602      	mov	r2, r0
 8005f58:	21de      	movs	r1, #222	; 0xde
 8005f5a:	485d      	ldr	r0, [pc, #372]	; (80060d0 <__gethex+0x2ec>)
 8005f5c:	f001 fae0 	bl	8007520 <__assert_func>
 8005f60:	3101      	adds	r1, #1
 8005f62:	105b      	asrs	r3, r3, #1
 8005f64:	e7ee      	b.n	8005f44 <__gethex+0x160>
 8005f66:	f100 0914 	add.w	r9, r0, #20
 8005f6a:	f04f 0b00 	mov.w	fp, #0
 8005f6e:	f1ca 0301 	rsb	r3, sl, #1
 8005f72:	f8cd 9008 	str.w	r9, [sp, #8]
 8005f76:	f8cd b000 	str.w	fp, [sp]
 8005f7a:	9306      	str	r3, [sp, #24]
 8005f7c:	42b7      	cmp	r7, r6
 8005f7e:	d340      	bcc.n	8006002 <__gethex+0x21e>
 8005f80:	9802      	ldr	r0, [sp, #8]
 8005f82:	9b00      	ldr	r3, [sp, #0]
 8005f84:	f840 3b04 	str.w	r3, [r0], #4
 8005f88:	eba0 0009 	sub.w	r0, r0, r9
 8005f8c:	1080      	asrs	r0, r0, #2
 8005f8e:	0146      	lsls	r6, r0, #5
 8005f90:	6120      	str	r0, [r4, #16]
 8005f92:	4618      	mov	r0, r3
 8005f94:	f000 fb50 	bl	8006638 <__hi0bits>
 8005f98:	1a30      	subs	r0, r6, r0
 8005f9a:	f8d8 6000 	ldr.w	r6, [r8]
 8005f9e:	42b0      	cmp	r0, r6
 8005fa0:	dd63      	ble.n	800606a <__gethex+0x286>
 8005fa2:	1b87      	subs	r7, r0, r6
 8005fa4:	4639      	mov	r1, r7
 8005fa6:	4620      	mov	r0, r4
 8005fa8:	f000 fef4 	bl	8006d94 <__any_on>
 8005fac:	4682      	mov	sl, r0
 8005fae:	b1a8      	cbz	r0, 8005fdc <__gethex+0x1f8>
 8005fb0:	1e7b      	subs	r3, r7, #1
 8005fb2:	1159      	asrs	r1, r3, #5
 8005fb4:	f003 021f 	and.w	r2, r3, #31
 8005fb8:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8005fbc:	f04f 0a01 	mov.w	sl, #1
 8005fc0:	fa0a f202 	lsl.w	r2, sl, r2
 8005fc4:	420a      	tst	r2, r1
 8005fc6:	d009      	beq.n	8005fdc <__gethex+0x1f8>
 8005fc8:	4553      	cmp	r3, sl
 8005fca:	dd05      	ble.n	8005fd8 <__gethex+0x1f4>
 8005fcc:	1eb9      	subs	r1, r7, #2
 8005fce:	4620      	mov	r0, r4
 8005fd0:	f000 fee0 	bl	8006d94 <__any_on>
 8005fd4:	2800      	cmp	r0, #0
 8005fd6:	d145      	bne.n	8006064 <__gethex+0x280>
 8005fd8:	f04f 0a02 	mov.w	sl, #2
 8005fdc:	4639      	mov	r1, r7
 8005fde:	4620      	mov	r0, r4
 8005fe0:	f7ff fe99 	bl	8005d16 <rshift>
 8005fe4:	443d      	add	r5, r7
 8005fe6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005fea:	42ab      	cmp	r3, r5
 8005fec:	da4c      	bge.n	8006088 <__gethex+0x2a4>
 8005fee:	ee18 0a10 	vmov	r0, s16
 8005ff2:	4621      	mov	r1, r4
 8005ff4:	f000 fa6e 	bl	80064d4 <_Bfree>
 8005ff8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005ffa:	2300      	movs	r3, #0
 8005ffc:	6013      	str	r3, [r2, #0]
 8005ffe:	27a3      	movs	r7, #163	; 0xa3
 8006000:	e785      	b.n	8005f0e <__gethex+0x12a>
 8006002:	1e73      	subs	r3, r6, #1
 8006004:	9a05      	ldr	r2, [sp, #20]
 8006006:	9303      	str	r3, [sp, #12]
 8006008:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800600c:	4293      	cmp	r3, r2
 800600e:	d019      	beq.n	8006044 <__gethex+0x260>
 8006010:	f1bb 0f20 	cmp.w	fp, #32
 8006014:	d107      	bne.n	8006026 <__gethex+0x242>
 8006016:	9b02      	ldr	r3, [sp, #8]
 8006018:	9a00      	ldr	r2, [sp, #0]
 800601a:	f843 2b04 	str.w	r2, [r3], #4
 800601e:	9302      	str	r3, [sp, #8]
 8006020:	2300      	movs	r3, #0
 8006022:	9300      	str	r3, [sp, #0]
 8006024:	469b      	mov	fp, r3
 8006026:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800602a:	f7ff fec6 	bl	8005dba <__hexdig_fun>
 800602e:	9b00      	ldr	r3, [sp, #0]
 8006030:	f000 000f 	and.w	r0, r0, #15
 8006034:	fa00 f00b 	lsl.w	r0, r0, fp
 8006038:	4303      	orrs	r3, r0
 800603a:	9300      	str	r3, [sp, #0]
 800603c:	f10b 0b04 	add.w	fp, fp, #4
 8006040:	9b03      	ldr	r3, [sp, #12]
 8006042:	e00d      	b.n	8006060 <__gethex+0x27c>
 8006044:	9b03      	ldr	r3, [sp, #12]
 8006046:	9a06      	ldr	r2, [sp, #24]
 8006048:	4413      	add	r3, r2
 800604a:	42bb      	cmp	r3, r7
 800604c:	d3e0      	bcc.n	8006010 <__gethex+0x22c>
 800604e:	4618      	mov	r0, r3
 8006050:	9901      	ldr	r1, [sp, #4]
 8006052:	9307      	str	r3, [sp, #28]
 8006054:	4652      	mov	r2, sl
 8006056:	f001 f96e 	bl	8007336 <strncmp>
 800605a:	9b07      	ldr	r3, [sp, #28]
 800605c:	2800      	cmp	r0, #0
 800605e:	d1d7      	bne.n	8006010 <__gethex+0x22c>
 8006060:	461e      	mov	r6, r3
 8006062:	e78b      	b.n	8005f7c <__gethex+0x198>
 8006064:	f04f 0a03 	mov.w	sl, #3
 8006068:	e7b8      	b.n	8005fdc <__gethex+0x1f8>
 800606a:	da0a      	bge.n	8006082 <__gethex+0x29e>
 800606c:	1a37      	subs	r7, r6, r0
 800606e:	4621      	mov	r1, r4
 8006070:	ee18 0a10 	vmov	r0, s16
 8006074:	463a      	mov	r2, r7
 8006076:	f000 fc49 	bl	800690c <__lshift>
 800607a:	1bed      	subs	r5, r5, r7
 800607c:	4604      	mov	r4, r0
 800607e:	f100 0914 	add.w	r9, r0, #20
 8006082:	f04f 0a00 	mov.w	sl, #0
 8006086:	e7ae      	b.n	8005fe6 <__gethex+0x202>
 8006088:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800608c:	42a8      	cmp	r0, r5
 800608e:	dd72      	ble.n	8006176 <__gethex+0x392>
 8006090:	1b45      	subs	r5, r0, r5
 8006092:	42ae      	cmp	r6, r5
 8006094:	dc36      	bgt.n	8006104 <__gethex+0x320>
 8006096:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800609a:	2b02      	cmp	r3, #2
 800609c:	d02a      	beq.n	80060f4 <__gethex+0x310>
 800609e:	2b03      	cmp	r3, #3
 80060a0:	d02c      	beq.n	80060fc <__gethex+0x318>
 80060a2:	2b01      	cmp	r3, #1
 80060a4:	d11c      	bne.n	80060e0 <__gethex+0x2fc>
 80060a6:	42ae      	cmp	r6, r5
 80060a8:	d11a      	bne.n	80060e0 <__gethex+0x2fc>
 80060aa:	2e01      	cmp	r6, #1
 80060ac:	d112      	bne.n	80060d4 <__gethex+0x2f0>
 80060ae:	9a04      	ldr	r2, [sp, #16]
 80060b0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80060b4:	6013      	str	r3, [r2, #0]
 80060b6:	2301      	movs	r3, #1
 80060b8:	6123      	str	r3, [r4, #16]
 80060ba:	f8c9 3000 	str.w	r3, [r9]
 80060be:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80060c0:	2762      	movs	r7, #98	; 0x62
 80060c2:	601c      	str	r4, [r3, #0]
 80060c4:	e723      	b.n	8005f0e <__gethex+0x12a>
 80060c6:	bf00      	nop
 80060c8:	08008cec 	.word	0x08008cec
 80060cc:	08008c10 	.word	0x08008c10
 80060d0:	08008c84 	.word	0x08008c84
 80060d4:	1e71      	subs	r1, r6, #1
 80060d6:	4620      	mov	r0, r4
 80060d8:	f000 fe5c 	bl	8006d94 <__any_on>
 80060dc:	2800      	cmp	r0, #0
 80060de:	d1e6      	bne.n	80060ae <__gethex+0x2ca>
 80060e0:	ee18 0a10 	vmov	r0, s16
 80060e4:	4621      	mov	r1, r4
 80060e6:	f000 f9f5 	bl	80064d4 <_Bfree>
 80060ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80060ec:	2300      	movs	r3, #0
 80060ee:	6013      	str	r3, [r2, #0]
 80060f0:	2750      	movs	r7, #80	; 0x50
 80060f2:	e70c      	b.n	8005f0e <__gethex+0x12a>
 80060f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80060f6:	2b00      	cmp	r3, #0
 80060f8:	d1f2      	bne.n	80060e0 <__gethex+0x2fc>
 80060fa:	e7d8      	b.n	80060ae <__gethex+0x2ca>
 80060fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80060fe:	2b00      	cmp	r3, #0
 8006100:	d1d5      	bne.n	80060ae <__gethex+0x2ca>
 8006102:	e7ed      	b.n	80060e0 <__gethex+0x2fc>
 8006104:	1e6f      	subs	r7, r5, #1
 8006106:	f1ba 0f00 	cmp.w	sl, #0
 800610a:	d131      	bne.n	8006170 <__gethex+0x38c>
 800610c:	b127      	cbz	r7, 8006118 <__gethex+0x334>
 800610e:	4639      	mov	r1, r7
 8006110:	4620      	mov	r0, r4
 8006112:	f000 fe3f 	bl	8006d94 <__any_on>
 8006116:	4682      	mov	sl, r0
 8006118:	117b      	asrs	r3, r7, #5
 800611a:	2101      	movs	r1, #1
 800611c:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8006120:	f007 071f 	and.w	r7, r7, #31
 8006124:	fa01 f707 	lsl.w	r7, r1, r7
 8006128:	421f      	tst	r7, r3
 800612a:	4629      	mov	r1, r5
 800612c:	4620      	mov	r0, r4
 800612e:	bf18      	it	ne
 8006130:	f04a 0a02 	orrne.w	sl, sl, #2
 8006134:	1b76      	subs	r6, r6, r5
 8006136:	f7ff fdee 	bl	8005d16 <rshift>
 800613a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800613e:	2702      	movs	r7, #2
 8006140:	f1ba 0f00 	cmp.w	sl, #0
 8006144:	d048      	beq.n	80061d8 <__gethex+0x3f4>
 8006146:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800614a:	2b02      	cmp	r3, #2
 800614c:	d015      	beq.n	800617a <__gethex+0x396>
 800614e:	2b03      	cmp	r3, #3
 8006150:	d017      	beq.n	8006182 <__gethex+0x39e>
 8006152:	2b01      	cmp	r3, #1
 8006154:	d109      	bne.n	800616a <__gethex+0x386>
 8006156:	f01a 0f02 	tst.w	sl, #2
 800615a:	d006      	beq.n	800616a <__gethex+0x386>
 800615c:	f8d9 0000 	ldr.w	r0, [r9]
 8006160:	ea4a 0a00 	orr.w	sl, sl, r0
 8006164:	f01a 0f01 	tst.w	sl, #1
 8006168:	d10e      	bne.n	8006188 <__gethex+0x3a4>
 800616a:	f047 0710 	orr.w	r7, r7, #16
 800616e:	e033      	b.n	80061d8 <__gethex+0x3f4>
 8006170:	f04f 0a01 	mov.w	sl, #1
 8006174:	e7d0      	b.n	8006118 <__gethex+0x334>
 8006176:	2701      	movs	r7, #1
 8006178:	e7e2      	b.n	8006140 <__gethex+0x35c>
 800617a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800617c:	f1c3 0301 	rsb	r3, r3, #1
 8006180:	9315      	str	r3, [sp, #84]	; 0x54
 8006182:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006184:	2b00      	cmp	r3, #0
 8006186:	d0f0      	beq.n	800616a <__gethex+0x386>
 8006188:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800618c:	f104 0314 	add.w	r3, r4, #20
 8006190:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8006194:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8006198:	f04f 0c00 	mov.w	ip, #0
 800619c:	4618      	mov	r0, r3
 800619e:	f853 2b04 	ldr.w	r2, [r3], #4
 80061a2:	f1b2 3fff 	cmp.w	r2, #4294967295
 80061a6:	d01c      	beq.n	80061e2 <__gethex+0x3fe>
 80061a8:	3201      	adds	r2, #1
 80061aa:	6002      	str	r2, [r0, #0]
 80061ac:	2f02      	cmp	r7, #2
 80061ae:	f104 0314 	add.w	r3, r4, #20
 80061b2:	d13f      	bne.n	8006234 <__gethex+0x450>
 80061b4:	f8d8 2000 	ldr.w	r2, [r8]
 80061b8:	3a01      	subs	r2, #1
 80061ba:	42b2      	cmp	r2, r6
 80061bc:	d10a      	bne.n	80061d4 <__gethex+0x3f0>
 80061be:	1171      	asrs	r1, r6, #5
 80061c0:	2201      	movs	r2, #1
 80061c2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80061c6:	f006 061f 	and.w	r6, r6, #31
 80061ca:	fa02 f606 	lsl.w	r6, r2, r6
 80061ce:	421e      	tst	r6, r3
 80061d0:	bf18      	it	ne
 80061d2:	4617      	movne	r7, r2
 80061d4:	f047 0720 	orr.w	r7, r7, #32
 80061d8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80061da:	601c      	str	r4, [r3, #0]
 80061dc:	9b04      	ldr	r3, [sp, #16]
 80061de:	601d      	str	r5, [r3, #0]
 80061e0:	e695      	b.n	8005f0e <__gethex+0x12a>
 80061e2:	4299      	cmp	r1, r3
 80061e4:	f843 cc04 	str.w	ip, [r3, #-4]
 80061e8:	d8d8      	bhi.n	800619c <__gethex+0x3b8>
 80061ea:	68a3      	ldr	r3, [r4, #8]
 80061ec:	459b      	cmp	fp, r3
 80061ee:	db19      	blt.n	8006224 <__gethex+0x440>
 80061f0:	6861      	ldr	r1, [r4, #4]
 80061f2:	ee18 0a10 	vmov	r0, s16
 80061f6:	3101      	adds	r1, #1
 80061f8:	f000 f92c 	bl	8006454 <_Balloc>
 80061fc:	4681      	mov	r9, r0
 80061fe:	b918      	cbnz	r0, 8006208 <__gethex+0x424>
 8006200:	4b1a      	ldr	r3, [pc, #104]	; (800626c <__gethex+0x488>)
 8006202:	4602      	mov	r2, r0
 8006204:	2184      	movs	r1, #132	; 0x84
 8006206:	e6a8      	b.n	8005f5a <__gethex+0x176>
 8006208:	6922      	ldr	r2, [r4, #16]
 800620a:	3202      	adds	r2, #2
 800620c:	f104 010c 	add.w	r1, r4, #12
 8006210:	0092      	lsls	r2, r2, #2
 8006212:	300c      	adds	r0, #12
 8006214:	f000 f910 	bl	8006438 <memcpy>
 8006218:	4621      	mov	r1, r4
 800621a:	ee18 0a10 	vmov	r0, s16
 800621e:	f000 f959 	bl	80064d4 <_Bfree>
 8006222:	464c      	mov	r4, r9
 8006224:	6923      	ldr	r3, [r4, #16]
 8006226:	1c5a      	adds	r2, r3, #1
 8006228:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800622c:	6122      	str	r2, [r4, #16]
 800622e:	2201      	movs	r2, #1
 8006230:	615a      	str	r2, [r3, #20]
 8006232:	e7bb      	b.n	80061ac <__gethex+0x3c8>
 8006234:	6922      	ldr	r2, [r4, #16]
 8006236:	455a      	cmp	r2, fp
 8006238:	dd0b      	ble.n	8006252 <__gethex+0x46e>
 800623a:	2101      	movs	r1, #1
 800623c:	4620      	mov	r0, r4
 800623e:	f7ff fd6a 	bl	8005d16 <rshift>
 8006242:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006246:	3501      	adds	r5, #1
 8006248:	42ab      	cmp	r3, r5
 800624a:	f6ff aed0 	blt.w	8005fee <__gethex+0x20a>
 800624e:	2701      	movs	r7, #1
 8006250:	e7c0      	b.n	80061d4 <__gethex+0x3f0>
 8006252:	f016 061f 	ands.w	r6, r6, #31
 8006256:	d0fa      	beq.n	800624e <__gethex+0x46a>
 8006258:	4453      	add	r3, sl
 800625a:	f1c6 0620 	rsb	r6, r6, #32
 800625e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8006262:	f000 f9e9 	bl	8006638 <__hi0bits>
 8006266:	42b0      	cmp	r0, r6
 8006268:	dbe7      	blt.n	800623a <__gethex+0x456>
 800626a:	e7f0      	b.n	800624e <__gethex+0x46a>
 800626c:	08008c10 	.word	0x08008c10

08006270 <L_shift>:
 8006270:	f1c2 0208 	rsb	r2, r2, #8
 8006274:	0092      	lsls	r2, r2, #2
 8006276:	b570      	push	{r4, r5, r6, lr}
 8006278:	f1c2 0620 	rsb	r6, r2, #32
 800627c:	6843      	ldr	r3, [r0, #4]
 800627e:	6804      	ldr	r4, [r0, #0]
 8006280:	fa03 f506 	lsl.w	r5, r3, r6
 8006284:	432c      	orrs	r4, r5
 8006286:	40d3      	lsrs	r3, r2
 8006288:	6004      	str	r4, [r0, #0]
 800628a:	f840 3f04 	str.w	r3, [r0, #4]!
 800628e:	4288      	cmp	r0, r1
 8006290:	d3f4      	bcc.n	800627c <L_shift+0xc>
 8006292:	bd70      	pop	{r4, r5, r6, pc}

08006294 <__match>:
 8006294:	b530      	push	{r4, r5, lr}
 8006296:	6803      	ldr	r3, [r0, #0]
 8006298:	3301      	adds	r3, #1
 800629a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800629e:	b914      	cbnz	r4, 80062a6 <__match+0x12>
 80062a0:	6003      	str	r3, [r0, #0]
 80062a2:	2001      	movs	r0, #1
 80062a4:	bd30      	pop	{r4, r5, pc}
 80062a6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80062aa:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80062ae:	2d19      	cmp	r5, #25
 80062b0:	bf98      	it	ls
 80062b2:	3220      	addls	r2, #32
 80062b4:	42a2      	cmp	r2, r4
 80062b6:	d0f0      	beq.n	800629a <__match+0x6>
 80062b8:	2000      	movs	r0, #0
 80062ba:	e7f3      	b.n	80062a4 <__match+0x10>

080062bc <__hexnan>:
 80062bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062c0:	680b      	ldr	r3, [r1, #0]
 80062c2:	115e      	asrs	r6, r3, #5
 80062c4:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80062c8:	f013 031f 	ands.w	r3, r3, #31
 80062cc:	b087      	sub	sp, #28
 80062ce:	bf18      	it	ne
 80062d0:	3604      	addne	r6, #4
 80062d2:	2500      	movs	r5, #0
 80062d4:	1f37      	subs	r7, r6, #4
 80062d6:	4690      	mov	r8, r2
 80062d8:	6802      	ldr	r2, [r0, #0]
 80062da:	9301      	str	r3, [sp, #4]
 80062dc:	4682      	mov	sl, r0
 80062de:	f846 5c04 	str.w	r5, [r6, #-4]
 80062e2:	46b9      	mov	r9, r7
 80062e4:	463c      	mov	r4, r7
 80062e6:	9502      	str	r5, [sp, #8]
 80062e8:	46ab      	mov	fp, r5
 80062ea:	7851      	ldrb	r1, [r2, #1]
 80062ec:	1c53      	adds	r3, r2, #1
 80062ee:	9303      	str	r3, [sp, #12]
 80062f0:	b341      	cbz	r1, 8006344 <__hexnan+0x88>
 80062f2:	4608      	mov	r0, r1
 80062f4:	9205      	str	r2, [sp, #20]
 80062f6:	9104      	str	r1, [sp, #16]
 80062f8:	f7ff fd5f 	bl	8005dba <__hexdig_fun>
 80062fc:	2800      	cmp	r0, #0
 80062fe:	d14f      	bne.n	80063a0 <__hexnan+0xe4>
 8006300:	9904      	ldr	r1, [sp, #16]
 8006302:	9a05      	ldr	r2, [sp, #20]
 8006304:	2920      	cmp	r1, #32
 8006306:	d818      	bhi.n	800633a <__hexnan+0x7e>
 8006308:	9b02      	ldr	r3, [sp, #8]
 800630a:	459b      	cmp	fp, r3
 800630c:	dd13      	ble.n	8006336 <__hexnan+0x7a>
 800630e:	454c      	cmp	r4, r9
 8006310:	d206      	bcs.n	8006320 <__hexnan+0x64>
 8006312:	2d07      	cmp	r5, #7
 8006314:	dc04      	bgt.n	8006320 <__hexnan+0x64>
 8006316:	462a      	mov	r2, r5
 8006318:	4649      	mov	r1, r9
 800631a:	4620      	mov	r0, r4
 800631c:	f7ff ffa8 	bl	8006270 <L_shift>
 8006320:	4544      	cmp	r4, r8
 8006322:	d950      	bls.n	80063c6 <__hexnan+0x10a>
 8006324:	2300      	movs	r3, #0
 8006326:	f1a4 0904 	sub.w	r9, r4, #4
 800632a:	f844 3c04 	str.w	r3, [r4, #-4]
 800632e:	f8cd b008 	str.w	fp, [sp, #8]
 8006332:	464c      	mov	r4, r9
 8006334:	461d      	mov	r5, r3
 8006336:	9a03      	ldr	r2, [sp, #12]
 8006338:	e7d7      	b.n	80062ea <__hexnan+0x2e>
 800633a:	2929      	cmp	r1, #41	; 0x29
 800633c:	d156      	bne.n	80063ec <__hexnan+0x130>
 800633e:	3202      	adds	r2, #2
 8006340:	f8ca 2000 	str.w	r2, [sl]
 8006344:	f1bb 0f00 	cmp.w	fp, #0
 8006348:	d050      	beq.n	80063ec <__hexnan+0x130>
 800634a:	454c      	cmp	r4, r9
 800634c:	d206      	bcs.n	800635c <__hexnan+0xa0>
 800634e:	2d07      	cmp	r5, #7
 8006350:	dc04      	bgt.n	800635c <__hexnan+0xa0>
 8006352:	462a      	mov	r2, r5
 8006354:	4649      	mov	r1, r9
 8006356:	4620      	mov	r0, r4
 8006358:	f7ff ff8a 	bl	8006270 <L_shift>
 800635c:	4544      	cmp	r4, r8
 800635e:	d934      	bls.n	80063ca <__hexnan+0x10e>
 8006360:	f1a8 0204 	sub.w	r2, r8, #4
 8006364:	4623      	mov	r3, r4
 8006366:	f853 1b04 	ldr.w	r1, [r3], #4
 800636a:	f842 1f04 	str.w	r1, [r2, #4]!
 800636e:	429f      	cmp	r7, r3
 8006370:	d2f9      	bcs.n	8006366 <__hexnan+0xaa>
 8006372:	1b3b      	subs	r3, r7, r4
 8006374:	f023 0303 	bic.w	r3, r3, #3
 8006378:	3304      	adds	r3, #4
 800637a:	3401      	adds	r4, #1
 800637c:	3e03      	subs	r6, #3
 800637e:	42b4      	cmp	r4, r6
 8006380:	bf88      	it	hi
 8006382:	2304      	movhi	r3, #4
 8006384:	4443      	add	r3, r8
 8006386:	2200      	movs	r2, #0
 8006388:	f843 2b04 	str.w	r2, [r3], #4
 800638c:	429f      	cmp	r7, r3
 800638e:	d2fb      	bcs.n	8006388 <__hexnan+0xcc>
 8006390:	683b      	ldr	r3, [r7, #0]
 8006392:	b91b      	cbnz	r3, 800639c <__hexnan+0xe0>
 8006394:	4547      	cmp	r7, r8
 8006396:	d127      	bne.n	80063e8 <__hexnan+0x12c>
 8006398:	2301      	movs	r3, #1
 800639a:	603b      	str	r3, [r7, #0]
 800639c:	2005      	movs	r0, #5
 800639e:	e026      	b.n	80063ee <__hexnan+0x132>
 80063a0:	3501      	adds	r5, #1
 80063a2:	2d08      	cmp	r5, #8
 80063a4:	f10b 0b01 	add.w	fp, fp, #1
 80063a8:	dd06      	ble.n	80063b8 <__hexnan+0xfc>
 80063aa:	4544      	cmp	r4, r8
 80063ac:	d9c3      	bls.n	8006336 <__hexnan+0x7a>
 80063ae:	2300      	movs	r3, #0
 80063b0:	f844 3c04 	str.w	r3, [r4, #-4]
 80063b4:	2501      	movs	r5, #1
 80063b6:	3c04      	subs	r4, #4
 80063b8:	6822      	ldr	r2, [r4, #0]
 80063ba:	f000 000f 	and.w	r0, r0, #15
 80063be:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 80063c2:	6022      	str	r2, [r4, #0]
 80063c4:	e7b7      	b.n	8006336 <__hexnan+0x7a>
 80063c6:	2508      	movs	r5, #8
 80063c8:	e7b5      	b.n	8006336 <__hexnan+0x7a>
 80063ca:	9b01      	ldr	r3, [sp, #4]
 80063cc:	2b00      	cmp	r3, #0
 80063ce:	d0df      	beq.n	8006390 <__hexnan+0xd4>
 80063d0:	f04f 32ff 	mov.w	r2, #4294967295
 80063d4:	f1c3 0320 	rsb	r3, r3, #32
 80063d8:	fa22 f303 	lsr.w	r3, r2, r3
 80063dc:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80063e0:	401a      	ands	r2, r3
 80063e2:	f846 2c04 	str.w	r2, [r6, #-4]
 80063e6:	e7d3      	b.n	8006390 <__hexnan+0xd4>
 80063e8:	3f04      	subs	r7, #4
 80063ea:	e7d1      	b.n	8006390 <__hexnan+0xd4>
 80063ec:	2004      	movs	r0, #4
 80063ee:	b007      	add	sp, #28
 80063f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080063f4 <_localeconv_r>:
 80063f4:	4800      	ldr	r0, [pc, #0]	; (80063f8 <_localeconv_r+0x4>)
 80063f6:	4770      	bx	lr
 80063f8:	20000184 	.word	0x20000184

080063fc <__retarget_lock_init_recursive>:
 80063fc:	4770      	bx	lr

080063fe <__retarget_lock_acquire_recursive>:
 80063fe:	4770      	bx	lr

08006400 <__retarget_lock_release_recursive>:
 8006400:	4770      	bx	lr
	...

08006404 <malloc>:
 8006404:	4b02      	ldr	r3, [pc, #8]	; (8006410 <malloc+0xc>)
 8006406:	4601      	mov	r1, r0
 8006408:	6818      	ldr	r0, [r3, #0]
 800640a:	f000 bd67 	b.w	8006edc <_malloc_r>
 800640e:	bf00      	nop
 8006410:	2000002c 	.word	0x2000002c

08006414 <__ascii_mbtowc>:
 8006414:	b082      	sub	sp, #8
 8006416:	b901      	cbnz	r1, 800641a <__ascii_mbtowc+0x6>
 8006418:	a901      	add	r1, sp, #4
 800641a:	b142      	cbz	r2, 800642e <__ascii_mbtowc+0x1a>
 800641c:	b14b      	cbz	r3, 8006432 <__ascii_mbtowc+0x1e>
 800641e:	7813      	ldrb	r3, [r2, #0]
 8006420:	600b      	str	r3, [r1, #0]
 8006422:	7812      	ldrb	r2, [r2, #0]
 8006424:	1e10      	subs	r0, r2, #0
 8006426:	bf18      	it	ne
 8006428:	2001      	movne	r0, #1
 800642a:	b002      	add	sp, #8
 800642c:	4770      	bx	lr
 800642e:	4610      	mov	r0, r2
 8006430:	e7fb      	b.n	800642a <__ascii_mbtowc+0x16>
 8006432:	f06f 0001 	mvn.w	r0, #1
 8006436:	e7f8      	b.n	800642a <__ascii_mbtowc+0x16>

08006438 <memcpy>:
 8006438:	440a      	add	r2, r1
 800643a:	4291      	cmp	r1, r2
 800643c:	f100 33ff 	add.w	r3, r0, #4294967295
 8006440:	d100      	bne.n	8006444 <memcpy+0xc>
 8006442:	4770      	bx	lr
 8006444:	b510      	push	{r4, lr}
 8006446:	f811 4b01 	ldrb.w	r4, [r1], #1
 800644a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800644e:	4291      	cmp	r1, r2
 8006450:	d1f9      	bne.n	8006446 <memcpy+0xe>
 8006452:	bd10      	pop	{r4, pc}

08006454 <_Balloc>:
 8006454:	b570      	push	{r4, r5, r6, lr}
 8006456:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006458:	4604      	mov	r4, r0
 800645a:	460d      	mov	r5, r1
 800645c:	b976      	cbnz	r6, 800647c <_Balloc+0x28>
 800645e:	2010      	movs	r0, #16
 8006460:	f7ff ffd0 	bl	8006404 <malloc>
 8006464:	4602      	mov	r2, r0
 8006466:	6260      	str	r0, [r4, #36]	; 0x24
 8006468:	b920      	cbnz	r0, 8006474 <_Balloc+0x20>
 800646a:	4b18      	ldr	r3, [pc, #96]	; (80064cc <_Balloc+0x78>)
 800646c:	4818      	ldr	r0, [pc, #96]	; (80064d0 <_Balloc+0x7c>)
 800646e:	2166      	movs	r1, #102	; 0x66
 8006470:	f001 f856 	bl	8007520 <__assert_func>
 8006474:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006478:	6006      	str	r6, [r0, #0]
 800647a:	60c6      	str	r6, [r0, #12]
 800647c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800647e:	68f3      	ldr	r3, [r6, #12]
 8006480:	b183      	cbz	r3, 80064a4 <_Balloc+0x50>
 8006482:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006484:	68db      	ldr	r3, [r3, #12]
 8006486:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800648a:	b9b8      	cbnz	r0, 80064bc <_Balloc+0x68>
 800648c:	2101      	movs	r1, #1
 800648e:	fa01 f605 	lsl.w	r6, r1, r5
 8006492:	1d72      	adds	r2, r6, #5
 8006494:	0092      	lsls	r2, r2, #2
 8006496:	4620      	mov	r0, r4
 8006498:	f000 fc9d 	bl	8006dd6 <_calloc_r>
 800649c:	b160      	cbz	r0, 80064b8 <_Balloc+0x64>
 800649e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80064a2:	e00e      	b.n	80064c2 <_Balloc+0x6e>
 80064a4:	2221      	movs	r2, #33	; 0x21
 80064a6:	2104      	movs	r1, #4
 80064a8:	4620      	mov	r0, r4
 80064aa:	f000 fc94 	bl	8006dd6 <_calloc_r>
 80064ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80064b0:	60f0      	str	r0, [r6, #12]
 80064b2:	68db      	ldr	r3, [r3, #12]
 80064b4:	2b00      	cmp	r3, #0
 80064b6:	d1e4      	bne.n	8006482 <_Balloc+0x2e>
 80064b8:	2000      	movs	r0, #0
 80064ba:	bd70      	pop	{r4, r5, r6, pc}
 80064bc:	6802      	ldr	r2, [r0, #0]
 80064be:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80064c2:	2300      	movs	r3, #0
 80064c4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80064c8:	e7f7      	b.n	80064ba <_Balloc+0x66>
 80064ca:	bf00      	nop
 80064cc:	08008b9e 	.word	0x08008b9e
 80064d0:	08008d00 	.word	0x08008d00

080064d4 <_Bfree>:
 80064d4:	b570      	push	{r4, r5, r6, lr}
 80064d6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80064d8:	4605      	mov	r5, r0
 80064da:	460c      	mov	r4, r1
 80064dc:	b976      	cbnz	r6, 80064fc <_Bfree+0x28>
 80064de:	2010      	movs	r0, #16
 80064e0:	f7ff ff90 	bl	8006404 <malloc>
 80064e4:	4602      	mov	r2, r0
 80064e6:	6268      	str	r0, [r5, #36]	; 0x24
 80064e8:	b920      	cbnz	r0, 80064f4 <_Bfree+0x20>
 80064ea:	4b09      	ldr	r3, [pc, #36]	; (8006510 <_Bfree+0x3c>)
 80064ec:	4809      	ldr	r0, [pc, #36]	; (8006514 <_Bfree+0x40>)
 80064ee:	218a      	movs	r1, #138	; 0x8a
 80064f0:	f001 f816 	bl	8007520 <__assert_func>
 80064f4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80064f8:	6006      	str	r6, [r0, #0]
 80064fa:	60c6      	str	r6, [r0, #12]
 80064fc:	b13c      	cbz	r4, 800650e <_Bfree+0x3a>
 80064fe:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006500:	6862      	ldr	r2, [r4, #4]
 8006502:	68db      	ldr	r3, [r3, #12]
 8006504:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006508:	6021      	str	r1, [r4, #0]
 800650a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800650e:	bd70      	pop	{r4, r5, r6, pc}
 8006510:	08008b9e 	.word	0x08008b9e
 8006514:	08008d00 	.word	0x08008d00

08006518 <__multadd>:
 8006518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800651c:	690d      	ldr	r5, [r1, #16]
 800651e:	4607      	mov	r7, r0
 8006520:	460c      	mov	r4, r1
 8006522:	461e      	mov	r6, r3
 8006524:	f101 0c14 	add.w	ip, r1, #20
 8006528:	2000      	movs	r0, #0
 800652a:	f8dc 3000 	ldr.w	r3, [ip]
 800652e:	b299      	uxth	r1, r3
 8006530:	fb02 6101 	mla	r1, r2, r1, r6
 8006534:	0c1e      	lsrs	r6, r3, #16
 8006536:	0c0b      	lsrs	r3, r1, #16
 8006538:	fb02 3306 	mla	r3, r2, r6, r3
 800653c:	b289      	uxth	r1, r1
 800653e:	3001      	adds	r0, #1
 8006540:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006544:	4285      	cmp	r5, r0
 8006546:	f84c 1b04 	str.w	r1, [ip], #4
 800654a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800654e:	dcec      	bgt.n	800652a <__multadd+0x12>
 8006550:	b30e      	cbz	r6, 8006596 <__multadd+0x7e>
 8006552:	68a3      	ldr	r3, [r4, #8]
 8006554:	42ab      	cmp	r3, r5
 8006556:	dc19      	bgt.n	800658c <__multadd+0x74>
 8006558:	6861      	ldr	r1, [r4, #4]
 800655a:	4638      	mov	r0, r7
 800655c:	3101      	adds	r1, #1
 800655e:	f7ff ff79 	bl	8006454 <_Balloc>
 8006562:	4680      	mov	r8, r0
 8006564:	b928      	cbnz	r0, 8006572 <__multadd+0x5a>
 8006566:	4602      	mov	r2, r0
 8006568:	4b0c      	ldr	r3, [pc, #48]	; (800659c <__multadd+0x84>)
 800656a:	480d      	ldr	r0, [pc, #52]	; (80065a0 <__multadd+0x88>)
 800656c:	21b5      	movs	r1, #181	; 0xb5
 800656e:	f000 ffd7 	bl	8007520 <__assert_func>
 8006572:	6922      	ldr	r2, [r4, #16]
 8006574:	3202      	adds	r2, #2
 8006576:	f104 010c 	add.w	r1, r4, #12
 800657a:	0092      	lsls	r2, r2, #2
 800657c:	300c      	adds	r0, #12
 800657e:	f7ff ff5b 	bl	8006438 <memcpy>
 8006582:	4621      	mov	r1, r4
 8006584:	4638      	mov	r0, r7
 8006586:	f7ff ffa5 	bl	80064d4 <_Bfree>
 800658a:	4644      	mov	r4, r8
 800658c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006590:	3501      	adds	r5, #1
 8006592:	615e      	str	r6, [r3, #20]
 8006594:	6125      	str	r5, [r4, #16]
 8006596:	4620      	mov	r0, r4
 8006598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800659c:	08008c10 	.word	0x08008c10
 80065a0:	08008d00 	.word	0x08008d00

080065a4 <__s2b>:
 80065a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80065a8:	460c      	mov	r4, r1
 80065aa:	4615      	mov	r5, r2
 80065ac:	461f      	mov	r7, r3
 80065ae:	2209      	movs	r2, #9
 80065b0:	3308      	adds	r3, #8
 80065b2:	4606      	mov	r6, r0
 80065b4:	fb93 f3f2 	sdiv	r3, r3, r2
 80065b8:	2100      	movs	r1, #0
 80065ba:	2201      	movs	r2, #1
 80065bc:	429a      	cmp	r2, r3
 80065be:	db09      	blt.n	80065d4 <__s2b+0x30>
 80065c0:	4630      	mov	r0, r6
 80065c2:	f7ff ff47 	bl	8006454 <_Balloc>
 80065c6:	b940      	cbnz	r0, 80065da <__s2b+0x36>
 80065c8:	4602      	mov	r2, r0
 80065ca:	4b19      	ldr	r3, [pc, #100]	; (8006630 <__s2b+0x8c>)
 80065cc:	4819      	ldr	r0, [pc, #100]	; (8006634 <__s2b+0x90>)
 80065ce:	21ce      	movs	r1, #206	; 0xce
 80065d0:	f000 ffa6 	bl	8007520 <__assert_func>
 80065d4:	0052      	lsls	r2, r2, #1
 80065d6:	3101      	adds	r1, #1
 80065d8:	e7f0      	b.n	80065bc <__s2b+0x18>
 80065da:	9b08      	ldr	r3, [sp, #32]
 80065dc:	6143      	str	r3, [r0, #20]
 80065de:	2d09      	cmp	r5, #9
 80065e0:	f04f 0301 	mov.w	r3, #1
 80065e4:	6103      	str	r3, [r0, #16]
 80065e6:	dd16      	ble.n	8006616 <__s2b+0x72>
 80065e8:	f104 0909 	add.w	r9, r4, #9
 80065ec:	46c8      	mov	r8, r9
 80065ee:	442c      	add	r4, r5
 80065f0:	f818 3b01 	ldrb.w	r3, [r8], #1
 80065f4:	4601      	mov	r1, r0
 80065f6:	3b30      	subs	r3, #48	; 0x30
 80065f8:	220a      	movs	r2, #10
 80065fa:	4630      	mov	r0, r6
 80065fc:	f7ff ff8c 	bl	8006518 <__multadd>
 8006600:	45a0      	cmp	r8, r4
 8006602:	d1f5      	bne.n	80065f0 <__s2b+0x4c>
 8006604:	f1a5 0408 	sub.w	r4, r5, #8
 8006608:	444c      	add	r4, r9
 800660a:	1b2d      	subs	r5, r5, r4
 800660c:	1963      	adds	r3, r4, r5
 800660e:	42bb      	cmp	r3, r7
 8006610:	db04      	blt.n	800661c <__s2b+0x78>
 8006612:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006616:	340a      	adds	r4, #10
 8006618:	2509      	movs	r5, #9
 800661a:	e7f6      	b.n	800660a <__s2b+0x66>
 800661c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006620:	4601      	mov	r1, r0
 8006622:	3b30      	subs	r3, #48	; 0x30
 8006624:	220a      	movs	r2, #10
 8006626:	4630      	mov	r0, r6
 8006628:	f7ff ff76 	bl	8006518 <__multadd>
 800662c:	e7ee      	b.n	800660c <__s2b+0x68>
 800662e:	bf00      	nop
 8006630:	08008c10 	.word	0x08008c10
 8006634:	08008d00 	.word	0x08008d00

08006638 <__hi0bits>:
 8006638:	0c03      	lsrs	r3, r0, #16
 800663a:	041b      	lsls	r3, r3, #16
 800663c:	b9d3      	cbnz	r3, 8006674 <__hi0bits+0x3c>
 800663e:	0400      	lsls	r0, r0, #16
 8006640:	2310      	movs	r3, #16
 8006642:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8006646:	bf04      	itt	eq
 8006648:	0200      	lsleq	r0, r0, #8
 800664a:	3308      	addeq	r3, #8
 800664c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8006650:	bf04      	itt	eq
 8006652:	0100      	lsleq	r0, r0, #4
 8006654:	3304      	addeq	r3, #4
 8006656:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800665a:	bf04      	itt	eq
 800665c:	0080      	lsleq	r0, r0, #2
 800665e:	3302      	addeq	r3, #2
 8006660:	2800      	cmp	r0, #0
 8006662:	db05      	blt.n	8006670 <__hi0bits+0x38>
 8006664:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8006668:	f103 0301 	add.w	r3, r3, #1
 800666c:	bf08      	it	eq
 800666e:	2320      	moveq	r3, #32
 8006670:	4618      	mov	r0, r3
 8006672:	4770      	bx	lr
 8006674:	2300      	movs	r3, #0
 8006676:	e7e4      	b.n	8006642 <__hi0bits+0xa>

08006678 <__lo0bits>:
 8006678:	6803      	ldr	r3, [r0, #0]
 800667a:	f013 0207 	ands.w	r2, r3, #7
 800667e:	4601      	mov	r1, r0
 8006680:	d00b      	beq.n	800669a <__lo0bits+0x22>
 8006682:	07da      	lsls	r2, r3, #31
 8006684:	d423      	bmi.n	80066ce <__lo0bits+0x56>
 8006686:	0798      	lsls	r0, r3, #30
 8006688:	bf49      	itett	mi
 800668a:	085b      	lsrmi	r3, r3, #1
 800668c:	089b      	lsrpl	r3, r3, #2
 800668e:	2001      	movmi	r0, #1
 8006690:	600b      	strmi	r3, [r1, #0]
 8006692:	bf5c      	itt	pl
 8006694:	600b      	strpl	r3, [r1, #0]
 8006696:	2002      	movpl	r0, #2
 8006698:	4770      	bx	lr
 800669a:	b298      	uxth	r0, r3
 800669c:	b9a8      	cbnz	r0, 80066ca <__lo0bits+0x52>
 800669e:	0c1b      	lsrs	r3, r3, #16
 80066a0:	2010      	movs	r0, #16
 80066a2:	b2da      	uxtb	r2, r3
 80066a4:	b90a      	cbnz	r2, 80066aa <__lo0bits+0x32>
 80066a6:	3008      	adds	r0, #8
 80066a8:	0a1b      	lsrs	r3, r3, #8
 80066aa:	071a      	lsls	r2, r3, #28
 80066ac:	bf04      	itt	eq
 80066ae:	091b      	lsreq	r3, r3, #4
 80066b0:	3004      	addeq	r0, #4
 80066b2:	079a      	lsls	r2, r3, #30
 80066b4:	bf04      	itt	eq
 80066b6:	089b      	lsreq	r3, r3, #2
 80066b8:	3002      	addeq	r0, #2
 80066ba:	07da      	lsls	r2, r3, #31
 80066bc:	d403      	bmi.n	80066c6 <__lo0bits+0x4e>
 80066be:	085b      	lsrs	r3, r3, #1
 80066c0:	f100 0001 	add.w	r0, r0, #1
 80066c4:	d005      	beq.n	80066d2 <__lo0bits+0x5a>
 80066c6:	600b      	str	r3, [r1, #0]
 80066c8:	4770      	bx	lr
 80066ca:	4610      	mov	r0, r2
 80066cc:	e7e9      	b.n	80066a2 <__lo0bits+0x2a>
 80066ce:	2000      	movs	r0, #0
 80066d0:	4770      	bx	lr
 80066d2:	2020      	movs	r0, #32
 80066d4:	4770      	bx	lr
	...

080066d8 <__i2b>:
 80066d8:	b510      	push	{r4, lr}
 80066da:	460c      	mov	r4, r1
 80066dc:	2101      	movs	r1, #1
 80066de:	f7ff feb9 	bl	8006454 <_Balloc>
 80066e2:	4602      	mov	r2, r0
 80066e4:	b928      	cbnz	r0, 80066f2 <__i2b+0x1a>
 80066e6:	4b05      	ldr	r3, [pc, #20]	; (80066fc <__i2b+0x24>)
 80066e8:	4805      	ldr	r0, [pc, #20]	; (8006700 <__i2b+0x28>)
 80066ea:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80066ee:	f000 ff17 	bl	8007520 <__assert_func>
 80066f2:	2301      	movs	r3, #1
 80066f4:	6144      	str	r4, [r0, #20]
 80066f6:	6103      	str	r3, [r0, #16]
 80066f8:	bd10      	pop	{r4, pc}
 80066fa:	bf00      	nop
 80066fc:	08008c10 	.word	0x08008c10
 8006700:	08008d00 	.word	0x08008d00

08006704 <__multiply>:
 8006704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006708:	4691      	mov	r9, r2
 800670a:	690a      	ldr	r2, [r1, #16]
 800670c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006710:	429a      	cmp	r2, r3
 8006712:	bfb8      	it	lt
 8006714:	460b      	movlt	r3, r1
 8006716:	460c      	mov	r4, r1
 8006718:	bfbc      	itt	lt
 800671a:	464c      	movlt	r4, r9
 800671c:	4699      	movlt	r9, r3
 800671e:	6927      	ldr	r7, [r4, #16]
 8006720:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8006724:	68a3      	ldr	r3, [r4, #8]
 8006726:	6861      	ldr	r1, [r4, #4]
 8006728:	eb07 060a 	add.w	r6, r7, sl
 800672c:	42b3      	cmp	r3, r6
 800672e:	b085      	sub	sp, #20
 8006730:	bfb8      	it	lt
 8006732:	3101      	addlt	r1, #1
 8006734:	f7ff fe8e 	bl	8006454 <_Balloc>
 8006738:	b930      	cbnz	r0, 8006748 <__multiply+0x44>
 800673a:	4602      	mov	r2, r0
 800673c:	4b44      	ldr	r3, [pc, #272]	; (8006850 <__multiply+0x14c>)
 800673e:	4845      	ldr	r0, [pc, #276]	; (8006854 <__multiply+0x150>)
 8006740:	f240 115d 	movw	r1, #349	; 0x15d
 8006744:	f000 feec 	bl	8007520 <__assert_func>
 8006748:	f100 0514 	add.w	r5, r0, #20
 800674c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006750:	462b      	mov	r3, r5
 8006752:	2200      	movs	r2, #0
 8006754:	4543      	cmp	r3, r8
 8006756:	d321      	bcc.n	800679c <__multiply+0x98>
 8006758:	f104 0314 	add.w	r3, r4, #20
 800675c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006760:	f109 0314 	add.w	r3, r9, #20
 8006764:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8006768:	9202      	str	r2, [sp, #8]
 800676a:	1b3a      	subs	r2, r7, r4
 800676c:	3a15      	subs	r2, #21
 800676e:	f022 0203 	bic.w	r2, r2, #3
 8006772:	3204      	adds	r2, #4
 8006774:	f104 0115 	add.w	r1, r4, #21
 8006778:	428f      	cmp	r7, r1
 800677a:	bf38      	it	cc
 800677c:	2204      	movcc	r2, #4
 800677e:	9201      	str	r2, [sp, #4]
 8006780:	9a02      	ldr	r2, [sp, #8]
 8006782:	9303      	str	r3, [sp, #12]
 8006784:	429a      	cmp	r2, r3
 8006786:	d80c      	bhi.n	80067a2 <__multiply+0x9e>
 8006788:	2e00      	cmp	r6, #0
 800678a:	dd03      	ble.n	8006794 <__multiply+0x90>
 800678c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006790:	2b00      	cmp	r3, #0
 8006792:	d05a      	beq.n	800684a <__multiply+0x146>
 8006794:	6106      	str	r6, [r0, #16]
 8006796:	b005      	add	sp, #20
 8006798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800679c:	f843 2b04 	str.w	r2, [r3], #4
 80067a0:	e7d8      	b.n	8006754 <__multiply+0x50>
 80067a2:	f8b3 a000 	ldrh.w	sl, [r3]
 80067a6:	f1ba 0f00 	cmp.w	sl, #0
 80067aa:	d024      	beq.n	80067f6 <__multiply+0xf2>
 80067ac:	f104 0e14 	add.w	lr, r4, #20
 80067b0:	46a9      	mov	r9, r5
 80067b2:	f04f 0c00 	mov.w	ip, #0
 80067b6:	f85e 2b04 	ldr.w	r2, [lr], #4
 80067ba:	f8d9 1000 	ldr.w	r1, [r9]
 80067be:	fa1f fb82 	uxth.w	fp, r2
 80067c2:	b289      	uxth	r1, r1
 80067c4:	fb0a 110b 	mla	r1, sl, fp, r1
 80067c8:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80067cc:	f8d9 2000 	ldr.w	r2, [r9]
 80067d0:	4461      	add	r1, ip
 80067d2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80067d6:	fb0a c20b 	mla	r2, sl, fp, ip
 80067da:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80067de:	b289      	uxth	r1, r1
 80067e0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80067e4:	4577      	cmp	r7, lr
 80067e6:	f849 1b04 	str.w	r1, [r9], #4
 80067ea:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80067ee:	d8e2      	bhi.n	80067b6 <__multiply+0xb2>
 80067f0:	9a01      	ldr	r2, [sp, #4]
 80067f2:	f845 c002 	str.w	ip, [r5, r2]
 80067f6:	9a03      	ldr	r2, [sp, #12]
 80067f8:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80067fc:	3304      	adds	r3, #4
 80067fe:	f1b9 0f00 	cmp.w	r9, #0
 8006802:	d020      	beq.n	8006846 <__multiply+0x142>
 8006804:	6829      	ldr	r1, [r5, #0]
 8006806:	f104 0c14 	add.w	ip, r4, #20
 800680a:	46ae      	mov	lr, r5
 800680c:	f04f 0a00 	mov.w	sl, #0
 8006810:	f8bc b000 	ldrh.w	fp, [ip]
 8006814:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8006818:	fb09 220b 	mla	r2, r9, fp, r2
 800681c:	4492      	add	sl, r2
 800681e:	b289      	uxth	r1, r1
 8006820:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8006824:	f84e 1b04 	str.w	r1, [lr], #4
 8006828:	f85c 2b04 	ldr.w	r2, [ip], #4
 800682c:	f8be 1000 	ldrh.w	r1, [lr]
 8006830:	0c12      	lsrs	r2, r2, #16
 8006832:	fb09 1102 	mla	r1, r9, r2, r1
 8006836:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800683a:	4567      	cmp	r7, ip
 800683c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006840:	d8e6      	bhi.n	8006810 <__multiply+0x10c>
 8006842:	9a01      	ldr	r2, [sp, #4]
 8006844:	50a9      	str	r1, [r5, r2]
 8006846:	3504      	adds	r5, #4
 8006848:	e79a      	b.n	8006780 <__multiply+0x7c>
 800684a:	3e01      	subs	r6, #1
 800684c:	e79c      	b.n	8006788 <__multiply+0x84>
 800684e:	bf00      	nop
 8006850:	08008c10 	.word	0x08008c10
 8006854:	08008d00 	.word	0x08008d00

08006858 <__pow5mult>:
 8006858:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800685c:	4615      	mov	r5, r2
 800685e:	f012 0203 	ands.w	r2, r2, #3
 8006862:	4606      	mov	r6, r0
 8006864:	460f      	mov	r7, r1
 8006866:	d007      	beq.n	8006878 <__pow5mult+0x20>
 8006868:	4c25      	ldr	r4, [pc, #148]	; (8006900 <__pow5mult+0xa8>)
 800686a:	3a01      	subs	r2, #1
 800686c:	2300      	movs	r3, #0
 800686e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006872:	f7ff fe51 	bl	8006518 <__multadd>
 8006876:	4607      	mov	r7, r0
 8006878:	10ad      	asrs	r5, r5, #2
 800687a:	d03d      	beq.n	80068f8 <__pow5mult+0xa0>
 800687c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800687e:	b97c      	cbnz	r4, 80068a0 <__pow5mult+0x48>
 8006880:	2010      	movs	r0, #16
 8006882:	f7ff fdbf 	bl	8006404 <malloc>
 8006886:	4602      	mov	r2, r0
 8006888:	6270      	str	r0, [r6, #36]	; 0x24
 800688a:	b928      	cbnz	r0, 8006898 <__pow5mult+0x40>
 800688c:	4b1d      	ldr	r3, [pc, #116]	; (8006904 <__pow5mult+0xac>)
 800688e:	481e      	ldr	r0, [pc, #120]	; (8006908 <__pow5mult+0xb0>)
 8006890:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8006894:	f000 fe44 	bl	8007520 <__assert_func>
 8006898:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800689c:	6004      	str	r4, [r0, #0]
 800689e:	60c4      	str	r4, [r0, #12]
 80068a0:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80068a4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80068a8:	b94c      	cbnz	r4, 80068be <__pow5mult+0x66>
 80068aa:	f240 2171 	movw	r1, #625	; 0x271
 80068ae:	4630      	mov	r0, r6
 80068b0:	f7ff ff12 	bl	80066d8 <__i2b>
 80068b4:	2300      	movs	r3, #0
 80068b6:	f8c8 0008 	str.w	r0, [r8, #8]
 80068ba:	4604      	mov	r4, r0
 80068bc:	6003      	str	r3, [r0, #0]
 80068be:	f04f 0900 	mov.w	r9, #0
 80068c2:	07eb      	lsls	r3, r5, #31
 80068c4:	d50a      	bpl.n	80068dc <__pow5mult+0x84>
 80068c6:	4639      	mov	r1, r7
 80068c8:	4622      	mov	r2, r4
 80068ca:	4630      	mov	r0, r6
 80068cc:	f7ff ff1a 	bl	8006704 <__multiply>
 80068d0:	4639      	mov	r1, r7
 80068d2:	4680      	mov	r8, r0
 80068d4:	4630      	mov	r0, r6
 80068d6:	f7ff fdfd 	bl	80064d4 <_Bfree>
 80068da:	4647      	mov	r7, r8
 80068dc:	106d      	asrs	r5, r5, #1
 80068de:	d00b      	beq.n	80068f8 <__pow5mult+0xa0>
 80068e0:	6820      	ldr	r0, [r4, #0]
 80068e2:	b938      	cbnz	r0, 80068f4 <__pow5mult+0x9c>
 80068e4:	4622      	mov	r2, r4
 80068e6:	4621      	mov	r1, r4
 80068e8:	4630      	mov	r0, r6
 80068ea:	f7ff ff0b 	bl	8006704 <__multiply>
 80068ee:	6020      	str	r0, [r4, #0]
 80068f0:	f8c0 9000 	str.w	r9, [r0]
 80068f4:	4604      	mov	r4, r0
 80068f6:	e7e4      	b.n	80068c2 <__pow5mult+0x6a>
 80068f8:	4638      	mov	r0, r7
 80068fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80068fe:	bf00      	nop
 8006900:	08008e50 	.word	0x08008e50
 8006904:	08008b9e 	.word	0x08008b9e
 8006908:	08008d00 	.word	0x08008d00

0800690c <__lshift>:
 800690c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006910:	460c      	mov	r4, r1
 8006912:	6849      	ldr	r1, [r1, #4]
 8006914:	6923      	ldr	r3, [r4, #16]
 8006916:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800691a:	68a3      	ldr	r3, [r4, #8]
 800691c:	4607      	mov	r7, r0
 800691e:	4691      	mov	r9, r2
 8006920:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006924:	f108 0601 	add.w	r6, r8, #1
 8006928:	42b3      	cmp	r3, r6
 800692a:	db0b      	blt.n	8006944 <__lshift+0x38>
 800692c:	4638      	mov	r0, r7
 800692e:	f7ff fd91 	bl	8006454 <_Balloc>
 8006932:	4605      	mov	r5, r0
 8006934:	b948      	cbnz	r0, 800694a <__lshift+0x3e>
 8006936:	4602      	mov	r2, r0
 8006938:	4b2a      	ldr	r3, [pc, #168]	; (80069e4 <__lshift+0xd8>)
 800693a:	482b      	ldr	r0, [pc, #172]	; (80069e8 <__lshift+0xdc>)
 800693c:	f240 11d9 	movw	r1, #473	; 0x1d9
 8006940:	f000 fdee 	bl	8007520 <__assert_func>
 8006944:	3101      	adds	r1, #1
 8006946:	005b      	lsls	r3, r3, #1
 8006948:	e7ee      	b.n	8006928 <__lshift+0x1c>
 800694a:	2300      	movs	r3, #0
 800694c:	f100 0114 	add.w	r1, r0, #20
 8006950:	f100 0210 	add.w	r2, r0, #16
 8006954:	4618      	mov	r0, r3
 8006956:	4553      	cmp	r3, sl
 8006958:	db37      	blt.n	80069ca <__lshift+0xbe>
 800695a:	6920      	ldr	r0, [r4, #16]
 800695c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006960:	f104 0314 	add.w	r3, r4, #20
 8006964:	f019 091f 	ands.w	r9, r9, #31
 8006968:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800696c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8006970:	d02f      	beq.n	80069d2 <__lshift+0xc6>
 8006972:	f1c9 0e20 	rsb	lr, r9, #32
 8006976:	468a      	mov	sl, r1
 8006978:	f04f 0c00 	mov.w	ip, #0
 800697c:	681a      	ldr	r2, [r3, #0]
 800697e:	fa02 f209 	lsl.w	r2, r2, r9
 8006982:	ea42 020c 	orr.w	r2, r2, ip
 8006986:	f84a 2b04 	str.w	r2, [sl], #4
 800698a:	f853 2b04 	ldr.w	r2, [r3], #4
 800698e:	4298      	cmp	r0, r3
 8006990:	fa22 fc0e 	lsr.w	ip, r2, lr
 8006994:	d8f2      	bhi.n	800697c <__lshift+0x70>
 8006996:	1b03      	subs	r3, r0, r4
 8006998:	3b15      	subs	r3, #21
 800699a:	f023 0303 	bic.w	r3, r3, #3
 800699e:	3304      	adds	r3, #4
 80069a0:	f104 0215 	add.w	r2, r4, #21
 80069a4:	4290      	cmp	r0, r2
 80069a6:	bf38      	it	cc
 80069a8:	2304      	movcc	r3, #4
 80069aa:	f841 c003 	str.w	ip, [r1, r3]
 80069ae:	f1bc 0f00 	cmp.w	ip, #0
 80069b2:	d001      	beq.n	80069b8 <__lshift+0xac>
 80069b4:	f108 0602 	add.w	r6, r8, #2
 80069b8:	3e01      	subs	r6, #1
 80069ba:	4638      	mov	r0, r7
 80069bc:	612e      	str	r6, [r5, #16]
 80069be:	4621      	mov	r1, r4
 80069c0:	f7ff fd88 	bl	80064d4 <_Bfree>
 80069c4:	4628      	mov	r0, r5
 80069c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80069ca:	f842 0f04 	str.w	r0, [r2, #4]!
 80069ce:	3301      	adds	r3, #1
 80069d0:	e7c1      	b.n	8006956 <__lshift+0x4a>
 80069d2:	3904      	subs	r1, #4
 80069d4:	f853 2b04 	ldr.w	r2, [r3], #4
 80069d8:	f841 2f04 	str.w	r2, [r1, #4]!
 80069dc:	4298      	cmp	r0, r3
 80069de:	d8f9      	bhi.n	80069d4 <__lshift+0xc8>
 80069e0:	e7ea      	b.n	80069b8 <__lshift+0xac>
 80069e2:	bf00      	nop
 80069e4:	08008c10 	.word	0x08008c10
 80069e8:	08008d00 	.word	0x08008d00

080069ec <__mcmp>:
 80069ec:	b530      	push	{r4, r5, lr}
 80069ee:	6902      	ldr	r2, [r0, #16]
 80069f0:	690c      	ldr	r4, [r1, #16]
 80069f2:	1b12      	subs	r2, r2, r4
 80069f4:	d10e      	bne.n	8006a14 <__mcmp+0x28>
 80069f6:	f100 0314 	add.w	r3, r0, #20
 80069fa:	3114      	adds	r1, #20
 80069fc:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8006a00:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8006a04:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8006a08:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8006a0c:	42a5      	cmp	r5, r4
 8006a0e:	d003      	beq.n	8006a18 <__mcmp+0x2c>
 8006a10:	d305      	bcc.n	8006a1e <__mcmp+0x32>
 8006a12:	2201      	movs	r2, #1
 8006a14:	4610      	mov	r0, r2
 8006a16:	bd30      	pop	{r4, r5, pc}
 8006a18:	4283      	cmp	r3, r0
 8006a1a:	d3f3      	bcc.n	8006a04 <__mcmp+0x18>
 8006a1c:	e7fa      	b.n	8006a14 <__mcmp+0x28>
 8006a1e:	f04f 32ff 	mov.w	r2, #4294967295
 8006a22:	e7f7      	b.n	8006a14 <__mcmp+0x28>

08006a24 <__mdiff>:
 8006a24:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006a28:	460c      	mov	r4, r1
 8006a2a:	4606      	mov	r6, r0
 8006a2c:	4611      	mov	r1, r2
 8006a2e:	4620      	mov	r0, r4
 8006a30:	4690      	mov	r8, r2
 8006a32:	f7ff ffdb 	bl	80069ec <__mcmp>
 8006a36:	1e05      	subs	r5, r0, #0
 8006a38:	d110      	bne.n	8006a5c <__mdiff+0x38>
 8006a3a:	4629      	mov	r1, r5
 8006a3c:	4630      	mov	r0, r6
 8006a3e:	f7ff fd09 	bl	8006454 <_Balloc>
 8006a42:	b930      	cbnz	r0, 8006a52 <__mdiff+0x2e>
 8006a44:	4b3a      	ldr	r3, [pc, #232]	; (8006b30 <__mdiff+0x10c>)
 8006a46:	4602      	mov	r2, r0
 8006a48:	f240 2132 	movw	r1, #562	; 0x232
 8006a4c:	4839      	ldr	r0, [pc, #228]	; (8006b34 <__mdiff+0x110>)
 8006a4e:	f000 fd67 	bl	8007520 <__assert_func>
 8006a52:	2301      	movs	r3, #1
 8006a54:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8006a58:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a5c:	bfa4      	itt	ge
 8006a5e:	4643      	movge	r3, r8
 8006a60:	46a0      	movge	r8, r4
 8006a62:	4630      	mov	r0, r6
 8006a64:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8006a68:	bfa6      	itte	ge
 8006a6a:	461c      	movge	r4, r3
 8006a6c:	2500      	movge	r5, #0
 8006a6e:	2501      	movlt	r5, #1
 8006a70:	f7ff fcf0 	bl	8006454 <_Balloc>
 8006a74:	b920      	cbnz	r0, 8006a80 <__mdiff+0x5c>
 8006a76:	4b2e      	ldr	r3, [pc, #184]	; (8006b30 <__mdiff+0x10c>)
 8006a78:	4602      	mov	r2, r0
 8006a7a:	f44f 7110 	mov.w	r1, #576	; 0x240
 8006a7e:	e7e5      	b.n	8006a4c <__mdiff+0x28>
 8006a80:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8006a84:	6926      	ldr	r6, [r4, #16]
 8006a86:	60c5      	str	r5, [r0, #12]
 8006a88:	f104 0914 	add.w	r9, r4, #20
 8006a8c:	f108 0514 	add.w	r5, r8, #20
 8006a90:	f100 0e14 	add.w	lr, r0, #20
 8006a94:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8006a98:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8006a9c:	f108 0210 	add.w	r2, r8, #16
 8006aa0:	46f2      	mov	sl, lr
 8006aa2:	2100      	movs	r1, #0
 8006aa4:	f859 3b04 	ldr.w	r3, [r9], #4
 8006aa8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8006aac:	fa1f f883 	uxth.w	r8, r3
 8006ab0:	fa11 f18b 	uxtah	r1, r1, fp
 8006ab4:	0c1b      	lsrs	r3, r3, #16
 8006ab6:	eba1 0808 	sub.w	r8, r1, r8
 8006aba:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8006abe:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8006ac2:	fa1f f888 	uxth.w	r8, r8
 8006ac6:	1419      	asrs	r1, r3, #16
 8006ac8:	454e      	cmp	r6, r9
 8006aca:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8006ace:	f84a 3b04 	str.w	r3, [sl], #4
 8006ad2:	d8e7      	bhi.n	8006aa4 <__mdiff+0x80>
 8006ad4:	1b33      	subs	r3, r6, r4
 8006ad6:	3b15      	subs	r3, #21
 8006ad8:	f023 0303 	bic.w	r3, r3, #3
 8006adc:	3304      	adds	r3, #4
 8006ade:	3415      	adds	r4, #21
 8006ae0:	42a6      	cmp	r6, r4
 8006ae2:	bf38      	it	cc
 8006ae4:	2304      	movcc	r3, #4
 8006ae6:	441d      	add	r5, r3
 8006ae8:	4473      	add	r3, lr
 8006aea:	469e      	mov	lr, r3
 8006aec:	462e      	mov	r6, r5
 8006aee:	4566      	cmp	r6, ip
 8006af0:	d30e      	bcc.n	8006b10 <__mdiff+0xec>
 8006af2:	f10c 0203 	add.w	r2, ip, #3
 8006af6:	1b52      	subs	r2, r2, r5
 8006af8:	f022 0203 	bic.w	r2, r2, #3
 8006afc:	3d03      	subs	r5, #3
 8006afe:	45ac      	cmp	ip, r5
 8006b00:	bf38      	it	cc
 8006b02:	2200      	movcc	r2, #0
 8006b04:	441a      	add	r2, r3
 8006b06:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8006b0a:	b17b      	cbz	r3, 8006b2c <__mdiff+0x108>
 8006b0c:	6107      	str	r7, [r0, #16]
 8006b0e:	e7a3      	b.n	8006a58 <__mdiff+0x34>
 8006b10:	f856 8b04 	ldr.w	r8, [r6], #4
 8006b14:	fa11 f288 	uxtah	r2, r1, r8
 8006b18:	1414      	asrs	r4, r2, #16
 8006b1a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8006b1e:	b292      	uxth	r2, r2
 8006b20:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006b24:	f84e 2b04 	str.w	r2, [lr], #4
 8006b28:	1421      	asrs	r1, r4, #16
 8006b2a:	e7e0      	b.n	8006aee <__mdiff+0xca>
 8006b2c:	3f01      	subs	r7, #1
 8006b2e:	e7ea      	b.n	8006b06 <__mdiff+0xe2>
 8006b30:	08008c10 	.word	0x08008c10
 8006b34:	08008d00 	.word	0x08008d00

08006b38 <__ulp>:
 8006b38:	b082      	sub	sp, #8
 8006b3a:	ed8d 0b00 	vstr	d0, [sp]
 8006b3e:	9b01      	ldr	r3, [sp, #4]
 8006b40:	4912      	ldr	r1, [pc, #72]	; (8006b8c <__ulp+0x54>)
 8006b42:	4019      	ands	r1, r3
 8006b44:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8006b48:	2900      	cmp	r1, #0
 8006b4a:	dd05      	ble.n	8006b58 <__ulp+0x20>
 8006b4c:	2200      	movs	r2, #0
 8006b4e:	460b      	mov	r3, r1
 8006b50:	ec43 2b10 	vmov	d0, r2, r3
 8006b54:	b002      	add	sp, #8
 8006b56:	4770      	bx	lr
 8006b58:	4249      	negs	r1, r1
 8006b5a:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8006b5e:	ea4f 5021 	mov.w	r0, r1, asr #20
 8006b62:	f04f 0200 	mov.w	r2, #0
 8006b66:	f04f 0300 	mov.w	r3, #0
 8006b6a:	da04      	bge.n	8006b76 <__ulp+0x3e>
 8006b6c:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8006b70:	fa41 f300 	asr.w	r3, r1, r0
 8006b74:	e7ec      	b.n	8006b50 <__ulp+0x18>
 8006b76:	f1a0 0114 	sub.w	r1, r0, #20
 8006b7a:	291e      	cmp	r1, #30
 8006b7c:	bfda      	itte	le
 8006b7e:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8006b82:	fa20 f101 	lsrle.w	r1, r0, r1
 8006b86:	2101      	movgt	r1, #1
 8006b88:	460a      	mov	r2, r1
 8006b8a:	e7e1      	b.n	8006b50 <__ulp+0x18>
 8006b8c:	7ff00000 	.word	0x7ff00000

08006b90 <__b2d>:
 8006b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b92:	6905      	ldr	r5, [r0, #16]
 8006b94:	f100 0714 	add.w	r7, r0, #20
 8006b98:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8006b9c:	1f2e      	subs	r6, r5, #4
 8006b9e:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8006ba2:	4620      	mov	r0, r4
 8006ba4:	f7ff fd48 	bl	8006638 <__hi0bits>
 8006ba8:	f1c0 0320 	rsb	r3, r0, #32
 8006bac:	280a      	cmp	r0, #10
 8006bae:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8006c2c <__b2d+0x9c>
 8006bb2:	600b      	str	r3, [r1, #0]
 8006bb4:	dc14      	bgt.n	8006be0 <__b2d+0x50>
 8006bb6:	f1c0 0e0b 	rsb	lr, r0, #11
 8006bba:	fa24 f10e 	lsr.w	r1, r4, lr
 8006bbe:	42b7      	cmp	r7, r6
 8006bc0:	ea41 030c 	orr.w	r3, r1, ip
 8006bc4:	bf34      	ite	cc
 8006bc6:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8006bca:	2100      	movcs	r1, #0
 8006bcc:	3015      	adds	r0, #21
 8006bce:	fa04 f000 	lsl.w	r0, r4, r0
 8006bd2:	fa21 f10e 	lsr.w	r1, r1, lr
 8006bd6:	ea40 0201 	orr.w	r2, r0, r1
 8006bda:	ec43 2b10 	vmov	d0, r2, r3
 8006bde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006be0:	42b7      	cmp	r7, r6
 8006be2:	bf3a      	itte	cc
 8006be4:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8006be8:	f1a5 0608 	subcc.w	r6, r5, #8
 8006bec:	2100      	movcs	r1, #0
 8006bee:	380b      	subs	r0, #11
 8006bf0:	d017      	beq.n	8006c22 <__b2d+0x92>
 8006bf2:	f1c0 0c20 	rsb	ip, r0, #32
 8006bf6:	fa04 f500 	lsl.w	r5, r4, r0
 8006bfa:	42be      	cmp	r6, r7
 8006bfc:	fa21 f40c 	lsr.w	r4, r1, ip
 8006c00:	ea45 0504 	orr.w	r5, r5, r4
 8006c04:	bf8c      	ite	hi
 8006c06:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8006c0a:	2400      	movls	r4, #0
 8006c0c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8006c10:	fa01 f000 	lsl.w	r0, r1, r0
 8006c14:	fa24 f40c 	lsr.w	r4, r4, ip
 8006c18:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8006c1c:	ea40 0204 	orr.w	r2, r0, r4
 8006c20:	e7db      	b.n	8006bda <__b2d+0x4a>
 8006c22:	ea44 030c 	orr.w	r3, r4, ip
 8006c26:	460a      	mov	r2, r1
 8006c28:	e7d7      	b.n	8006bda <__b2d+0x4a>
 8006c2a:	bf00      	nop
 8006c2c:	3ff00000 	.word	0x3ff00000

08006c30 <__d2b>:
 8006c30:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006c34:	4689      	mov	r9, r1
 8006c36:	2101      	movs	r1, #1
 8006c38:	ec57 6b10 	vmov	r6, r7, d0
 8006c3c:	4690      	mov	r8, r2
 8006c3e:	f7ff fc09 	bl	8006454 <_Balloc>
 8006c42:	4604      	mov	r4, r0
 8006c44:	b930      	cbnz	r0, 8006c54 <__d2b+0x24>
 8006c46:	4602      	mov	r2, r0
 8006c48:	4b25      	ldr	r3, [pc, #148]	; (8006ce0 <__d2b+0xb0>)
 8006c4a:	4826      	ldr	r0, [pc, #152]	; (8006ce4 <__d2b+0xb4>)
 8006c4c:	f240 310a 	movw	r1, #778	; 0x30a
 8006c50:	f000 fc66 	bl	8007520 <__assert_func>
 8006c54:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8006c58:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8006c5c:	bb35      	cbnz	r5, 8006cac <__d2b+0x7c>
 8006c5e:	2e00      	cmp	r6, #0
 8006c60:	9301      	str	r3, [sp, #4]
 8006c62:	d028      	beq.n	8006cb6 <__d2b+0x86>
 8006c64:	4668      	mov	r0, sp
 8006c66:	9600      	str	r6, [sp, #0]
 8006c68:	f7ff fd06 	bl	8006678 <__lo0bits>
 8006c6c:	9900      	ldr	r1, [sp, #0]
 8006c6e:	b300      	cbz	r0, 8006cb2 <__d2b+0x82>
 8006c70:	9a01      	ldr	r2, [sp, #4]
 8006c72:	f1c0 0320 	rsb	r3, r0, #32
 8006c76:	fa02 f303 	lsl.w	r3, r2, r3
 8006c7a:	430b      	orrs	r3, r1
 8006c7c:	40c2      	lsrs	r2, r0
 8006c7e:	6163      	str	r3, [r4, #20]
 8006c80:	9201      	str	r2, [sp, #4]
 8006c82:	9b01      	ldr	r3, [sp, #4]
 8006c84:	61a3      	str	r3, [r4, #24]
 8006c86:	2b00      	cmp	r3, #0
 8006c88:	bf14      	ite	ne
 8006c8a:	2202      	movne	r2, #2
 8006c8c:	2201      	moveq	r2, #1
 8006c8e:	6122      	str	r2, [r4, #16]
 8006c90:	b1d5      	cbz	r5, 8006cc8 <__d2b+0x98>
 8006c92:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8006c96:	4405      	add	r5, r0
 8006c98:	f8c9 5000 	str.w	r5, [r9]
 8006c9c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8006ca0:	f8c8 0000 	str.w	r0, [r8]
 8006ca4:	4620      	mov	r0, r4
 8006ca6:	b003      	add	sp, #12
 8006ca8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006cac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006cb0:	e7d5      	b.n	8006c5e <__d2b+0x2e>
 8006cb2:	6161      	str	r1, [r4, #20]
 8006cb4:	e7e5      	b.n	8006c82 <__d2b+0x52>
 8006cb6:	a801      	add	r0, sp, #4
 8006cb8:	f7ff fcde 	bl	8006678 <__lo0bits>
 8006cbc:	9b01      	ldr	r3, [sp, #4]
 8006cbe:	6163      	str	r3, [r4, #20]
 8006cc0:	2201      	movs	r2, #1
 8006cc2:	6122      	str	r2, [r4, #16]
 8006cc4:	3020      	adds	r0, #32
 8006cc6:	e7e3      	b.n	8006c90 <__d2b+0x60>
 8006cc8:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8006ccc:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006cd0:	f8c9 0000 	str.w	r0, [r9]
 8006cd4:	6918      	ldr	r0, [r3, #16]
 8006cd6:	f7ff fcaf 	bl	8006638 <__hi0bits>
 8006cda:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8006cde:	e7df      	b.n	8006ca0 <__d2b+0x70>
 8006ce0:	08008c10 	.word	0x08008c10
 8006ce4:	08008d00 	.word	0x08008d00

08006ce8 <__ratio>:
 8006ce8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cec:	4688      	mov	r8, r1
 8006cee:	4669      	mov	r1, sp
 8006cf0:	4681      	mov	r9, r0
 8006cf2:	f7ff ff4d 	bl	8006b90 <__b2d>
 8006cf6:	a901      	add	r1, sp, #4
 8006cf8:	4640      	mov	r0, r8
 8006cfa:	ec55 4b10 	vmov	r4, r5, d0
 8006cfe:	f7ff ff47 	bl	8006b90 <__b2d>
 8006d02:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006d06:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8006d0a:	eba3 0c02 	sub.w	ip, r3, r2
 8006d0e:	e9dd 3200 	ldrd	r3, r2, [sp]
 8006d12:	1a9b      	subs	r3, r3, r2
 8006d14:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8006d18:	ec51 0b10 	vmov	r0, r1, d0
 8006d1c:	2b00      	cmp	r3, #0
 8006d1e:	bfd6      	itet	le
 8006d20:	460a      	movle	r2, r1
 8006d22:	462a      	movgt	r2, r5
 8006d24:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8006d28:	468b      	mov	fp, r1
 8006d2a:	462f      	mov	r7, r5
 8006d2c:	bfd4      	ite	le
 8006d2e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8006d32:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8006d36:	4620      	mov	r0, r4
 8006d38:	ee10 2a10 	vmov	r2, s0
 8006d3c:	465b      	mov	r3, fp
 8006d3e:	4639      	mov	r1, r7
 8006d40:	f7f9 fd8c 	bl	800085c <__aeabi_ddiv>
 8006d44:	ec41 0b10 	vmov	d0, r0, r1
 8006d48:	b003      	add	sp, #12
 8006d4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006d4e <__copybits>:
 8006d4e:	3901      	subs	r1, #1
 8006d50:	b570      	push	{r4, r5, r6, lr}
 8006d52:	1149      	asrs	r1, r1, #5
 8006d54:	6914      	ldr	r4, [r2, #16]
 8006d56:	3101      	adds	r1, #1
 8006d58:	f102 0314 	add.w	r3, r2, #20
 8006d5c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8006d60:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8006d64:	1f05      	subs	r5, r0, #4
 8006d66:	42a3      	cmp	r3, r4
 8006d68:	d30c      	bcc.n	8006d84 <__copybits+0x36>
 8006d6a:	1aa3      	subs	r3, r4, r2
 8006d6c:	3b11      	subs	r3, #17
 8006d6e:	f023 0303 	bic.w	r3, r3, #3
 8006d72:	3211      	adds	r2, #17
 8006d74:	42a2      	cmp	r2, r4
 8006d76:	bf88      	it	hi
 8006d78:	2300      	movhi	r3, #0
 8006d7a:	4418      	add	r0, r3
 8006d7c:	2300      	movs	r3, #0
 8006d7e:	4288      	cmp	r0, r1
 8006d80:	d305      	bcc.n	8006d8e <__copybits+0x40>
 8006d82:	bd70      	pop	{r4, r5, r6, pc}
 8006d84:	f853 6b04 	ldr.w	r6, [r3], #4
 8006d88:	f845 6f04 	str.w	r6, [r5, #4]!
 8006d8c:	e7eb      	b.n	8006d66 <__copybits+0x18>
 8006d8e:	f840 3b04 	str.w	r3, [r0], #4
 8006d92:	e7f4      	b.n	8006d7e <__copybits+0x30>

08006d94 <__any_on>:
 8006d94:	f100 0214 	add.w	r2, r0, #20
 8006d98:	6900      	ldr	r0, [r0, #16]
 8006d9a:	114b      	asrs	r3, r1, #5
 8006d9c:	4298      	cmp	r0, r3
 8006d9e:	b510      	push	{r4, lr}
 8006da0:	db11      	blt.n	8006dc6 <__any_on+0x32>
 8006da2:	dd0a      	ble.n	8006dba <__any_on+0x26>
 8006da4:	f011 011f 	ands.w	r1, r1, #31
 8006da8:	d007      	beq.n	8006dba <__any_on+0x26>
 8006daa:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8006dae:	fa24 f001 	lsr.w	r0, r4, r1
 8006db2:	fa00 f101 	lsl.w	r1, r0, r1
 8006db6:	428c      	cmp	r4, r1
 8006db8:	d10b      	bne.n	8006dd2 <__any_on+0x3e>
 8006dba:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006dbe:	4293      	cmp	r3, r2
 8006dc0:	d803      	bhi.n	8006dca <__any_on+0x36>
 8006dc2:	2000      	movs	r0, #0
 8006dc4:	bd10      	pop	{r4, pc}
 8006dc6:	4603      	mov	r3, r0
 8006dc8:	e7f7      	b.n	8006dba <__any_on+0x26>
 8006dca:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8006dce:	2900      	cmp	r1, #0
 8006dd0:	d0f5      	beq.n	8006dbe <__any_on+0x2a>
 8006dd2:	2001      	movs	r0, #1
 8006dd4:	e7f6      	b.n	8006dc4 <__any_on+0x30>

08006dd6 <_calloc_r>:
 8006dd6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006dd8:	fba1 2402 	umull	r2, r4, r1, r2
 8006ddc:	b94c      	cbnz	r4, 8006df2 <_calloc_r+0x1c>
 8006dde:	4611      	mov	r1, r2
 8006de0:	9201      	str	r2, [sp, #4]
 8006de2:	f000 f87b 	bl	8006edc <_malloc_r>
 8006de6:	9a01      	ldr	r2, [sp, #4]
 8006de8:	4605      	mov	r5, r0
 8006dea:	b930      	cbnz	r0, 8006dfa <_calloc_r+0x24>
 8006dec:	4628      	mov	r0, r5
 8006dee:	b003      	add	sp, #12
 8006df0:	bd30      	pop	{r4, r5, pc}
 8006df2:	220c      	movs	r2, #12
 8006df4:	6002      	str	r2, [r0, #0]
 8006df6:	2500      	movs	r5, #0
 8006df8:	e7f8      	b.n	8006dec <_calloc_r+0x16>
 8006dfa:	4621      	mov	r1, r4
 8006dfc:	f7fc fac6 	bl	800338c <memset>
 8006e00:	e7f4      	b.n	8006dec <_calloc_r+0x16>
	...

08006e04 <_free_r>:
 8006e04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006e06:	2900      	cmp	r1, #0
 8006e08:	d044      	beq.n	8006e94 <_free_r+0x90>
 8006e0a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006e0e:	9001      	str	r0, [sp, #4]
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	f1a1 0404 	sub.w	r4, r1, #4
 8006e16:	bfb8      	it	lt
 8006e18:	18e4      	addlt	r4, r4, r3
 8006e1a:	f000 fd15 	bl	8007848 <__malloc_lock>
 8006e1e:	4a1e      	ldr	r2, [pc, #120]	; (8006e98 <_free_r+0x94>)
 8006e20:	9801      	ldr	r0, [sp, #4]
 8006e22:	6813      	ldr	r3, [r2, #0]
 8006e24:	b933      	cbnz	r3, 8006e34 <_free_r+0x30>
 8006e26:	6063      	str	r3, [r4, #4]
 8006e28:	6014      	str	r4, [r2, #0]
 8006e2a:	b003      	add	sp, #12
 8006e2c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006e30:	f000 bd10 	b.w	8007854 <__malloc_unlock>
 8006e34:	42a3      	cmp	r3, r4
 8006e36:	d908      	bls.n	8006e4a <_free_r+0x46>
 8006e38:	6825      	ldr	r5, [r4, #0]
 8006e3a:	1961      	adds	r1, r4, r5
 8006e3c:	428b      	cmp	r3, r1
 8006e3e:	bf01      	itttt	eq
 8006e40:	6819      	ldreq	r1, [r3, #0]
 8006e42:	685b      	ldreq	r3, [r3, #4]
 8006e44:	1949      	addeq	r1, r1, r5
 8006e46:	6021      	streq	r1, [r4, #0]
 8006e48:	e7ed      	b.n	8006e26 <_free_r+0x22>
 8006e4a:	461a      	mov	r2, r3
 8006e4c:	685b      	ldr	r3, [r3, #4]
 8006e4e:	b10b      	cbz	r3, 8006e54 <_free_r+0x50>
 8006e50:	42a3      	cmp	r3, r4
 8006e52:	d9fa      	bls.n	8006e4a <_free_r+0x46>
 8006e54:	6811      	ldr	r1, [r2, #0]
 8006e56:	1855      	adds	r5, r2, r1
 8006e58:	42a5      	cmp	r5, r4
 8006e5a:	d10b      	bne.n	8006e74 <_free_r+0x70>
 8006e5c:	6824      	ldr	r4, [r4, #0]
 8006e5e:	4421      	add	r1, r4
 8006e60:	1854      	adds	r4, r2, r1
 8006e62:	42a3      	cmp	r3, r4
 8006e64:	6011      	str	r1, [r2, #0]
 8006e66:	d1e0      	bne.n	8006e2a <_free_r+0x26>
 8006e68:	681c      	ldr	r4, [r3, #0]
 8006e6a:	685b      	ldr	r3, [r3, #4]
 8006e6c:	6053      	str	r3, [r2, #4]
 8006e6e:	4421      	add	r1, r4
 8006e70:	6011      	str	r1, [r2, #0]
 8006e72:	e7da      	b.n	8006e2a <_free_r+0x26>
 8006e74:	d902      	bls.n	8006e7c <_free_r+0x78>
 8006e76:	230c      	movs	r3, #12
 8006e78:	6003      	str	r3, [r0, #0]
 8006e7a:	e7d6      	b.n	8006e2a <_free_r+0x26>
 8006e7c:	6825      	ldr	r5, [r4, #0]
 8006e7e:	1961      	adds	r1, r4, r5
 8006e80:	428b      	cmp	r3, r1
 8006e82:	bf04      	itt	eq
 8006e84:	6819      	ldreq	r1, [r3, #0]
 8006e86:	685b      	ldreq	r3, [r3, #4]
 8006e88:	6063      	str	r3, [r4, #4]
 8006e8a:	bf04      	itt	eq
 8006e8c:	1949      	addeq	r1, r1, r5
 8006e8e:	6021      	streq	r1, [r4, #0]
 8006e90:	6054      	str	r4, [r2, #4]
 8006e92:	e7ca      	b.n	8006e2a <_free_r+0x26>
 8006e94:	b003      	add	sp, #12
 8006e96:	bd30      	pop	{r4, r5, pc}
 8006e98:	20000334 	.word	0x20000334

08006e9c <sbrk_aligned>:
 8006e9c:	b570      	push	{r4, r5, r6, lr}
 8006e9e:	4e0e      	ldr	r6, [pc, #56]	; (8006ed8 <sbrk_aligned+0x3c>)
 8006ea0:	460c      	mov	r4, r1
 8006ea2:	6831      	ldr	r1, [r6, #0]
 8006ea4:	4605      	mov	r5, r0
 8006ea6:	b911      	cbnz	r1, 8006eae <sbrk_aligned+0x12>
 8006ea8:	f000 f9f2 	bl	8007290 <_sbrk_r>
 8006eac:	6030      	str	r0, [r6, #0]
 8006eae:	4621      	mov	r1, r4
 8006eb0:	4628      	mov	r0, r5
 8006eb2:	f000 f9ed 	bl	8007290 <_sbrk_r>
 8006eb6:	1c43      	adds	r3, r0, #1
 8006eb8:	d00a      	beq.n	8006ed0 <sbrk_aligned+0x34>
 8006eba:	1cc4      	adds	r4, r0, #3
 8006ebc:	f024 0403 	bic.w	r4, r4, #3
 8006ec0:	42a0      	cmp	r0, r4
 8006ec2:	d007      	beq.n	8006ed4 <sbrk_aligned+0x38>
 8006ec4:	1a21      	subs	r1, r4, r0
 8006ec6:	4628      	mov	r0, r5
 8006ec8:	f000 f9e2 	bl	8007290 <_sbrk_r>
 8006ecc:	3001      	adds	r0, #1
 8006ece:	d101      	bne.n	8006ed4 <sbrk_aligned+0x38>
 8006ed0:	f04f 34ff 	mov.w	r4, #4294967295
 8006ed4:	4620      	mov	r0, r4
 8006ed6:	bd70      	pop	{r4, r5, r6, pc}
 8006ed8:	20000338 	.word	0x20000338

08006edc <_malloc_r>:
 8006edc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ee0:	1ccd      	adds	r5, r1, #3
 8006ee2:	f025 0503 	bic.w	r5, r5, #3
 8006ee6:	3508      	adds	r5, #8
 8006ee8:	2d0c      	cmp	r5, #12
 8006eea:	bf38      	it	cc
 8006eec:	250c      	movcc	r5, #12
 8006eee:	2d00      	cmp	r5, #0
 8006ef0:	4607      	mov	r7, r0
 8006ef2:	db01      	blt.n	8006ef8 <_malloc_r+0x1c>
 8006ef4:	42a9      	cmp	r1, r5
 8006ef6:	d905      	bls.n	8006f04 <_malloc_r+0x28>
 8006ef8:	230c      	movs	r3, #12
 8006efa:	603b      	str	r3, [r7, #0]
 8006efc:	2600      	movs	r6, #0
 8006efe:	4630      	mov	r0, r6
 8006f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f04:	4e2e      	ldr	r6, [pc, #184]	; (8006fc0 <_malloc_r+0xe4>)
 8006f06:	f000 fc9f 	bl	8007848 <__malloc_lock>
 8006f0a:	6833      	ldr	r3, [r6, #0]
 8006f0c:	461c      	mov	r4, r3
 8006f0e:	bb34      	cbnz	r4, 8006f5e <_malloc_r+0x82>
 8006f10:	4629      	mov	r1, r5
 8006f12:	4638      	mov	r0, r7
 8006f14:	f7ff ffc2 	bl	8006e9c <sbrk_aligned>
 8006f18:	1c43      	adds	r3, r0, #1
 8006f1a:	4604      	mov	r4, r0
 8006f1c:	d14d      	bne.n	8006fba <_malloc_r+0xde>
 8006f1e:	6834      	ldr	r4, [r6, #0]
 8006f20:	4626      	mov	r6, r4
 8006f22:	2e00      	cmp	r6, #0
 8006f24:	d140      	bne.n	8006fa8 <_malloc_r+0xcc>
 8006f26:	6823      	ldr	r3, [r4, #0]
 8006f28:	4631      	mov	r1, r6
 8006f2a:	4638      	mov	r0, r7
 8006f2c:	eb04 0803 	add.w	r8, r4, r3
 8006f30:	f000 f9ae 	bl	8007290 <_sbrk_r>
 8006f34:	4580      	cmp	r8, r0
 8006f36:	d13a      	bne.n	8006fae <_malloc_r+0xd2>
 8006f38:	6821      	ldr	r1, [r4, #0]
 8006f3a:	3503      	adds	r5, #3
 8006f3c:	1a6d      	subs	r5, r5, r1
 8006f3e:	f025 0503 	bic.w	r5, r5, #3
 8006f42:	3508      	adds	r5, #8
 8006f44:	2d0c      	cmp	r5, #12
 8006f46:	bf38      	it	cc
 8006f48:	250c      	movcc	r5, #12
 8006f4a:	4629      	mov	r1, r5
 8006f4c:	4638      	mov	r0, r7
 8006f4e:	f7ff ffa5 	bl	8006e9c <sbrk_aligned>
 8006f52:	3001      	adds	r0, #1
 8006f54:	d02b      	beq.n	8006fae <_malloc_r+0xd2>
 8006f56:	6823      	ldr	r3, [r4, #0]
 8006f58:	442b      	add	r3, r5
 8006f5a:	6023      	str	r3, [r4, #0]
 8006f5c:	e00e      	b.n	8006f7c <_malloc_r+0xa0>
 8006f5e:	6822      	ldr	r2, [r4, #0]
 8006f60:	1b52      	subs	r2, r2, r5
 8006f62:	d41e      	bmi.n	8006fa2 <_malloc_r+0xc6>
 8006f64:	2a0b      	cmp	r2, #11
 8006f66:	d916      	bls.n	8006f96 <_malloc_r+0xba>
 8006f68:	1961      	adds	r1, r4, r5
 8006f6a:	42a3      	cmp	r3, r4
 8006f6c:	6025      	str	r5, [r4, #0]
 8006f6e:	bf18      	it	ne
 8006f70:	6059      	strne	r1, [r3, #4]
 8006f72:	6863      	ldr	r3, [r4, #4]
 8006f74:	bf08      	it	eq
 8006f76:	6031      	streq	r1, [r6, #0]
 8006f78:	5162      	str	r2, [r4, r5]
 8006f7a:	604b      	str	r3, [r1, #4]
 8006f7c:	4638      	mov	r0, r7
 8006f7e:	f104 060b 	add.w	r6, r4, #11
 8006f82:	f000 fc67 	bl	8007854 <__malloc_unlock>
 8006f86:	f026 0607 	bic.w	r6, r6, #7
 8006f8a:	1d23      	adds	r3, r4, #4
 8006f8c:	1af2      	subs	r2, r6, r3
 8006f8e:	d0b6      	beq.n	8006efe <_malloc_r+0x22>
 8006f90:	1b9b      	subs	r3, r3, r6
 8006f92:	50a3      	str	r3, [r4, r2]
 8006f94:	e7b3      	b.n	8006efe <_malloc_r+0x22>
 8006f96:	6862      	ldr	r2, [r4, #4]
 8006f98:	42a3      	cmp	r3, r4
 8006f9a:	bf0c      	ite	eq
 8006f9c:	6032      	streq	r2, [r6, #0]
 8006f9e:	605a      	strne	r2, [r3, #4]
 8006fa0:	e7ec      	b.n	8006f7c <_malloc_r+0xa0>
 8006fa2:	4623      	mov	r3, r4
 8006fa4:	6864      	ldr	r4, [r4, #4]
 8006fa6:	e7b2      	b.n	8006f0e <_malloc_r+0x32>
 8006fa8:	4634      	mov	r4, r6
 8006faa:	6876      	ldr	r6, [r6, #4]
 8006fac:	e7b9      	b.n	8006f22 <_malloc_r+0x46>
 8006fae:	230c      	movs	r3, #12
 8006fb0:	603b      	str	r3, [r7, #0]
 8006fb2:	4638      	mov	r0, r7
 8006fb4:	f000 fc4e 	bl	8007854 <__malloc_unlock>
 8006fb8:	e7a1      	b.n	8006efe <_malloc_r+0x22>
 8006fba:	6025      	str	r5, [r4, #0]
 8006fbc:	e7de      	b.n	8006f7c <_malloc_r+0xa0>
 8006fbe:	bf00      	nop
 8006fc0:	20000334 	.word	0x20000334

08006fc4 <__ssputs_r>:
 8006fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006fc8:	688e      	ldr	r6, [r1, #8]
 8006fca:	429e      	cmp	r6, r3
 8006fcc:	4682      	mov	sl, r0
 8006fce:	460c      	mov	r4, r1
 8006fd0:	4690      	mov	r8, r2
 8006fd2:	461f      	mov	r7, r3
 8006fd4:	d838      	bhi.n	8007048 <__ssputs_r+0x84>
 8006fd6:	898a      	ldrh	r2, [r1, #12]
 8006fd8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006fdc:	d032      	beq.n	8007044 <__ssputs_r+0x80>
 8006fde:	6825      	ldr	r5, [r4, #0]
 8006fe0:	6909      	ldr	r1, [r1, #16]
 8006fe2:	eba5 0901 	sub.w	r9, r5, r1
 8006fe6:	6965      	ldr	r5, [r4, #20]
 8006fe8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006fec:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006ff0:	3301      	adds	r3, #1
 8006ff2:	444b      	add	r3, r9
 8006ff4:	106d      	asrs	r5, r5, #1
 8006ff6:	429d      	cmp	r5, r3
 8006ff8:	bf38      	it	cc
 8006ffa:	461d      	movcc	r5, r3
 8006ffc:	0553      	lsls	r3, r2, #21
 8006ffe:	d531      	bpl.n	8007064 <__ssputs_r+0xa0>
 8007000:	4629      	mov	r1, r5
 8007002:	f7ff ff6b 	bl	8006edc <_malloc_r>
 8007006:	4606      	mov	r6, r0
 8007008:	b950      	cbnz	r0, 8007020 <__ssputs_r+0x5c>
 800700a:	230c      	movs	r3, #12
 800700c:	f8ca 3000 	str.w	r3, [sl]
 8007010:	89a3      	ldrh	r3, [r4, #12]
 8007012:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007016:	81a3      	strh	r3, [r4, #12]
 8007018:	f04f 30ff 	mov.w	r0, #4294967295
 800701c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007020:	6921      	ldr	r1, [r4, #16]
 8007022:	464a      	mov	r2, r9
 8007024:	f7ff fa08 	bl	8006438 <memcpy>
 8007028:	89a3      	ldrh	r3, [r4, #12]
 800702a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800702e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007032:	81a3      	strh	r3, [r4, #12]
 8007034:	6126      	str	r6, [r4, #16]
 8007036:	6165      	str	r5, [r4, #20]
 8007038:	444e      	add	r6, r9
 800703a:	eba5 0509 	sub.w	r5, r5, r9
 800703e:	6026      	str	r6, [r4, #0]
 8007040:	60a5      	str	r5, [r4, #8]
 8007042:	463e      	mov	r6, r7
 8007044:	42be      	cmp	r6, r7
 8007046:	d900      	bls.n	800704a <__ssputs_r+0x86>
 8007048:	463e      	mov	r6, r7
 800704a:	6820      	ldr	r0, [r4, #0]
 800704c:	4632      	mov	r2, r6
 800704e:	4641      	mov	r1, r8
 8007050:	f000 fbe0 	bl	8007814 <memmove>
 8007054:	68a3      	ldr	r3, [r4, #8]
 8007056:	1b9b      	subs	r3, r3, r6
 8007058:	60a3      	str	r3, [r4, #8]
 800705a:	6823      	ldr	r3, [r4, #0]
 800705c:	4433      	add	r3, r6
 800705e:	6023      	str	r3, [r4, #0]
 8007060:	2000      	movs	r0, #0
 8007062:	e7db      	b.n	800701c <__ssputs_r+0x58>
 8007064:	462a      	mov	r2, r5
 8007066:	f000 fbfb 	bl	8007860 <_realloc_r>
 800706a:	4606      	mov	r6, r0
 800706c:	2800      	cmp	r0, #0
 800706e:	d1e1      	bne.n	8007034 <__ssputs_r+0x70>
 8007070:	6921      	ldr	r1, [r4, #16]
 8007072:	4650      	mov	r0, sl
 8007074:	f7ff fec6 	bl	8006e04 <_free_r>
 8007078:	e7c7      	b.n	800700a <__ssputs_r+0x46>
	...

0800707c <_svfiprintf_r>:
 800707c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007080:	4698      	mov	r8, r3
 8007082:	898b      	ldrh	r3, [r1, #12]
 8007084:	061b      	lsls	r3, r3, #24
 8007086:	b09d      	sub	sp, #116	; 0x74
 8007088:	4607      	mov	r7, r0
 800708a:	460d      	mov	r5, r1
 800708c:	4614      	mov	r4, r2
 800708e:	d50e      	bpl.n	80070ae <_svfiprintf_r+0x32>
 8007090:	690b      	ldr	r3, [r1, #16]
 8007092:	b963      	cbnz	r3, 80070ae <_svfiprintf_r+0x32>
 8007094:	2140      	movs	r1, #64	; 0x40
 8007096:	f7ff ff21 	bl	8006edc <_malloc_r>
 800709a:	6028      	str	r0, [r5, #0]
 800709c:	6128      	str	r0, [r5, #16]
 800709e:	b920      	cbnz	r0, 80070aa <_svfiprintf_r+0x2e>
 80070a0:	230c      	movs	r3, #12
 80070a2:	603b      	str	r3, [r7, #0]
 80070a4:	f04f 30ff 	mov.w	r0, #4294967295
 80070a8:	e0d1      	b.n	800724e <_svfiprintf_r+0x1d2>
 80070aa:	2340      	movs	r3, #64	; 0x40
 80070ac:	616b      	str	r3, [r5, #20]
 80070ae:	2300      	movs	r3, #0
 80070b0:	9309      	str	r3, [sp, #36]	; 0x24
 80070b2:	2320      	movs	r3, #32
 80070b4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80070b8:	f8cd 800c 	str.w	r8, [sp, #12]
 80070bc:	2330      	movs	r3, #48	; 0x30
 80070be:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8007268 <_svfiprintf_r+0x1ec>
 80070c2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80070c6:	f04f 0901 	mov.w	r9, #1
 80070ca:	4623      	mov	r3, r4
 80070cc:	469a      	mov	sl, r3
 80070ce:	f813 2b01 	ldrb.w	r2, [r3], #1
 80070d2:	b10a      	cbz	r2, 80070d8 <_svfiprintf_r+0x5c>
 80070d4:	2a25      	cmp	r2, #37	; 0x25
 80070d6:	d1f9      	bne.n	80070cc <_svfiprintf_r+0x50>
 80070d8:	ebba 0b04 	subs.w	fp, sl, r4
 80070dc:	d00b      	beq.n	80070f6 <_svfiprintf_r+0x7a>
 80070de:	465b      	mov	r3, fp
 80070e0:	4622      	mov	r2, r4
 80070e2:	4629      	mov	r1, r5
 80070e4:	4638      	mov	r0, r7
 80070e6:	f7ff ff6d 	bl	8006fc4 <__ssputs_r>
 80070ea:	3001      	adds	r0, #1
 80070ec:	f000 80aa 	beq.w	8007244 <_svfiprintf_r+0x1c8>
 80070f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80070f2:	445a      	add	r2, fp
 80070f4:	9209      	str	r2, [sp, #36]	; 0x24
 80070f6:	f89a 3000 	ldrb.w	r3, [sl]
 80070fa:	2b00      	cmp	r3, #0
 80070fc:	f000 80a2 	beq.w	8007244 <_svfiprintf_r+0x1c8>
 8007100:	2300      	movs	r3, #0
 8007102:	f04f 32ff 	mov.w	r2, #4294967295
 8007106:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800710a:	f10a 0a01 	add.w	sl, sl, #1
 800710e:	9304      	str	r3, [sp, #16]
 8007110:	9307      	str	r3, [sp, #28]
 8007112:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007116:	931a      	str	r3, [sp, #104]	; 0x68
 8007118:	4654      	mov	r4, sl
 800711a:	2205      	movs	r2, #5
 800711c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007120:	4851      	ldr	r0, [pc, #324]	; (8007268 <_svfiprintf_r+0x1ec>)
 8007122:	f7f9 f865 	bl	80001f0 <memchr>
 8007126:	9a04      	ldr	r2, [sp, #16]
 8007128:	b9d8      	cbnz	r0, 8007162 <_svfiprintf_r+0xe6>
 800712a:	06d0      	lsls	r0, r2, #27
 800712c:	bf44      	itt	mi
 800712e:	2320      	movmi	r3, #32
 8007130:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007134:	0711      	lsls	r1, r2, #28
 8007136:	bf44      	itt	mi
 8007138:	232b      	movmi	r3, #43	; 0x2b
 800713a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800713e:	f89a 3000 	ldrb.w	r3, [sl]
 8007142:	2b2a      	cmp	r3, #42	; 0x2a
 8007144:	d015      	beq.n	8007172 <_svfiprintf_r+0xf6>
 8007146:	9a07      	ldr	r2, [sp, #28]
 8007148:	4654      	mov	r4, sl
 800714a:	2000      	movs	r0, #0
 800714c:	f04f 0c0a 	mov.w	ip, #10
 8007150:	4621      	mov	r1, r4
 8007152:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007156:	3b30      	subs	r3, #48	; 0x30
 8007158:	2b09      	cmp	r3, #9
 800715a:	d94e      	bls.n	80071fa <_svfiprintf_r+0x17e>
 800715c:	b1b0      	cbz	r0, 800718c <_svfiprintf_r+0x110>
 800715e:	9207      	str	r2, [sp, #28]
 8007160:	e014      	b.n	800718c <_svfiprintf_r+0x110>
 8007162:	eba0 0308 	sub.w	r3, r0, r8
 8007166:	fa09 f303 	lsl.w	r3, r9, r3
 800716a:	4313      	orrs	r3, r2
 800716c:	9304      	str	r3, [sp, #16]
 800716e:	46a2      	mov	sl, r4
 8007170:	e7d2      	b.n	8007118 <_svfiprintf_r+0x9c>
 8007172:	9b03      	ldr	r3, [sp, #12]
 8007174:	1d19      	adds	r1, r3, #4
 8007176:	681b      	ldr	r3, [r3, #0]
 8007178:	9103      	str	r1, [sp, #12]
 800717a:	2b00      	cmp	r3, #0
 800717c:	bfbb      	ittet	lt
 800717e:	425b      	neglt	r3, r3
 8007180:	f042 0202 	orrlt.w	r2, r2, #2
 8007184:	9307      	strge	r3, [sp, #28]
 8007186:	9307      	strlt	r3, [sp, #28]
 8007188:	bfb8      	it	lt
 800718a:	9204      	strlt	r2, [sp, #16]
 800718c:	7823      	ldrb	r3, [r4, #0]
 800718e:	2b2e      	cmp	r3, #46	; 0x2e
 8007190:	d10c      	bne.n	80071ac <_svfiprintf_r+0x130>
 8007192:	7863      	ldrb	r3, [r4, #1]
 8007194:	2b2a      	cmp	r3, #42	; 0x2a
 8007196:	d135      	bne.n	8007204 <_svfiprintf_r+0x188>
 8007198:	9b03      	ldr	r3, [sp, #12]
 800719a:	1d1a      	adds	r2, r3, #4
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	9203      	str	r2, [sp, #12]
 80071a0:	2b00      	cmp	r3, #0
 80071a2:	bfb8      	it	lt
 80071a4:	f04f 33ff 	movlt.w	r3, #4294967295
 80071a8:	3402      	adds	r4, #2
 80071aa:	9305      	str	r3, [sp, #20]
 80071ac:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007278 <_svfiprintf_r+0x1fc>
 80071b0:	7821      	ldrb	r1, [r4, #0]
 80071b2:	2203      	movs	r2, #3
 80071b4:	4650      	mov	r0, sl
 80071b6:	f7f9 f81b 	bl	80001f0 <memchr>
 80071ba:	b140      	cbz	r0, 80071ce <_svfiprintf_r+0x152>
 80071bc:	2340      	movs	r3, #64	; 0x40
 80071be:	eba0 000a 	sub.w	r0, r0, sl
 80071c2:	fa03 f000 	lsl.w	r0, r3, r0
 80071c6:	9b04      	ldr	r3, [sp, #16]
 80071c8:	4303      	orrs	r3, r0
 80071ca:	3401      	adds	r4, #1
 80071cc:	9304      	str	r3, [sp, #16]
 80071ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80071d2:	4826      	ldr	r0, [pc, #152]	; (800726c <_svfiprintf_r+0x1f0>)
 80071d4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80071d8:	2206      	movs	r2, #6
 80071da:	f7f9 f809 	bl	80001f0 <memchr>
 80071de:	2800      	cmp	r0, #0
 80071e0:	d038      	beq.n	8007254 <_svfiprintf_r+0x1d8>
 80071e2:	4b23      	ldr	r3, [pc, #140]	; (8007270 <_svfiprintf_r+0x1f4>)
 80071e4:	bb1b      	cbnz	r3, 800722e <_svfiprintf_r+0x1b2>
 80071e6:	9b03      	ldr	r3, [sp, #12]
 80071e8:	3307      	adds	r3, #7
 80071ea:	f023 0307 	bic.w	r3, r3, #7
 80071ee:	3308      	adds	r3, #8
 80071f0:	9303      	str	r3, [sp, #12]
 80071f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80071f4:	4433      	add	r3, r6
 80071f6:	9309      	str	r3, [sp, #36]	; 0x24
 80071f8:	e767      	b.n	80070ca <_svfiprintf_r+0x4e>
 80071fa:	fb0c 3202 	mla	r2, ip, r2, r3
 80071fe:	460c      	mov	r4, r1
 8007200:	2001      	movs	r0, #1
 8007202:	e7a5      	b.n	8007150 <_svfiprintf_r+0xd4>
 8007204:	2300      	movs	r3, #0
 8007206:	3401      	adds	r4, #1
 8007208:	9305      	str	r3, [sp, #20]
 800720a:	4619      	mov	r1, r3
 800720c:	f04f 0c0a 	mov.w	ip, #10
 8007210:	4620      	mov	r0, r4
 8007212:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007216:	3a30      	subs	r2, #48	; 0x30
 8007218:	2a09      	cmp	r2, #9
 800721a:	d903      	bls.n	8007224 <_svfiprintf_r+0x1a8>
 800721c:	2b00      	cmp	r3, #0
 800721e:	d0c5      	beq.n	80071ac <_svfiprintf_r+0x130>
 8007220:	9105      	str	r1, [sp, #20]
 8007222:	e7c3      	b.n	80071ac <_svfiprintf_r+0x130>
 8007224:	fb0c 2101 	mla	r1, ip, r1, r2
 8007228:	4604      	mov	r4, r0
 800722a:	2301      	movs	r3, #1
 800722c:	e7f0      	b.n	8007210 <_svfiprintf_r+0x194>
 800722e:	ab03      	add	r3, sp, #12
 8007230:	9300      	str	r3, [sp, #0]
 8007232:	462a      	mov	r2, r5
 8007234:	4b0f      	ldr	r3, [pc, #60]	; (8007274 <_svfiprintf_r+0x1f8>)
 8007236:	a904      	add	r1, sp, #16
 8007238:	4638      	mov	r0, r7
 800723a:	f7fc f94f 	bl	80034dc <_printf_float>
 800723e:	1c42      	adds	r2, r0, #1
 8007240:	4606      	mov	r6, r0
 8007242:	d1d6      	bne.n	80071f2 <_svfiprintf_r+0x176>
 8007244:	89ab      	ldrh	r3, [r5, #12]
 8007246:	065b      	lsls	r3, r3, #25
 8007248:	f53f af2c 	bmi.w	80070a4 <_svfiprintf_r+0x28>
 800724c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800724e:	b01d      	add	sp, #116	; 0x74
 8007250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007254:	ab03      	add	r3, sp, #12
 8007256:	9300      	str	r3, [sp, #0]
 8007258:	462a      	mov	r2, r5
 800725a:	4b06      	ldr	r3, [pc, #24]	; (8007274 <_svfiprintf_r+0x1f8>)
 800725c:	a904      	add	r1, sp, #16
 800725e:	4638      	mov	r0, r7
 8007260:	f7fc fbe0 	bl	8003a24 <_printf_i>
 8007264:	e7eb      	b.n	800723e <_svfiprintf_r+0x1c2>
 8007266:	bf00      	nop
 8007268:	08008e5c 	.word	0x08008e5c
 800726c:	08008e66 	.word	0x08008e66
 8007270:	080034dd 	.word	0x080034dd
 8007274:	08006fc5 	.word	0x08006fc5
 8007278:	08008e62 	.word	0x08008e62
 800727c:	00000000 	.word	0x00000000

08007280 <nan>:
 8007280:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8007288 <nan+0x8>
 8007284:	4770      	bx	lr
 8007286:	bf00      	nop
 8007288:	00000000 	.word	0x00000000
 800728c:	7ff80000 	.word	0x7ff80000

08007290 <_sbrk_r>:
 8007290:	b538      	push	{r3, r4, r5, lr}
 8007292:	4d06      	ldr	r5, [pc, #24]	; (80072ac <_sbrk_r+0x1c>)
 8007294:	2300      	movs	r3, #0
 8007296:	4604      	mov	r4, r0
 8007298:	4608      	mov	r0, r1
 800729a:	602b      	str	r3, [r5, #0]
 800729c:	f7fb fdc6 	bl	8002e2c <_sbrk>
 80072a0:	1c43      	adds	r3, r0, #1
 80072a2:	d102      	bne.n	80072aa <_sbrk_r+0x1a>
 80072a4:	682b      	ldr	r3, [r5, #0]
 80072a6:	b103      	cbz	r3, 80072aa <_sbrk_r+0x1a>
 80072a8:	6023      	str	r3, [r4, #0]
 80072aa:	bd38      	pop	{r3, r4, r5, pc}
 80072ac:	2000033c 	.word	0x2000033c

080072b0 <__sread>:
 80072b0:	b510      	push	{r4, lr}
 80072b2:	460c      	mov	r4, r1
 80072b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80072b8:	f000 fc5a 	bl	8007b70 <_read_r>
 80072bc:	2800      	cmp	r0, #0
 80072be:	bfab      	itete	ge
 80072c0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80072c2:	89a3      	ldrhlt	r3, [r4, #12]
 80072c4:	181b      	addge	r3, r3, r0
 80072c6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80072ca:	bfac      	ite	ge
 80072cc:	6563      	strge	r3, [r4, #84]	; 0x54
 80072ce:	81a3      	strhlt	r3, [r4, #12]
 80072d0:	bd10      	pop	{r4, pc}

080072d2 <__swrite>:
 80072d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80072d6:	461f      	mov	r7, r3
 80072d8:	898b      	ldrh	r3, [r1, #12]
 80072da:	05db      	lsls	r3, r3, #23
 80072dc:	4605      	mov	r5, r0
 80072de:	460c      	mov	r4, r1
 80072e0:	4616      	mov	r6, r2
 80072e2:	d505      	bpl.n	80072f0 <__swrite+0x1e>
 80072e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80072e8:	2302      	movs	r3, #2
 80072ea:	2200      	movs	r2, #0
 80072ec:	f000 fa1a 	bl	8007724 <_lseek_r>
 80072f0:	89a3      	ldrh	r3, [r4, #12]
 80072f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80072f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80072fa:	81a3      	strh	r3, [r4, #12]
 80072fc:	4632      	mov	r2, r6
 80072fe:	463b      	mov	r3, r7
 8007300:	4628      	mov	r0, r5
 8007302:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007306:	f000 b88b 	b.w	8007420 <_write_r>

0800730a <__sseek>:
 800730a:	b510      	push	{r4, lr}
 800730c:	460c      	mov	r4, r1
 800730e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007312:	f000 fa07 	bl	8007724 <_lseek_r>
 8007316:	1c43      	adds	r3, r0, #1
 8007318:	89a3      	ldrh	r3, [r4, #12]
 800731a:	bf15      	itete	ne
 800731c:	6560      	strne	r0, [r4, #84]	; 0x54
 800731e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8007322:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8007326:	81a3      	strheq	r3, [r4, #12]
 8007328:	bf18      	it	ne
 800732a:	81a3      	strhne	r3, [r4, #12]
 800732c:	bd10      	pop	{r4, pc}

0800732e <__sclose>:
 800732e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007332:	f000 b913 	b.w	800755c <_close_r>

08007336 <strncmp>:
 8007336:	b510      	push	{r4, lr}
 8007338:	b17a      	cbz	r2, 800735a <strncmp+0x24>
 800733a:	4603      	mov	r3, r0
 800733c:	3901      	subs	r1, #1
 800733e:	1884      	adds	r4, r0, r2
 8007340:	f813 0b01 	ldrb.w	r0, [r3], #1
 8007344:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8007348:	4290      	cmp	r0, r2
 800734a:	d101      	bne.n	8007350 <strncmp+0x1a>
 800734c:	42a3      	cmp	r3, r4
 800734e:	d101      	bne.n	8007354 <strncmp+0x1e>
 8007350:	1a80      	subs	r0, r0, r2
 8007352:	bd10      	pop	{r4, pc}
 8007354:	2800      	cmp	r0, #0
 8007356:	d1f3      	bne.n	8007340 <strncmp+0xa>
 8007358:	e7fa      	b.n	8007350 <strncmp+0x1a>
 800735a:	4610      	mov	r0, r2
 800735c:	e7f9      	b.n	8007352 <strncmp+0x1c>
	...

08007360 <__swbuf_r>:
 8007360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007362:	460e      	mov	r6, r1
 8007364:	4614      	mov	r4, r2
 8007366:	4605      	mov	r5, r0
 8007368:	b118      	cbz	r0, 8007372 <__swbuf_r+0x12>
 800736a:	6983      	ldr	r3, [r0, #24]
 800736c:	b90b      	cbnz	r3, 8007372 <__swbuf_r+0x12>
 800736e:	f7fe fc35 	bl	8005bdc <__sinit>
 8007372:	4b21      	ldr	r3, [pc, #132]	; (80073f8 <__swbuf_r+0x98>)
 8007374:	429c      	cmp	r4, r3
 8007376:	d12b      	bne.n	80073d0 <__swbuf_r+0x70>
 8007378:	686c      	ldr	r4, [r5, #4]
 800737a:	69a3      	ldr	r3, [r4, #24]
 800737c:	60a3      	str	r3, [r4, #8]
 800737e:	89a3      	ldrh	r3, [r4, #12]
 8007380:	071a      	lsls	r2, r3, #28
 8007382:	d52f      	bpl.n	80073e4 <__swbuf_r+0x84>
 8007384:	6923      	ldr	r3, [r4, #16]
 8007386:	b36b      	cbz	r3, 80073e4 <__swbuf_r+0x84>
 8007388:	6923      	ldr	r3, [r4, #16]
 800738a:	6820      	ldr	r0, [r4, #0]
 800738c:	1ac0      	subs	r0, r0, r3
 800738e:	6963      	ldr	r3, [r4, #20]
 8007390:	b2f6      	uxtb	r6, r6
 8007392:	4283      	cmp	r3, r0
 8007394:	4637      	mov	r7, r6
 8007396:	dc04      	bgt.n	80073a2 <__swbuf_r+0x42>
 8007398:	4621      	mov	r1, r4
 800739a:	4628      	mov	r0, r5
 800739c:	f000 f974 	bl	8007688 <_fflush_r>
 80073a0:	bb30      	cbnz	r0, 80073f0 <__swbuf_r+0x90>
 80073a2:	68a3      	ldr	r3, [r4, #8]
 80073a4:	3b01      	subs	r3, #1
 80073a6:	60a3      	str	r3, [r4, #8]
 80073a8:	6823      	ldr	r3, [r4, #0]
 80073aa:	1c5a      	adds	r2, r3, #1
 80073ac:	6022      	str	r2, [r4, #0]
 80073ae:	701e      	strb	r6, [r3, #0]
 80073b0:	6963      	ldr	r3, [r4, #20]
 80073b2:	3001      	adds	r0, #1
 80073b4:	4283      	cmp	r3, r0
 80073b6:	d004      	beq.n	80073c2 <__swbuf_r+0x62>
 80073b8:	89a3      	ldrh	r3, [r4, #12]
 80073ba:	07db      	lsls	r3, r3, #31
 80073bc:	d506      	bpl.n	80073cc <__swbuf_r+0x6c>
 80073be:	2e0a      	cmp	r6, #10
 80073c0:	d104      	bne.n	80073cc <__swbuf_r+0x6c>
 80073c2:	4621      	mov	r1, r4
 80073c4:	4628      	mov	r0, r5
 80073c6:	f000 f95f 	bl	8007688 <_fflush_r>
 80073ca:	b988      	cbnz	r0, 80073f0 <__swbuf_r+0x90>
 80073cc:	4638      	mov	r0, r7
 80073ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80073d0:	4b0a      	ldr	r3, [pc, #40]	; (80073fc <__swbuf_r+0x9c>)
 80073d2:	429c      	cmp	r4, r3
 80073d4:	d101      	bne.n	80073da <__swbuf_r+0x7a>
 80073d6:	68ac      	ldr	r4, [r5, #8]
 80073d8:	e7cf      	b.n	800737a <__swbuf_r+0x1a>
 80073da:	4b09      	ldr	r3, [pc, #36]	; (8007400 <__swbuf_r+0xa0>)
 80073dc:	429c      	cmp	r4, r3
 80073de:	bf08      	it	eq
 80073e0:	68ec      	ldreq	r4, [r5, #12]
 80073e2:	e7ca      	b.n	800737a <__swbuf_r+0x1a>
 80073e4:	4621      	mov	r1, r4
 80073e6:	4628      	mov	r0, r5
 80073e8:	f000 f82c 	bl	8007444 <__swsetup_r>
 80073ec:	2800      	cmp	r0, #0
 80073ee:	d0cb      	beq.n	8007388 <__swbuf_r+0x28>
 80073f0:	f04f 37ff 	mov.w	r7, #4294967295
 80073f4:	e7ea      	b.n	80073cc <__swbuf_r+0x6c>
 80073f6:	bf00      	nop
 80073f8:	08008c44 	.word	0x08008c44
 80073fc:	08008c64 	.word	0x08008c64
 8007400:	08008c24 	.word	0x08008c24

08007404 <__ascii_wctomb>:
 8007404:	b149      	cbz	r1, 800741a <__ascii_wctomb+0x16>
 8007406:	2aff      	cmp	r2, #255	; 0xff
 8007408:	bf85      	ittet	hi
 800740a:	238a      	movhi	r3, #138	; 0x8a
 800740c:	6003      	strhi	r3, [r0, #0]
 800740e:	700a      	strbls	r2, [r1, #0]
 8007410:	f04f 30ff 	movhi.w	r0, #4294967295
 8007414:	bf98      	it	ls
 8007416:	2001      	movls	r0, #1
 8007418:	4770      	bx	lr
 800741a:	4608      	mov	r0, r1
 800741c:	4770      	bx	lr
	...

08007420 <_write_r>:
 8007420:	b538      	push	{r3, r4, r5, lr}
 8007422:	4d07      	ldr	r5, [pc, #28]	; (8007440 <_write_r+0x20>)
 8007424:	4604      	mov	r4, r0
 8007426:	4608      	mov	r0, r1
 8007428:	4611      	mov	r1, r2
 800742a:	2200      	movs	r2, #0
 800742c:	602a      	str	r2, [r5, #0]
 800742e:	461a      	mov	r2, r3
 8007430:	f7fb fcab 	bl	8002d8a <_write>
 8007434:	1c43      	adds	r3, r0, #1
 8007436:	d102      	bne.n	800743e <_write_r+0x1e>
 8007438:	682b      	ldr	r3, [r5, #0]
 800743a:	b103      	cbz	r3, 800743e <_write_r+0x1e>
 800743c:	6023      	str	r3, [r4, #0]
 800743e:	bd38      	pop	{r3, r4, r5, pc}
 8007440:	2000033c 	.word	0x2000033c

08007444 <__swsetup_r>:
 8007444:	4b32      	ldr	r3, [pc, #200]	; (8007510 <__swsetup_r+0xcc>)
 8007446:	b570      	push	{r4, r5, r6, lr}
 8007448:	681d      	ldr	r5, [r3, #0]
 800744a:	4606      	mov	r6, r0
 800744c:	460c      	mov	r4, r1
 800744e:	b125      	cbz	r5, 800745a <__swsetup_r+0x16>
 8007450:	69ab      	ldr	r3, [r5, #24]
 8007452:	b913      	cbnz	r3, 800745a <__swsetup_r+0x16>
 8007454:	4628      	mov	r0, r5
 8007456:	f7fe fbc1 	bl	8005bdc <__sinit>
 800745a:	4b2e      	ldr	r3, [pc, #184]	; (8007514 <__swsetup_r+0xd0>)
 800745c:	429c      	cmp	r4, r3
 800745e:	d10f      	bne.n	8007480 <__swsetup_r+0x3c>
 8007460:	686c      	ldr	r4, [r5, #4]
 8007462:	89a3      	ldrh	r3, [r4, #12]
 8007464:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007468:	0719      	lsls	r1, r3, #28
 800746a:	d42c      	bmi.n	80074c6 <__swsetup_r+0x82>
 800746c:	06dd      	lsls	r5, r3, #27
 800746e:	d411      	bmi.n	8007494 <__swsetup_r+0x50>
 8007470:	2309      	movs	r3, #9
 8007472:	6033      	str	r3, [r6, #0]
 8007474:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007478:	81a3      	strh	r3, [r4, #12]
 800747a:	f04f 30ff 	mov.w	r0, #4294967295
 800747e:	e03e      	b.n	80074fe <__swsetup_r+0xba>
 8007480:	4b25      	ldr	r3, [pc, #148]	; (8007518 <__swsetup_r+0xd4>)
 8007482:	429c      	cmp	r4, r3
 8007484:	d101      	bne.n	800748a <__swsetup_r+0x46>
 8007486:	68ac      	ldr	r4, [r5, #8]
 8007488:	e7eb      	b.n	8007462 <__swsetup_r+0x1e>
 800748a:	4b24      	ldr	r3, [pc, #144]	; (800751c <__swsetup_r+0xd8>)
 800748c:	429c      	cmp	r4, r3
 800748e:	bf08      	it	eq
 8007490:	68ec      	ldreq	r4, [r5, #12]
 8007492:	e7e6      	b.n	8007462 <__swsetup_r+0x1e>
 8007494:	0758      	lsls	r0, r3, #29
 8007496:	d512      	bpl.n	80074be <__swsetup_r+0x7a>
 8007498:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800749a:	b141      	cbz	r1, 80074ae <__swsetup_r+0x6a>
 800749c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80074a0:	4299      	cmp	r1, r3
 80074a2:	d002      	beq.n	80074aa <__swsetup_r+0x66>
 80074a4:	4630      	mov	r0, r6
 80074a6:	f7ff fcad 	bl	8006e04 <_free_r>
 80074aa:	2300      	movs	r3, #0
 80074ac:	6363      	str	r3, [r4, #52]	; 0x34
 80074ae:	89a3      	ldrh	r3, [r4, #12]
 80074b0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80074b4:	81a3      	strh	r3, [r4, #12]
 80074b6:	2300      	movs	r3, #0
 80074b8:	6063      	str	r3, [r4, #4]
 80074ba:	6923      	ldr	r3, [r4, #16]
 80074bc:	6023      	str	r3, [r4, #0]
 80074be:	89a3      	ldrh	r3, [r4, #12]
 80074c0:	f043 0308 	orr.w	r3, r3, #8
 80074c4:	81a3      	strh	r3, [r4, #12]
 80074c6:	6923      	ldr	r3, [r4, #16]
 80074c8:	b94b      	cbnz	r3, 80074de <__swsetup_r+0x9a>
 80074ca:	89a3      	ldrh	r3, [r4, #12]
 80074cc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80074d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80074d4:	d003      	beq.n	80074de <__swsetup_r+0x9a>
 80074d6:	4621      	mov	r1, r4
 80074d8:	4630      	mov	r0, r6
 80074da:	f000 f95b 	bl	8007794 <__smakebuf_r>
 80074de:	89a0      	ldrh	r0, [r4, #12]
 80074e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80074e4:	f010 0301 	ands.w	r3, r0, #1
 80074e8:	d00a      	beq.n	8007500 <__swsetup_r+0xbc>
 80074ea:	2300      	movs	r3, #0
 80074ec:	60a3      	str	r3, [r4, #8]
 80074ee:	6963      	ldr	r3, [r4, #20]
 80074f0:	425b      	negs	r3, r3
 80074f2:	61a3      	str	r3, [r4, #24]
 80074f4:	6923      	ldr	r3, [r4, #16]
 80074f6:	b943      	cbnz	r3, 800750a <__swsetup_r+0xc6>
 80074f8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80074fc:	d1ba      	bne.n	8007474 <__swsetup_r+0x30>
 80074fe:	bd70      	pop	{r4, r5, r6, pc}
 8007500:	0781      	lsls	r1, r0, #30
 8007502:	bf58      	it	pl
 8007504:	6963      	ldrpl	r3, [r4, #20]
 8007506:	60a3      	str	r3, [r4, #8]
 8007508:	e7f4      	b.n	80074f4 <__swsetup_r+0xb0>
 800750a:	2000      	movs	r0, #0
 800750c:	e7f7      	b.n	80074fe <__swsetup_r+0xba>
 800750e:	bf00      	nop
 8007510:	2000002c 	.word	0x2000002c
 8007514:	08008c44 	.word	0x08008c44
 8007518:	08008c64 	.word	0x08008c64
 800751c:	08008c24 	.word	0x08008c24

08007520 <__assert_func>:
 8007520:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007522:	4614      	mov	r4, r2
 8007524:	461a      	mov	r2, r3
 8007526:	4b09      	ldr	r3, [pc, #36]	; (800754c <__assert_func+0x2c>)
 8007528:	681b      	ldr	r3, [r3, #0]
 800752a:	4605      	mov	r5, r0
 800752c:	68d8      	ldr	r0, [r3, #12]
 800752e:	b14c      	cbz	r4, 8007544 <__assert_func+0x24>
 8007530:	4b07      	ldr	r3, [pc, #28]	; (8007550 <__assert_func+0x30>)
 8007532:	9100      	str	r1, [sp, #0]
 8007534:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8007538:	4906      	ldr	r1, [pc, #24]	; (8007554 <__assert_func+0x34>)
 800753a:	462b      	mov	r3, r5
 800753c:	f000 f8e0 	bl	8007700 <fiprintf>
 8007540:	f000 fb28 	bl	8007b94 <abort>
 8007544:	4b04      	ldr	r3, [pc, #16]	; (8007558 <__assert_func+0x38>)
 8007546:	461c      	mov	r4, r3
 8007548:	e7f3      	b.n	8007532 <__assert_func+0x12>
 800754a:	bf00      	nop
 800754c:	2000002c 	.word	0x2000002c
 8007550:	08008e6d 	.word	0x08008e6d
 8007554:	08008e7a 	.word	0x08008e7a
 8007558:	08008ea8 	.word	0x08008ea8

0800755c <_close_r>:
 800755c:	b538      	push	{r3, r4, r5, lr}
 800755e:	4d06      	ldr	r5, [pc, #24]	; (8007578 <_close_r+0x1c>)
 8007560:	2300      	movs	r3, #0
 8007562:	4604      	mov	r4, r0
 8007564:	4608      	mov	r0, r1
 8007566:	602b      	str	r3, [r5, #0]
 8007568:	f7fb fc2b 	bl	8002dc2 <_close>
 800756c:	1c43      	adds	r3, r0, #1
 800756e:	d102      	bne.n	8007576 <_close_r+0x1a>
 8007570:	682b      	ldr	r3, [r5, #0]
 8007572:	b103      	cbz	r3, 8007576 <_close_r+0x1a>
 8007574:	6023      	str	r3, [r4, #0]
 8007576:	bd38      	pop	{r3, r4, r5, pc}
 8007578:	2000033c 	.word	0x2000033c

0800757c <__sflush_r>:
 800757c:	898a      	ldrh	r2, [r1, #12]
 800757e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007582:	4605      	mov	r5, r0
 8007584:	0710      	lsls	r0, r2, #28
 8007586:	460c      	mov	r4, r1
 8007588:	d458      	bmi.n	800763c <__sflush_r+0xc0>
 800758a:	684b      	ldr	r3, [r1, #4]
 800758c:	2b00      	cmp	r3, #0
 800758e:	dc05      	bgt.n	800759c <__sflush_r+0x20>
 8007590:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8007592:	2b00      	cmp	r3, #0
 8007594:	dc02      	bgt.n	800759c <__sflush_r+0x20>
 8007596:	2000      	movs	r0, #0
 8007598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800759c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800759e:	2e00      	cmp	r6, #0
 80075a0:	d0f9      	beq.n	8007596 <__sflush_r+0x1a>
 80075a2:	2300      	movs	r3, #0
 80075a4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80075a8:	682f      	ldr	r7, [r5, #0]
 80075aa:	602b      	str	r3, [r5, #0]
 80075ac:	d032      	beq.n	8007614 <__sflush_r+0x98>
 80075ae:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80075b0:	89a3      	ldrh	r3, [r4, #12]
 80075b2:	075a      	lsls	r2, r3, #29
 80075b4:	d505      	bpl.n	80075c2 <__sflush_r+0x46>
 80075b6:	6863      	ldr	r3, [r4, #4]
 80075b8:	1ac0      	subs	r0, r0, r3
 80075ba:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80075bc:	b10b      	cbz	r3, 80075c2 <__sflush_r+0x46>
 80075be:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80075c0:	1ac0      	subs	r0, r0, r3
 80075c2:	2300      	movs	r3, #0
 80075c4:	4602      	mov	r2, r0
 80075c6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80075c8:	6a21      	ldr	r1, [r4, #32]
 80075ca:	4628      	mov	r0, r5
 80075cc:	47b0      	blx	r6
 80075ce:	1c43      	adds	r3, r0, #1
 80075d0:	89a3      	ldrh	r3, [r4, #12]
 80075d2:	d106      	bne.n	80075e2 <__sflush_r+0x66>
 80075d4:	6829      	ldr	r1, [r5, #0]
 80075d6:	291d      	cmp	r1, #29
 80075d8:	d82c      	bhi.n	8007634 <__sflush_r+0xb8>
 80075da:	4a2a      	ldr	r2, [pc, #168]	; (8007684 <__sflush_r+0x108>)
 80075dc:	40ca      	lsrs	r2, r1
 80075de:	07d6      	lsls	r6, r2, #31
 80075e0:	d528      	bpl.n	8007634 <__sflush_r+0xb8>
 80075e2:	2200      	movs	r2, #0
 80075e4:	6062      	str	r2, [r4, #4]
 80075e6:	04d9      	lsls	r1, r3, #19
 80075e8:	6922      	ldr	r2, [r4, #16]
 80075ea:	6022      	str	r2, [r4, #0]
 80075ec:	d504      	bpl.n	80075f8 <__sflush_r+0x7c>
 80075ee:	1c42      	adds	r2, r0, #1
 80075f0:	d101      	bne.n	80075f6 <__sflush_r+0x7a>
 80075f2:	682b      	ldr	r3, [r5, #0]
 80075f4:	b903      	cbnz	r3, 80075f8 <__sflush_r+0x7c>
 80075f6:	6560      	str	r0, [r4, #84]	; 0x54
 80075f8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80075fa:	602f      	str	r7, [r5, #0]
 80075fc:	2900      	cmp	r1, #0
 80075fe:	d0ca      	beq.n	8007596 <__sflush_r+0x1a>
 8007600:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007604:	4299      	cmp	r1, r3
 8007606:	d002      	beq.n	800760e <__sflush_r+0x92>
 8007608:	4628      	mov	r0, r5
 800760a:	f7ff fbfb 	bl	8006e04 <_free_r>
 800760e:	2000      	movs	r0, #0
 8007610:	6360      	str	r0, [r4, #52]	; 0x34
 8007612:	e7c1      	b.n	8007598 <__sflush_r+0x1c>
 8007614:	6a21      	ldr	r1, [r4, #32]
 8007616:	2301      	movs	r3, #1
 8007618:	4628      	mov	r0, r5
 800761a:	47b0      	blx	r6
 800761c:	1c41      	adds	r1, r0, #1
 800761e:	d1c7      	bne.n	80075b0 <__sflush_r+0x34>
 8007620:	682b      	ldr	r3, [r5, #0]
 8007622:	2b00      	cmp	r3, #0
 8007624:	d0c4      	beq.n	80075b0 <__sflush_r+0x34>
 8007626:	2b1d      	cmp	r3, #29
 8007628:	d001      	beq.n	800762e <__sflush_r+0xb2>
 800762a:	2b16      	cmp	r3, #22
 800762c:	d101      	bne.n	8007632 <__sflush_r+0xb6>
 800762e:	602f      	str	r7, [r5, #0]
 8007630:	e7b1      	b.n	8007596 <__sflush_r+0x1a>
 8007632:	89a3      	ldrh	r3, [r4, #12]
 8007634:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007638:	81a3      	strh	r3, [r4, #12]
 800763a:	e7ad      	b.n	8007598 <__sflush_r+0x1c>
 800763c:	690f      	ldr	r7, [r1, #16]
 800763e:	2f00      	cmp	r7, #0
 8007640:	d0a9      	beq.n	8007596 <__sflush_r+0x1a>
 8007642:	0793      	lsls	r3, r2, #30
 8007644:	680e      	ldr	r6, [r1, #0]
 8007646:	bf08      	it	eq
 8007648:	694b      	ldreq	r3, [r1, #20]
 800764a:	600f      	str	r7, [r1, #0]
 800764c:	bf18      	it	ne
 800764e:	2300      	movne	r3, #0
 8007650:	eba6 0807 	sub.w	r8, r6, r7
 8007654:	608b      	str	r3, [r1, #8]
 8007656:	f1b8 0f00 	cmp.w	r8, #0
 800765a:	dd9c      	ble.n	8007596 <__sflush_r+0x1a>
 800765c:	6a21      	ldr	r1, [r4, #32]
 800765e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8007660:	4643      	mov	r3, r8
 8007662:	463a      	mov	r2, r7
 8007664:	4628      	mov	r0, r5
 8007666:	47b0      	blx	r6
 8007668:	2800      	cmp	r0, #0
 800766a:	dc06      	bgt.n	800767a <__sflush_r+0xfe>
 800766c:	89a3      	ldrh	r3, [r4, #12]
 800766e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007672:	81a3      	strh	r3, [r4, #12]
 8007674:	f04f 30ff 	mov.w	r0, #4294967295
 8007678:	e78e      	b.n	8007598 <__sflush_r+0x1c>
 800767a:	4407      	add	r7, r0
 800767c:	eba8 0800 	sub.w	r8, r8, r0
 8007680:	e7e9      	b.n	8007656 <__sflush_r+0xda>
 8007682:	bf00      	nop
 8007684:	20400001 	.word	0x20400001

08007688 <_fflush_r>:
 8007688:	b538      	push	{r3, r4, r5, lr}
 800768a:	690b      	ldr	r3, [r1, #16]
 800768c:	4605      	mov	r5, r0
 800768e:	460c      	mov	r4, r1
 8007690:	b913      	cbnz	r3, 8007698 <_fflush_r+0x10>
 8007692:	2500      	movs	r5, #0
 8007694:	4628      	mov	r0, r5
 8007696:	bd38      	pop	{r3, r4, r5, pc}
 8007698:	b118      	cbz	r0, 80076a2 <_fflush_r+0x1a>
 800769a:	6983      	ldr	r3, [r0, #24]
 800769c:	b90b      	cbnz	r3, 80076a2 <_fflush_r+0x1a>
 800769e:	f7fe fa9d 	bl	8005bdc <__sinit>
 80076a2:	4b14      	ldr	r3, [pc, #80]	; (80076f4 <_fflush_r+0x6c>)
 80076a4:	429c      	cmp	r4, r3
 80076a6:	d11b      	bne.n	80076e0 <_fflush_r+0x58>
 80076a8:	686c      	ldr	r4, [r5, #4]
 80076aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80076ae:	2b00      	cmp	r3, #0
 80076b0:	d0ef      	beq.n	8007692 <_fflush_r+0xa>
 80076b2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80076b4:	07d0      	lsls	r0, r2, #31
 80076b6:	d404      	bmi.n	80076c2 <_fflush_r+0x3a>
 80076b8:	0599      	lsls	r1, r3, #22
 80076ba:	d402      	bmi.n	80076c2 <_fflush_r+0x3a>
 80076bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80076be:	f7fe fe9e 	bl	80063fe <__retarget_lock_acquire_recursive>
 80076c2:	4628      	mov	r0, r5
 80076c4:	4621      	mov	r1, r4
 80076c6:	f7ff ff59 	bl	800757c <__sflush_r>
 80076ca:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80076cc:	07da      	lsls	r2, r3, #31
 80076ce:	4605      	mov	r5, r0
 80076d0:	d4e0      	bmi.n	8007694 <_fflush_r+0xc>
 80076d2:	89a3      	ldrh	r3, [r4, #12]
 80076d4:	059b      	lsls	r3, r3, #22
 80076d6:	d4dd      	bmi.n	8007694 <_fflush_r+0xc>
 80076d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80076da:	f7fe fe91 	bl	8006400 <__retarget_lock_release_recursive>
 80076de:	e7d9      	b.n	8007694 <_fflush_r+0xc>
 80076e0:	4b05      	ldr	r3, [pc, #20]	; (80076f8 <_fflush_r+0x70>)
 80076e2:	429c      	cmp	r4, r3
 80076e4:	d101      	bne.n	80076ea <_fflush_r+0x62>
 80076e6:	68ac      	ldr	r4, [r5, #8]
 80076e8:	e7df      	b.n	80076aa <_fflush_r+0x22>
 80076ea:	4b04      	ldr	r3, [pc, #16]	; (80076fc <_fflush_r+0x74>)
 80076ec:	429c      	cmp	r4, r3
 80076ee:	bf08      	it	eq
 80076f0:	68ec      	ldreq	r4, [r5, #12]
 80076f2:	e7da      	b.n	80076aa <_fflush_r+0x22>
 80076f4:	08008c44 	.word	0x08008c44
 80076f8:	08008c64 	.word	0x08008c64
 80076fc:	08008c24 	.word	0x08008c24

08007700 <fiprintf>:
 8007700:	b40e      	push	{r1, r2, r3}
 8007702:	b503      	push	{r0, r1, lr}
 8007704:	4601      	mov	r1, r0
 8007706:	ab03      	add	r3, sp, #12
 8007708:	4805      	ldr	r0, [pc, #20]	; (8007720 <fiprintf+0x20>)
 800770a:	f853 2b04 	ldr.w	r2, [r3], #4
 800770e:	6800      	ldr	r0, [r0, #0]
 8007710:	9301      	str	r3, [sp, #4]
 8007712:	f000 f8fd 	bl	8007910 <_vfiprintf_r>
 8007716:	b002      	add	sp, #8
 8007718:	f85d eb04 	ldr.w	lr, [sp], #4
 800771c:	b003      	add	sp, #12
 800771e:	4770      	bx	lr
 8007720:	2000002c 	.word	0x2000002c

08007724 <_lseek_r>:
 8007724:	b538      	push	{r3, r4, r5, lr}
 8007726:	4d07      	ldr	r5, [pc, #28]	; (8007744 <_lseek_r+0x20>)
 8007728:	4604      	mov	r4, r0
 800772a:	4608      	mov	r0, r1
 800772c:	4611      	mov	r1, r2
 800772e:	2200      	movs	r2, #0
 8007730:	602a      	str	r2, [r5, #0]
 8007732:	461a      	mov	r2, r3
 8007734:	f7fb fb6c 	bl	8002e10 <_lseek>
 8007738:	1c43      	adds	r3, r0, #1
 800773a:	d102      	bne.n	8007742 <_lseek_r+0x1e>
 800773c:	682b      	ldr	r3, [r5, #0]
 800773e:	b103      	cbz	r3, 8007742 <_lseek_r+0x1e>
 8007740:	6023      	str	r3, [r4, #0]
 8007742:	bd38      	pop	{r3, r4, r5, pc}
 8007744:	2000033c 	.word	0x2000033c

08007748 <__swhatbuf_r>:
 8007748:	b570      	push	{r4, r5, r6, lr}
 800774a:	460e      	mov	r6, r1
 800774c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007750:	2900      	cmp	r1, #0
 8007752:	b096      	sub	sp, #88	; 0x58
 8007754:	4614      	mov	r4, r2
 8007756:	461d      	mov	r5, r3
 8007758:	da08      	bge.n	800776c <__swhatbuf_r+0x24>
 800775a:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800775e:	2200      	movs	r2, #0
 8007760:	602a      	str	r2, [r5, #0]
 8007762:	061a      	lsls	r2, r3, #24
 8007764:	d410      	bmi.n	8007788 <__swhatbuf_r+0x40>
 8007766:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800776a:	e00e      	b.n	800778a <__swhatbuf_r+0x42>
 800776c:	466a      	mov	r2, sp
 800776e:	f000 fa19 	bl	8007ba4 <_fstat_r>
 8007772:	2800      	cmp	r0, #0
 8007774:	dbf1      	blt.n	800775a <__swhatbuf_r+0x12>
 8007776:	9a01      	ldr	r2, [sp, #4]
 8007778:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800777c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8007780:	425a      	negs	r2, r3
 8007782:	415a      	adcs	r2, r3
 8007784:	602a      	str	r2, [r5, #0]
 8007786:	e7ee      	b.n	8007766 <__swhatbuf_r+0x1e>
 8007788:	2340      	movs	r3, #64	; 0x40
 800778a:	2000      	movs	r0, #0
 800778c:	6023      	str	r3, [r4, #0]
 800778e:	b016      	add	sp, #88	; 0x58
 8007790:	bd70      	pop	{r4, r5, r6, pc}
	...

08007794 <__smakebuf_r>:
 8007794:	898b      	ldrh	r3, [r1, #12]
 8007796:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007798:	079d      	lsls	r5, r3, #30
 800779a:	4606      	mov	r6, r0
 800779c:	460c      	mov	r4, r1
 800779e:	d507      	bpl.n	80077b0 <__smakebuf_r+0x1c>
 80077a0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80077a4:	6023      	str	r3, [r4, #0]
 80077a6:	6123      	str	r3, [r4, #16]
 80077a8:	2301      	movs	r3, #1
 80077aa:	6163      	str	r3, [r4, #20]
 80077ac:	b002      	add	sp, #8
 80077ae:	bd70      	pop	{r4, r5, r6, pc}
 80077b0:	ab01      	add	r3, sp, #4
 80077b2:	466a      	mov	r2, sp
 80077b4:	f7ff ffc8 	bl	8007748 <__swhatbuf_r>
 80077b8:	9900      	ldr	r1, [sp, #0]
 80077ba:	4605      	mov	r5, r0
 80077bc:	4630      	mov	r0, r6
 80077be:	f7ff fb8d 	bl	8006edc <_malloc_r>
 80077c2:	b948      	cbnz	r0, 80077d8 <__smakebuf_r+0x44>
 80077c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80077c8:	059a      	lsls	r2, r3, #22
 80077ca:	d4ef      	bmi.n	80077ac <__smakebuf_r+0x18>
 80077cc:	f023 0303 	bic.w	r3, r3, #3
 80077d0:	f043 0302 	orr.w	r3, r3, #2
 80077d4:	81a3      	strh	r3, [r4, #12]
 80077d6:	e7e3      	b.n	80077a0 <__smakebuf_r+0xc>
 80077d8:	4b0d      	ldr	r3, [pc, #52]	; (8007810 <__smakebuf_r+0x7c>)
 80077da:	62b3      	str	r3, [r6, #40]	; 0x28
 80077dc:	89a3      	ldrh	r3, [r4, #12]
 80077de:	6020      	str	r0, [r4, #0]
 80077e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80077e4:	81a3      	strh	r3, [r4, #12]
 80077e6:	9b00      	ldr	r3, [sp, #0]
 80077e8:	6163      	str	r3, [r4, #20]
 80077ea:	9b01      	ldr	r3, [sp, #4]
 80077ec:	6120      	str	r0, [r4, #16]
 80077ee:	b15b      	cbz	r3, 8007808 <__smakebuf_r+0x74>
 80077f0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80077f4:	4630      	mov	r0, r6
 80077f6:	f000 f9e7 	bl	8007bc8 <_isatty_r>
 80077fa:	b128      	cbz	r0, 8007808 <__smakebuf_r+0x74>
 80077fc:	89a3      	ldrh	r3, [r4, #12]
 80077fe:	f023 0303 	bic.w	r3, r3, #3
 8007802:	f043 0301 	orr.w	r3, r3, #1
 8007806:	81a3      	strh	r3, [r4, #12]
 8007808:	89a0      	ldrh	r0, [r4, #12]
 800780a:	4305      	orrs	r5, r0
 800780c:	81a5      	strh	r5, [r4, #12]
 800780e:	e7cd      	b.n	80077ac <__smakebuf_r+0x18>
 8007810:	08005b75 	.word	0x08005b75

08007814 <memmove>:
 8007814:	4288      	cmp	r0, r1
 8007816:	b510      	push	{r4, lr}
 8007818:	eb01 0402 	add.w	r4, r1, r2
 800781c:	d902      	bls.n	8007824 <memmove+0x10>
 800781e:	4284      	cmp	r4, r0
 8007820:	4623      	mov	r3, r4
 8007822:	d807      	bhi.n	8007834 <memmove+0x20>
 8007824:	1e43      	subs	r3, r0, #1
 8007826:	42a1      	cmp	r1, r4
 8007828:	d008      	beq.n	800783c <memmove+0x28>
 800782a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800782e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007832:	e7f8      	b.n	8007826 <memmove+0x12>
 8007834:	4402      	add	r2, r0
 8007836:	4601      	mov	r1, r0
 8007838:	428a      	cmp	r2, r1
 800783a:	d100      	bne.n	800783e <memmove+0x2a>
 800783c:	bd10      	pop	{r4, pc}
 800783e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007842:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007846:	e7f7      	b.n	8007838 <memmove+0x24>

08007848 <__malloc_lock>:
 8007848:	4801      	ldr	r0, [pc, #4]	; (8007850 <__malloc_lock+0x8>)
 800784a:	f7fe bdd8 	b.w	80063fe <__retarget_lock_acquire_recursive>
 800784e:	bf00      	nop
 8007850:	2000032f 	.word	0x2000032f

08007854 <__malloc_unlock>:
 8007854:	4801      	ldr	r0, [pc, #4]	; (800785c <__malloc_unlock+0x8>)
 8007856:	f7fe bdd3 	b.w	8006400 <__retarget_lock_release_recursive>
 800785a:	bf00      	nop
 800785c:	2000032f 	.word	0x2000032f

08007860 <_realloc_r>:
 8007860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007864:	4680      	mov	r8, r0
 8007866:	4614      	mov	r4, r2
 8007868:	460e      	mov	r6, r1
 800786a:	b921      	cbnz	r1, 8007876 <_realloc_r+0x16>
 800786c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007870:	4611      	mov	r1, r2
 8007872:	f7ff bb33 	b.w	8006edc <_malloc_r>
 8007876:	b92a      	cbnz	r2, 8007884 <_realloc_r+0x24>
 8007878:	f7ff fac4 	bl	8006e04 <_free_r>
 800787c:	4625      	mov	r5, r4
 800787e:	4628      	mov	r0, r5
 8007880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007884:	f000 f9b0 	bl	8007be8 <_malloc_usable_size_r>
 8007888:	4284      	cmp	r4, r0
 800788a:	4607      	mov	r7, r0
 800788c:	d802      	bhi.n	8007894 <_realloc_r+0x34>
 800788e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8007892:	d812      	bhi.n	80078ba <_realloc_r+0x5a>
 8007894:	4621      	mov	r1, r4
 8007896:	4640      	mov	r0, r8
 8007898:	f7ff fb20 	bl	8006edc <_malloc_r>
 800789c:	4605      	mov	r5, r0
 800789e:	2800      	cmp	r0, #0
 80078a0:	d0ed      	beq.n	800787e <_realloc_r+0x1e>
 80078a2:	42bc      	cmp	r4, r7
 80078a4:	4622      	mov	r2, r4
 80078a6:	4631      	mov	r1, r6
 80078a8:	bf28      	it	cs
 80078aa:	463a      	movcs	r2, r7
 80078ac:	f7fe fdc4 	bl	8006438 <memcpy>
 80078b0:	4631      	mov	r1, r6
 80078b2:	4640      	mov	r0, r8
 80078b4:	f7ff faa6 	bl	8006e04 <_free_r>
 80078b8:	e7e1      	b.n	800787e <_realloc_r+0x1e>
 80078ba:	4635      	mov	r5, r6
 80078bc:	e7df      	b.n	800787e <_realloc_r+0x1e>

080078be <__sfputc_r>:
 80078be:	6893      	ldr	r3, [r2, #8]
 80078c0:	3b01      	subs	r3, #1
 80078c2:	2b00      	cmp	r3, #0
 80078c4:	b410      	push	{r4}
 80078c6:	6093      	str	r3, [r2, #8]
 80078c8:	da08      	bge.n	80078dc <__sfputc_r+0x1e>
 80078ca:	6994      	ldr	r4, [r2, #24]
 80078cc:	42a3      	cmp	r3, r4
 80078ce:	db01      	blt.n	80078d4 <__sfputc_r+0x16>
 80078d0:	290a      	cmp	r1, #10
 80078d2:	d103      	bne.n	80078dc <__sfputc_r+0x1e>
 80078d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80078d8:	f7ff bd42 	b.w	8007360 <__swbuf_r>
 80078dc:	6813      	ldr	r3, [r2, #0]
 80078de:	1c58      	adds	r0, r3, #1
 80078e0:	6010      	str	r0, [r2, #0]
 80078e2:	7019      	strb	r1, [r3, #0]
 80078e4:	4608      	mov	r0, r1
 80078e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80078ea:	4770      	bx	lr

080078ec <__sfputs_r>:
 80078ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80078ee:	4606      	mov	r6, r0
 80078f0:	460f      	mov	r7, r1
 80078f2:	4614      	mov	r4, r2
 80078f4:	18d5      	adds	r5, r2, r3
 80078f6:	42ac      	cmp	r4, r5
 80078f8:	d101      	bne.n	80078fe <__sfputs_r+0x12>
 80078fa:	2000      	movs	r0, #0
 80078fc:	e007      	b.n	800790e <__sfputs_r+0x22>
 80078fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007902:	463a      	mov	r2, r7
 8007904:	4630      	mov	r0, r6
 8007906:	f7ff ffda 	bl	80078be <__sfputc_r>
 800790a:	1c43      	adds	r3, r0, #1
 800790c:	d1f3      	bne.n	80078f6 <__sfputs_r+0xa>
 800790e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007910 <_vfiprintf_r>:
 8007910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007914:	460d      	mov	r5, r1
 8007916:	b09d      	sub	sp, #116	; 0x74
 8007918:	4614      	mov	r4, r2
 800791a:	4698      	mov	r8, r3
 800791c:	4606      	mov	r6, r0
 800791e:	b118      	cbz	r0, 8007928 <_vfiprintf_r+0x18>
 8007920:	6983      	ldr	r3, [r0, #24]
 8007922:	b90b      	cbnz	r3, 8007928 <_vfiprintf_r+0x18>
 8007924:	f7fe f95a 	bl	8005bdc <__sinit>
 8007928:	4b89      	ldr	r3, [pc, #548]	; (8007b50 <_vfiprintf_r+0x240>)
 800792a:	429d      	cmp	r5, r3
 800792c:	d11b      	bne.n	8007966 <_vfiprintf_r+0x56>
 800792e:	6875      	ldr	r5, [r6, #4]
 8007930:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007932:	07d9      	lsls	r1, r3, #31
 8007934:	d405      	bmi.n	8007942 <_vfiprintf_r+0x32>
 8007936:	89ab      	ldrh	r3, [r5, #12]
 8007938:	059a      	lsls	r2, r3, #22
 800793a:	d402      	bmi.n	8007942 <_vfiprintf_r+0x32>
 800793c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800793e:	f7fe fd5e 	bl	80063fe <__retarget_lock_acquire_recursive>
 8007942:	89ab      	ldrh	r3, [r5, #12]
 8007944:	071b      	lsls	r3, r3, #28
 8007946:	d501      	bpl.n	800794c <_vfiprintf_r+0x3c>
 8007948:	692b      	ldr	r3, [r5, #16]
 800794a:	b9eb      	cbnz	r3, 8007988 <_vfiprintf_r+0x78>
 800794c:	4629      	mov	r1, r5
 800794e:	4630      	mov	r0, r6
 8007950:	f7ff fd78 	bl	8007444 <__swsetup_r>
 8007954:	b1c0      	cbz	r0, 8007988 <_vfiprintf_r+0x78>
 8007956:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007958:	07dc      	lsls	r4, r3, #31
 800795a:	d50e      	bpl.n	800797a <_vfiprintf_r+0x6a>
 800795c:	f04f 30ff 	mov.w	r0, #4294967295
 8007960:	b01d      	add	sp, #116	; 0x74
 8007962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007966:	4b7b      	ldr	r3, [pc, #492]	; (8007b54 <_vfiprintf_r+0x244>)
 8007968:	429d      	cmp	r5, r3
 800796a:	d101      	bne.n	8007970 <_vfiprintf_r+0x60>
 800796c:	68b5      	ldr	r5, [r6, #8]
 800796e:	e7df      	b.n	8007930 <_vfiprintf_r+0x20>
 8007970:	4b79      	ldr	r3, [pc, #484]	; (8007b58 <_vfiprintf_r+0x248>)
 8007972:	429d      	cmp	r5, r3
 8007974:	bf08      	it	eq
 8007976:	68f5      	ldreq	r5, [r6, #12]
 8007978:	e7da      	b.n	8007930 <_vfiprintf_r+0x20>
 800797a:	89ab      	ldrh	r3, [r5, #12]
 800797c:	0598      	lsls	r0, r3, #22
 800797e:	d4ed      	bmi.n	800795c <_vfiprintf_r+0x4c>
 8007980:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007982:	f7fe fd3d 	bl	8006400 <__retarget_lock_release_recursive>
 8007986:	e7e9      	b.n	800795c <_vfiprintf_r+0x4c>
 8007988:	2300      	movs	r3, #0
 800798a:	9309      	str	r3, [sp, #36]	; 0x24
 800798c:	2320      	movs	r3, #32
 800798e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007992:	f8cd 800c 	str.w	r8, [sp, #12]
 8007996:	2330      	movs	r3, #48	; 0x30
 8007998:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8007b5c <_vfiprintf_r+0x24c>
 800799c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80079a0:	f04f 0901 	mov.w	r9, #1
 80079a4:	4623      	mov	r3, r4
 80079a6:	469a      	mov	sl, r3
 80079a8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80079ac:	b10a      	cbz	r2, 80079b2 <_vfiprintf_r+0xa2>
 80079ae:	2a25      	cmp	r2, #37	; 0x25
 80079b0:	d1f9      	bne.n	80079a6 <_vfiprintf_r+0x96>
 80079b2:	ebba 0b04 	subs.w	fp, sl, r4
 80079b6:	d00b      	beq.n	80079d0 <_vfiprintf_r+0xc0>
 80079b8:	465b      	mov	r3, fp
 80079ba:	4622      	mov	r2, r4
 80079bc:	4629      	mov	r1, r5
 80079be:	4630      	mov	r0, r6
 80079c0:	f7ff ff94 	bl	80078ec <__sfputs_r>
 80079c4:	3001      	adds	r0, #1
 80079c6:	f000 80aa 	beq.w	8007b1e <_vfiprintf_r+0x20e>
 80079ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80079cc:	445a      	add	r2, fp
 80079ce:	9209      	str	r2, [sp, #36]	; 0x24
 80079d0:	f89a 3000 	ldrb.w	r3, [sl]
 80079d4:	2b00      	cmp	r3, #0
 80079d6:	f000 80a2 	beq.w	8007b1e <_vfiprintf_r+0x20e>
 80079da:	2300      	movs	r3, #0
 80079dc:	f04f 32ff 	mov.w	r2, #4294967295
 80079e0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80079e4:	f10a 0a01 	add.w	sl, sl, #1
 80079e8:	9304      	str	r3, [sp, #16]
 80079ea:	9307      	str	r3, [sp, #28]
 80079ec:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80079f0:	931a      	str	r3, [sp, #104]	; 0x68
 80079f2:	4654      	mov	r4, sl
 80079f4:	2205      	movs	r2, #5
 80079f6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80079fa:	4858      	ldr	r0, [pc, #352]	; (8007b5c <_vfiprintf_r+0x24c>)
 80079fc:	f7f8 fbf8 	bl	80001f0 <memchr>
 8007a00:	9a04      	ldr	r2, [sp, #16]
 8007a02:	b9d8      	cbnz	r0, 8007a3c <_vfiprintf_r+0x12c>
 8007a04:	06d1      	lsls	r1, r2, #27
 8007a06:	bf44      	itt	mi
 8007a08:	2320      	movmi	r3, #32
 8007a0a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007a0e:	0713      	lsls	r3, r2, #28
 8007a10:	bf44      	itt	mi
 8007a12:	232b      	movmi	r3, #43	; 0x2b
 8007a14:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007a18:	f89a 3000 	ldrb.w	r3, [sl]
 8007a1c:	2b2a      	cmp	r3, #42	; 0x2a
 8007a1e:	d015      	beq.n	8007a4c <_vfiprintf_r+0x13c>
 8007a20:	9a07      	ldr	r2, [sp, #28]
 8007a22:	4654      	mov	r4, sl
 8007a24:	2000      	movs	r0, #0
 8007a26:	f04f 0c0a 	mov.w	ip, #10
 8007a2a:	4621      	mov	r1, r4
 8007a2c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007a30:	3b30      	subs	r3, #48	; 0x30
 8007a32:	2b09      	cmp	r3, #9
 8007a34:	d94e      	bls.n	8007ad4 <_vfiprintf_r+0x1c4>
 8007a36:	b1b0      	cbz	r0, 8007a66 <_vfiprintf_r+0x156>
 8007a38:	9207      	str	r2, [sp, #28]
 8007a3a:	e014      	b.n	8007a66 <_vfiprintf_r+0x156>
 8007a3c:	eba0 0308 	sub.w	r3, r0, r8
 8007a40:	fa09 f303 	lsl.w	r3, r9, r3
 8007a44:	4313      	orrs	r3, r2
 8007a46:	9304      	str	r3, [sp, #16]
 8007a48:	46a2      	mov	sl, r4
 8007a4a:	e7d2      	b.n	80079f2 <_vfiprintf_r+0xe2>
 8007a4c:	9b03      	ldr	r3, [sp, #12]
 8007a4e:	1d19      	adds	r1, r3, #4
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	9103      	str	r1, [sp, #12]
 8007a54:	2b00      	cmp	r3, #0
 8007a56:	bfbb      	ittet	lt
 8007a58:	425b      	neglt	r3, r3
 8007a5a:	f042 0202 	orrlt.w	r2, r2, #2
 8007a5e:	9307      	strge	r3, [sp, #28]
 8007a60:	9307      	strlt	r3, [sp, #28]
 8007a62:	bfb8      	it	lt
 8007a64:	9204      	strlt	r2, [sp, #16]
 8007a66:	7823      	ldrb	r3, [r4, #0]
 8007a68:	2b2e      	cmp	r3, #46	; 0x2e
 8007a6a:	d10c      	bne.n	8007a86 <_vfiprintf_r+0x176>
 8007a6c:	7863      	ldrb	r3, [r4, #1]
 8007a6e:	2b2a      	cmp	r3, #42	; 0x2a
 8007a70:	d135      	bne.n	8007ade <_vfiprintf_r+0x1ce>
 8007a72:	9b03      	ldr	r3, [sp, #12]
 8007a74:	1d1a      	adds	r2, r3, #4
 8007a76:	681b      	ldr	r3, [r3, #0]
 8007a78:	9203      	str	r2, [sp, #12]
 8007a7a:	2b00      	cmp	r3, #0
 8007a7c:	bfb8      	it	lt
 8007a7e:	f04f 33ff 	movlt.w	r3, #4294967295
 8007a82:	3402      	adds	r4, #2
 8007a84:	9305      	str	r3, [sp, #20]
 8007a86:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8007b6c <_vfiprintf_r+0x25c>
 8007a8a:	7821      	ldrb	r1, [r4, #0]
 8007a8c:	2203      	movs	r2, #3
 8007a8e:	4650      	mov	r0, sl
 8007a90:	f7f8 fbae 	bl	80001f0 <memchr>
 8007a94:	b140      	cbz	r0, 8007aa8 <_vfiprintf_r+0x198>
 8007a96:	2340      	movs	r3, #64	; 0x40
 8007a98:	eba0 000a 	sub.w	r0, r0, sl
 8007a9c:	fa03 f000 	lsl.w	r0, r3, r0
 8007aa0:	9b04      	ldr	r3, [sp, #16]
 8007aa2:	4303      	orrs	r3, r0
 8007aa4:	3401      	adds	r4, #1
 8007aa6:	9304      	str	r3, [sp, #16]
 8007aa8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007aac:	482c      	ldr	r0, [pc, #176]	; (8007b60 <_vfiprintf_r+0x250>)
 8007aae:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007ab2:	2206      	movs	r2, #6
 8007ab4:	f7f8 fb9c 	bl	80001f0 <memchr>
 8007ab8:	2800      	cmp	r0, #0
 8007aba:	d03f      	beq.n	8007b3c <_vfiprintf_r+0x22c>
 8007abc:	4b29      	ldr	r3, [pc, #164]	; (8007b64 <_vfiprintf_r+0x254>)
 8007abe:	bb1b      	cbnz	r3, 8007b08 <_vfiprintf_r+0x1f8>
 8007ac0:	9b03      	ldr	r3, [sp, #12]
 8007ac2:	3307      	adds	r3, #7
 8007ac4:	f023 0307 	bic.w	r3, r3, #7
 8007ac8:	3308      	adds	r3, #8
 8007aca:	9303      	str	r3, [sp, #12]
 8007acc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007ace:	443b      	add	r3, r7
 8007ad0:	9309      	str	r3, [sp, #36]	; 0x24
 8007ad2:	e767      	b.n	80079a4 <_vfiprintf_r+0x94>
 8007ad4:	fb0c 3202 	mla	r2, ip, r2, r3
 8007ad8:	460c      	mov	r4, r1
 8007ada:	2001      	movs	r0, #1
 8007adc:	e7a5      	b.n	8007a2a <_vfiprintf_r+0x11a>
 8007ade:	2300      	movs	r3, #0
 8007ae0:	3401      	adds	r4, #1
 8007ae2:	9305      	str	r3, [sp, #20]
 8007ae4:	4619      	mov	r1, r3
 8007ae6:	f04f 0c0a 	mov.w	ip, #10
 8007aea:	4620      	mov	r0, r4
 8007aec:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007af0:	3a30      	subs	r2, #48	; 0x30
 8007af2:	2a09      	cmp	r2, #9
 8007af4:	d903      	bls.n	8007afe <_vfiprintf_r+0x1ee>
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d0c5      	beq.n	8007a86 <_vfiprintf_r+0x176>
 8007afa:	9105      	str	r1, [sp, #20]
 8007afc:	e7c3      	b.n	8007a86 <_vfiprintf_r+0x176>
 8007afe:	fb0c 2101 	mla	r1, ip, r1, r2
 8007b02:	4604      	mov	r4, r0
 8007b04:	2301      	movs	r3, #1
 8007b06:	e7f0      	b.n	8007aea <_vfiprintf_r+0x1da>
 8007b08:	ab03      	add	r3, sp, #12
 8007b0a:	9300      	str	r3, [sp, #0]
 8007b0c:	462a      	mov	r2, r5
 8007b0e:	4b16      	ldr	r3, [pc, #88]	; (8007b68 <_vfiprintf_r+0x258>)
 8007b10:	a904      	add	r1, sp, #16
 8007b12:	4630      	mov	r0, r6
 8007b14:	f7fb fce2 	bl	80034dc <_printf_float>
 8007b18:	4607      	mov	r7, r0
 8007b1a:	1c78      	adds	r0, r7, #1
 8007b1c:	d1d6      	bne.n	8007acc <_vfiprintf_r+0x1bc>
 8007b1e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007b20:	07d9      	lsls	r1, r3, #31
 8007b22:	d405      	bmi.n	8007b30 <_vfiprintf_r+0x220>
 8007b24:	89ab      	ldrh	r3, [r5, #12]
 8007b26:	059a      	lsls	r2, r3, #22
 8007b28:	d402      	bmi.n	8007b30 <_vfiprintf_r+0x220>
 8007b2a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007b2c:	f7fe fc68 	bl	8006400 <__retarget_lock_release_recursive>
 8007b30:	89ab      	ldrh	r3, [r5, #12]
 8007b32:	065b      	lsls	r3, r3, #25
 8007b34:	f53f af12 	bmi.w	800795c <_vfiprintf_r+0x4c>
 8007b38:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007b3a:	e711      	b.n	8007960 <_vfiprintf_r+0x50>
 8007b3c:	ab03      	add	r3, sp, #12
 8007b3e:	9300      	str	r3, [sp, #0]
 8007b40:	462a      	mov	r2, r5
 8007b42:	4b09      	ldr	r3, [pc, #36]	; (8007b68 <_vfiprintf_r+0x258>)
 8007b44:	a904      	add	r1, sp, #16
 8007b46:	4630      	mov	r0, r6
 8007b48:	f7fb ff6c 	bl	8003a24 <_printf_i>
 8007b4c:	e7e4      	b.n	8007b18 <_vfiprintf_r+0x208>
 8007b4e:	bf00      	nop
 8007b50:	08008c44 	.word	0x08008c44
 8007b54:	08008c64 	.word	0x08008c64
 8007b58:	08008c24 	.word	0x08008c24
 8007b5c:	08008e5c 	.word	0x08008e5c
 8007b60:	08008e66 	.word	0x08008e66
 8007b64:	080034dd 	.word	0x080034dd
 8007b68:	080078ed 	.word	0x080078ed
 8007b6c:	08008e62 	.word	0x08008e62

08007b70 <_read_r>:
 8007b70:	b538      	push	{r3, r4, r5, lr}
 8007b72:	4d07      	ldr	r5, [pc, #28]	; (8007b90 <_read_r+0x20>)
 8007b74:	4604      	mov	r4, r0
 8007b76:	4608      	mov	r0, r1
 8007b78:	4611      	mov	r1, r2
 8007b7a:	2200      	movs	r2, #0
 8007b7c:	602a      	str	r2, [r5, #0]
 8007b7e:	461a      	mov	r2, r3
 8007b80:	f7fb f8e6 	bl	8002d50 <_read>
 8007b84:	1c43      	adds	r3, r0, #1
 8007b86:	d102      	bne.n	8007b8e <_read_r+0x1e>
 8007b88:	682b      	ldr	r3, [r5, #0]
 8007b8a:	b103      	cbz	r3, 8007b8e <_read_r+0x1e>
 8007b8c:	6023      	str	r3, [r4, #0]
 8007b8e:	bd38      	pop	{r3, r4, r5, pc}
 8007b90:	2000033c 	.word	0x2000033c

08007b94 <abort>:
 8007b94:	b508      	push	{r3, lr}
 8007b96:	2006      	movs	r0, #6
 8007b98:	f000 f856 	bl	8007c48 <raise>
 8007b9c:	2001      	movs	r0, #1
 8007b9e:	f7fb f8cd 	bl	8002d3c <_exit>
	...

08007ba4 <_fstat_r>:
 8007ba4:	b538      	push	{r3, r4, r5, lr}
 8007ba6:	4d07      	ldr	r5, [pc, #28]	; (8007bc4 <_fstat_r+0x20>)
 8007ba8:	2300      	movs	r3, #0
 8007baa:	4604      	mov	r4, r0
 8007bac:	4608      	mov	r0, r1
 8007bae:	4611      	mov	r1, r2
 8007bb0:	602b      	str	r3, [r5, #0]
 8007bb2:	f7fb f912 	bl	8002dda <_fstat>
 8007bb6:	1c43      	adds	r3, r0, #1
 8007bb8:	d102      	bne.n	8007bc0 <_fstat_r+0x1c>
 8007bba:	682b      	ldr	r3, [r5, #0]
 8007bbc:	b103      	cbz	r3, 8007bc0 <_fstat_r+0x1c>
 8007bbe:	6023      	str	r3, [r4, #0]
 8007bc0:	bd38      	pop	{r3, r4, r5, pc}
 8007bc2:	bf00      	nop
 8007bc4:	2000033c 	.word	0x2000033c

08007bc8 <_isatty_r>:
 8007bc8:	b538      	push	{r3, r4, r5, lr}
 8007bca:	4d06      	ldr	r5, [pc, #24]	; (8007be4 <_isatty_r+0x1c>)
 8007bcc:	2300      	movs	r3, #0
 8007bce:	4604      	mov	r4, r0
 8007bd0:	4608      	mov	r0, r1
 8007bd2:	602b      	str	r3, [r5, #0]
 8007bd4:	f7fb f911 	bl	8002dfa <_isatty>
 8007bd8:	1c43      	adds	r3, r0, #1
 8007bda:	d102      	bne.n	8007be2 <_isatty_r+0x1a>
 8007bdc:	682b      	ldr	r3, [r5, #0]
 8007bde:	b103      	cbz	r3, 8007be2 <_isatty_r+0x1a>
 8007be0:	6023      	str	r3, [r4, #0]
 8007be2:	bd38      	pop	{r3, r4, r5, pc}
 8007be4:	2000033c 	.word	0x2000033c

08007be8 <_malloc_usable_size_r>:
 8007be8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007bec:	1f18      	subs	r0, r3, #4
 8007bee:	2b00      	cmp	r3, #0
 8007bf0:	bfbc      	itt	lt
 8007bf2:	580b      	ldrlt	r3, [r1, r0]
 8007bf4:	18c0      	addlt	r0, r0, r3
 8007bf6:	4770      	bx	lr

08007bf8 <_raise_r>:
 8007bf8:	291f      	cmp	r1, #31
 8007bfa:	b538      	push	{r3, r4, r5, lr}
 8007bfc:	4604      	mov	r4, r0
 8007bfe:	460d      	mov	r5, r1
 8007c00:	d904      	bls.n	8007c0c <_raise_r+0x14>
 8007c02:	2316      	movs	r3, #22
 8007c04:	6003      	str	r3, [r0, #0]
 8007c06:	f04f 30ff 	mov.w	r0, #4294967295
 8007c0a:	bd38      	pop	{r3, r4, r5, pc}
 8007c0c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8007c0e:	b112      	cbz	r2, 8007c16 <_raise_r+0x1e>
 8007c10:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007c14:	b94b      	cbnz	r3, 8007c2a <_raise_r+0x32>
 8007c16:	4620      	mov	r0, r4
 8007c18:	f000 f830 	bl	8007c7c <_getpid_r>
 8007c1c:	462a      	mov	r2, r5
 8007c1e:	4601      	mov	r1, r0
 8007c20:	4620      	mov	r0, r4
 8007c22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007c26:	f000 b817 	b.w	8007c58 <_kill_r>
 8007c2a:	2b01      	cmp	r3, #1
 8007c2c:	d00a      	beq.n	8007c44 <_raise_r+0x4c>
 8007c2e:	1c59      	adds	r1, r3, #1
 8007c30:	d103      	bne.n	8007c3a <_raise_r+0x42>
 8007c32:	2316      	movs	r3, #22
 8007c34:	6003      	str	r3, [r0, #0]
 8007c36:	2001      	movs	r0, #1
 8007c38:	e7e7      	b.n	8007c0a <_raise_r+0x12>
 8007c3a:	2400      	movs	r4, #0
 8007c3c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8007c40:	4628      	mov	r0, r5
 8007c42:	4798      	blx	r3
 8007c44:	2000      	movs	r0, #0
 8007c46:	e7e0      	b.n	8007c0a <_raise_r+0x12>

08007c48 <raise>:
 8007c48:	4b02      	ldr	r3, [pc, #8]	; (8007c54 <raise+0xc>)
 8007c4a:	4601      	mov	r1, r0
 8007c4c:	6818      	ldr	r0, [r3, #0]
 8007c4e:	f7ff bfd3 	b.w	8007bf8 <_raise_r>
 8007c52:	bf00      	nop
 8007c54:	2000002c 	.word	0x2000002c

08007c58 <_kill_r>:
 8007c58:	b538      	push	{r3, r4, r5, lr}
 8007c5a:	4d07      	ldr	r5, [pc, #28]	; (8007c78 <_kill_r+0x20>)
 8007c5c:	2300      	movs	r3, #0
 8007c5e:	4604      	mov	r4, r0
 8007c60:	4608      	mov	r0, r1
 8007c62:	4611      	mov	r1, r2
 8007c64:	602b      	str	r3, [r5, #0]
 8007c66:	f7fb f859 	bl	8002d1c <_kill>
 8007c6a:	1c43      	adds	r3, r0, #1
 8007c6c:	d102      	bne.n	8007c74 <_kill_r+0x1c>
 8007c6e:	682b      	ldr	r3, [r5, #0]
 8007c70:	b103      	cbz	r3, 8007c74 <_kill_r+0x1c>
 8007c72:	6023      	str	r3, [r4, #0]
 8007c74:	bd38      	pop	{r3, r4, r5, pc}
 8007c76:	bf00      	nop
 8007c78:	2000033c 	.word	0x2000033c

08007c7c <_getpid_r>:
 8007c7c:	f7fb b846 	b.w	8002d0c <_getpid>

08007c80 <cosf>:
 8007c80:	ee10 3a10 	vmov	r3, s0
 8007c84:	b507      	push	{r0, r1, r2, lr}
 8007c86:	4a1e      	ldr	r2, [pc, #120]	; (8007d00 <cosf+0x80>)
 8007c88:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007c8c:	4293      	cmp	r3, r2
 8007c8e:	dc06      	bgt.n	8007c9e <cosf+0x1e>
 8007c90:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8007d04 <cosf+0x84>
 8007c94:	b003      	add	sp, #12
 8007c96:	f85d eb04 	ldr.w	lr, [sp], #4
 8007c9a:	f000 b9eb 	b.w	8008074 <__kernel_cosf>
 8007c9e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8007ca2:	db04      	blt.n	8007cae <cosf+0x2e>
 8007ca4:	ee30 0a40 	vsub.f32	s0, s0, s0
 8007ca8:	b003      	add	sp, #12
 8007caa:	f85d fb04 	ldr.w	pc, [sp], #4
 8007cae:	4668      	mov	r0, sp
 8007cb0:	f000 f8a4 	bl	8007dfc <__ieee754_rem_pio2f>
 8007cb4:	f000 0003 	and.w	r0, r0, #3
 8007cb8:	2801      	cmp	r0, #1
 8007cba:	d009      	beq.n	8007cd0 <cosf+0x50>
 8007cbc:	2802      	cmp	r0, #2
 8007cbe:	d010      	beq.n	8007ce2 <cosf+0x62>
 8007cc0:	b9b0      	cbnz	r0, 8007cf0 <cosf+0x70>
 8007cc2:	eddd 0a01 	vldr	s1, [sp, #4]
 8007cc6:	ed9d 0a00 	vldr	s0, [sp]
 8007cca:	f000 f9d3 	bl	8008074 <__kernel_cosf>
 8007cce:	e7eb      	b.n	8007ca8 <cosf+0x28>
 8007cd0:	eddd 0a01 	vldr	s1, [sp, #4]
 8007cd4:	ed9d 0a00 	vldr	s0, [sp]
 8007cd8:	f000 fca2 	bl	8008620 <__kernel_sinf>
 8007cdc:	eeb1 0a40 	vneg.f32	s0, s0
 8007ce0:	e7e2      	b.n	8007ca8 <cosf+0x28>
 8007ce2:	eddd 0a01 	vldr	s1, [sp, #4]
 8007ce6:	ed9d 0a00 	vldr	s0, [sp]
 8007cea:	f000 f9c3 	bl	8008074 <__kernel_cosf>
 8007cee:	e7f5      	b.n	8007cdc <cosf+0x5c>
 8007cf0:	eddd 0a01 	vldr	s1, [sp, #4]
 8007cf4:	ed9d 0a00 	vldr	s0, [sp]
 8007cf8:	2001      	movs	r0, #1
 8007cfa:	f000 fc91 	bl	8008620 <__kernel_sinf>
 8007cfe:	e7d3      	b.n	8007ca8 <cosf+0x28>
 8007d00:	3f490fd8 	.word	0x3f490fd8
 8007d04:	00000000 	.word	0x00000000

08007d08 <fabsf>:
 8007d08:	ee10 3a10 	vmov	r3, s0
 8007d0c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007d10:	ee00 3a10 	vmov	s0, r3
 8007d14:	4770      	bx	lr
	...

08007d18 <sinf>:
 8007d18:	ee10 3a10 	vmov	r3, s0
 8007d1c:	b507      	push	{r0, r1, r2, lr}
 8007d1e:	4a1f      	ldr	r2, [pc, #124]	; (8007d9c <sinf+0x84>)
 8007d20:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007d24:	4293      	cmp	r3, r2
 8007d26:	dc07      	bgt.n	8007d38 <sinf+0x20>
 8007d28:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8007da0 <sinf+0x88>
 8007d2c:	2000      	movs	r0, #0
 8007d2e:	b003      	add	sp, #12
 8007d30:	f85d eb04 	ldr.w	lr, [sp], #4
 8007d34:	f000 bc74 	b.w	8008620 <__kernel_sinf>
 8007d38:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8007d3c:	db04      	blt.n	8007d48 <sinf+0x30>
 8007d3e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8007d42:	b003      	add	sp, #12
 8007d44:	f85d fb04 	ldr.w	pc, [sp], #4
 8007d48:	4668      	mov	r0, sp
 8007d4a:	f000 f857 	bl	8007dfc <__ieee754_rem_pio2f>
 8007d4e:	f000 0003 	and.w	r0, r0, #3
 8007d52:	2801      	cmp	r0, #1
 8007d54:	d00a      	beq.n	8007d6c <sinf+0x54>
 8007d56:	2802      	cmp	r0, #2
 8007d58:	d00f      	beq.n	8007d7a <sinf+0x62>
 8007d5a:	b9c0      	cbnz	r0, 8007d8e <sinf+0x76>
 8007d5c:	eddd 0a01 	vldr	s1, [sp, #4]
 8007d60:	ed9d 0a00 	vldr	s0, [sp]
 8007d64:	2001      	movs	r0, #1
 8007d66:	f000 fc5b 	bl	8008620 <__kernel_sinf>
 8007d6a:	e7ea      	b.n	8007d42 <sinf+0x2a>
 8007d6c:	eddd 0a01 	vldr	s1, [sp, #4]
 8007d70:	ed9d 0a00 	vldr	s0, [sp]
 8007d74:	f000 f97e 	bl	8008074 <__kernel_cosf>
 8007d78:	e7e3      	b.n	8007d42 <sinf+0x2a>
 8007d7a:	eddd 0a01 	vldr	s1, [sp, #4]
 8007d7e:	ed9d 0a00 	vldr	s0, [sp]
 8007d82:	2001      	movs	r0, #1
 8007d84:	f000 fc4c 	bl	8008620 <__kernel_sinf>
 8007d88:	eeb1 0a40 	vneg.f32	s0, s0
 8007d8c:	e7d9      	b.n	8007d42 <sinf+0x2a>
 8007d8e:	eddd 0a01 	vldr	s1, [sp, #4]
 8007d92:	ed9d 0a00 	vldr	s0, [sp]
 8007d96:	f000 f96d 	bl	8008074 <__kernel_cosf>
 8007d9a:	e7f5      	b.n	8007d88 <sinf+0x70>
 8007d9c:	3f490fd8 	.word	0x3f490fd8
 8007da0:	00000000 	.word	0x00000000

08007da4 <tanf>:
 8007da4:	ee10 3a10 	vmov	r3, s0
 8007da8:	b507      	push	{r0, r1, r2, lr}
 8007daa:	4a12      	ldr	r2, [pc, #72]	; (8007df4 <tanf+0x50>)
 8007dac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8007db0:	4293      	cmp	r3, r2
 8007db2:	dc07      	bgt.n	8007dc4 <tanf+0x20>
 8007db4:	eddf 0a10 	vldr	s1, [pc, #64]	; 8007df8 <tanf+0x54>
 8007db8:	2001      	movs	r0, #1
 8007dba:	b003      	add	sp, #12
 8007dbc:	f85d eb04 	ldr.w	lr, [sp], #4
 8007dc0:	f000 bc76 	b.w	80086b0 <__kernel_tanf>
 8007dc4:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8007dc8:	db04      	blt.n	8007dd4 <tanf+0x30>
 8007dca:	ee30 0a40 	vsub.f32	s0, s0, s0
 8007dce:	b003      	add	sp, #12
 8007dd0:	f85d fb04 	ldr.w	pc, [sp], #4
 8007dd4:	4668      	mov	r0, sp
 8007dd6:	f000 f811 	bl	8007dfc <__ieee754_rem_pio2f>
 8007dda:	0040      	lsls	r0, r0, #1
 8007ddc:	f000 0002 	and.w	r0, r0, #2
 8007de0:	eddd 0a01 	vldr	s1, [sp, #4]
 8007de4:	ed9d 0a00 	vldr	s0, [sp]
 8007de8:	f1c0 0001 	rsb	r0, r0, #1
 8007dec:	f000 fc60 	bl	80086b0 <__kernel_tanf>
 8007df0:	e7ed      	b.n	8007dce <tanf+0x2a>
 8007df2:	bf00      	nop
 8007df4:	3f490fda 	.word	0x3f490fda
 8007df8:	00000000 	.word	0x00000000

08007dfc <__ieee754_rem_pio2f>:
 8007dfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007dfe:	ee10 6a10 	vmov	r6, s0
 8007e02:	4b8e      	ldr	r3, [pc, #568]	; (800803c <__ieee754_rem_pio2f+0x240>)
 8007e04:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8007e08:	429d      	cmp	r5, r3
 8007e0a:	b087      	sub	sp, #28
 8007e0c:	eef0 7a40 	vmov.f32	s15, s0
 8007e10:	4604      	mov	r4, r0
 8007e12:	dc05      	bgt.n	8007e20 <__ieee754_rem_pio2f+0x24>
 8007e14:	2300      	movs	r3, #0
 8007e16:	ed80 0a00 	vstr	s0, [r0]
 8007e1a:	6043      	str	r3, [r0, #4]
 8007e1c:	2000      	movs	r0, #0
 8007e1e:	e01a      	b.n	8007e56 <__ieee754_rem_pio2f+0x5a>
 8007e20:	4b87      	ldr	r3, [pc, #540]	; (8008040 <__ieee754_rem_pio2f+0x244>)
 8007e22:	429d      	cmp	r5, r3
 8007e24:	dc46      	bgt.n	8007eb4 <__ieee754_rem_pio2f+0xb8>
 8007e26:	2e00      	cmp	r6, #0
 8007e28:	ed9f 0a86 	vldr	s0, [pc, #536]	; 8008044 <__ieee754_rem_pio2f+0x248>
 8007e2c:	4b86      	ldr	r3, [pc, #536]	; (8008048 <__ieee754_rem_pio2f+0x24c>)
 8007e2e:	f025 050f 	bic.w	r5, r5, #15
 8007e32:	dd1f      	ble.n	8007e74 <__ieee754_rem_pio2f+0x78>
 8007e34:	429d      	cmp	r5, r3
 8007e36:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8007e3a:	d00e      	beq.n	8007e5a <__ieee754_rem_pio2f+0x5e>
 8007e3c:	ed9f 7a83 	vldr	s14, [pc, #524]	; 800804c <__ieee754_rem_pio2f+0x250>
 8007e40:	ee37 0ac7 	vsub.f32	s0, s15, s14
 8007e44:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8007e48:	ed80 0a00 	vstr	s0, [r0]
 8007e4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007e50:	2001      	movs	r0, #1
 8007e52:	edc4 7a01 	vstr	s15, [r4, #4]
 8007e56:	b007      	add	sp, #28
 8007e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e5a:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 8008050 <__ieee754_rem_pio2f+0x254>
 8007e5e:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 8008054 <__ieee754_rem_pio2f+0x258>
 8007e62:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8007e66:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8007e6a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007e6e:	edc0 6a00 	vstr	s13, [r0]
 8007e72:	e7eb      	b.n	8007e4c <__ieee754_rem_pio2f+0x50>
 8007e74:	429d      	cmp	r5, r3
 8007e76:	ee77 7a80 	vadd.f32	s15, s15, s0
 8007e7a:	d00e      	beq.n	8007e9a <__ieee754_rem_pio2f+0x9e>
 8007e7c:	ed9f 7a73 	vldr	s14, [pc, #460]	; 800804c <__ieee754_rem_pio2f+0x250>
 8007e80:	ee37 0a87 	vadd.f32	s0, s15, s14
 8007e84:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8007e88:	ed80 0a00 	vstr	s0, [r0]
 8007e8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e90:	f04f 30ff 	mov.w	r0, #4294967295
 8007e94:	edc4 7a01 	vstr	s15, [r4, #4]
 8007e98:	e7dd      	b.n	8007e56 <__ieee754_rem_pio2f+0x5a>
 8007e9a:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 8008050 <__ieee754_rem_pio2f+0x254>
 8007e9e:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 8008054 <__ieee754_rem_pio2f+0x258>
 8007ea2:	ee77 7a80 	vadd.f32	s15, s15, s0
 8007ea6:	ee77 6a87 	vadd.f32	s13, s15, s14
 8007eaa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8007eae:	edc0 6a00 	vstr	s13, [r0]
 8007eb2:	e7eb      	b.n	8007e8c <__ieee754_rem_pio2f+0x90>
 8007eb4:	4b68      	ldr	r3, [pc, #416]	; (8008058 <__ieee754_rem_pio2f+0x25c>)
 8007eb6:	429d      	cmp	r5, r3
 8007eb8:	dc72      	bgt.n	8007fa0 <__ieee754_rem_pio2f+0x1a4>
 8007eba:	f7ff ff25 	bl	8007d08 <fabsf>
 8007ebe:	ed9f 7a67 	vldr	s14, [pc, #412]	; 800805c <__ieee754_rem_pio2f+0x260>
 8007ec2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8007ec6:	eee0 7a07 	vfma.f32	s15, s0, s14
 8007eca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ece:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007ed2:	ee17 0a90 	vmov	r0, s15
 8007ed6:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8008044 <__ieee754_rem_pio2f+0x248>
 8007eda:	eea7 0a67 	vfms.f32	s0, s14, s15
 8007ede:	281f      	cmp	r0, #31
 8007ee0:	eddf 7a5a 	vldr	s15, [pc, #360]	; 800804c <__ieee754_rem_pio2f+0x250>
 8007ee4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007ee8:	eeb1 6a47 	vneg.f32	s12, s14
 8007eec:	ee70 6a67 	vsub.f32	s13, s0, s15
 8007ef0:	ee16 2a90 	vmov	r2, s13
 8007ef4:	dc1c      	bgt.n	8007f30 <__ieee754_rem_pio2f+0x134>
 8007ef6:	495a      	ldr	r1, [pc, #360]	; (8008060 <__ieee754_rem_pio2f+0x264>)
 8007ef8:	1e47      	subs	r7, r0, #1
 8007efa:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8007efe:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8007f02:	428b      	cmp	r3, r1
 8007f04:	d014      	beq.n	8007f30 <__ieee754_rem_pio2f+0x134>
 8007f06:	6022      	str	r2, [r4, #0]
 8007f08:	ed94 7a00 	vldr	s14, [r4]
 8007f0c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8007f10:	2e00      	cmp	r6, #0
 8007f12:	ee30 0a67 	vsub.f32	s0, s0, s15
 8007f16:	ed84 0a01 	vstr	s0, [r4, #4]
 8007f1a:	da9c      	bge.n	8007e56 <__ieee754_rem_pio2f+0x5a>
 8007f1c:	eeb1 7a47 	vneg.f32	s14, s14
 8007f20:	eeb1 0a40 	vneg.f32	s0, s0
 8007f24:	ed84 7a00 	vstr	s14, [r4]
 8007f28:	ed84 0a01 	vstr	s0, [r4, #4]
 8007f2c:	4240      	negs	r0, r0
 8007f2e:	e792      	b.n	8007e56 <__ieee754_rem_pio2f+0x5a>
 8007f30:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8007f34:	15eb      	asrs	r3, r5, #23
 8007f36:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 8007f3a:	2d08      	cmp	r5, #8
 8007f3c:	dde3      	ble.n	8007f06 <__ieee754_rem_pio2f+0x10a>
 8007f3e:	eddf 7a44 	vldr	s15, [pc, #272]	; 8008050 <__ieee754_rem_pio2f+0x254>
 8007f42:	eddf 5a44 	vldr	s11, [pc, #272]	; 8008054 <__ieee754_rem_pio2f+0x258>
 8007f46:	eef0 6a40 	vmov.f32	s13, s0
 8007f4a:	eee6 6a27 	vfma.f32	s13, s12, s15
 8007f4e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8007f52:	eea6 0a27 	vfma.f32	s0, s12, s15
 8007f56:	eef0 7a40 	vmov.f32	s15, s0
 8007f5a:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8007f5e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8007f62:	ee15 2a90 	vmov	r2, s11
 8007f66:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8007f6a:	1a5b      	subs	r3, r3, r1
 8007f6c:	2b19      	cmp	r3, #25
 8007f6e:	dc04      	bgt.n	8007f7a <__ieee754_rem_pio2f+0x17e>
 8007f70:	edc4 5a00 	vstr	s11, [r4]
 8007f74:	eeb0 0a66 	vmov.f32	s0, s13
 8007f78:	e7c6      	b.n	8007f08 <__ieee754_rem_pio2f+0x10c>
 8007f7a:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8008064 <__ieee754_rem_pio2f+0x268>
 8007f7e:	eeb0 0a66 	vmov.f32	s0, s13
 8007f82:	eea6 0a25 	vfma.f32	s0, s12, s11
 8007f86:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8007f8a:	eddf 6a37 	vldr	s13, [pc, #220]	; 8008068 <__ieee754_rem_pio2f+0x26c>
 8007f8e:	eee6 7a25 	vfma.f32	s15, s12, s11
 8007f92:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8007f96:	ee30 7a67 	vsub.f32	s14, s0, s15
 8007f9a:	ed84 7a00 	vstr	s14, [r4]
 8007f9e:	e7b3      	b.n	8007f08 <__ieee754_rem_pio2f+0x10c>
 8007fa0:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8007fa4:	db06      	blt.n	8007fb4 <__ieee754_rem_pio2f+0x1b8>
 8007fa6:	ee70 7a40 	vsub.f32	s15, s0, s0
 8007faa:	edc0 7a01 	vstr	s15, [r0, #4]
 8007fae:	edc0 7a00 	vstr	s15, [r0]
 8007fb2:	e733      	b.n	8007e1c <__ieee754_rem_pio2f+0x20>
 8007fb4:	15ea      	asrs	r2, r5, #23
 8007fb6:	3a86      	subs	r2, #134	; 0x86
 8007fb8:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8007fbc:	ee07 3a90 	vmov	s15, r3
 8007fc0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007fc4:	eddf 6a29 	vldr	s13, [pc, #164]	; 800806c <__ieee754_rem_pio2f+0x270>
 8007fc8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007fcc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007fd0:	ed8d 7a03 	vstr	s14, [sp, #12]
 8007fd4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8007fd8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8007fdc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007fe0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007fe4:	ed8d 7a04 	vstr	s14, [sp, #16]
 8007fe8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8007fec:	eef5 7a40 	vcmp.f32	s15, #0.0
 8007ff0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ff4:	edcd 7a05 	vstr	s15, [sp, #20]
 8007ff8:	d11e      	bne.n	8008038 <__ieee754_rem_pio2f+0x23c>
 8007ffa:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8007ffe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008002:	bf14      	ite	ne
 8008004:	2302      	movne	r3, #2
 8008006:	2301      	moveq	r3, #1
 8008008:	4919      	ldr	r1, [pc, #100]	; (8008070 <__ieee754_rem_pio2f+0x274>)
 800800a:	9101      	str	r1, [sp, #4]
 800800c:	2102      	movs	r1, #2
 800800e:	9100      	str	r1, [sp, #0]
 8008010:	a803      	add	r0, sp, #12
 8008012:	4621      	mov	r1, r4
 8008014:	f000 f88e 	bl	8008134 <__kernel_rem_pio2f>
 8008018:	2e00      	cmp	r6, #0
 800801a:	f6bf af1c 	bge.w	8007e56 <__ieee754_rem_pio2f+0x5a>
 800801e:	edd4 7a00 	vldr	s15, [r4]
 8008022:	eef1 7a67 	vneg.f32	s15, s15
 8008026:	edc4 7a00 	vstr	s15, [r4]
 800802a:	edd4 7a01 	vldr	s15, [r4, #4]
 800802e:	eef1 7a67 	vneg.f32	s15, s15
 8008032:	edc4 7a01 	vstr	s15, [r4, #4]
 8008036:	e779      	b.n	8007f2c <__ieee754_rem_pio2f+0x130>
 8008038:	2303      	movs	r3, #3
 800803a:	e7e5      	b.n	8008008 <__ieee754_rem_pio2f+0x20c>
 800803c:	3f490fd8 	.word	0x3f490fd8
 8008040:	4016cbe3 	.word	0x4016cbe3
 8008044:	3fc90f80 	.word	0x3fc90f80
 8008048:	3fc90fd0 	.word	0x3fc90fd0
 800804c:	37354443 	.word	0x37354443
 8008050:	37354400 	.word	0x37354400
 8008054:	2e85a308 	.word	0x2e85a308
 8008058:	43490f80 	.word	0x43490f80
 800805c:	3f22f984 	.word	0x3f22f984
 8008060:	08008eac 	.word	0x08008eac
 8008064:	2e85a300 	.word	0x2e85a300
 8008068:	248d3132 	.word	0x248d3132
 800806c:	43800000 	.word	0x43800000
 8008070:	08008f2c 	.word	0x08008f2c

08008074 <__kernel_cosf>:
 8008074:	ee10 3a10 	vmov	r3, s0
 8008078:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800807c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8008080:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8008084:	da05      	bge.n	8008092 <__kernel_cosf+0x1e>
 8008086:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800808a:	ee17 2a90 	vmov	r2, s15
 800808e:	2a00      	cmp	r2, #0
 8008090:	d03d      	beq.n	800810e <__kernel_cosf+0x9a>
 8008092:	ee60 5a00 	vmul.f32	s11, s0, s0
 8008096:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8008114 <__kernel_cosf+0xa0>
 800809a:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8008118 <__kernel_cosf+0xa4>
 800809e:	eddf 6a1f 	vldr	s13, [pc, #124]	; 800811c <__kernel_cosf+0xa8>
 80080a2:	4a1f      	ldr	r2, [pc, #124]	; (8008120 <__kernel_cosf+0xac>)
 80080a4:	eea5 7aa7 	vfma.f32	s14, s11, s15
 80080a8:	4293      	cmp	r3, r2
 80080aa:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8008124 <__kernel_cosf+0xb0>
 80080ae:	eee7 7a25 	vfma.f32	s15, s14, s11
 80080b2:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8008128 <__kernel_cosf+0xb4>
 80080b6:	eea7 7aa5 	vfma.f32	s14, s15, s11
 80080ba:	eddf 7a1c 	vldr	s15, [pc, #112]	; 800812c <__kernel_cosf+0xb8>
 80080be:	eee7 7a25 	vfma.f32	s15, s14, s11
 80080c2:	eeb0 7a66 	vmov.f32	s14, s13
 80080c6:	eea7 7aa5 	vfma.f32	s14, s15, s11
 80080ca:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 80080ce:	ee65 7aa6 	vmul.f32	s15, s11, s13
 80080d2:	ee67 6a25 	vmul.f32	s13, s14, s11
 80080d6:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 80080da:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80080de:	dc04      	bgt.n	80080ea <__kernel_cosf+0x76>
 80080e0:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80080e4:	ee36 0a47 	vsub.f32	s0, s12, s14
 80080e8:	4770      	bx	lr
 80080ea:	4a11      	ldr	r2, [pc, #68]	; (8008130 <__kernel_cosf+0xbc>)
 80080ec:	4293      	cmp	r3, r2
 80080ee:	bfda      	itte	le
 80080f0:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 80080f4:	ee06 3a90 	vmovle	s13, r3
 80080f8:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 80080fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008100:	ee36 0a66 	vsub.f32	s0, s12, s13
 8008104:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008108:	ee30 0a67 	vsub.f32	s0, s0, s15
 800810c:	4770      	bx	lr
 800810e:	eeb0 0a46 	vmov.f32	s0, s12
 8008112:	4770      	bx	lr
 8008114:	ad47d74e 	.word	0xad47d74e
 8008118:	310f74f6 	.word	0x310f74f6
 800811c:	3d2aaaab 	.word	0x3d2aaaab
 8008120:	3e999999 	.word	0x3e999999
 8008124:	b493f27c 	.word	0xb493f27c
 8008128:	37d00d01 	.word	0x37d00d01
 800812c:	bab60b61 	.word	0xbab60b61
 8008130:	3f480000 	.word	0x3f480000

08008134 <__kernel_rem_pio2f>:
 8008134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008138:	ed2d 8b04 	vpush	{d8-d9}
 800813c:	b0d9      	sub	sp, #356	; 0x164
 800813e:	4688      	mov	r8, r1
 8008140:	9002      	str	r0, [sp, #8]
 8008142:	49bb      	ldr	r1, [pc, #748]	; (8008430 <__kernel_rem_pio2f+0x2fc>)
 8008144:	9866      	ldr	r0, [sp, #408]	; 0x198
 8008146:	9301      	str	r3, [sp, #4]
 8008148:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 800814c:	f8dd e19c 	ldr.w	lr, [sp, #412]	; 0x19c
 8008150:	1e59      	subs	r1, r3, #1
 8008152:	1d13      	adds	r3, r2, #4
 8008154:	db27      	blt.n	80081a6 <__kernel_rem_pio2f+0x72>
 8008156:	f1b2 0b03 	subs.w	fp, r2, #3
 800815a:	bf48      	it	mi
 800815c:	f102 0b04 	addmi.w	fp, r2, #4
 8008160:	ea4f 00eb 	mov.w	r0, fp, asr #3
 8008164:	1c45      	adds	r5, r0, #1
 8008166:	00ec      	lsls	r4, r5, #3
 8008168:	1a47      	subs	r7, r0, r1
 800816a:	ed9f 7ab5 	vldr	s14, [pc, #724]	; 8008440 <__kernel_rem_pio2f+0x30c>
 800816e:	9403      	str	r4, [sp, #12]
 8008170:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8008174:	eb0a 0c01 	add.w	ip, sl, r1
 8008178:	ae1c      	add	r6, sp, #112	; 0x70
 800817a:	eb0e 0987 	add.w	r9, lr, r7, lsl #2
 800817e:	2400      	movs	r4, #0
 8008180:	4564      	cmp	r4, ip
 8008182:	dd12      	ble.n	80081aa <__kernel_rem_pio2f+0x76>
 8008184:	9b01      	ldr	r3, [sp, #4]
 8008186:	ac1c      	add	r4, sp, #112	; 0x70
 8008188:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800818c:	f50d 7b88 	add.w	fp, sp, #272	; 0x110
 8008190:	f04f 0c00 	mov.w	ip, #0
 8008194:	45d4      	cmp	ip, sl
 8008196:	dc27      	bgt.n	80081e8 <__kernel_rem_pio2f+0xb4>
 8008198:	f8dd 9008 	ldr.w	r9, [sp, #8]
 800819c:	eddf 7aa8 	vldr	s15, [pc, #672]	; 8008440 <__kernel_rem_pio2f+0x30c>
 80081a0:	4627      	mov	r7, r4
 80081a2:	2600      	movs	r6, #0
 80081a4:	e016      	b.n	80081d4 <__kernel_rem_pio2f+0xa0>
 80081a6:	2000      	movs	r0, #0
 80081a8:	e7dc      	b.n	8008164 <__kernel_rem_pio2f+0x30>
 80081aa:	42e7      	cmn	r7, r4
 80081ac:	bf5d      	ittte	pl
 80081ae:	f859 3024 	ldrpl.w	r3, [r9, r4, lsl #2]
 80081b2:	ee07 3a90 	vmovpl	s15, r3
 80081b6:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80081ba:	eef0 7a47 	vmovmi.f32	s15, s14
 80081be:	ece6 7a01 	vstmia	r6!, {s15}
 80081c2:	3401      	adds	r4, #1
 80081c4:	e7dc      	b.n	8008180 <__kernel_rem_pio2f+0x4c>
 80081c6:	ecf9 6a01 	vldmia	r9!, {s13}
 80081ca:	ed97 7a00 	vldr	s14, [r7]
 80081ce:	eee6 7a87 	vfma.f32	s15, s13, s14
 80081d2:	3601      	adds	r6, #1
 80081d4:	428e      	cmp	r6, r1
 80081d6:	f1a7 0704 	sub.w	r7, r7, #4
 80081da:	ddf4      	ble.n	80081c6 <__kernel_rem_pio2f+0x92>
 80081dc:	eceb 7a01 	vstmia	fp!, {s15}
 80081e0:	f10c 0c01 	add.w	ip, ip, #1
 80081e4:	3404      	adds	r4, #4
 80081e6:	e7d5      	b.n	8008194 <__kernel_rem_pio2f+0x60>
 80081e8:	ab08      	add	r3, sp, #32
 80081ea:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 80081ee:	eddf 8a93 	vldr	s17, [pc, #588]	; 800843c <__kernel_rem_pio2f+0x308>
 80081f2:	ed9f 9a91 	vldr	s18, [pc, #580]	; 8008438 <__kernel_rem_pio2f+0x304>
 80081f6:	9304      	str	r3, [sp, #16]
 80081f8:	eb0e 0b80 	add.w	fp, lr, r0, lsl #2
 80081fc:	4656      	mov	r6, sl
 80081fe:	00b3      	lsls	r3, r6, #2
 8008200:	9305      	str	r3, [sp, #20]
 8008202:	ab58      	add	r3, sp, #352	; 0x160
 8008204:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8008208:	ac08      	add	r4, sp, #32
 800820a:	ab44      	add	r3, sp, #272	; 0x110
 800820c:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8008210:	46a4      	mov	ip, r4
 8008212:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8008216:	4637      	mov	r7, r6
 8008218:	2f00      	cmp	r7, #0
 800821a:	f1a0 0004 	sub.w	r0, r0, #4
 800821e:	dc4f      	bgt.n	80082c0 <__kernel_rem_pio2f+0x18c>
 8008220:	4628      	mov	r0, r5
 8008222:	e9cd 1206 	strd	r1, r2, [sp, #24]
 8008226:	f000 fb65 	bl	80088f4 <scalbnf>
 800822a:	eeb0 8a40 	vmov.f32	s16, s0
 800822e:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8008232:	ee28 0a00 	vmul.f32	s0, s16, s0
 8008236:	f000 fb1b 	bl	8008870 <floorf>
 800823a:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 800823e:	eea0 8a67 	vfms.f32	s16, s0, s15
 8008242:	2d00      	cmp	r5, #0
 8008244:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8008248:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800824c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8008250:	ee17 9a90 	vmov	r9, s15
 8008254:	ee38 8a40 	vsub.f32	s16, s16, s0
 8008258:	dd44      	ble.n	80082e4 <__kernel_rem_pio2f+0x1b0>
 800825a:	f106 3cff 	add.w	ip, r6, #4294967295
 800825e:	ab08      	add	r3, sp, #32
 8008260:	f1c5 0e08 	rsb	lr, r5, #8
 8008264:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8008268:	fa47 f00e 	asr.w	r0, r7, lr
 800826c:	4481      	add	r9, r0
 800826e:	fa00 f00e 	lsl.w	r0, r0, lr
 8008272:	1a3f      	subs	r7, r7, r0
 8008274:	f1c5 0007 	rsb	r0, r5, #7
 8008278:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 800827c:	4107      	asrs	r7, r0
 800827e:	2f00      	cmp	r7, #0
 8008280:	dd3f      	ble.n	8008302 <__kernel_rem_pio2f+0x1ce>
 8008282:	f04f 0e00 	mov.w	lr, #0
 8008286:	f109 0901 	add.w	r9, r9, #1
 800828a:	4673      	mov	r3, lr
 800828c:	4576      	cmp	r6, lr
 800828e:	dc6b      	bgt.n	8008368 <__kernel_rem_pio2f+0x234>
 8008290:	2d00      	cmp	r5, #0
 8008292:	dd04      	ble.n	800829e <__kernel_rem_pio2f+0x16a>
 8008294:	2d01      	cmp	r5, #1
 8008296:	d078      	beq.n	800838a <__kernel_rem_pio2f+0x256>
 8008298:	2d02      	cmp	r5, #2
 800829a:	f000 8081 	beq.w	80083a0 <__kernel_rem_pio2f+0x26c>
 800829e:	2f02      	cmp	r7, #2
 80082a0:	d12f      	bne.n	8008302 <__kernel_rem_pio2f+0x1ce>
 80082a2:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80082a6:	ee30 8a48 	vsub.f32	s16, s0, s16
 80082aa:	b353      	cbz	r3, 8008302 <__kernel_rem_pio2f+0x1ce>
 80082ac:	4628      	mov	r0, r5
 80082ae:	e9cd 1206 	strd	r1, r2, [sp, #24]
 80082b2:	f000 fb1f 	bl	80088f4 <scalbnf>
 80082b6:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80082ba:	ee38 8a40 	vsub.f32	s16, s16, s0
 80082be:	e020      	b.n	8008302 <__kernel_rem_pio2f+0x1ce>
 80082c0:	ee60 7a28 	vmul.f32	s15, s0, s17
 80082c4:	3f01      	subs	r7, #1
 80082c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80082ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80082ce:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80082d2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80082d6:	ecac 0a01 	vstmia	ip!, {s0}
 80082da:	ed90 0a00 	vldr	s0, [r0]
 80082de:	ee37 0a80 	vadd.f32	s0, s15, s0
 80082e2:	e799      	b.n	8008218 <__kernel_rem_pio2f+0xe4>
 80082e4:	d105      	bne.n	80082f2 <__kernel_rem_pio2f+0x1be>
 80082e6:	1e70      	subs	r0, r6, #1
 80082e8:	ab08      	add	r3, sp, #32
 80082ea:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 80082ee:	11ff      	asrs	r7, r7, #7
 80082f0:	e7c5      	b.n	800827e <__kernel_rem_pio2f+0x14a>
 80082f2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80082f6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80082fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082fe:	da31      	bge.n	8008364 <__kernel_rem_pio2f+0x230>
 8008300:	2700      	movs	r7, #0
 8008302:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8008306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800830a:	f040 809b 	bne.w	8008444 <__kernel_rem_pio2f+0x310>
 800830e:	1e74      	subs	r4, r6, #1
 8008310:	46a4      	mov	ip, r4
 8008312:	2000      	movs	r0, #0
 8008314:	45d4      	cmp	ip, sl
 8008316:	da4a      	bge.n	80083ae <__kernel_rem_pio2f+0x27a>
 8008318:	2800      	cmp	r0, #0
 800831a:	d07a      	beq.n	8008412 <__kernel_rem_pio2f+0x2de>
 800831c:	ab08      	add	r3, sp, #32
 800831e:	3d08      	subs	r5, #8
 8008320:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8008324:	2b00      	cmp	r3, #0
 8008326:	f000 8081 	beq.w	800842c <__kernel_rem_pio2f+0x2f8>
 800832a:	4628      	mov	r0, r5
 800832c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8008330:	00a5      	lsls	r5, r4, #2
 8008332:	f000 fadf 	bl	80088f4 <scalbnf>
 8008336:	aa44      	add	r2, sp, #272	; 0x110
 8008338:	1d2b      	adds	r3, r5, #4
 800833a:	ed9f 7a40 	vldr	s14, [pc, #256]	; 800843c <__kernel_rem_pio2f+0x308>
 800833e:	18d1      	adds	r1, r2, r3
 8008340:	4622      	mov	r2, r4
 8008342:	2a00      	cmp	r2, #0
 8008344:	f280 80ae 	bge.w	80084a4 <__kernel_rem_pio2f+0x370>
 8008348:	4622      	mov	r2, r4
 800834a:	2a00      	cmp	r2, #0
 800834c:	f2c0 80cc 	blt.w	80084e8 <__kernel_rem_pio2f+0x3b4>
 8008350:	a944      	add	r1, sp, #272	; 0x110
 8008352:	eb01 0682 	add.w	r6, r1, r2, lsl #2
 8008356:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 8008434 <__kernel_rem_pio2f+0x300>
 800835a:	eddf 7a39 	vldr	s15, [pc, #228]	; 8008440 <__kernel_rem_pio2f+0x30c>
 800835e:	2000      	movs	r0, #0
 8008360:	1aa1      	subs	r1, r4, r2
 8008362:	e0b6      	b.n	80084d2 <__kernel_rem_pio2f+0x39e>
 8008364:	2702      	movs	r7, #2
 8008366:	e78c      	b.n	8008282 <__kernel_rem_pio2f+0x14e>
 8008368:	6820      	ldr	r0, [r4, #0]
 800836a:	b94b      	cbnz	r3, 8008380 <__kernel_rem_pio2f+0x24c>
 800836c:	b118      	cbz	r0, 8008376 <__kernel_rem_pio2f+0x242>
 800836e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8008372:	6020      	str	r0, [r4, #0]
 8008374:	2001      	movs	r0, #1
 8008376:	f10e 0e01 	add.w	lr, lr, #1
 800837a:	3404      	adds	r4, #4
 800837c:	4603      	mov	r3, r0
 800837e:	e785      	b.n	800828c <__kernel_rem_pio2f+0x158>
 8008380:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8008384:	6020      	str	r0, [r4, #0]
 8008386:	4618      	mov	r0, r3
 8008388:	e7f5      	b.n	8008376 <__kernel_rem_pio2f+0x242>
 800838a:	1e74      	subs	r4, r6, #1
 800838c:	a808      	add	r0, sp, #32
 800838e:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008392:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8008396:	f10d 0c20 	add.w	ip, sp, #32
 800839a:	f84c 0024 	str.w	r0, [ip, r4, lsl #2]
 800839e:	e77e      	b.n	800829e <__kernel_rem_pio2f+0x16a>
 80083a0:	1e74      	subs	r4, r6, #1
 80083a2:	a808      	add	r0, sp, #32
 80083a4:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 80083a8:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80083ac:	e7f3      	b.n	8008396 <__kernel_rem_pio2f+0x262>
 80083ae:	ab08      	add	r3, sp, #32
 80083b0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80083b4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80083b8:	4318      	orrs	r0, r3
 80083ba:	e7ab      	b.n	8008314 <__kernel_rem_pio2f+0x1e0>
 80083bc:	f10c 0c01 	add.w	ip, ip, #1
 80083c0:	f850 4d04 	ldr.w	r4, [r0, #-4]!
 80083c4:	2c00      	cmp	r4, #0
 80083c6:	d0f9      	beq.n	80083bc <__kernel_rem_pio2f+0x288>
 80083c8:	9b05      	ldr	r3, [sp, #20]
 80083ca:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 80083ce:	eb0d 0003 	add.w	r0, sp, r3
 80083d2:	9b01      	ldr	r3, [sp, #4]
 80083d4:	18f4      	adds	r4, r6, r3
 80083d6:	ab1c      	add	r3, sp, #112	; 0x70
 80083d8:	1c77      	adds	r7, r6, #1
 80083da:	384c      	subs	r0, #76	; 0x4c
 80083dc:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80083e0:	4466      	add	r6, ip
 80083e2:	42be      	cmp	r6, r7
 80083e4:	f6ff af0b 	blt.w	80081fe <__kernel_rem_pio2f+0xca>
 80083e8:	f85b 3027 	ldr.w	r3, [fp, r7, lsl #2]
 80083ec:	f8dd e008 	ldr.w	lr, [sp, #8]
 80083f0:	ee07 3a90 	vmov	s15, r3
 80083f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80083f8:	f04f 0c00 	mov.w	ip, #0
 80083fc:	ece4 7a01 	vstmia	r4!, {s15}
 8008400:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8008440 <__kernel_rem_pio2f+0x30c>
 8008404:	46a1      	mov	r9, r4
 8008406:	458c      	cmp	ip, r1
 8008408:	dd07      	ble.n	800841a <__kernel_rem_pio2f+0x2e6>
 800840a:	ece0 7a01 	vstmia	r0!, {s15}
 800840e:	3701      	adds	r7, #1
 8008410:	e7e7      	b.n	80083e2 <__kernel_rem_pio2f+0x2ae>
 8008412:	9804      	ldr	r0, [sp, #16]
 8008414:	f04f 0c01 	mov.w	ip, #1
 8008418:	e7d2      	b.n	80083c0 <__kernel_rem_pio2f+0x28c>
 800841a:	ecfe 6a01 	vldmia	lr!, {s13}
 800841e:	ed39 7a01 	vldmdb	r9!, {s14}
 8008422:	f10c 0c01 	add.w	ip, ip, #1
 8008426:	eee6 7a87 	vfma.f32	s15, s13, s14
 800842a:	e7ec      	b.n	8008406 <__kernel_rem_pio2f+0x2d2>
 800842c:	3c01      	subs	r4, #1
 800842e:	e775      	b.n	800831c <__kernel_rem_pio2f+0x1e8>
 8008430:	08009270 	.word	0x08009270
 8008434:	08009244 	.word	0x08009244
 8008438:	43800000 	.word	0x43800000
 800843c:	3b800000 	.word	0x3b800000
 8008440:	00000000 	.word	0x00000000
 8008444:	9b03      	ldr	r3, [sp, #12]
 8008446:	eeb0 0a48 	vmov.f32	s0, s16
 800844a:	1a98      	subs	r0, r3, r2
 800844c:	f000 fa52 	bl	80088f4 <scalbnf>
 8008450:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8008438 <__kernel_rem_pio2f+0x304>
 8008454:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8008458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800845c:	db19      	blt.n	8008492 <__kernel_rem_pio2f+0x35e>
 800845e:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 800843c <__kernel_rem_pio2f+0x308>
 8008462:	ee60 7a27 	vmul.f32	s15, s0, s15
 8008466:	aa08      	add	r2, sp, #32
 8008468:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800846c:	1c74      	adds	r4, r6, #1
 800846e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008472:	3508      	adds	r5, #8
 8008474:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8008478:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800847c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008480:	ee10 3a10 	vmov	r3, s0
 8008484:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8008488:	ee17 3a90 	vmov	r3, s15
 800848c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8008490:	e74b      	b.n	800832a <__kernel_rem_pio2f+0x1f6>
 8008492:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008496:	aa08      	add	r2, sp, #32
 8008498:	ee10 3a10 	vmov	r3, s0
 800849c:	4634      	mov	r4, r6
 800849e:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 80084a2:	e742      	b.n	800832a <__kernel_rem_pio2f+0x1f6>
 80084a4:	a808      	add	r0, sp, #32
 80084a6:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 80084aa:	9001      	str	r0, [sp, #4]
 80084ac:	ee07 0a90 	vmov	s15, r0
 80084b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80084b4:	3a01      	subs	r2, #1
 80084b6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80084ba:	ee20 0a07 	vmul.f32	s0, s0, s14
 80084be:	ed61 7a01 	vstmdb	r1!, {s15}
 80084c2:	e73e      	b.n	8008342 <__kernel_rem_pio2f+0x20e>
 80084c4:	ecfc 6a01 	vldmia	ip!, {s13}
 80084c8:	ecb6 7a01 	vldmia	r6!, {s14}
 80084cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80084d0:	3001      	adds	r0, #1
 80084d2:	4550      	cmp	r0, sl
 80084d4:	dc01      	bgt.n	80084da <__kernel_rem_pio2f+0x3a6>
 80084d6:	4288      	cmp	r0, r1
 80084d8:	ddf4      	ble.n	80084c4 <__kernel_rem_pio2f+0x390>
 80084da:	a858      	add	r0, sp, #352	; 0x160
 80084dc:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80084e0:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 80084e4:	3a01      	subs	r2, #1
 80084e6:	e730      	b.n	800834a <__kernel_rem_pio2f+0x216>
 80084e8:	9a66      	ldr	r2, [sp, #408]	; 0x198
 80084ea:	2a02      	cmp	r2, #2
 80084ec:	dc09      	bgt.n	8008502 <__kernel_rem_pio2f+0x3ce>
 80084ee:	2a00      	cmp	r2, #0
 80084f0:	dc2a      	bgt.n	8008548 <__kernel_rem_pio2f+0x414>
 80084f2:	d043      	beq.n	800857c <__kernel_rem_pio2f+0x448>
 80084f4:	f009 0007 	and.w	r0, r9, #7
 80084f8:	b059      	add	sp, #356	; 0x164
 80084fa:	ecbd 8b04 	vpop	{d8-d9}
 80084fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008502:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8008504:	2b03      	cmp	r3, #3
 8008506:	d1f5      	bne.n	80084f4 <__kernel_rem_pio2f+0x3c0>
 8008508:	ab30      	add	r3, sp, #192	; 0xc0
 800850a:	442b      	add	r3, r5
 800850c:	461a      	mov	r2, r3
 800850e:	4619      	mov	r1, r3
 8008510:	4620      	mov	r0, r4
 8008512:	2800      	cmp	r0, #0
 8008514:	f1a1 0104 	sub.w	r1, r1, #4
 8008518:	dc51      	bgt.n	80085be <__kernel_rem_pio2f+0x48a>
 800851a:	4621      	mov	r1, r4
 800851c:	2901      	cmp	r1, #1
 800851e:	f1a2 0204 	sub.w	r2, r2, #4
 8008522:	dc5c      	bgt.n	80085de <__kernel_rem_pio2f+0x4aa>
 8008524:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8008440 <__kernel_rem_pio2f+0x30c>
 8008528:	3304      	adds	r3, #4
 800852a:	2c01      	cmp	r4, #1
 800852c:	dc67      	bgt.n	80085fe <__kernel_rem_pio2f+0x4ca>
 800852e:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8008532:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8008536:	2f00      	cmp	r7, #0
 8008538:	d167      	bne.n	800860a <__kernel_rem_pio2f+0x4d6>
 800853a:	edc8 6a00 	vstr	s13, [r8]
 800853e:	ed88 7a01 	vstr	s14, [r8, #4]
 8008542:	edc8 7a02 	vstr	s15, [r8, #8]
 8008546:	e7d5      	b.n	80084f4 <__kernel_rem_pio2f+0x3c0>
 8008548:	aa30      	add	r2, sp, #192	; 0xc0
 800854a:	ed1f 7a43 	vldr	s14, [pc, #-268]	; 8008440 <__kernel_rem_pio2f+0x30c>
 800854e:	4413      	add	r3, r2
 8008550:	4622      	mov	r2, r4
 8008552:	2a00      	cmp	r2, #0
 8008554:	da24      	bge.n	80085a0 <__kernel_rem_pio2f+0x46c>
 8008556:	b34f      	cbz	r7, 80085ac <__kernel_rem_pio2f+0x478>
 8008558:	eef1 7a47 	vneg.f32	s15, s14
 800855c:	edc8 7a00 	vstr	s15, [r8]
 8008560:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8008564:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008568:	aa31      	add	r2, sp, #196	; 0xc4
 800856a:	2301      	movs	r3, #1
 800856c:	429c      	cmp	r4, r3
 800856e:	da20      	bge.n	80085b2 <__kernel_rem_pio2f+0x47e>
 8008570:	b10f      	cbz	r7, 8008576 <__kernel_rem_pio2f+0x442>
 8008572:	eef1 7a67 	vneg.f32	s15, s15
 8008576:	edc8 7a01 	vstr	s15, [r8, #4]
 800857a:	e7bb      	b.n	80084f4 <__kernel_rem_pio2f+0x3c0>
 800857c:	aa30      	add	r2, sp, #192	; 0xc0
 800857e:	ed5f 7a50 	vldr	s15, [pc, #-320]	; 8008440 <__kernel_rem_pio2f+0x30c>
 8008582:	4413      	add	r3, r2
 8008584:	2c00      	cmp	r4, #0
 8008586:	da05      	bge.n	8008594 <__kernel_rem_pio2f+0x460>
 8008588:	b10f      	cbz	r7, 800858e <__kernel_rem_pio2f+0x45a>
 800858a:	eef1 7a67 	vneg.f32	s15, s15
 800858e:	edc8 7a00 	vstr	s15, [r8]
 8008592:	e7af      	b.n	80084f4 <__kernel_rem_pio2f+0x3c0>
 8008594:	ed33 7a01 	vldmdb	r3!, {s14}
 8008598:	3c01      	subs	r4, #1
 800859a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800859e:	e7f1      	b.n	8008584 <__kernel_rem_pio2f+0x450>
 80085a0:	ed73 7a01 	vldmdb	r3!, {s15}
 80085a4:	3a01      	subs	r2, #1
 80085a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80085aa:	e7d2      	b.n	8008552 <__kernel_rem_pio2f+0x41e>
 80085ac:	eef0 7a47 	vmov.f32	s15, s14
 80085b0:	e7d4      	b.n	800855c <__kernel_rem_pio2f+0x428>
 80085b2:	ecb2 7a01 	vldmia	r2!, {s14}
 80085b6:	3301      	adds	r3, #1
 80085b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80085bc:	e7d6      	b.n	800856c <__kernel_rem_pio2f+0x438>
 80085be:	edd1 7a00 	vldr	s15, [r1]
 80085c2:	edd1 6a01 	vldr	s13, [r1, #4]
 80085c6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80085ca:	3801      	subs	r0, #1
 80085cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80085d0:	ed81 7a00 	vstr	s14, [r1]
 80085d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085d8:	edc1 7a01 	vstr	s15, [r1, #4]
 80085dc:	e799      	b.n	8008512 <__kernel_rem_pio2f+0x3de>
 80085de:	edd2 7a00 	vldr	s15, [r2]
 80085e2:	edd2 6a01 	vldr	s13, [r2, #4]
 80085e6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80085ea:	3901      	subs	r1, #1
 80085ec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80085f0:	ed82 7a00 	vstr	s14, [r2]
 80085f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80085f8:	edc2 7a01 	vstr	s15, [r2, #4]
 80085fc:	e78e      	b.n	800851c <__kernel_rem_pio2f+0x3e8>
 80085fe:	ed33 7a01 	vldmdb	r3!, {s14}
 8008602:	3c01      	subs	r4, #1
 8008604:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008608:	e78f      	b.n	800852a <__kernel_rem_pio2f+0x3f6>
 800860a:	eef1 6a66 	vneg.f32	s13, s13
 800860e:	eeb1 7a47 	vneg.f32	s14, s14
 8008612:	edc8 6a00 	vstr	s13, [r8]
 8008616:	ed88 7a01 	vstr	s14, [r8, #4]
 800861a:	eef1 7a67 	vneg.f32	s15, s15
 800861e:	e790      	b.n	8008542 <__kernel_rem_pio2f+0x40e>

08008620 <__kernel_sinf>:
 8008620:	ee10 3a10 	vmov	r3, s0
 8008624:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008628:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 800862c:	da04      	bge.n	8008638 <__kernel_sinf+0x18>
 800862e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8008632:	ee17 3a90 	vmov	r3, s15
 8008636:	b35b      	cbz	r3, 8008690 <__kernel_sinf+0x70>
 8008638:	ee20 7a00 	vmul.f32	s14, s0, s0
 800863c:	eddf 7a15 	vldr	s15, [pc, #84]	; 8008694 <__kernel_sinf+0x74>
 8008640:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8008698 <__kernel_sinf+0x78>
 8008644:	eea7 6a27 	vfma.f32	s12, s14, s15
 8008648:	eddf 7a14 	vldr	s15, [pc, #80]	; 800869c <__kernel_sinf+0x7c>
 800864c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8008650:	ed9f 6a13 	vldr	s12, [pc, #76]	; 80086a0 <__kernel_sinf+0x80>
 8008654:	eea7 6a87 	vfma.f32	s12, s15, s14
 8008658:	eddf 7a12 	vldr	s15, [pc, #72]	; 80086a4 <__kernel_sinf+0x84>
 800865c:	ee60 6a07 	vmul.f32	s13, s0, s14
 8008660:	eee6 7a07 	vfma.f32	s15, s12, s14
 8008664:	b930      	cbnz	r0, 8008674 <__kernel_sinf+0x54>
 8008666:	ed9f 6a10 	vldr	s12, [pc, #64]	; 80086a8 <__kernel_sinf+0x88>
 800866a:	eea7 6a27 	vfma.f32	s12, s14, s15
 800866e:	eea6 0a26 	vfma.f32	s0, s12, s13
 8008672:	4770      	bx	lr
 8008674:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8008678:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 800867c:	eee0 7a86 	vfma.f32	s15, s1, s12
 8008680:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8008684:	eddf 7a09 	vldr	s15, [pc, #36]	; 80086ac <__kernel_sinf+0x8c>
 8008688:	eee6 0aa7 	vfma.f32	s1, s13, s15
 800868c:	ee30 0a60 	vsub.f32	s0, s0, s1
 8008690:	4770      	bx	lr
 8008692:	bf00      	nop
 8008694:	2f2ec9d3 	.word	0x2f2ec9d3
 8008698:	b2d72f34 	.word	0xb2d72f34
 800869c:	3638ef1b 	.word	0x3638ef1b
 80086a0:	b9500d01 	.word	0xb9500d01
 80086a4:	3c088889 	.word	0x3c088889
 80086a8:	be2aaaab 	.word	0xbe2aaaab
 80086ac:	3e2aaaab 	.word	0x3e2aaaab

080086b0 <__kernel_tanf>:
 80086b0:	b508      	push	{r3, lr}
 80086b2:	ee10 3a10 	vmov	r3, s0
 80086b6:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 80086ba:	f1b2 5f46 	cmp.w	r2, #830472192	; 0x31800000
 80086be:	eef0 7a40 	vmov.f32	s15, s0
 80086c2:	da17      	bge.n	80086f4 <__kernel_tanf+0x44>
 80086c4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80086c8:	ee17 1a10 	vmov	r1, s14
 80086cc:	bb41      	cbnz	r1, 8008720 <__kernel_tanf+0x70>
 80086ce:	1c43      	adds	r3, r0, #1
 80086d0:	4313      	orrs	r3, r2
 80086d2:	d108      	bne.n	80086e6 <__kernel_tanf+0x36>
 80086d4:	f7ff fb18 	bl	8007d08 <fabsf>
 80086d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80086dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80086e0:	eeb0 0a67 	vmov.f32	s0, s15
 80086e4:	bd08      	pop	{r3, pc}
 80086e6:	2801      	cmp	r0, #1
 80086e8:	d0fa      	beq.n	80086e0 <__kernel_tanf+0x30>
 80086ea:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 80086ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80086f2:	e7f5      	b.n	80086e0 <__kernel_tanf+0x30>
 80086f4:	494c      	ldr	r1, [pc, #304]	; (8008828 <__kernel_tanf+0x178>)
 80086f6:	428a      	cmp	r2, r1
 80086f8:	db12      	blt.n	8008720 <__kernel_tanf+0x70>
 80086fa:	2b00      	cmp	r3, #0
 80086fc:	bfb8      	it	lt
 80086fe:	eef1 7a40 	vneglt.f32	s15, s0
 8008702:	ed9f 0a4a 	vldr	s0, [pc, #296]	; 800882c <__kernel_tanf+0x17c>
 8008706:	ee70 7a67 	vsub.f32	s15, s0, s15
 800870a:	ed9f 0a49 	vldr	s0, [pc, #292]	; 8008830 <__kernel_tanf+0x180>
 800870e:	bfb8      	it	lt
 8008710:	eef1 0a60 	vneglt.f32	s1, s1
 8008714:	ee70 0a60 	vsub.f32	s1, s0, s1
 8008718:	ee70 7aa7 	vadd.f32	s15, s1, s15
 800871c:	eddf 0a45 	vldr	s1, [pc, #276]	; 8008834 <__kernel_tanf+0x184>
 8008720:	eddf 5a45 	vldr	s11, [pc, #276]	; 8008838 <__kernel_tanf+0x188>
 8008724:	ed9f 6a45 	vldr	s12, [pc, #276]	; 800883c <__kernel_tanf+0x18c>
 8008728:	ed9f 5a45 	vldr	s10, [pc, #276]	; 8008840 <__kernel_tanf+0x190>
 800872c:	493e      	ldr	r1, [pc, #248]	; (8008828 <__kernel_tanf+0x178>)
 800872e:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8008732:	428a      	cmp	r2, r1
 8008734:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8008738:	eea7 6a25 	vfma.f32	s12, s14, s11
 800873c:	eddf 5a41 	vldr	s11, [pc, #260]	; 8008844 <__kernel_tanf+0x194>
 8008740:	eee6 5a07 	vfma.f32	s11, s12, s14
 8008744:	ed9f 6a40 	vldr	s12, [pc, #256]	; 8008848 <__kernel_tanf+0x198>
 8008748:	eea5 6a87 	vfma.f32	s12, s11, s14
 800874c:	eddf 5a3f 	vldr	s11, [pc, #252]	; 800884c <__kernel_tanf+0x19c>
 8008750:	eee6 5a07 	vfma.f32	s11, s12, s14
 8008754:	ed9f 6a3e 	vldr	s12, [pc, #248]	; 8008850 <__kernel_tanf+0x1a0>
 8008758:	eea5 6a87 	vfma.f32	s12, s11, s14
 800875c:	eddf 5a3d 	vldr	s11, [pc, #244]	; 8008854 <__kernel_tanf+0x1a4>
 8008760:	eee7 5a05 	vfma.f32	s11, s14, s10
 8008764:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 8008858 <__kernel_tanf+0x1a8>
 8008768:	eea5 5a87 	vfma.f32	s10, s11, s14
 800876c:	eddf 5a3b 	vldr	s11, [pc, #236]	; 800885c <__kernel_tanf+0x1ac>
 8008770:	eee5 5a07 	vfma.f32	s11, s10, s14
 8008774:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 8008860 <__kernel_tanf+0x1b0>
 8008778:	eea5 5a87 	vfma.f32	s10, s11, s14
 800877c:	eddf 5a39 	vldr	s11, [pc, #228]	; 8008864 <__kernel_tanf+0x1b4>
 8008780:	eee5 5a07 	vfma.f32	s11, s10, s14
 8008784:	eeb0 7a46 	vmov.f32	s14, s12
 8008788:	eea5 7aa6 	vfma.f32	s14, s11, s13
 800878c:	ee27 5aa6 	vmul.f32	s10, s15, s13
 8008790:	eeb0 6a60 	vmov.f32	s12, s1
 8008794:	eea7 6a05 	vfma.f32	s12, s14, s10
 8008798:	ed9f 7a33 	vldr	s14, [pc, #204]	; 8008868 <__kernel_tanf+0x1b8>
 800879c:	eee6 0a26 	vfma.f32	s1, s12, s13
 80087a0:	eee5 0a07 	vfma.f32	s1, s10, s14
 80087a4:	ee37 7aa0 	vadd.f32	s14, s15, s1
 80087a8:	db1d      	blt.n	80087e6 <__kernel_tanf+0x136>
 80087aa:	ee06 0a90 	vmov	s13, r0
 80087ae:	eeb8 0ae6 	vcvt.f32.s32	s0, s13
 80087b2:	ee27 6a07 	vmul.f32	s12, s14, s14
 80087b6:	ee37 7a00 	vadd.f32	s14, s14, s0
 80087ba:	179b      	asrs	r3, r3, #30
 80087bc:	eec6 6a07 	vdiv.f32	s13, s12, s14
 80087c0:	f003 0302 	and.w	r3, r3, #2
 80087c4:	f1c3 0301 	rsb	r3, r3, #1
 80087c8:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 80087cc:	ee76 0ae0 	vsub.f32	s1, s13, s1
 80087d0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80087d4:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80087d8:	ee07 3a90 	vmov	s15, r3
 80087dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80087e0:	ee67 7a80 	vmul.f32	s15, s15, s0
 80087e4:	e77c      	b.n	80086e0 <__kernel_tanf+0x30>
 80087e6:	2801      	cmp	r0, #1
 80087e8:	d01b      	beq.n	8008822 <__kernel_tanf+0x172>
 80087ea:	4b20      	ldr	r3, [pc, #128]	; (800886c <__kernel_tanf+0x1bc>)
 80087ec:	ee17 2a10 	vmov	r2, s14
 80087f0:	401a      	ands	r2, r3
 80087f2:	ee06 2a10 	vmov	s12, r2
 80087f6:	ee76 7a67 	vsub.f32	s15, s12, s15
 80087fa:	ee70 0ae7 	vsub.f32	s1, s1, s15
 80087fe:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8008802:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8008806:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800880a:	ee16 2a90 	vmov	r2, s13
 800880e:	4013      	ands	r3, r2
 8008810:	ee07 3a90 	vmov	s15, r3
 8008814:	eea6 7a27 	vfma.f32	s14, s12, s15
 8008818:	eea0 7aa7 	vfma.f32	s14, s1, s15
 800881c:	eee7 7a26 	vfma.f32	s15, s14, s13
 8008820:	e75e      	b.n	80086e0 <__kernel_tanf+0x30>
 8008822:	eef0 7a47 	vmov.f32	s15, s14
 8008826:	e75b      	b.n	80086e0 <__kernel_tanf+0x30>
 8008828:	3f2ca140 	.word	0x3f2ca140
 800882c:	3f490fda 	.word	0x3f490fda
 8008830:	33222168 	.word	0x33222168
 8008834:	00000000 	.word	0x00000000
 8008838:	b79bae5f 	.word	0xb79bae5f
 800883c:	38a3f445 	.word	0x38a3f445
 8008840:	37d95384 	.word	0x37d95384
 8008844:	3a1a26c8 	.word	0x3a1a26c8
 8008848:	3b6b6916 	.word	0x3b6b6916
 800884c:	3cb327a4 	.word	0x3cb327a4
 8008850:	3e088889 	.word	0x3e088889
 8008854:	3895c07a 	.word	0x3895c07a
 8008858:	398137b9 	.word	0x398137b9
 800885c:	3abede48 	.word	0x3abede48
 8008860:	3c11371f 	.word	0x3c11371f
 8008864:	3d5d0dd1 	.word	0x3d5d0dd1
 8008868:	3eaaaaab 	.word	0x3eaaaaab
 800886c:	fffff000 	.word	0xfffff000

08008870 <floorf>:
 8008870:	ee10 3a10 	vmov	r3, s0
 8008874:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8008878:	3a7f      	subs	r2, #127	; 0x7f
 800887a:	2a16      	cmp	r2, #22
 800887c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8008880:	dc2a      	bgt.n	80088d8 <floorf+0x68>
 8008882:	2a00      	cmp	r2, #0
 8008884:	da11      	bge.n	80088aa <floorf+0x3a>
 8008886:	eddf 7a18 	vldr	s15, [pc, #96]	; 80088e8 <floorf+0x78>
 800888a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800888e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8008892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008896:	dd05      	ble.n	80088a4 <floorf+0x34>
 8008898:	2b00      	cmp	r3, #0
 800889a:	da23      	bge.n	80088e4 <floorf+0x74>
 800889c:	4a13      	ldr	r2, [pc, #76]	; (80088ec <floorf+0x7c>)
 800889e:	2900      	cmp	r1, #0
 80088a0:	bf18      	it	ne
 80088a2:	4613      	movne	r3, r2
 80088a4:	ee00 3a10 	vmov	s0, r3
 80088a8:	4770      	bx	lr
 80088aa:	4911      	ldr	r1, [pc, #68]	; (80088f0 <floorf+0x80>)
 80088ac:	4111      	asrs	r1, r2
 80088ae:	420b      	tst	r3, r1
 80088b0:	d0fa      	beq.n	80088a8 <floorf+0x38>
 80088b2:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80088e8 <floorf+0x78>
 80088b6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80088ba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80088be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80088c2:	ddef      	ble.n	80088a4 <floorf+0x34>
 80088c4:	2b00      	cmp	r3, #0
 80088c6:	bfbe      	ittt	lt
 80088c8:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80088cc:	fa40 f202 	asrlt.w	r2, r0, r2
 80088d0:	189b      	addlt	r3, r3, r2
 80088d2:	ea23 0301 	bic.w	r3, r3, r1
 80088d6:	e7e5      	b.n	80088a4 <floorf+0x34>
 80088d8:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80088dc:	d3e4      	bcc.n	80088a8 <floorf+0x38>
 80088de:	ee30 0a00 	vadd.f32	s0, s0, s0
 80088e2:	4770      	bx	lr
 80088e4:	2300      	movs	r3, #0
 80088e6:	e7dd      	b.n	80088a4 <floorf+0x34>
 80088e8:	7149f2ca 	.word	0x7149f2ca
 80088ec:	bf800000 	.word	0xbf800000
 80088f0:	007fffff 	.word	0x007fffff

080088f4 <scalbnf>:
 80088f4:	ee10 3a10 	vmov	r3, s0
 80088f8:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 80088fc:	d025      	beq.n	800894a <scalbnf+0x56>
 80088fe:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8008902:	d302      	bcc.n	800890a <scalbnf+0x16>
 8008904:	ee30 0a00 	vadd.f32	s0, s0, s0
 8008908:	4770      	bx	lr
 800890a:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 800890e:	d122      	bne.n	8008956 <scalbnf+0x62>
 8008910:	4b2a      	ldr	r3, [pc, #168]	; (80089bc <scalbnf+0xc8>)
 8008912:	eddf 7a2b 	vldr	s15, [pc, #172]	; 80089c0 <scalbnf+0xcc>
 8008916:	4298      	cmp	r0, r3
 8008918:	ee20 0a27 	vmul.f32	s0, s0, s15
 800891c:	db16      	blt.n	800894c <scalbnf+0x58>
 800891e:	ee10 3a10 	vmov	r3, s0
 8008922:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8008926:	3a19      	subs	r2, #25
 8008928:	4402      	add	r2, r0
 800892a:	2afe      	cmp	r2, #254	; 0xfe
 800892c:	dd15      	ble.n	800895a <scalbnf+0x66>
 800892e:	ee10 3a10 	vmov	r3, s0
 8008932:	eddf 7a24 	vldr	s15, [pc, #144]	; 80089c4 <scalbnf+0xd0>
 8008936:	eddf 6a24 	vldr	s13, [pc, #144]	; 80089c8 <scalbnf+0xd4>
 800893a:	2b00      	cmp	r3, #0
 800893c:	eeb0 7a67 	vmov.f32	s14, s15
 8008940:	bfb8      	it	lt
 8008942:	eef0 7a66 	vmovlt.f32	s15, s13
 8008946:	ee27 0a27 	vmul.f32	s0, s14, s15
 800894a:	4770      	bx	lr
 800894c:	eddf 7a1f 	vldr	s15, [pc, #124]	; 80089cc <scalbnf+0xd8>
 8008950:	ee20 0a27 	vmul.f32	s0, s0, s15
 8008954:	4770      	bx	lr
 8008956:	0dd2      	lsrs	r2, r2, #23
 8008958:	e7e6      	b.n	8008928 <scalbnf+0x34>
 800895a:	2a00      	cmp	r2, #0
 800895c:	dd06      	ble.n	800896c <scalbnf+0x78>
 800895e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008962:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8008966:	ee00 3a10 	vmov	s0, r3
 800896a:	4770      	bx	lr
 800896c:	f112 0f16 	cmn.w	r2, #22
 8008970:	da1a      	bge.n	80089a8 <scalbnf+0xb4>
 8008972:	f24c 3350 	movw	r3, #50000	; 0xc350
 8008976:	4298      	cmp	r0, r3
 8008978:	ee10 3a10 	vmov	r3, s0
 800897c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8008980:	dd0a      	ble.n	8008998 <scalbnf+0xa4>
 8008982:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80089c4 <scalbnf+0xd0>
 8008986:	ed9f 7a10 	vldr	s14, [pc, #64]	; 80089c8 <scalbnf+0xd4>
 800898a:	eef0 7a40 	vmov.f32	s15, s0
 800898e:	2b00      	cmp	r3, #0
 8008990:	bf18      	it	ne
 8008992:	eeb0 0a47 	vmovne.f32	s0, s14
 8008996:	e7db      	b.n	8008950 <scalbnf+0x5c>
 8008998:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 80089cc <scalbnf+0xd8>
 800899c:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 80089d0 <scalbnf+0xdc>
 80089a0:	eef0 7a40 	vmov.f32	s15, s0
 80089a4:	2b00      	cmp	r3, #0
 80089a6:	e7f3      	b.n	8008990 <scalbnf+0x9c>
 80089a8:	3219      	adds	r2, #25
 80089aa:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80089ae:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 80089b2:	eddf 7a08 	vldr	s15, [pc, #32]	; 80089d4 <scalbnf+0xe0>
 80089b6:	ee07 3a10 	vmov	s14, r3
 80089ba:	e7c4      	b.n	8008946 <scalbnf+0x52>
 80089bc:	ffff3cb0 	.word	0xffff3cb0
 80089c0:	4c000000 	.word	0x4c000000
 80089c4:	7149f2ca 	.word	0x7149f2ca
 80089c8:	f149f2ca 	.word	0xf149f2ca
 80089cc:	0da24260 	.word	0x0da24260
 80089d0:	8da24260 	.word	0x8da24260
 80089d4:	33000000 	.word	0x33000000

080089d8 <_init>:
 80089d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80089da:	bf00      	nop
 80089dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80089de:	bc08      	pop	{r3}
 80089e0:	469e      	mov	lr, r3
 80089e2:	4770      	bx	lr

080089e4 <_fini>:
 80089e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80089e6:	bf00      	nop
 80089e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80089ea:	bc08      	pop	{r3}
 80089ec:	469e      	mov	lr, r3
 80089ee:	4770      	bx	lr


Test1_Dani.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009114  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000008c4  080092b8  080092b8  000192b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009b7c  08009b7c  00020200  2**0
                  CONTENTS
  4 .ARM          00000000  08009b7c  08009b7c  00020200  2**0
                  CONTENTS
  5 .preinit_array 00000000  08009b7c  08009b7c  00020200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009b7c  08009b7c  00019b7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009b80  08009b80  00019b80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000200  20000000  08009b84  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000015c  20000200  08009d84  00020200  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  2000035c  08009d84  0002035c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005a8c  00000000  00000000  00020230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001456  00000000  00000000  00025cbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000458  00000000  00000000  00027118  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000380  00000000  00000000  00027570  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010d4b  00000000  00000000  000278f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00007515  00000000  00000000  0003863b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00057430  00000000  00000000  0003fb50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00096f80  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002678  00000000  00000000  00096fd0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000200 	.word	0x20000200
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800929c 	.word	0x0800929c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000204 	.word	0x20000204
 80001dc:	0800929c 	.word	0x0800929c

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2lz>:
 8000c98:	b538      	push	{r3, r4, r5, lr}
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	4604      	mov	r4, r0
 8000ca0:	460d      	mov	r5, r1
 8000ca2:	f7ff ff23 	bl	8000aec <__aeabi_dcmplt>
 8000ca6:	b928      	cbnz	r0, 8000cb4 <__aeabi_d2lz+0x1c>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	4629      	mov	r1, r5
 8000cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cb0:	f000 b80a 	b.w	8000cc8 <__aeabi_d2ulz>
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cba:	f000 f805 	bl	8000cc8 <__aeabi_d2ulz>
 8000cbe:	4240      	negs	r0, r0
 8000cc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc4:	bd38      	pop	{r3, r4, r5, pc}
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_d2ulz>:
 8000cc8:	b5d0      	push	{r4, r6, r7, lr}
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <__aeabi_d2ulz+0x34>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	4606      	mov	r6, r0
 8000cd0:	460f      	mov	r7, r1
 8000cd2:	f7ff fc99 	bl	8000608 <__aeabi_dmul>
 8000cd6:	f7ff ff6f 	bl	8000bb8 <__aeabi_d2uiz>
 8000cda:	4604      	mov	r4, r0
 8000cdc:	f7ff fc1a 	bl	8000514 <__aeabi_ui2d>
 8000ce0:	4b07      	ldr	r3, [pc, #28]	; (8000d00 <__aeabi_d2ulz+0x38>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	f7ff fc90 	bl	8000608 <__aeabi_dmul>
 8000ce8:	4602      	mov	r2, r0
 8000cea:	460b      	mov	r3, r1
 8000cec:	4630      	mov	r0, r6
 8000cee:	4639      	mov	r1, r7
 8000cf0:	f7ff fad2 	bl	8000298 <__aeabi_dsub>
 8000cf4:	f7ff ff60 	bl	8000bb8 <__aeabi_d2uiz>
 8000cf8:	4621      	mov	r1, r4
 8000cfa:	bdd0      	pop	{r4, r6, r7, pc}
 8000cfc:	3df00000 	.word	0x3df00000
 8000d00:	41f00000 	.word	0x41f00000

08000d04 <EKF_Init>:
float h1;
float h2;

/*--------------------------------------*/

void EKF_Init(EKF *ekf, float P[2], float Q[2], float R[3]) {
 8000d04:	b480      	push	{r7}
 8000d06:	b085      	sub	sp, #20
 8000d08:	af00      	add	r7, sp, #0
 8000d0a:	60f8      	str	r0, [r7, #12]
 8000d0c:	60b9      	str	r1, [r7, #8]
 8000d0e:	607a      	str	r2, [r7, #4]
 8000d10:	603b      	str	r3, [r7, #0]

	/* Reset state estimates */
	ekf->roll_r 	= 0.0f;
 8000d12:	68fb      	ldr	r3, [r7, #12]
 8000d14:	f04f 0200 	mov.w	r2, #0
 8000d18:	601a      	str	r2, [r3, #0]
	ekf->pitch_r 	= 0.0f;
 8000d1a:	68fb      	ldr	r3, [r7, #12]
 8000d1c:	f04f 0200 	mov.w	r2, #0
 8000d20:	605a      	str	r2, [r3, #4]
	ekf->yaw_r		= 0.0f;
 8000d22:	68fb      	ldr	r3, [r7, #12]
 8000d24:	f04f 0200 	mov.w	r2, #0
 8000d28:	609a      	str	r2, [r3, #8]

	/* Initialise state covariance matrix */
	ekf->P[0][0] = P[0]; ekf->P[0][1] = 0.0f;
 8000d2a:	68bb      	ldr	r3, [r7, #8]
 8000d2c:	681a      	ldr	r2, [r3, #0]
 8000d2e:	68fb      	ldr	r3, [r7, #12]
 8000d30:	60da      	str	r2, [r3, #12]
 8000d32:	68fb      	ldr	r3, [r7, #12]
 8000d34:	f04f 0200 	mov.w	r2, #0
 8000d38:	611a      	str	r2, [r3, #16]
	ekf->P[1][0] = 0.0f; ekf->P[1][1] = P[1];
 8000d3a:	68fb      	ldr	r3, [r7, #12]
 8000d3c:	f04f 0200 	mov.w	r2, #0
 8000d40:	615a      	str	r2, [r3, #20]
 8000d42:	68bb      	ldr	r3, [r7, #8]
 8000d44:	685a      	ldr	r2, [r3, #4]
 8000d46:	68fb      	ldr	r3, [r7, #12]
 8000d48:	619a      	str	r2, [r3, #24]

	/* Set process and measurement noise */
	ekf->Q[0] = Q[0];
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	681a      	ldr	r2, [r3, #0]
 8000d4e:	68fb      	ldr	r3, [r7, #12]
 8000d50:	61da      	str	r2, [r3, #28]
	ekf->Q[1] = Q[1];
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	685a      	ldr	r2, [r3, #4]
 8000d56:	68fb      	ldr	r3, [r7, #12]
 8000d58:	621a      	str	r2, [r3, #32]

	ekf->R[0] = R[0];
 8000d5a:	683b      	ldr	r3, [r7, #0]
 8000d5c:	681a      	ldr	r2, [r3, #0]
 8000d5e:	68fb      	ldr	r3, [r7, #12]
 8000d60:	625a      	str	r2, [r3, #36]	; 0x24
	ekf->R[1] = R[1];
 8000d62:	683b      	ldr	r3, [r7, #0]
 8000d64:	685a      	ldr	r2, [r3, #4]
 8000d66:	68fb      	ldr	r3, [r7, #12]
 8000d68:	629a      	str	r2, [r3, #40]	; 0x28
	ekf->R[2] = R[2];
 8000d6a:	683b      	ldr	r3, [r7, #0]
 8000d6c:	689a      	ldr	r2, [r3, #8]
 8000d6e:	68fb      	ldr	r3, [r7, #12]
 8000d70:	62da      	str	r2, [r3, #44]	; 0x2c

}
 8000d72:	bf00      	nop
 8000d74:	3714      	adds	r7, #20
 8000d76:	46bd      	mov	sp, r7
 8000d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7c:	4770      	bx	lr

08000d7e <EKF_Predict>:

void EKF_Predict(EKF *ekf, float p_rps, float q_rps, float r_rps, float sampleTime_s) {
 8000d7e:	b580      	push	{r7, lr}
 8000d80:	b096      	sub	sp, #88	; 0x58
 8000d82:	af00      	add	r7, sp, #0
 8000d84:	6178      	str	r0, [r7, #20]
 8000d86:	ed87 0a04 	vstr	s0, [r7, #16]
 8000d8a:	edc7 0a03 	vstr	s1, [r7, #12]
 8000d8e:	ed87 1a02 	vstr	s2, [r7, #8]
 8000d92:	edc7 1a01 	vstr	s3, [r7, #4]


	/* Pre-compute trigonometric quantities */
	float sin_roll = sinf(ekf->roll_r);
 8000d96:	697b      	ldr	r3, [r7, #20]
 8000d98:	edd3 7a00 	vldr	s15, [r3]
 8000d9c:	eeb0 0a67 	vmov.f32	s0, s15
 8000da0:	f007 fb7a 	bl	8008498 <sinf>
 8000da4:	ed87 0a15 	vstr	s0, [r7, #84]	; 0x54
	float cos_roll = cosf(ekf->roll_r);
 8000da8:	697b      	ldr	r3, [r7, #20]
 8000daa:	edd3 7a00 	vldr	s15, [r3]
 8000dae:	eeb0 0a67 	vmov.f32	s0, s15
 8000db2:	f007 fb25 	bl	8008400 <cosf>
 8000db6:	ed87 0a14 	vstr	s0, [r7, #80]	; 0x50
	float tan_pitch = tanf(ekf->pitch_r);
 8000dba:	697b      	ldr	r3, [r7, #20]
 8000dbc:	edd3 7a01 	vldr	s15, [r3, #4]
 8000dc0:	eeb0 0a67 	vmov.f32	s0, s15
 8000dc4:	f007 fbae 	bl	8008524 <tanf>
 8000dc8:	ed87 0a13 	vstr	s0, [r7, #76]	; 0x4c
	float cos_pitch = cosf(ekf->pitch_r);
 8000dcc:	697b      	ldr	r3, [r7, #20]
 8000dce:	edd3 7a01 	vldr	s15, [r3, #4]
 8000dd2:	eeb0 0a67 	vmov.f32	s0, s15
 8000dd6:	f007 fb13 	bl	8008400 <cosf>
 8000dda:	ed87 0a12 	vstr	s0, [r7, #72]	; 0x48

	/* Compute state transition function dx/dt = f(x,u) */
	float drolldt	= p_rps + tan_pitch * (q_rps * sin_roll + r_rps * cos_roll);
 8000dde:	ed97 7a03 	vldr	s14, [r7, #12]
 8000de2:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000de6:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000dea:	edd7 6a02 	vldr	s13, [r7, #8]
 8000dee:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000df2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000df6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000dfa:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8000dfe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e02:	ed97 7a04 	vldr	s14, [r7, #16]
 8000e06:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e0a:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
	float dpitchdt	= 					   q_rps * cos_roll - r_rps * sin_roll;
 8000e0e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000e12:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000e16:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e1a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000e1e:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000e22:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e26:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000e2a:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
	float dyawdt	= 		  	q_rps *(sin_roll/cos_pitch)	+ r_rps * (cos_roll/cos_pitch);
 8000e2e:	edd7 6a15 	vldr	s13, [r7, #84]	; 0x54
 8000e32:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8000e36:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8000e3a:	edd7 7a03 	vldr	s15, [r7, #12]
 8000e3e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e42:	ed97 6a14 	vldr	s12, [r7, #80]	; 0x50
 8000e46:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 8000e4a:	eec6 6a27 	vdiv.f32	s13, s12, s15
 8000e4e:	edd7 7a02 	vldr	s15, [r7, #8]
 8000e52:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e56:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e5a:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c

	/* Update state estimates (x(n+1) = x(n) + T * dx/dt) */
	ekf->roll_r 	+= sampleTime_s * drolldt;
 8000e5e:	697b      	ldr	r3, [r7, #20]
 8000e60:	ed93 7a00 	vldr	s14, [r3]
 8000e64:	edd7 6a01 	vldr	s13, [r7, #4]
 8000e68:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 8000e6c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e70:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e74:	697b      	ldr	r3, [r7, #20]
 8000e76:	edc3 7a00 	vstr	s15, [r3]
	ekf->pitch_r	+= sampleTime_s * dpitchdt;
 8000e7a:	697b      	ldr	r3, [r7, #20]
 8000e7c:	ed93 7a01 	vldr	s14, [r3, #4]
 8000e80:	edd7 6a01 	vldr	s13, [r7, #4]
 8000e84:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8000e88:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e8c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e90:	697b      	ldr	r3, [r7, #20]
 8000e92:	edc3 7a01 	vstr	s15, [r3, #4]
	ekf->yaw_r		+= sampleTime_s * dyawdt;
 8000e96:	697b      	ldr	r3, [r7, #20]
 8000e98:	ed93 7a02 	vldr	s14, [r3, #8]
 8000e9c:	edd7 6a01 	vldr	s13, [r7, #4]
 8000ea0:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 8000ea4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000ea8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000eac:	697b      	ldr	r3, [r7, #20]
 8000eae:	edc3 7a02 	vstr	s15, [r3, #8]

	/* Re-compute trigonometric quantities */
	sin_roll 			= sinf(ekf->roll_r);
 8000eb2:	697b      	ldr	r3, [r7, #20]
 8000eb4:	edd3 7a00 	vldr	s15, [r3]
 8000eb8:	eeb0 0a67 	vmov.f32	s0, s15
 8000ebc:	f007 faec 	bl	8008498 <sinf>
 8000ec0:	ed87 0a15 	vstr	s0, [r7, #84]	; 0x54
	cos_roll 			= cosf(ekf->roll_r);
 8000ec4:	697b      	ldr	r3, [r7, #20]
 8000ec6:	edd3 7a00 	vldr	s15, [r3]
 8000eca:	eeb0 0a67 	vmov.f32	s0, s15
 8000ece:	f007 fa97 	bl	8008400 <cosf>
 8000ed2:	ed87 0a14 	vstr	s0, [r7, #80]	; 0x50
	tan_pitch 			= tanf(ekf->pitch_r);
 8000ed6:	697b      	ldr	r3, [r7, #20]
 8000ed8:	edd3 7a01 	vldr	s15, [r3, #4]
 8000edc:	eeb0 0a67 	vmov.f32	s0, s15
 8000ee0:	f007 fb20 	bl	8008524 <tanf>
 8000ee4:	ed87 0a13 	vstr	s0, [r7, #76]	; 0x4c
	float cos_pitch_inv = 1.0f / cosf(ekf->pitch_r);
 8000ee8:	697b      	ldr	r3, [r7, #20]
 8000eea:	edd3 7a01 	vldr	s15, [r3, #4]
 8000eee:	eeb0 0a67 	vmov.f32	s0, s15
 8000ef2:	f007 fa85 	bl	8008400 <cosf>
 8000ef6:	eeb0 7a40 	vmov.f32	s14, s0
 8000efa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8000efe:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000f02:	edc7 7a0e 	vstr	s15, [r7, #56]	; 0x38

	/* Compute Jacobian of state transition function A(x,u) = df(x,u)/dx */
	float A[2][2] =
	{ 	{ tan_pitch * (q_rps * cos_roll - r_rps * sin_roll) , (q_rps * sin_roll + r_rps * cos_roll) * cos_pitch_inv * cos_pitch_inv },
 8000f06:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f0a:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f0e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f12:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f16:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f1a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f1e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8000f22:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 8000f26:	ee67 7a27 	vmul.f32	s15, s14, s15
	float A[2][2] =
 8000f2a:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
	{ 	{ tan_pitch * (q_rps * cos_roll - r_rps * sin_roll) , (q_rps * sin_roll + r_rps * cos_roll) * cos_pitch_inv * cos_pitch_inv },
 8000f2e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f32:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f36:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f3a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f3e:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f42:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f46:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000f4a:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000f4e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f52:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000f56:	ee67 7a27 	vmul.f32	s15, s14, s15
	float A[2][2] =
 8000f5a:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
		{ -(q_rps * sin_roll + r_rps * cos_roll)			, 	  0.0f } };
 8000f5e:	ed97 7a03 	vldr	s14, [r7, #12]
 8000f62:	edd7 7a15 	vldr	s15, [r7, #84]	; 0x54
 8000f66:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f6a:	edd7 6a02 	vldr	s13, [r7, #8]
 8000f6e:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8000f72:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f76:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f7a:	eef1 7a67 	vneg.f32	s15, s15
	float A[2][2] =
 8000f7e:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
 8000f82:	f04f 0300 	mov.w	r3, #0
 8000f86:	637b      	str	r3, [r7, #52]	; 0x34

	/* Update state covariance matrix P(n+1) = P(n) + T * (A * P(n) + P(n) * A' + Q) (note that A[1][1] = 0!) */
	float Pnew[2][2] =
	{	{A[0][0] * ekf->P[0][0] + A[0][1] * ekf->P[1][0] + ekf->P[0][0] * A[0][0] + ekf->P[0][1] * A[0][1] + ekf->Q[0], A[0][0] * ekf->P[0][1] + A[0][1] * ekf->P[1][1] + ekf->P[0][0] * A[1][0]},
 8000f88:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 8000f8c:	697b      	ldr	r3, [r7, #20]
 8000f8e:	edd3 7a03 	vldr	s15, [r3, #12]
 8000f92:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f96:	edd7 6a0b 	vldr	s13, [r7, #44]	; 0x2c
 8000f9a:	697b      	ldr	r3, [r7, #20]
 8000f9c:	edd3 7a05 	vldr	s15, [r3, #20]
 8000fa0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fa4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fa8:	697b      	ldr	r3, [r7, #20]
 8000faa:	edd3 6a03 	vldr	s13, [r3, #12]
 8000fae:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8000fb2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fb6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fba:	697b      	ldr	r3, [r7, #20]
 8000fbc:	edd3 6a04 	vldr	s13, [r3, #16]
 8000fc0:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8000fc4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fc8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000fcc:	697b      	ldr	r3, [r7, #20]
 8000fce:	edd3 7a07 	vldr	s15, [r3, #28]
 8000fd2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8000fd6:	edc7 7a06 	vstr	s15, [r7, #24]
	{	{A[0][0] * ekf->P[0][0] + A[0][1] * ekf->P[1][0] + ekf->P[0][0] * A[0][0] + ekf->P[0][1] * A[0][1] + ekf->Q[0], A[0][0] * ekf->P[0][1] + A[0][1] * ekf->P[1][1] + ekf->P[0][0] * A[1][0]},
 8000fda:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 8000fde:	697b      	ldr	r3, [r7, #20]
 8000fe0:	edd3 7a04 	vldr	s15, [r3, #16]
 8000fe4:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000fe8:	edd7 6a0b 	vldr	s13, [r7, #44]	; 0x2c
 8000fec:	697b      	ldr	r3, [r7, #20]
 8000fee:	edd3 7a06 	vldr	s15, [r3, #24]
 8000ff2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000ff6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000ffa:	697b      	ldr	r3, [r7, #20]
 8000ffc:	edd3 6a03 	vldr	s13, [r3, #12]
 8001000:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 8001004:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001008:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 800100c:	edc7 7a07 	vstr	s15, [r7, #28]
		{A[1][0] * ekf->P[0][0] + 						   ekf->P[1][0] * A[0][0] + ekf->P[1][1] * A[0][1], 			A[1][0] * ekf->P[0][1] + 						  ekf->P[1][0] * A[1][0] + ekf->Q[1]} };
 8001010:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001014:	697b      	ldr	r3, [r7, #20]
 8001016:	edd3 7a03 	vldr	s15, [r3, #12]
 800101a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800101e:	697b      	ldr	r3, [r7, #20]
 8001020:	edd3 6a05 	vldr	s13, [r3, #20]
 8001024:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001028:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800102c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001030:	697b      	ldr	r3, [r7, #20]
 8001032:	edd3 6a06 	vldr	s13, [r3, #24]
 8001036:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800103a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800103e:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8001042:	edc7 7a08 	vstr	s15, [r7, #32]
		{A[1][0] * ekf->P[0][0] + 						   ekf->P[1][0] * A[0][0] + ekf->P[1][1] * A[0][1], 			A[1][0] * ekf->P[0][1] + 						  ekf->P[1][0] * A[1][0] + ekf->Q[1]} };
 8001046:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800104a:	697b      	ldr	r3, [r7, #20]
 800104c:	edd3 7a04 	vldr	s15, [r3, #16]
 8001050:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001054:	697b      	ldr	r3, [r7, #20]
 8001056:	edd3 6a05 	vldr	s13, [r3, #20]
 800105a:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 800105e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001062:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001066:	697b      	ldr	r3, [r7, #20]
 8001068:	edd3 7a08 	vldr	s15, [r3, #32]
 800106c:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] =
 8001070:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24

	ekf->P[0][0] += sampleTime_s * Pnew[0][0]; ekf->P[0][1] += sampleTime_s * Pnew[0][1];
 8001074:	697b      	ldr	r3, [r7, #20]
 8001076:	ed93 7a03 	vldr	s14, [r3, #12]
 800107a:	edd7 6a06 	vldr	s13, [r7, #24]
 800107e:	edd7 7a01 	vldr	s15, [r7, #4]
 8001082:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001086:	ee77 7a27 	vadd.f32	s15, s14, s15
 800108a:	697b      	ldr	r3, [r7, #20]
 800108c:	edc3 7a03 	vstr	s15, [r3, #12]
 8001090:	697b      	ldr	r3, [r7, #20]
 8001092:	ed93 7a04 	vldr	s14, [r3, #16]
 8001096:	edd7 6a07 	vldr	s13, [r7, #28]
 800109a:	edd7 7a01 	vldr	s15, [r7, #4]
 800109e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010a6:	697b      	ldr	r3, [r7, #20]
 80010a8:	edc3 7a04 	vstr	s15, [r3, #16]
	ekf->P[1][0] += sampleTime_s * Pnew[1][0]; ekf->P[1][1] += sampleTime_s * Pnew[1][1];
 80010ac:	697b      	ldr	r3, [r7, #20]
 80010ae:	ed93 7a05 	vldr	s14, [r3, #20]
 80010b2:	edd7 6a08 	vldr	s13, [r7, #32]
 80010b6:	edd7 7a01 	vldr	s15, [r7, #4]
 80010ba:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010c2:	697b      	ldr	r3, [r7, #20]
 80010c4:	edc3 7a05 	vstr	s15, [r3, #20]
 80010c8:	697b      	ldr	r3, [r7, #20]
 80010ca:	ed93 7a06 	vldr	s14, [r3, #24]
 80010ce:	edd7 6a09 	vldr	s13, [r7, #36]	; 0x24
 80010d2:	edd7 7a01 	vldr	s15, [r7, #4]
 80010d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80010da:	ee77 7a27 	vadd.f32	s15, s14, s15
 80010de:	697b      	ldr	r3, [r7, #20]
 80010e0:	edc3 7a06 	vstr	s15, [r3, #24]
}
 80010e4:	bf00      	nop
 80010e6:	3758      	adds	r7, #88	; 0x58
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bd80      	pop	{r7, pc}

080010ec <EKF_Update>:

void EKF_Update(EKF *ekf, float ax_mps2, float ay_mps2, float az_mps2) {
 80010ec:	b580      	push	{r7, lr}
 80010ee:	ed2d 8b02 	vpush	{d8}
 80010f2:	b0c4      	sub	sp, #272	; 0x110
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80010fa:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80010fe:	6018      	str	r0, [r3, #0]
 8001100:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001104:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8001108:	ed83 0a00 	vstr	s0, [r3]
 800110c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001110:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8001114:	edc3 0a00 	vstr	s1, [r3]
 8001118:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800111c:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8001120:	ed83 1a00 	vstr	s2, [r3]

	/*1.Calculate Kalman Gain*************************************************************************/
	/* Compute Jacobian of output function C(x,u) = dh(x,u)/dx */
	float sin_roll = sinf(ekf->roll_r);
 8001124:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001128:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800112c:	681b      	ldr	r3, [r3, #0]
 800112e:	edd3 7a00 	vldr	s15, [r3]
 8001132:	eeb0 0a67 	vmov.f32	s0, s15
 8001136:	f007 f9af 	bl	8008498 <sinf>
 800113a:	ed87 0a41 	vstr	s0, [r7, #260]	; 0x104
	float cos_roll = cosf(ekf->roll_r);
 800113e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001142:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001146:	681b      	ldr	r3, [r3, #0]
 8001148:	edd3 7a00 	vldr	s15, [r3]
 800114c:	eeb0 0a67 	vmov.f32	s0, s15
 8001150:	f007 f956 	bl	8008400 <cosf>
 8001154:	ed87 0a40 	vstr	s0, [r7, #256]	; 0x100
	float sin_pitch = sinf(ekf->pitch_r);
 8001158:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800115c:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001160:	681b      	ldr	r3, [r3, #0]
 8001162:	edd3 7a01 	vldr	s15, [r3, #4]
 8001166:	eeb0 0a67 	vmov.f32	s0, s15
 800116a:	f007 f995 	bl	8008498 <sinf>
 800116e:	ed87 0a3f 	vstr	s0, [r7, #252]	; 0xfc
	float cos_pitch = cosf(ekf->pitch_r);
 8001172:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001176:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800117a:	681b      	ldr	r3, [r3, #0]
 800117c:	edd3 7a01 	vldr	s15, [r3, #4]
 8001180:	eeb0 0a67 	vmov.f32	s0, s15
 8001184:	f007 f93c 	bl	8008400 <cosf>
 8001188:	ed87 0a3e 	vstr	s0, [r7, #248]	; 0xf8

	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 800118c:	f04f 0300 	mov.w	r3, #0
 8001190:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8001194:	4bf5      	ldr	r3, [pc, #980]	; (800156c <EKF_Update+0x480>)
 8001196:	ed93 7a00 	vldr	s14, [r3]
 800119a:	edd7 7a3e 	vldr	s15, [r7, #248]	; 0xf8
 800119e:	ee67 7a27 	vmul.f32	s15, s14, s15
 80011a2:	edc7 7a35 	vstr	s15, [r7, #212]	; 0xd4
						{-g* cos_roll * cos_pitch, 	g*sin_roll * sin_pitch},
 80011a6:	4bf1      	ldr	r3, [pc, #964]	; (800156c <EKF_Update+0x480>)
 80011a8:	edd3 7a00 	vldr	s15, [r3]
 80011ac:	eeb1 7a67 	vneg.f32	s14, s15
 80011b0:	edd7 7a40 	vldr	s15, [r7, #256]	; 0x100
 80011b4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80011b8:	edd7 7a3e 	vldr	s15, [r7, #248]	; 0xf8
 80011bc:	ee67 7a27 	vmul.f32	s15, s14, s15
	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 80011c0:	edc7 7a36 	vstr	s15, [r7, #216]	; 0xd8
						{-g* cos_roll * cos_pitch, 	g*sin_roll * sin_pitch},
 80011c4:	4be9      	ldr	r3, [pc, #932]	; (800156c <EKF_Update+0x480>)
 80011c6:	ed93 7a00 	vldr	s14, [r3]
 80011ca:	edd7 7a41 	vldr	s15, [r7, #260]	; 0x104
 80011ce:	ee27 7a27 	vmul.f32	s14, s14, s15
 80011d2:	edd7 7a3f 	vldr	s15, [r7, #252]	; 0xfc
 80011d6:	ee67 7a27 	vmul.f32	s15, s14, s15
	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 80011da:	edc7 7a37 	vstr	s15, [r7, #220]	; 0xdc
						{ g*sin_roll *  cos_pitch, 	g*cos_roll * sin_pitch} };
 80011de:	4be3      	ldr	r3, [pc, #908]	; (800156c <EKF_Update+0x480>)
 80011e0:	ed93 7a00 	vldr	s14, [r3]
 80011e4:	edd7 7a41 	vldr	s15, [r7, #260]	; 0x104
 80011e8:	ee27 7a27 	vmul.f32	s14, s14, s15
 80011ec:	edd7 7a3e 	vldr	s15, [r7, #248]	; 0xf8
 80011f0:	ee67 7a27 	vmul.f32	s15, s14, s15
	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 80011f4:	edc7 7a38 	vstr	s15, [r7, #224]	; 0xe0
						{ g*sin_roll *  cos_pitch, 	g*cos_roll * sin_pitch} };
 80011f8:	4bdc      	ldr	r3, [pc, #880]	; (800156c <EKF_Update+0x480>)
 80011fa:	ed93 7a00 	vldr	s14, [r3]
 80011fe:	edd7 7a40 	vldr	s15, [r7, #256]	; 0x100
 8001202:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001206:	edd7 7a3f 	vldr	s15, [r7, #252]	; 0xfc
 800120a:	ee67 7a27 	vmul.f32	s15, s14, s15
	float C[3][2] = {	{				     0.0f,	g*cos_pitch},
 800120e:	edc7 7a39 	vstr	s15, [r7, #228]	; 0xe4

	/* Compute Kalman gain K = P * C' * (R + C * P * C ')^-1 in steps (note that C[0][0] = 0!) */

	/* P * C'*/
	float PCt[2][3] = { {ekf->P[0][1] * C[0][1], ekf->P[0][0] * C[1][0] + ekf->P[0][1] * C[1][1], ekf->P[0][0] * C[2][0] + ekf->P[0][1] * C[2][1]},
 8001212:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001216:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800121a:	681b      	ldr	r3, [r3, #0]
 800121c:	ed93 7a04 	vldr	s14, [r3, #16]
 8001220:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 8001224:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001228:	edc7 7a2e 	vstr	s15, [r7, #184]	; 0xb8
 800122c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001230:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001234:	681b      	ldr	r3, [r3, #0]
 8001236:	ed93 7a03 	vldr	s14, [r3, #12]
 800123a:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 800123e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001242:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001246:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	edd3 6a04 	vldr	s13, [r3, #16]
 8001250:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 8001254:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001258:	ee77 7a27 	vadd.f32	s15, s14, s15
 800125c:	edc7 7a2f 	vstr	s15, [r7, #188]	; 0xbc
 8001260:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001264:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001268:	681b      	ldr	r3, [r3, #0]
 800126a:	ed93 7a03 	vldr	s14, [r3, #12]
 800126e:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 8001272:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001276:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800127a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800127e:	681b      	ldr	r3, [r3, #0]
 8001280:	edd3 6a04 	vldr	s13, [r3, #16]
 8001284:	edd7 7a39 	vldr	s15, [r7, #228]	; 0xe4
 8001288:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800128c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001290:	edc7 7a30 	vstr	s15, [r7, #192]	; 0xc0
						{ekf->P[1][1] * C[0][1], ekf->P[1][0] * C[1][0] + ekf->P[1][1] * C[1][1], ekf->P[1][0] * C[2][0] + ekf->P[1][1] * C[2][1]} };
 8001294:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001298:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800129c:	681b      	ldr	r3, [r3, #0]
 800129e:	ed93 7a06 	vldr	s14, [r3, #24]
 80012a2:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 80012a6:	ee67 7a27 	vmul.f32	s15, s14, s15
	float PCt[2][3] = { {ekf->P[0][1] * C[0][1], ekf->P[0][0] * C[1][0] + ekf->P[0][1] * C[1][1], ekf->P[0][0] * C[2][0] + ekf->P[0][1] * C[2][1]},
 80012aa:	edc7 7a31 	vstr	s15, [r7, #196]	; 0xc4
						{ekf->P[1][1] * C[0][1], ekf->P[1][0] * C[1][0] + ekf->P[1][1] * C[1][1], ekf->P[1][0] * C[2][0] + ekf->P[1][1] * C[2][1]} };
 80012ae:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80012b2:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	ed93 7a05 	vldr	s14, [r3, #20]
 80012bc:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 80012c0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80012c4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80012c8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80012cc:	681b      	ldr	r3, [r3, #0]
 80012ce:	edd3 6a06 	vldr	s13, [r3, #24]
 80012d2:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 80012d6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80012da:	ee77 7a27 	vadd.f32	s15, s14, s15
	float PCt[2][3] = { {ekf->P[0][1] * C[0][1], ekf->P[0][0] * C[1][0] + ekf->P[0][1] * C[1][1], ekf->P[0][0] * C[2][0] + ekf->P[0][1] * C[2][1]},
 80012de:	edc7 7a32 	vstr	s15, [r7, #200]	; 0xc8
						{ekf->P[1][1] * C[0][1], ekf->P[1][0] * C[1][0] + ekf->P[1][1] * C[1][1], ekf->P[1][0] * C[2][0] + ekf->P[1][1] * C[2][1]} };
 80012e2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80012e6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80012ea:	681b      	ldr	r3, [r3, #0]
 80012ec:	ed93 7a05 	vldr	s14, [r3, #20]
 80012f0:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 80012f4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80012f8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80012fc:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	edd3 6a06 	vldr	s13, [r3, #24]
 8001306:	edd7 7a39 	vldr	s15, [r7, #228]	; 0xe4
 800130a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800130e:	ee77 7a27 	vadd.f32	s15, s14, s15
	float PCt[2][3] = { {ekf->P[0][1] * C[0][1], ekf->P[0][0] * C[1][0] + ekf->P[0][1] * C[1][1], ekf->P[0][0] * C[2][0] + ekf->P[0][1] * C[2][1]},
 8001312:	edc7 7a33 	vstr	s15, [r7, #204]	; 0xcc

	/* R + C * P * C' */
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 8001316:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 800131a:	edd7 7a31 	vldr	s15, [r7, #196]	; 0xc4
 800131e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001322:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001326:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	edd3 7a09 	vldr	s15, [r3, #36]	; 0x24
 8001330:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001334:	edc7 7a25 	vstr	s15, [r7, #148]	; 0x94
 8001338:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 800133c:	edd7 7a32 	vldr	s15, [r7, #200]	; 0xc8
 8001340:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001344:	edc7 7a26 	vstr	s15, [r7, #152]	; 0x98
 8001348:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 800134c:	edd7 7a33 	vldr	s15, [r7, #204]	; 0xcc
 8001350:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001354:	edc7 7a27 	vstr	s15, [r7, #156]	; 0x9c
							{C[1][0] * PCt[0][0] + C[1][1] * PCt[1][0],	C[1][0] * PCt[0][1] + C[1][1] * PCt[1][1] + ekf->R[1],	C[1][0] * PCt[0][2] + C[1][1] * PCt[1][2]},
 8001358:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 800135c:	edd7 7a2e 	vldr	s15, [r7, #184]	; 0xb8
 8001360:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001364:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 8001368:	edd7 7a31 	vldr	s15, [r7, #196]	; 0xc4
 800136c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001370:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 8001374:	edc7 7a28 	vstr	s15, [r7, #160]	; 0xa0
							{C[1][0] * PCt[0][0] + C[1][1] * PCt[1][0],	C[1][0] * PCt[0][1] + C[1][1] * PCt[1][1] + ekf->R[1],	C[1][0] * PCt[0][2] + C[1][1] * PCt[1][2]},
 8001378:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 800137c:	edd7 7a2f 	vldr	s15, [r7, #188]	; 0xbc
 8001380:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001384:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 8001388:	edd7 7a32 	vldr	s15, [r7, #200]	; 0xc8
 800138c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001390:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001394:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001398:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800139c:	681b      	ldr	r3, [r3, #0]
 800139e:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 80013a2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 80013a6:	edc7 7a29 	vstr	s15, [r7, #164]	; 0xa4
							{C[1][0] * PCt[0][0] + C[1][1] * PCt[1][0],	C[1][0] * PCt[0][1] + C[1][1] * PCt[1][1] + ekf->R[1],	C[1][0] * PCt[0][2] + C[1][1] * PCt[1][2]},
 80013aa:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 80013ae:	edd7 7a30 	vldr	s15, [r7, #192]	; 0xc0
 80013b2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80013b6:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 80013ba:	edd7 7a33 	vldr	s15, [r7, #204]	; 0xcc
 80013be:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80013c2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 80013c6:	edc7 7a2a 	vstr	s15, [r7, #168]	; 0xa8
							{C[2][0] * PCt[0][0] + C[2][1] * PCt[1][0],	C[2][0] * PCt[0][1] + C[2][1] * PCt[1][1],				C[2][0] * PCt[0][2] + C[2][1] * PCt[1][2] + ekf->R[2]} };
 80013ca:	ed97 7a38 	vldr	s14, [r7, #224]	; 0xe0
 80013ce:	edd7 7a2e 	vldr	s15, [r7, #184]	; 0xb8
 80013d2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80013d6:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 80013da:	edd7 7a31 	vldr	s15, [r7, #196]	; 0xc4
 80013de:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80013e2:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 80013e6:	edc7 7a2b 	vstr	s15, [r7, #172]	; 0xac
							{C[2][0] * PCt[0][0] + C[2][1] * PCt[1][0],	C[2][0] * PCt[0][1] + C[2][1] * PCt[1][1],				C[2][0] * PCt[0][2] + C[2][1] * PCt[1][2] + ekf->R[2]} };
 80013ea:	ed97 7a38 	vldr	s14, [r7, #224]	; 0xe0
 80013ee:	edd7 7a2f 	vldr	s15, [r7, #188]	; 0xbc
 80013f2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80013f6:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 80013fa:	edd7 7a32 	vldr	s15, [r7, #200]	; 0xc8
 80013fe:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001402:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 8001406:	edc7 7a2c 	vstr	s15, [r7, #176]	; 0xb0
							{C[2][0] * PCt[0][0] + C[2][1] * PCt[1][0],	C[2][0] * PCt[0][1] + C[2][1] * PCt[1][1],				C[2][0] * PCt[0][2] + C[2][1] * PCt[1][2] + ekf->R[2]} };
 800140a:	ed97 7a38 	vldr	s14, [r7, #224]	; 0xe0
 800140e:	edd7 7a30 	vldr	s15, [r7, #192]	; 0xc0
 8001412:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001416:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 800141a:	edd7 7a33 	vldr	s15, [r7, #204]	; 0xcc
 800141e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001422:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001426:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800142a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8001434:	ee77 7a27 	vadd.f32	s15, s14, s15
	float RCPCt[3][3] = { 	{					   C[0][1] * PCt[1][0] + ekf->R[0],			  C[0][1] * PCt[1][1], 									  C[0][1] * PCt[1][2]},
 8001438:	edc7 7a2d 	vstr	s15, [r7, #180]	; 0xb4

	/* Build invert matrix with Cramscher Alogorithem [inv(R + C * P * C')] */
	float detMatInv = 1.0f / (RCPCt[0][0] * (RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2])
 800143c:	ed97 7a25 	vldr	s14, [r7, #148]	; 0x94
 8001440:	edd7 6a2d 	vldr	s13, [r7, #180]	; 0xb4
 8001444:	edd7 7a29 	vldr	s15, [r7, #164]	; 0xa4
 8001448:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800144c:	ed97 6a2c 	vldr	s12, [r7, #176]	; 0xb0
 8001450:	edd7 7a2a 	vldr	s15, [r7, #168]	; 0xa8
 8001454:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001458:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800145c:	ee27 7a27 	vmul.f32	s14, s14, s15
					- RCPCt[1][0] * (RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2])
 8001460:	edd7 6a28 	vldr	s13, [r7, #160]	; 0xa0
 8001464:	ed97 6a2d 	vldr	s12, [r7, #180]	; 0xb4
 8001468:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 800146c:	ee26 6a27 	vmul.f32	s12, s12, s15
 8001470:	edd7 5a2c 	vldr	s11, [r7, #176]	; 0xb0
 8001474:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8001478:	ee65 7aa7 	vmul.f32	s15, s11, s15
 800147c:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001480:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001484:	ee37 7a67 	vsub.f32	s14, s14, s15
					+ RCPCt[2][0] * (RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2]));
 8001488:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 800148c:	ed97 6a2a 	vldr	s12, [r7, #168]	; 0xa8
 8001490:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 8001494:	ee26 6a27 	vmul.f32	s12, s12, s15
 8001498:	edd7 5a29 	vldr	s11, [r7, #164]	; 0xa4
 800149c:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 80014a0:	ee65 7aa7 	vmul.f32	s15, s11, s15
 80014a4:	ee76 7a67 	vsub.f32	s15, s12, s15
 80014a8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80014ac:	ee37 7a27 	vadd.f32	s14, s14, s15
	float detMatInv = 1.0f / (RCPCt[0][0] * (RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2])
 80014b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80014b4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80014b8:	edc7 7a3d 	vstr	s15, [r7, #244]	; 0xf4

	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 80014bc:	ed97 7a2d 	vldr	s14, [r7, #180]	; 0xb4
 80014c0:	edd7 7a29 	vldr	s15, [r7, #164]	; 0xa4
 80014c4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80014c8:	edd7 6a2c 	vldr	s13, [r7, #176]	; 0xb0
 80014cc:	edd7 7a2a 	vldr	s15, [r7, #168]	; 0xa8
 80014d0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80014d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80014d8:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
 80014dc:	ed97 7a2d 	vldr	s14, [r7, #180]	; 0xb4
 80014e0:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 80014e4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80014e8:	edd7 6a2c 	vldr	s13, [r7, #176]	; 0xb0
 80014ec:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 80014f0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80014f4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80014f8:	eef1 7a67 	vneg.f32	s15, s15
 80014fc:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
 8001500:	ed97 7a2a 	vldr	s14, [r7, #168]	; 0xa8
 8001504:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 8001508:	ee27 7a27 	vmul.f32	s14, s14, s15
 800150c:	edd7 6a29 	vldr	s13, [r7, #164]	; 0xa4
 8001510:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8001514:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001518:	ee77 7a67 	vsub.f32	s15, s14, s15
 800151c:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
							{-(	RCPCt[2][2] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][2]), 	RCPCt[2][2] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][2], -(	RCPCt[1][2] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][2]) },
 8001520:	ed97 7a2d 	vldr	s14, [r7, #180]	; 0xb4
 8001524:	edd7 7a28 	vldr	s15, [r7, #160]	; 0xa0
 8001528:	ee27 7a27 	vmul.f32	s14, s14, s15
 800152c:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 8001530:	edd7 7a2a 	vldr	s15, [r7, #168]	; 0xa8
 8001534:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001538:	ee77 7a67 	vsub.f32	s15, s14, s15
 800153c:	eef1 7a67 	vneg.f32	s15, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 8001540:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
							{-(	RCPCt[2][2] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][2]), 	RCPCt[2][2] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][2], -(	RCPCt[1][2] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][2]) },
 8001544:	ed97 7a2d 	vldr	s14, [r7, #180]	; 0xb4
 8001548:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 800154c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001550:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 8001554:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8001558:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800155c:	ee77 7a67 	vsub.f32	s15, s14, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 8001560:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
							{-(	RCPCt[2][2] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][2]), 	RCPCt[2][2] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][2], -(	RCPCt[1][2] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][2]) },
 8001564:	ed97 7a2a 	vldr	s14, [r7, #168]	; 0xa8
 8001568:	e002      	b.n	8001570 <EKF_Update+0x484>
 800156a:	bf00      	nop
 800156c:	20000000 	.word	0x20000000
 8001570:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 8001574:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001578:	edd7 6a28 	vldr	s13, [r7, #160]	; 0xa0
 800157c:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8001580:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001584:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001588:	eef1 7a67 	vneg.f32	s15, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 800158c:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
							{	RCPCt[2][1] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][1], -(	RCPCt[2][1] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][1]), 	RCPCt[1][1] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][1]} };
 8001590:	ed97 7a2c 	vldr	s14, [r7, #176]	; 0xb0
 8001594:	edd7 7a28 	vldr	s15, [r7, #160]	; 0xa0
 8001598:	ee27 7a27 	vmul.f32	s14, s14, s15
 800159c:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 80015a0:	edd7 7a29 	vldr	s15, [r7, #164]	; 0xa4
 80015a4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80015a8:	ee77 7a67 	vsub.f32	s15, s14, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 80015ac:	edc7 7a22 	vstr	s15, [r7, #136]	; 0x88
							{	RCPCt[2][1] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][1], -(	RCPCt[2][1] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][1]), 	RCPCt[1][1] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][1]} };
 80015b0:	ed97 7a2c 	vldr	s14, [r7, #176]	; 0xb0
 80015b4:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 80015b8:	ee27 7a27 	vmul.f32	s14, s14, s15
 80015bc:	edd7 6a2b 	vldr	s13, [r7, #172]	; 0xac
 80015c0:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 80015c4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80015c8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80015cc:	eef1 7a67 	vneg.f32	s15, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 80015d0:	edc7 7a23 	vstr	s15, [r7, #140]	; 0x8c
							{	RCPCt[2][1] * RCPCt[1][0] - RCPCt[2][0] * RCPCt[1][1], -(	RCPCt[2][1] * RCPCt[0][0] - RCPCt[2][0] * RCPCt[0][1]), 	RCPCt[1][1] * RCPCt[0][0] - RCPCt[1][0] * RCPCt[0][1]} };
 80015d4:	ed97 7a29 	vldr	s14, [r7, #164]	; 0xa4
 80015d8:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 80015dc:	ee27 7a27 	vmul.f32	s14, s14, s15
 80015e0:	edd7 6a28 	vldr	s13, [r7, #160]	; 0xa0
 80015e4:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 80015e8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80015ec:	ee77 7a67 	vsub.f32	s15, s14, s15
	float matInv[3][3] = { 	{	RCPCt[2][2] * RCPCt[1][1] - RCPCt[2][1] * RCPCt[1][2], -(	RCPCt[2][2] * RCPCt[0][1] - RCPCt[2][1] * RCPCt[0][2]), 	RCPCt[1][2] * RCPCt[0][1] - RCPCt[1][1] * RCPCt[0][2] },
 80015f0:	edc7 7a24 	vstr	s15, [r7, #144]	; 0x90

	for (unsigned int i = 0; i < 3; i++) {
 80015f4:	2300      	movs	r3, #0
 80015f6:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 80015fa:	e033      	b.n	8001664 <EKF_Update+0x578>

		for (unsigned int j = 0; j < 3; j++) {
 80015fc:	2300      	movs	r3, #0
 80015fe:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8001602:	e026      	b.n	8001652 <EKF_Update+0x566>

			matInv[i][j] *= detMatInv;
 8001604:	f8d7 210c 	ldr.w	r2, [r7, #268]	; 0x10c
 8001608:	4613      	mov	r3, r2
 800160a:	005b      	lsls	r3, r3, #1
 800160c:	4413      	add	r3, r2
 800160e:	f8d7 2108 	ldr.w	r2, [r7, #264]	; 0x108
 8001612:	4413      	add	r3, r2
 8001614:	009b      	lsls	r3, r3, #2
 8001616:	f503 7388 	add.w	r3, r3, #272	; 0x110
 800161a:	443b      	add	r3, r7
 800161c:	3ba0      	subs	r3, #160	; 0xa0
 800161e:	ed93 7a00 	vldr	s14, [r3]
 8001622:	edd7 7a3d 	vldr	s15, [r7, #244]	; 0xf4
 8001626:	ee67 7a27 	vmul.f32	s15, s14, s15
 800162a:	f8d7 210c 	ldr.w	r2, [r7, #268]	; 0x10c
 800162e:	4613      	mov	r3, r2
 8001630:	005b      	lsls	r3, r3, #1
 8001632:	4413      	add	r3, r2
 8001634:	f8d7 2108 	ldr.w	r2, [r7, #264]	; 0x108
 8001638:	4413      	add	r3, r2
 800163a:	009b      	lsls	r3, r3, #2
 800163c:	f503 7388 	add.w	r3, r3, #272	; 0x110
 8001640:	443b      	add	r3, r7
 8001642:	3ba0      	subs	r3, #160	; 0xa0
 8001644:	edc3 7a00 	vstr	s15, [r3]
		for (unsigned int j = 0; j < 3; j++) {
 8001648:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 800164c:	3301      	adds	r3, #1
 800164e:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8001652:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8001656:	2b02      	cmp	r3, #2
 8001658:	d9d4      	bls.n	8001604 <EKF_Update+0x518>
	for (unsigned int i = 0; i < 3; i++) {
 800165a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800165e:	3301      	adds	r3, #1
 8001660:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8001664:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8001668:	2b02      	cmp	r3, #2
 800166a:	d9c7      	bls.n	80015fc <EKF_Update+0x510>
		}

	}

	/* C' * inv(R + C * P * C') */
	float CtmatInv[2][3] = { 	{						  C[1][0] * matInv[1][0] + C[2][0] * matInv[2][0], 							C[1][0] * matInv[1][1] + C[2][0] * matInv[2][1], 						  C[1][0] * matInv[1][2] + C[2][0] * matInv[2][2]},
 800166c:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 8001670:	edd7 7a1f 	vldr	s15, [r7, #124]	; 0x7c
 8001674:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001678:	edd7 6a38 	vldr	s13, [r7, #224]	; 0xe0
 800167c:	edd7 7a22 	vldr	s15, [r7, #136]	; 0x88
 8001680:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001684:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001688:	edc7 7a16 	vstr	s15, [r7, #88]	; 0x58
 800168c:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 8001690:	edd7 7a20 	vldr	s15, [r7, #128]	; 0x80
 8001694:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001698:	edd7 6a38 	vldr	s13, [r7, #224]	; 0xe0
 800169c:	edd7 7a23 	vldr	s15, [r7, #140]	; 0x8c
 80016a0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016a4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016a8:	edc7 7a17 	vstr	s15, [r7, #92]	; 0x5c
 80016ac:	ed97 7a36 	vldr	s14, [r7, #216]	; 0xd8
 80016b0:	edd7 7a21 	vldr	s15, [r7, #132]	; 0x84
 80016b4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80016b8:	edd7 6a38 	vldr	s13, [r7, #224]	; 0xe0
 80016bc:	edd7 7a24 	vldr	s15, [r7, #144]	; 0x90
 80016c0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016c8:	edc7 7a18 	vstr	s15, [r7, #96]	; 0x60
								{C[0][1] * matInv[0][0] + C[1][1] * matInv[1][0] + C[2][1] * matInv[2][0], C[0][1] * matInv[0][1] + C[1][1] * matInv[1][1] + C[2][1] * matInv[2][1], C[0][1] * matInv[0][2] + C[1][1] * matInv[1][2] + C[2][1] * matInv[2][2]} };
 80016cc:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 80016d0:	edd7 7a1c 	vldr	s15, [r7, #112]	; 0x70
 80016d4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80016d8:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 80016dc:	edd7 7a1f 	vldr	s15, [r7, #124]	; 0x7c
 80016e0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016e4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80016e8:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 80016ec:	edd7 7a22 	vldr	s15, [r7, #136]	; 0x88
 80016f0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016f4:	ee77 7a27 	vadd.f32	s15, s14, s15
	float CtmatInv[2][3] = { 	{						  C[1][0] * matInv[1][0] + C[2][0] * matInv[2][0], 							C[1][0] * matInv[1][1] + C[2][0] * matInv[2][1], 						  C[1][0] * matInv[1][2] + C[2][0] * matInv[2][2]},
 80016f8:	edc7 7a19 	vstr	s15, [r7, #100]	; 0x64
								{C[0][1] * matInv[0][0] + C[1][1] * matInv[1][0] + C[2][1] * matInv[2][0], C[0][1] * matInv[0][1] + C[1][1] * matInv[1][1] + C[2][1] * matInv[2][1], C[0][1] * matInv[0][2] + C[1][1] * matInv[1][2] + C[2][1] * matInv[2][2]} };
 80016fc:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 8001700:	edd7 7a1d 	vldr	s15, [r7, #116]	; 0x74
 8001704:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001708:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 800170c:	edd7 7a20 	vldr	s15, [r7, #128]	; 0x80
 8001710:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001714:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001718:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 800171c:	edd7 7a23 	vldr	s15, [r7, #140]	; 0x8c
 8001720:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001724:	ee77 7a27 	vadd.f32	s15, s14, s15
	float CtmatInv[2][3] = { 	{						  C[1][0] * matInv[1][0] + C[2][0] * matInv[2][0], 							C[1][0] * matInv[1][1] + C[2][0] * matInv[2][1], 						  C[1][0] * matInv[1][2] + C[2][0] * matInv[2][2]},
 8001728:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68
								{C[0][1] * matInv[0][0] + C[1][1] * matInv[1][0] + C[2][1] * matInv[2][0], C[0][1] * matInv[0][1] + C[1][1] * matInv[1][1] + C[2][1] * matInv[2][1], C[0][1] * matInv[0][2] + C[1][1] * matInv[1][2] + C[2][1] * matInv[2][2]} };
 800172c:	ed97 7a35 	vldr	s14, [r7, #212]	; 0xd4
 8001730:	edd7 7a1e 	vldr	s15, [r7, #120]	; 0x78
 8001734:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001738:	edd7 6a37 	vldr	s13, [r7, #220]	; 0xdc
 800173c:	edd7 7a21 	vldr	s15, [r7, #132]	; 0x84
 8001740:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001744:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001748:	edd7 6a39 	vldr	s13, [r7, #228]	; 0xe4
 800174c:	edd7 7a24 	vldr	s15, [r7, #144]	; 0x90
 8001750:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001754:	ee77 7a27 	vadd.f32	s15, s14, s15
	float CtmatInv[2][3] = { 	{						  C[1][0] * matInv[1][0] + C[2][0] * matInv[2][0], 							C[1][0] * matInv[1][1] + C[2][0] * matInv[2][1], 						  C[1][0] * matInv[1][2] + C[2][0] * matInv[2][2]},
 8001758:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c

	/* K = P * C' * inv(R + C * P * C') */
	float K[2][3] = { 	{ekf->P[0][0] * CtmatInv[0][0] + ekf->P[0][1] * CtmatInv[1][0], ekf->P[0][0] * CtmatInv[0][1] + ekf->P[0][1] * CtmatInv[1][1], ekf->P[0][0] * CtmatInv[0][2] + ekf->P[0][1] * CtmatInv[1][2]},
 800175c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001760:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001764:	681b      	ldr	r3, [r3, #0]
 8001766:	ed93 7a03 	vldr	s14, [r3, #12]
 800176a:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 800176e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001772:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001776:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800177a:	681b      	ldr	r3, [r3, #0]
 800177c:	edd3 6a04 	vldr	s13, [r3, #16]
 8001780:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8001784:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001788:	ee77 7a27 	vadd.f32	s15, s14, s15
 800178c:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
 8001790:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001794:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	ed93 7a03 	vldr	s14, [r3, #12]
 800179e:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 80017a2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80017a6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80017aa:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	edd3 6a04 	vldr	s13, [r3, #16]
 80017b4:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 80017b8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80017bc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017c0:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
 80017c4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80017c8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	ed93 7a03 	vldr	s14, [r3, #12]
 80017d2:	edd7 7a18 	vldr	s15, [r7, #96]	; 0x60
 80017d6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80017da:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80017de:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80017e2:	681b      	ldr	r3, [r3, #0]
 80017e4:	edd3 6a04 	vldr	s13, [r3, #16]
 80017e8:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 80017ec:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80017f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017f4:	edc7 7a12 	vstr	s15, [r7, #72]	; 0x48
						{ekf->P[1][0] * CtmatInv[0][0] + ekf->P[1][1] * CtmatInv[1][0], ekf->P[1][0] * CtmatInv[0][1] + ekf->P[1][1] * CtmatInv[1][1], ekf->P[1][0] * CtmatInv[0][2] + ekf->P[1][1] * CtmatInv[1][2]} };
 80017f8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80017fc:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	ed93 7a05 	vldr	s14, [r3, #20]
 8001806:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 800180a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800180e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001812:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	edd3 6a06 	vldr	s13, [r3, #24]
 800181c:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8001820:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001824:	ee77 7a27 	vadd.f32	s15, s14, s15
	float K[2][3] = { 	{ekf->P[0][0] * CtmatInv[0][0] + ekf->P[0][1] * CtmatInv[1][0], ekf->P[0][0] * CtmatInv[0][1] + ekf->P[0][1] * CtmatInv[1][1], ekf->P[0][0] * CtmatInv[0][2] + ekf->P[0][1] * CtmatInv[1][2]},
 8001828:	edc7 7a13 	vstr	s15, [r7, #76]	; 0x4c
						{ekf->P[1][0] * CtmatInv[0][0] + ekf->P[1][1] * CtmatInv[1][0], ekf->P[1][0] * CtmatInv[0][1] + ekf->P[1][1] * CtmatInv[1][1], ekf->P[1][0] * CtmatInv[0][2] + ekf->P[1][1] * CtmatInv[1][2]} };
 800182c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001830:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	ed93 7a05 	vldr	s14, [r3, #20]
 800183a:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 800183e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001842:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001846:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800184a:	681b      	ldr	r3, [r3, #0]
 800184c:	edd3 6a06 	vldr	s13, [r3, #24]
 8001850:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 8001854:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001858:	ee77 7a27 	vadd.f32	s15, s14, s15
	float K[2][3] = { 	{ekf->P[0][0] * CtmatInv[0][0] + ekf->P[0][1] * CtmatInv[1][0], ekf->P[0][0] * CtmatInv[0][1] + ekf->P[0][1] * CtmatInv[1][1], ekf->P[0][0] * CtmatInv[0][2] + ekf->P[0][1] * CtmatInv[1][2]},
 800185c:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50
						{ekf->P[1][0] * CtmatInv[0][0] + ekf->P[1][1] * CtmatInv[1][0], ekf->P[1][0] * CtmatInv[0][1] + ekf->P[1][1] * CtmatInv[1][1], ekf->P[1][0] * CtmatInv[0][2] + ekf->P[1][1] * CtmatInv[1][2]} };
 8001860:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001864:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	ed93 7a05 	vldr	s14, [r3, #20]
 800186e:	edd7 7a18 	vldr	s15, [r7, #96]	; 0x60
 8001872:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001876:	f507 7388 	add.w	r3, r7, #272	; 0x110
 800187a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	edd3 6a06 	vldr	s13, [r3, #24]
 8001884:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8001888:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800188c:	ee77 7a27 	vadd.f32	s15, s14, s15
	float K[2][3] = { 	{ekf->P[0][0] * CtmatInv[0][0] + ekf->P[0][1] * CtmatInv[1][0], ekf->P[0][0] * CtmatInv[0][1] + ekf->P[0][1] * CtmatInv[1][1], ekf->P[0][0] * CtmatInv[0][2] + ekf->P[0][1] * CtmatInv[1][2]},
 8001890:	edc7 7a15 	vstr	s15, [r7, #84]	; 0x54

	Kalman_Gain_.aa = K[0][0];
 8001894:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001896:	4ae0      	ldr	r2, [pc, #896]	; (8001c18 <EKF_Update+0xb2c>)
 8001898:	6013      	str	r3, [r2, #0]
	Kalman_Gain_.ab = K[0][1];
 800189a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800189c:	4ade      	ldr	r2, [pc, #888]	; (8001c18 <EKF_Update+0xb2c>)
 800189e:	6053      	str	r3, [r2, #4]
	Kalman_Gain_.ac = K[0][2];
 80018a0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80018a2:	4add      	ldr	r2, [pc, #884]	; (8001c18 <EKF_Update+0xb2c>)
 80018a4:	6093      	str	r3, [r2, #8]
	Kalman_Gain_.ba = K[1][0];
 80018a6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80018a8:	4adb      	ldr	r2, [pc, #876]	; (8001c18 <EKF_Update+0xb2c>)
 80018aa:	60d3      	str	r3, [r2, #12]
	Kalman_Gain_.bb = K[1][1];
 80018ac:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80018ae:	4ada      	ldr	r2, [pc, #872]	; (8001c18 <EKF_Update+0xb2c>)
 80018b0:	6113      	str	r3, [r2, #16]
	Kalman_Gain_.bc = K[1][2];
 80018b2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80018b4:	4ad8      	ldr	r2, [pc, #864]	; (8001c18 <EKF_Update+0xb2c>)
 80018b6:	6153      	str	r3, [r2, #20]

	/****************************************************************************************************************************/
	/* Normalise accelerometer readings */
	//float accNormFactor = 1.0f / sqrtf(ax_mps2 * ax_mps2 + ay_mps2 * ay_mps2 + az_mps2 * az_mps2);

	float ax_norm 		= ax_mps2 ;//* accNormFactor;
 80018b8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80018bc:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
	float ay_norm 		= ay_mps2 ;//* accNormFactor;
 80018c6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80018ca:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
	float az_norm 		= az_mps2 ;//* accNormFactor;
 80018d4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80018d8:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8

	/* Update state covariance matrix P(n+1) = (I - K * C) * P(n) */ //I = [0 0], [0 0]
//	float IminKC[2][2] = { 	{1.0f - (K[0][1] * C[1][0] + K[1][0] * C[2][0]), -(K[0][1] * C[1][1] + K[1][0] * C[2][1])},
//							{- (K[1][1] * C[1][0] + K[1][2] * C[2][0]), 	1.0f-(K[1][1] * C[1][1] + K[1][2] * C[2][1])} };
	// C[0][0] = 0 !!!
	float IminKC[2][2] = { 	{1.0f - (K[0][1] * C[1][0] + K[0][2] * C[2][0]), -(K[0][0] * C[0][1] + K[0][1] * C[1][1] + K[0][2] * C[2][1])},
 80018e2:	ed97 7a11 	vldr	s14, [r7, #68]	; 0x44
 80018e6:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 80018ea:	ee27 7a27 	vmul.f32	s14, s14, s15
 80018ee:	edd7 6a12 	vldr	s13, [r7, #72]	; 0x48
 80018f2:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 80018f6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80018fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80018fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001902:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001906:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
 800190a:	ed97 7a10 	vldr	s14, [r7, #64]	; 0x40
 800190e:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 8001912:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001916:	edd7 6a11 	vldr	s13, [r7, #68]	; 0x44
 800191a:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 800191e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001922:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001926:	edd7 6a12 	vldr	s13, [r7, #72]	; 0x48
 800192a:	edd7 7a39 	vldr	s15, [r7, #228]	; 0xe4
 800192e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001932:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001936:	eef1 7a67 	vneg.f32	s15, s15
 800193a:	edc7 7a0d 	vstr	s15, [r7, #52]	; 0x34
							{- (K[1][1] * C[1][0] + K[1][2] * C[2][0]), 	1.0f-(K[1][0] * C[0][1] + K[1][1] * C[1][1] + K[1][2] * C[2][1])} };
 800193e:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001942:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 8001946:	ee27 7a27 	vmul.f32	s14, s14, s15
 800194a:	edd7 6a15 	vldr	s13, [r7, #84]	; 0x54
 800194e:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 8001952:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001956:	ee77 7a27 	vadd.f32	s15, s14, s15
 800195a:	eef1 7a67 	vneg.f32	s15, s15
	float IminKC[2][2] = { 	{1.0f - (K[0][1] * C[1][0] + K[0][2] * C[2][0]), -(K[0][0] * C[0][1] + K[0][1] * C[1][1] + K[0][2] * C[2][1])},
 800195e:	edc7 7a0e 	vstr	s15, [r7, #56]	; 0x38
							{- (K[1][1] * C[1][0] + K[1][2] * C[2][0]), 	1.0f-(K[1][0] * C[0][1] + K[1][1] * C[1][1] + K[1][2] * C[2][1])} };
 8001962:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001966:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 800196a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800196e:	edd7 6a14 	vldr	s13, [r7, #80]	; 0x50
 8001972:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 8001976:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800197a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800197e:	edd7 6a15 	vldr	s13, [r7, #84]	; 0x54
 8001982:	edd7 7a39 	vldr	s15, [r7, #228]	; 0xe4
 8001986:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800198a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800198e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8001992:	ee77 7a67 	vsub.f32	s15, s14, s15
	float IminKC[2][2] = { 	{1.0f - (K[0][1] * C[1][0] + K[0][2] * C[2][0]), -(K[0][0] * C[0][1] + K[0][1] * C[1][1] + K[0][2] * C[2][1])},
 8001996:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c


	float Pnew[2][2] = { 	{IminKC[0][0] * ekf->P[0][0] + IminKC[0][1] * ekf->P[1][0], IminKC[0][0] * ekf->P[0][1] + IminKC[0][1] * ekf->P[1][1]},
 800199a:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800199e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80019a2:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	edd3 7a03 	vldr	s15, [r3, #12]
 80019ac:	ee27 7a27 	vmul.f32	s14, s14, s15
 80019b0:	edd7 6a0d 	vldr	s13, [r7, #52]	; 0x34
 80019b4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80019b8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	edd3 7a05 	vldr	s15, [r3, #20]
 80019c2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80019c6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80019ca:	edc7 7a08 	vstr	s15, [r7, #32]
 80019ce:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 80019d2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80019d6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80019da:	681b      	ldr	r3, [r3, #0]
 80019dc:	edd3 7a04 	vldr	s15, [r3, #16]
 80019e0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80019e4:	edd7 6a0d 	vldr	s13, [r7, #52]	; 0x34
 80019e8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 80019ec:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80019f0:	681b      	ldr	r3, [r3, #0]
 80019f2:	edd3 7a06 	vldr	s15, [r3, #24]
 80019f6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80019fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80019fe:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
							{IminKC[1][0] * ekf->P[0][0] + IminKC[1][1] * ekf->P[1][0], IminKC[1][0] * ekf->P[0][1] + IminKC[1][1] * ekf->P[1][1]} };
 8001a02:	ed97 7a0e 	vldr	s14, [r7, #56]	; 0x38
 8001a06:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a0a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	edd3 7a03 	vldr	s15, [r3, #12]
 8001a14:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001a18:	edd7 6a0f 	vldr	s13, [r7, #60]	; 0x3c
 8001a1c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a20:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	edd3 7a05 	vldr	s15, [r3, #20]
 8001a2a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001a2e:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] = { 	{IminKC[0][0] * ekf->P[0][0] + IminKC[0][1] * ekf->P[1][0], IminKC[0][0] * ekf->P[0][1] + IminKC[0][1] * ekf->P[1][1]},
 8001a32:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
							{IminKC[1][0] * ekf->P[0][0] + IminKC[1][1] * ekf->P[1][0], IminKC[1][0] * ekf->P[0][1] + IminKC[1][1] * ekf->P[1][1]} };
 8001a36:	ed97 7a0e 	vldr	s14, [r7, #56]	; 0x38
 8001a3a:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a3e:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	edd3 7a04 	vldr	s15, [r3, #16]
 8001a48:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001a4c:	edd7 6a0f 	vldr	s13, [r7, #60]	; 0x3c
 8001a50:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a54:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a58:	681b      	ldr	r3, [r3, #0]
 8001a5a:	edd3 7a06 	vldr	s15, [r3, #24]
 8001a5e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001a62:	ee77 7a27 	vadd.f32	s15, s14, s15
	float Pnew[2][2] = { 	{IminKC[0][0] * ekf->P[0][0] + IminKC[0][1] * ekf->P[1][0], IminKC[0][0] * ekf->P[0][1] + IminKC[0][1] * ekf->P[1][1]},
 8001a66:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c

	ekf->P[0][0] = Pnew[0][0]; ekf->P[0][1] = Pnew[0][1];
 8001a6a:	6a3a      	ldr	r2, [r7, #32]
 8001a6c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a70:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	60da      	str	r2, [r3, #12]
 8001a78:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001a7a:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a7e:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	611a      	str	r2, [r3, #16]
	ekf->P[1][0] = Pnew[1][0]; ekf->P[1][1] = Pnew[1][1];
 8001a86:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8001a88:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a8c:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	615a      	str	r2, [r3, #20]
 8001a94:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8001a96:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001a9a:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001a9e:	681b      	ldr	r3, [r3, #0]
 8001aa0:	619a      	str	r2, [r3, #24]

	/* Compute output function h(x,u) */
	float h[3] = {	 g*sinf(ekf->pitch_r),
 8001aa2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001aa6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001aaa:	681b      	ldr	r3, [r3, #0]
 8001aac:	edd3 7a01 	vldr	s15, [r3, #4]
 8001ab0:	eeb0 0a67 	vmov.f32	s0, s15
 8001ab4:	f006 fcf0 	bl	8008498 <sinf>
 8001ab8:	eeb0 7a40 	vmov.f32	s14, s0
 8001abc:	4b57      	ldr	r3, [pc, #348]	; (8001c1c <EKF_Update+0xb30>)
 8001abe:	edd3 7a00 	vldr	s15, [r3]
 8001ac2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ac6:	edc7 7a05 	vstr	s15, [r7, #20]
					-g*cosf(ekf->pitch_r) * sinf(ekf->roll_r),
 8001aca:	4b54      	ldr	r3, [pc, #336]	; (8001c1c <EKF_Update+0xb30>)
 8001acc:	edd3 7a00 	vldr	s15, [r3]
 8001ad0:	eeb1 8a67 	vneg.f32	s16, s15
 8001ad4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001ad8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001adc:	681b      	ldr	r3, [r3, #0]
 8001ade:	edd3 7a01 	vldr	s15, [r3, #4]
 8001ae2:	eeb0 0a67 	vmov.f32	s0, s15
 8001ae6:	f006 fc8b 	bl	8008400 <cosf>
 8001aea:	eef0 7a40 	vmov.f32	s15, s0
 8001aee:	ee28 8a27 	vmul.f32	s16, s16, s15
 8001af2:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001af6:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	edd3 7a00 	vldr	s15, [r3]
 8001b00:	eeb0 0a67 	vmov.f32	s0, s15
 8001b04:	f006 fcc8 	bl	8008498 <sinf>
 8001b08:	eef0 7a40 	vmov.f32	s15, s0
 8001b0c:	ee68 7a27 	vmul.f32	s15, s16, s15
	float h[3] = {	 g*sinf(ekf->pitch_r),
 8001b10:	edc7 7a06 	vstr	s15, [r7, #24]
					-g*cosf(ekf->pitch_r) * cosf(ekf->roll_r) };
 8001b14:	4b41      	ldr	r3, [pc, #260]	; (8001c1c <EKF_Update+0xb30>)
 8001b16:	edd3 7a00 	vldr	s15, [r3]
 8001b1a:	eeb1 8a67 	vneg.f32	s16, s15
 8001b1e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001b22:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	edd3 7a01 	vldr	s15, [r3, #4]
 8001b2c:	eeb0 0a67 	vmov.f32	s0, s15
 8001b30:	f006 fc66 	bl	8008400 <cosf>
 8001b34:	eef0 7a40 	vmov.f32	s15, s0
 8001b38:	ee28 8a27 	vmul.f32	s16, s16, s15
 8001b3c:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001b40:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001b44:	681b      	ldr	r3, [r3, #0]
 8001b46:	edd3 7a00 	vldr	s15, [r3]
 8001b4a:	eeb0 0a67 	vmov.f32	s0, s15
 8001b4e:	f006 fc57 	bl	8008400 <cosf>
 8001b52:	eef0 7a40 	vmov.f32	s15, s0
 8001b56:	ee68 7a27 	vmul.f32	s15, s16, s15
	float h[3] = {	 g*sinf(ekf->pitch_r),
 8001b5a:	edc7 7a07 	vstr	s15, [r7, #28]
	h0 = h[0];
 8001b5e:	697b      	ldr	r3, [r7, #20]
 8001b60:	4a2f      	ldr	r2, [pc, #188]	; (8001c20 <EKF_Update+0xb34>)
 8001b62:	6013      	str	r3, [r2, #0]
	h1 = h[1];
 8001b64:	69bb      	ldr	r3, [r7, #24]
 8001b66:	4a2f      	ldr	r2, [pc, #188]	; (8001c24 <EKF_Update+0xb38>)
 8001b68:	6013      	str	r3, [r2, #0]
	h2 = h[2];
 8001b6a:	69fb      	ldr	r3, [r7, #28]
 8001b6c:	4a2e      	ldr	r2, [pc, #184]	; (8001c28 <EKF_Update+0xb3c>)
 8001b6e:	6013      	str	r3, [r2, #0]
//		__asm("BKPT #1\n");
//	}


	/* Update state estimate x(n+1) = x(n) + K * (y - h) */
	ekf->roll_r 	+= (K[0][0] * (ax_norm - h[0]) + K[0][1] * (ay_norm - h[1]) + K[0][2] * (az_norm - h[2]));
 8001b70:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001b74:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	ed93 7a00 	vldr	s14, [r3]
 8001b7e:	edd7 6a10 	vldr	s13, [r7, #64]	; 0x40
 8001b82:	edd7 7a05 	vldr	s15, [r7, #20]
 8001b86:	ed97 6a3c 	vldr	s12, [r7, #240]	; 0xf0
 8001b8a:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001b8e:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8001b92:	ed97 6a11 	vldr	s12, [r7, #68]	; 0x44
 8001b96:	edd7 7a06 	vldr	s15, [r7, #24]
 8001b9a:	edd7 5a3b 	vldr	s11, [r7, #236]	; 0xec
 8001b9e:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8001ba2:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001ba6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8001baa:	ed97 6a12 	vldr	s12, [r7, #72]	; 0x48
 8001bae:	edd7 7a07 	vldr	s15, [r7, #28]
 8001bb2:	edd7 5a3a 	vldr	s11, [r7, #232]	; 0xe8
 8001bb6:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8001bba:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001bbe:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8001bc2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001bc6:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001bca:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	edc3 7a00 	vstr	s15, [r3]
	ekf->pitch_r 	+= (K[1][0] * (ax_norm - h[0]) + K[1][1] * (ay_norm - h[1]) + K[1][2] * (az_norm - h[2]));
 8001bd4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001bd8:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001bdc:	681b      	ldr	r3, [r3, #0]
 8001bde:	ed93 7a01 	vldr	s14, [r3, #4]
 8001be2:	edd7 6a13 	vldr	s13, [r7, #76]	; 0x4c
 8001be6:	edd7 7a05 	vldr	s15, [r7, #20]
 8001bea:	ed97 6a3c 	vldr	s12, [r7, #240]	; 0xf0
 8001bee:	ee76 7a67 	vsub.f32	s15, s12, s15
 8001bf2:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8001bf6:	ed97 6a14 	vldr	s12, [r7, #80]	; 0x50
 8001bfa:	edd7 7a06 	vldr	s15, [r7, #24]
 8001bfe:	edd7 5a3b 	vldr	s11, [r7, #236]	; 0xec
 8001c02:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8001c06:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001c0a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8001c0e:	ed97 6a15 	vldr	s12, [r7, #84]	; 0x54
 8001c12:	edd7 7a07 	vldr	s15, [r7, #28]
 8001c16:	e009      	b.n	8001c2c <EKF_Update+0xb40>
 8001c18:	2000021c 	.word	0x2000021c
 8001c1c:	20000000 	.word	0x20000000
 8001c20:	20000234 	.word	0x20000234
 8001c24:	20000238 	.word	0x20000238
 8001c28:	2000023c 	.word	0x2000023c
 8001c2c:	edd7 5a3a 	vldr	s11, [r7, #232]	; 0xe8
 8001c30:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8001c34:	ee66 7a27 	vmul.f32	s15, s12, s15
 8001c38:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8001c3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c40:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8001c44:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8001c48:	681b      	ldr	r3, [r3, #0]
 8001c4a:	edc3 7a01 	vstr	s15, [r3, #4]
}
 8001c4e:	bf00      	nop
 8001c50:	f507 7788 	add.w	r7, r7, #272	; 0x110
 8001c54:	46bd      	mov	sp, r7
 8001c56:	ecbd 8b02 	vpop	{d8}
 8001c5a:	bd80      	pop	{r7, pc}

08001c5c <GY511_init>:
lsm303MagData raw;



void GY511_init(uint8_t mode, uint8_t gain, uint8_t rate)
{
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	b082      	sub	sp, #8
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	4603      	mov	r3, r0
 8001c64:	71fb      	strb	r3, [r7, #7]
 8001c66:	460b      	mov	r3, r1
 8001c68:	71bb      	strb	r3, [r7, #6]
 8001c6a:	4613      	mov	r3, r2
 8001c6c:	717b      	strb	r3, [r7, #5]
	switch(gain)
 8001c6e:	79bb      	ldrb	r3, [r7, #6]
 8001c70:	2be0      	cmp	r3, #224	; 0xe0
 8001c72:	d040      	beq.n	8001cf6 <GY511_init+0x9a>
 8001c74:	2be0      	cmp	r3, #224	; 0xe0
 8001c76:	dc45      	bgt.n	8001d04 <GY511_init+0xa8>
 8001c78:	2bc0      	cmp	r3, #192	; 0xc0
 8001c7a:	d035      	beq.n	8001ce8 <GY511_init+0x8c>
 8001c7c:	2bc0      	cmp	r3, #192	; 0xc0
 8001c7e:	dc41      	bgt.n	8001d04 <GY511_init+0xa8>
 8001c80:	2ba0      	cmp	r3, #160	; 0xa0
 8001c82:	d02a      	beq.n	8001cda <GY511_init+0x7e>
 8001c84:	2ba0      	cmp	r3, #160	; 0xa0
 8001c86:	dc3d      	bgt.n	8001d04 <GY511_init+0xa8>
 8001c88:	2b80      	cmp	r3, #128	; 0x80
 8001c8a:	d01f      	beq.n	8001ccc <GY511_init+0x70>
 8001c8c:	2b80      	cmp	r3, #128	; 0x80
 8001c8e:	dc39      	bgt.n	8001d04 <GY511_init+0xa8>
 8001c90:	2b60      	cmp	r3, #96	; 0x60
 8001c92:	d014      	beq.n	8001cbe <GY511_init+0x62>
 8001c94:	2b60      	cmp	r3, #96	; 0x60
 8001c96:	dc35      	bgt.n	8001d04 <GY511_init+0xa8>
 8001c98:	2b20      	cmp	r3, #32
 8001c9a:	d002      	beq.n	8001ca2 <GY511_init+0x46>
 8001c9c:	2b40      	cmp	r3, #64	; 0x40
 8001c9e:	d007      	beq.n	8001cb0 <GY511_init+0x54>
			Mag_Gauss_LSB_XY = 230.0f;
			Mag_Gauss_LSB_Z = 205.0f;
			break;

		default:
			break;
 8001ca0:	e030      	b.n	8001d04 <GY511_init+0xa8>
			Mag_Gauss_LSB_XY = 1100.0f;
 8001ca2:	4b2b      	ldr	r3, [pc, #172]	; (8001d50 <GY511_init+0xf4>)
 8001ca4:	4a2b      	ldr	r2, [pc, #172]	; (8001d54 <GY511_init+0xf8>)
 8001ca6:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 980.0f;
 8001ca8:	4b2b      	ldr	r3, [pc, #172]	; (8001d58 <GY511_init+0xfc>)
 8001caa:	4a2c      	ldr	r2, [pc, #176]	; (8001d5c <GY511_init+0x100>)
 8001cac:	601a      	str	r2, [r3, #0]
			break;
 8001cae:	e02a      	b.n	8001d06 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 855.0f;
 8001cb0:	4b27      	ldr	r3, [pc, #156]	; (8001d50 <GY511_init+0xf4>)
 8001cb2:	4a2b      	ldr	r2, [pc, #172]	; (8001d60 <GY511_init+0x104>)
 8001cb4:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 760.0f;
 8001cb6:	4b28      	ldr	r3, [pc, #160]	; (8001d58 <GY511_init+0xfc>)
 8001cb8:	4a2a      	ldr	r2, [pc, #168]	; (8001d64 <GY511_init+0x108>)
 8001cba:	601a      	str	r2, [r3, #0]
			break;
 8001cbc:	e023      	b.n	8001d06 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 670.0f;
 8001cbe:	4b24      	ldr	r3, [pc, #144]	; (8001d50 <GY511_init+0xf4>)
 8001cc0:	4a29      	ldr	r2, [pc, #164]	; (8001d68 <GY511_init+0x10c>)
 8001cc2:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 600.0f;
 8001cc4:	4b24      	ldr	r3, [pc, #144]	; (8001d58 <GY511_init+0xfc>)
 8001cc6:	4a29      	ldr	r2, [pc, #164]	; (8001d6c <GY511_init+0x110>)
 8001cc8:	601a      	str	r2, [r3, #0]
			break;
 8001cca:	e01c      	b.n	8001d06 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 450.0f;
 8001ccc:	4b20      	ldr	r3, [pc, #128]	; (8001d50 <GY511_init+0xf4>)
 8001cce:	4a28      	ldr	r2, [pc, #160]	; (8001d70 <GY511_init+0x114>)
 8001cd0:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 400.0f;
 8001cd2:	4b21      	ldr	r3, [pc, #132]	; (8001d58 <GY511_init+0xfc>)
 8001cd4:	4a27      	ldr	r2, [pc, #156]	; (8001d74 <GY511_init+0x118>)
 8001cd6:	601a      	str	r2, [r3, #0]
			break;
 8001cd8:	e015      	b.n	8001d06 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 400.0f;
 8001cda:	4b1d      	ldr	r3, [pc, #116]	; (8001d50 <GY511_init+0xf4>)
 8001cdc:	4a25      	ldr	r2, [pc, #148]	; (8001d74 <GY511_init+0x118>)
 8001cde:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 355.0f;
 8001ce0:	4b1d      	ldr	r3, [pc, #116]	; (8001d58 <GY511_init+0xfc>)
 8001ce2:	4a25      	ldr	r2, [pc, #148]	; (8001d78 <GY511_init+0x11c>)
 8001ce4:	601a      	str	r2, [r3, #0]
			break;
 8001ce6:	e00e      	b.n	8001d06 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 330.0f;
 8001ce8:	4b19      	ldr	r3, [pc, #100]	; (8001d50 <GY511_init+0xf4>)
 8001cea:	4a24      	ldr	r2, [pc, #144]	; (8001d7c <GY511_init+0x120>)
 8001cec:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 295.0f;
 8001cee:	4b1a      	ldr	r3, [pc, #104]	; (8001d58 <GY511_init+0xfc>)
 8001cf0:	4a23      	ldr	r2, [pc, #140]	; (8001d80 <GY511_init+0x124>)
 8001cf2:	601a      	str	r2, [r3, #0]
			break;
 8001cf4:	e007      	b.n	8001d06 <GY511_init+0xaa>
			Mag_Gauss_LSB_XY = 230.0f;
 8001cf6:	4b16      	ldr	r3, [pc, #88]	; (8001d50 <GY511_init+0xf4>)
 8001cf8:	4a22      	ldr	r2, [pc, #136]	; (8001d84 <GY511_init+0x128>)
 8001cfa:	601a      	str	r2, [r3, #0]
			Mag_Gauss_LSB_Z = 205.0f;
 8001cfc:	4b16      	ldr	r3, [pc, #88]	; (8001d58 <GY511_init+0xfc>)
 8001cfe:	4a22      	ldr	r2, [pc, #136]	; (8001d88 <GY511_init+0x12c>)
 8001d00:	601a      	str	r2, [r3, #0]
			break;
 8001d02:	e000      	b.n	8001d06 <GY511_init+0xaa>
			break;
 8001d04:	bf00      	nop
	}

	/*Magneto Config*/
	i2c_data_buff[0] = CRA_REG_M;
 8001d06:	4b21      	ldr	r3, [pc, #132]	; (8001d8c <GY511_init+0x130>)
 8001d08:	2200      	movs	r2, #0
 8001d0a:	701a      	strb	r2, [r3, #0]
	i2c_data_buff[1] = rate;
 8001d0c:	4a1f      	ldr	r2, [pc, #124]	; (8001d8c <GY511_init+0x130>)
 8001d0e:	797b      	ldrb	r3, [r7, #5]
 8001d10:	7053      	strb	r3, [r2, #1]
	i2c_dma_write(GY511_addr,i2c_data_buff,I2C_DATA_BUFF_LEN);
 8001d12:	2203      	movs	r2, #3
 8001d14:	491d      	ldr	r1, [pc, #116]	; (8001d8c <GY511_init+0x130>)
 8001d16:	201e      	movs	r0, #30
 8001d18:	f000 fb6e 	bl	80023f8 <i2c_dma_write>

	i2c_data_buff[0] = CRB_REG_M;
 8001d1c:	4b1b      	ldr	r3, [pc, #108]	; (8001d8c <GY511_init+0x130>)
 8001d1e:	2201      	movs	r2, #1
 8001d20:	701a      	strb	r2, [r3, #0]
	i2c_data_buff[1] = gain;
 8001d22:	4a1a      	ldr	r2, [pc, #104]	; (8001d8c <GY511_init+0x130>)
 8001d24:	79bb      	ldrb	r3, [r7, #6]
 8001d26:	7053      	strb	r3, [r2, #1]
	i2c_dma_write(GY511_addr,i2c_data_buff,I2C_DATA_BUFF_LEN);
 8001d28:	2203      	movs	r2, #3
 8001d2a:	4918      	ldr	r1, [pc, #96]	; (8001d8c <GY511_init+0x130>)
 8001d2c:	201e      	movs	r0, #30
 8001d2e:	f000 fb63 	bl	80023f8 <i2c_dma_write>

	i2c_data_buff[0] = MR_REG_M;
 8001d32:	4b16      	ldr	r3, [pc, #88]	; (8001d8c <GY511_init+0x130>)
 8001d34:	2202      	movs	r2, #2
 8001d36:	701a      	strb	r2, [r3, #0]
	i2c_data_buff[1] = mode;
 8001d38:	4a14      	ldr	r2, [pc, #80]	; (8001d8c <GY511_init+0x130>)
 8001d3a:	79fb      	ldrb	r3, [r7, #7]
 8001d3c:	7053      	strb	r3, [r2, #1]
	i2c_dma_write(GY511_addr,i2c_data_buff,I2C_DATA_BUFF_LEN);
 8001d3e:	2203      	movs	r2, #3
 8001d40:	4912      	ldr	r1, [pc, #72]	; (8001d8c <GY511_init+0x130>)
 8001d42:	201e      	movs	r0, #30
 8001d44:	f000 fb58 	bl	80023f8 <i2c_dma_write>
}
 8001d48:	bf00      	nop
 8001d4a:	3708      	adds	r7, #8
 8001d4c:	46bd      	mov	sp, r7
 8001d4e:	bd80      	pop	{r7, pc}
 8001d50:	20000254 	.word	0x20000254
 8001d54:	44898000 	.word	0x44898000
 8001d58:	20000258 	.word	0x20000258
 8001d5c:	44750000 	.word	0x44750000
 8001d60:	4455c000 	.word	0x4455c000
 8001d64:	443e0000 	.word	0x443e0000
 8001d68:	44278000 	.word	0x44278000
 8001d6c:	44160000 	.word	0x44160000
 8001d70:	43e10000 	.word	0x43e10000
 8001d74:	43c80000 	.word	0x43c80000
 8001d78:	43b18000 	.word	0x43b18000
 8001d7c:	43a50000 	.word	0x43a50000
 8001d80:	43938000 	.word	0x43938000
 8001d84:	43660000 	.word	0x43660000
 8001d88:	434d0000 	.word	0x434d0000
 8001d8c:	20000250 	.word	0x20000250

08001d90 <GY_511_update>:


void GY_511_update(lsm303MagData *data)
{
 8001d90:	b580      	push	{r7, lr}
 8001d92:	b084      	sub	sp, #16
 8001d94:	af00      	add	r7, sp, #0
 8001d96:	6078      	str	r0, [r7, #4]

	// Data Ready Bit
	i2c_dma_read(GY511_addr,SR_REG_Mg,&DRDY,I2C_DATA_BUFF_LEN);
 8001d98:	2303      	movs	r3, #3
 8001d9a:	4a67      	ldr	r2, [pc, #412]	; (8001f38 <GY_511_update+0x1a8>)
 8001d9c:	2109      	movs	r1, #9
 8001d9e:	201e      	movs	r0, #30
 8001da0:	f000 fb62 	bl	8002468 <i2c_dma_read>

	DRDY_help = DRDY & 0x01;
 8001da4:	4b64      	ldr	r3, [pc, #400]	; (8001f38 <GY_511_update+0x1a8>)
 8001da6:	781b      	ldrb	r3, [r3, #0]
 8001da8:	f003 0301 	and.w	r3, r3, #1
 8001dac:	b2da      	uxtb	r2, r3
 8001dae:	4b63      	ldr	r3, [pc, #396]	; (8001f3c <GY_511_update+0x1ac>)
 8001db0:	701a      	strb	r2, [r3, #0]

	if(DRDY & 0x01)
 8001db2:	4b61      	ldr	r3, [pc, #388]	; (8001f38 <GY_511_update+0x1a8>)
 8001db4:	781b      	ldrb	r3, [r3, #0]
 8001db6:	f003 0301 	and.w	r3, r3, #1
 8001dba:	2b00      	cmp	r3, #0
 8001dbc:	f000 80b1 	beq.w	8001f22 <GY_511_update+0x192>
	{
		i2c_dma_read(GY511_addr,GY_511_MAGNETO_OUT_X_H_M,(uint8_t *)magnetometer_buff,MAX_TRANSFER_LEN);
 8001dc0:	2306      	movs	r3, #6
 8001dc2:	4a5f      	ldr	r2, [pc, #380]	; (8001f40 <GY_511_update+0x1b0>)
 8001dc4:	2103      	movs	r1, #3
 8001dc6:	201e      	movs	r0, #30
 8001dc8:	f000 fb4e 	bl	8002468 <i2c_dma_read>
	else
	{
		return;
	}

	for(uint8_t r=0; r < sizeof(data->Raw_Buffer); r++)
 8001dcc:	2300      	movs	r3, #0
 8001dce:	73fb      	strb	r3, [r7, #15]
 8001dd0:	e008      	b.n	8001de4 <GY_511_update+0x54>
	{
		data->Raw_Buffer[r] = magnetometer_buff[r];
 8001dd2:	7bfa      	ldrb	r2, [r7, #15]
 8001dd4:	7bfb      	ldrb	r3, [r7, #15]
 8001dd6:	495a      	ldr	r1, [pc, #360]	; (8001f40 <GY_511_update+0x1b0>)
 8001dd8:	5c89      	ldrb	r1, [r1, r2]
 8001dda:	687a      	ldr	r2, [r7, #4]
 8001ddc:	54d1      	strb	r1, [r2, r3]
	for(uint8_t r=0; r < sizeof(data->Raw_Buffer); r++)
 8001dde:	7bfb      	ldrb	r3, [r7, #15]
 8001de0:	3301      	adds	r3, #1
 8001de2:	73fb      	strb	r3, [r7, #15]
 8001de4:	7bfb      	ldrb	r3, [r7, #15]
 8001de6:	2b05      	cmp	r3, #5
 8001de8:	d9f3      	bls.n	8001dd2 <GY_511_update+0x42>
	}


	buffer[0] = (int16_t)((magnetometer_buff[0] << 8) | magnetometer_buff[1]);			//x-Wert
 8001dea:	4b55      	ldr	r3, [pc, #340]	; (8001f40 <GY_511_update+0x1b0>)
 8001dec:	781b      	ldrb	r3, [r3, #0]
 8001dee:	021b      	lsls	r3, r3, #8
 8001df0:	b21a      	sxth	r2, r3
 8001df2:	4b53      	ldr	r3, [pc, #332]	; (8001f40 <GY_511_update+0x1b0>)
 8001df4:	785b      	ldrb	r3, [r3, #1]
 8001df6:	b21b      	sxth	r3, r3
 8001df8:	4313      	orrs	r3, r2
 8001dfa:	b21a      	sxth	r2, r3
 8001dfc:	4b51      	ldr	r3, [pc, #324]	; (8001f44 <GY_511_update+0x1b4>)
 8001dfe:	801a      	strh	r2, [r3, #0]
	buffer[1] = (int16_t)((magnetometer_buff[2] << 8) | magnetometer_buff[3]);			//z-Wert
 8001e00:	4b4f      	ldr	r3, [pc, #316]	; (8001f40 <GY_511_update+0x1b0>)
 8001e02:	789b      	ldrb	r3, [r3, #2]
 8001e04:	021b      	lsls	r3, r3, #8
 8001e06:	b21a      	sxth	r2, r3
 8001e08:	4b4d      	ldr	r3, [pc, #308]	; (8001f40 <GY_511_update+0x1b0>)
 8001e0a:	78db      	ldrb	r3, [r3, #3]
 8001e0c:	b21b      	sxth	r3, r3
 8001e0e:	4313      	orrs	r3, r2
 8001e10:	b21a      	sxth	r2, r3
 8001e12:	4b4c      	ldr	r3, [pc, #304]	; (8001f44 <GY_511_update+0x1b4>)
 8001e14:	805a      	strh	r2, [r3, #2]
	buffer[2] = (int16_t)((magnetometer_buff[4] << 8) | magnetometer_buff[5]);			//y-Wert
 8001e16:	4b4a      	ldr	r3, [pc, #296]	; (8001f40 <GY_511_update+0x1b0>)
 8001e18:	791b      	ldrb	r3, [r3, #4]
 8001e1a:	021b      	lsls	r3, r3, #8
 8001e1c:	b21a      	sxth	r2, r3
 8001e1e:	4b48      	ldr	r3, [pc, #288]	; (8001f40 <GY_511_update+0x1b0>)
 8001e20:	795b      	ldrb	r3, [r3, #5]
 8001e22:	b21b      	sxth	r3, r3
 8001e24:	4313      	orrs	r3, r2
 8001e26:	b21a      	sxth	r2, r3
 8001e28:	4b46      	ldr	r3, [pc, #280]	; (8001f44 <GY_511_update+0x1b4>)
 8001e2a:	809a      	strh	r2, [r3, #4]

	data->x = (((float)buffer[0]) / Mag_Gauss_LSB_XY * SENSORS_GAUSS_TO_MICROTESLA)+0.018f;//+0.0127f ;//+0.0168079f;//;+0.0148448f;
 8001e2c:	4b45      	ldr	r3, [pc, #276]	; (8001f44 <GY_511_update+0x1b4>)
 8001e2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001e32:	ee07 3a90 	vmov	s15, r3
 8001e36:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8001e3a:	4b43      	ldr	r3, [pc, #268]	; (8001f48 <GY_511_update+0x1b8>)
 8001e3c:	ed93 7a00 	vldr	s14, [r3]
 8001e40:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001e44:	ed9f 7a41 	vldr	s14, [pc, #260]	; 8001f4c <GY_511_update+0x1bc>
 8001e48:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001e4c:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8001f50 <GY_511_update+0x1c0>
 8001e50:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	edc3 7a02 	vstr	s15, [r3, #8]
	data->z = (((float)buffer[1]) / Mag_Gauss_LSB_Z * SENSORS_GAUSS_TO_MICROTESLA) -0.038f;  ;//-0.035656f;//-0.0410135f;
 8001e5a:	4b3a      	ldr	r3, [pc, #232]	; (8001f44 <GY_511_update+0x1b4>)
 8001e5c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001e60:	ee07 3a90 	vmov	s15, r3
 8001e64:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8001e68:	4b3a      	ldr	r3, [pc, #232]	; (8001f54 <GY_511_update+0x1c4>)
 8001e6a:	ed93 7a00 	vldr	s14, [r3]
 8001e6e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001e72:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8001f4c <GY_511_update+0x1bc>
 8001e76:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001e7a:	ed9f 7a37 	vldr	s14, [pc, #220]	; 8001f58 <GY_511_update+0x1c8>
 8001e7e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	edc3 7a04 	vstr	s15, [r3, #16]
	data->y = (((float)buffer[2]) / Mag_Gauss_LSB_XY * SENSORS_GAUSS_TO_MICROTESLA)- 0.0072f;//0.00075f ;//-0.011238f;//-0.00497640f;
 8001e88:	4b2e      	ldr	r3, [pc, #184]	; (8001f44 <GY_511_update+0x1b4>)
 8001e8a:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001e8e:	ee07 3a90 	vmov	s15, r3
 8001e92:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8001e96:	4b2c      	ldr	r3, [pc, #176]	; (8001f48 <GY_511_update+0x1b8>)
 8001e98:	ed93 7a00 	vldr	s14, [r3]
 8001e9c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001ea0:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 8001f4c <GY_511_update+0x1bc>
 8001ea4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001ea8:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8001f5c <GY_511_update+0x1cc>
 8001eac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	edc3 7a03 	vstr	s15, [r3, #12]

	float yawAngle = (atan2f(data->y, data->x) * 180.0f) / M_PI;
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	edd3 7a03 	vldr	s15, [r3, #12]
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	ed93 7a02 	vldr	s14, [r3, #8]
 8001ec2:	eef0 0a47 	vmov.f32	s1, s14
 8001ec6:	eeb0 0a67 	vmov.f32	s0, s15
 8001eca:	f006 fb57 	bl	800857c <atan2f>
 8001ece:	eef0 7a40 	vmov.f32	s15, s0
 8001ed2:	ed9f 7a23 	vldr	s14, [pc, #140]	; 8001f60 <GY_511_update+0x1d0>
 8001ed6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001eda:	ee17 0a90 	vmov	r0, s15
 8001ede:	f7fe fb3b 	bl	8000558 <__aeabi_f2d>
 8001ee2:	a313      	add	r3, pc, #76	; (adr r3, 8001f30 <GY_511_update+0x1a0>)
 8001ee4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ee8:	f7fe fcb8 	bl	800085c <__aeabi_ddiv>
 8001eec:	4602      	mov	r2, r0
 8001eee:	460b      	mov	r3, r1
 8001ef0:	4610      	mov	r0, r2
 8001ef2:	4619      	mov	r1, r3
 8001ef4:	f7fe fe80 	bl	8000bf8 <__aeabi_d2f>
 8001ef8:	4603      	mov	r3, r0
 8001efa:	60bb      	str	r3, [r7, #8]

	// Yaw-Winkel auf den Bereich von 0 bis 360 Grad anpassen
	if (yawAngle < 0)
 8001efc:	edd7 7a02 	vldr	s15, [r7, #8]
 8001f00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001f04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f08:	d507      	bpl.n	8001f1a <GY_511_update+0x18a>
	{
		yawAngle += 360.0f;
 8001f0a:	edd7 7a02 	vldr	s15, [r7, #8]
 8001f0e:	ed9f 7a15 	vldr	s14, [pc, #84]	; 8001f64 <GY_511_update+0x1d4>
 8001f12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001f16:	edc7 7a02 	vstr	s15, [r7, #8]
	}

	data->yaw = yawAngle;
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	68ba      	ldr	r2, [r7, #8]
 8001f1e:	615a      	str	r2, [r3, #20]
 8001f20:	e000      	b.n	8001f24 <GY_511_update+0x194>
		return;
 8001f22:	bf00      	nop
}
 8001f24:	3710      	adds	r7, #16
 8001f26:	46bd      	mov	sp, r7
 8001f28:	bd80      	pop	{r7, pc}
 8001f2a:	bf00      	nop
 8001f2c:	f3af 8000 	nop.w
 8001f30:	54442d18 	.word	0x54442d18
 8001f34:	400921fb 	.word	0x400921fb
 8001f38:	2000024e 	.word	0x2000024e
 8001f3c:	2000024f 	.word	0x2000024f
 8001f40:	20000240 	.word	0x20000240
 8001f44:	20000248 	.word	0x20000248
 8001f48:	20000254 	.word	0x20000254
 8001f4c:	3dcccccd 	.word	0x3dcccccd
 8001f50:	3c9374bc 	.word	0x3c9374bc
 8001f54:	20000258 	.word	0x20000258
 8001f58:	3d1ba5e3 	.word	0x3d1ba5e3
 8001f5c:	3bebedfa 	.word	0x3bebedfa
 8001f60:	43340000 	.word	0x43340000
 8001f64:	43b40000 	.word	0x43b40000

08001f68 <Offset_Calibration_gyro>:
uint8_t mode;



void Offset_Calibration_gyro(Offset_value_gyro* data, float gyro_x, float gyro_y, float gyro_z, uint16_t cnt_gyro_measure_points, uint16_t Measurement_cnt)
{
 8001f68:	b480      	push	{r7}
 8001f6a:	b087      	sub	sp, #28
 8001f6c:	af00      	add	r7, sp, #0
 8001f6e:	6178      	str	r0, [r7, #20]
 8001f70:	ed87 0a04 	vstr	s0, [r7, #16]
 8001f74:	edc7 0a03 	vstr	s1, [r7, #12]
 8001f78:	ed87 1a02 	vstr	s2, [r7, #8]
 8001f7c:	460b      	mov	r3, r1
 8001f7e:	80fb      	strh	r3, [r7, #6]
 8001f80:	4613      	mov	r3, r2
 8001f82:	80bb      	strh	r3, [r7, #4]
	switch (mode){
 8001f84:	4b3b      	ldr	r3, [pc, #236]	; (8002074 <Offset_Calibration_gyro+0x10c>)
 8001f86:	781b      	ldrb	r3, [r3, #0]
 8001f88:	2b02      	cmp	r3, #2
 8001f8a:	d033      	beq.n	8001ff4 <Offset_Calibration_gyro+0x8c>
 8001f8c:	2b02      	cmp	r3, #2
 8001f8e:	dc6b      	bgt.n	8002068 <Offset_Calibration_gyro+0x100>
 8001f90:	2b00      	cmp	r3, #0
 8001f92:	d002      	beq.n	8001f9a <Offset_Calibration_gyro+0x32>
 8001f94:	2b01      	cmp	r3, #1
 8001f96:	d004      	beq.n	8001fa2 <Offset_Calibration_gyro+0x3a>

	default:;


	}
}
 8001f98:	e066      	b.n	8002068 <Offset_Calibration_gyro+0x100>
			mode=1;
 8001f9a:	4b36      	ldr	r3, [pc, #216]	; (8002074 <Offset_Calibration_gyro+0x10c>)
 8001f9c:	2201      	movs	r2, #1
 8001f9e:	701a      	strb	r2, [r3, #0]
	break;
 8001fa0:	e062      	b.n	8002068 <Offset_Calibration_gyro+0x100>
			sum_x += gyro_x;
 8001fa2:	4b35      	ldr	r3, [pc, #212]	; (8002078 <Offset_Calibration_gyro+0x110>)
 8001fa4:	ed93 7a00 	vldr	s14, [r3]
 8001fa8:	edd7 7a04 	vldr	s15, [r7, #16]
 8001fac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fb0:	4b31      	ldr	r3, [pc, #196]	; (8002078 <Offset_Calibration_gyro+0x110>)
 8001fb2:	edc3 7a00 	vstr	s15, [r3]
			sum_y += gyro_y;
 8001fb6:	4b31      	ldr	r3, [pc, #196]	; (800207c <Offset_Calibration_gyro+0x114>)
 8001fb8:	ed93 7a00 	vldr	s14, [r3]
 8001fbc:	edd7 7a03 	vldr	s15, [r7, #12]
 8001fc0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fc4:	4b2d      	ldr	r3, [pc, #180]	; (800207c <Offset_Calibration_gyro+0x114>)
 8001fc6:	edc3 7a00 	vstr	s15, [r3]
			sum_z += gyro_z;
 8001fca:	4b2d      	ldr	r3, [pc, #180]	; (8002080 <Offset_Calibration_gyro+0x118>)
 8001fcc:	ed93 7a00 	vldr	s14, [r3]
 8001fd0:	edd7 7a02 	vldr	s15, [r7, #8]
 8001fd4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fd8:	4b29      	ldr	r3, [pc, #164]	; (8002080 <Offset_Calibration_gyro+0x118>)
 8001fda:	edc3 7a00 	vstr	s15, [r3]
			cnt_gyro_measure_points++;
 8001fde:	88fb      	ldrh	r3, [r7, #6]
 8001fe0:	3301      	adds	r3, #1
 8001fe2:	80fb      	strh	r3, [r7, #6]
		if(cnt_gyro_measure_points == Measurement_cnt)
 8001fe4:	88fa      	ldrh	r2, [r7, #6]
 8001fe6:	88bb      	ldrh	r3, [r7, #4]
 8001fe8:	429a      	cmp	r2, r3
 8001fea:	d13c      	bne.n	8002066 <Offset_Calibration_gyro+0xfe>
				mode = 2;
 8001fec:	4b21      	ldr	r3, [pc, #132]	; (8002074 <Offset_Calibration_gyro+0x10c>)
 8001fee:	2202      	movs	r2, #2
 8001ff0:	701a      	strb	r2, [r3, #0]
	break;
 8001ff2:	e038      	b.n	8002066 <Offset_Calibration_gyro+0xfe>
		 data->x_offset_gyro = sum_x/Measurement_cnt;
 8001ff4:	4b20      	ldr	r3, [pc, #128]	; (8002078 <Offset_Calibration_gyro+0x110>)
 8001ff6:	edd3 6a00 	vldr	s13, [r3]
 8001ffa:	88bb      	ldrh	r3, [r7, #4]
 8001ffc:	ee07 3a90 	vmov	s15, r3
 8002000:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002004:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002008:	697b      	ldr	r3, [r7, #20]
 800200a:	edc3 7a00 	vstr	s15, [r3]
		 data->y_offset_gyro = sum_y/Measurement_cnt;
 800200e:	4b1b      	ldr	r3, [pc, #108]	; (800207c <Offset_Calibration_gyro+0x114>)
 8002010:	edd3 6a00 	vldr	s13, [r3]
 8002014:	88bb      	ldrh	r3, [r7, #4]
 8002016:	ee07 3a90 	vmov	s15, r3
 800201a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800201e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002022:	697b      	ldr	r3, [r7, #20]
 8002024:	edc3 7a01 	vstr	s15, [r3, #4]
		 data->z_offset_gyro = sum_z/Measurement_cnt;
 8002028:	4b15      	ldr	r3, [pc, #84]	; (8002080 <Offset_Calibration_gyro+0x118>)
 800202a:	edd3 6a00 	vldr	s13, [r3]
 800202e:	88bb      	ldrh	r3, [r7, #4]
 8002030:	ee07 3a90 	vmov	s15, r3
 8002034:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002038:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800203c:	697b      	ldr	r3, [r7, #20]
 800203e:	edc3 7a02 	vstr	s15, [r3, #8]
		 cnt_gyro_measure_points=0;
 8002042:	2300      	movs	r3, #0
 8002044:	80fb      	strh	r3, [r7, #6]
		 mode = 0;
 8002046:	4b0b      	ldr	r3, [pc, #44]	; (8002074 <Offset_Calibration_gyro+0x10c>)
 8002048:	2200      	movs	r2, #0
 800204a:	701a      	strb	r2, [r3, #0]
		 sum_x=0;
 800204c:	4b0a      	ldr	r3, [pc, #40]	; (8002078 <Offset_Calibration_gyro+0x110>)
 800204e:	f04f 0200 	mov.w	r2, #0
 8002052:	601a      	str	r2, [r3, #0]
		 sum_y=0;
 8002054:	4b09      	ldr	r3, [pc, #36]	; (800207c <Offset_Calibration_gyro+0x114>)
 8002056:	f04f 0200 	mov.w	r2, #0
 800205a:	601a      	str	r2, [r3, #0]
		 sum_z=0;
 800205c:	4b08      	ldr	r3, [pc, #32]	; (8002080 <Offset_Calibration_gyro+0x118>)
 800205e:	f04f 0200 	mov.w	r2, #0
 8002062:	601a      	str	r2, [r3, #0]
	break;
 8002064:	e000      	b.n	8002068 <Offset_Calibration_gyro+0x100>
	break;
 8002066:	bf00      	nop
}
 8002068:	bf00      	nop
 800206a:	371c      	adds	r7, #28
 800206c:	46bd      	mov	sp, r7
 800206e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002072:	4770      	bx	lr
 8002074:	20000268 	.word	0x20000268
 8002078:	2000025c 	.word	0x2000025c
 800207c:	20000260 	.word	0x20000260
 8002080:	20000264 	.word	0x20000264

08002084 <BTN_init>:
			break;
	}
}

void BTN_init(void)
{
 8002084:	b480      	push	{r7}
 8002086:	af00      	add	r7, sp, #0
	/*Set Peripheral bus AHB1*/
	RCC->AHB1ENR |= GPIOCEN;
 8002088:	4b0b      	ldr	r3, [pc, #44]	; (80020b8 <BTN_init+0x34>)
 800208a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800208c:	4a0a      	ldr	r2, [pc, #40]	; (80020b8 <BTN_init+0x34>)
 800208e:	f043 0304 	orr.w	r3, r3, #4
 8002092:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set Pin13 as Input*/
	GPIOC->MODER &=~(1U<<26);
 8002094:	4b09      	ldr	r3, [pc, #36]	; (80020bc <BTN_init+0x38>)
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	4a08      	ldr	r2, [pc, #32]	; (80020bc <BTN_init+0x38>)
 800209a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800209e:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U<<27);
 80020a0:	4b06      	ldr	r3, [pc, #24]	; (80020bc <BTN_init+0x38>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	4a05      	ldr	r2, [pc, #20]	; (80020bc <BTN_init+0x38>)
 80020a6:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80020aa:	6013      	str	r3, [r2, #0]
//	GPIOC->OTYPER |= (1U<<13);
//
//	/*Set Pull-Down*/
//	GPIOC->PUPDR &=~(1U<<26);
//	GPIOC->PUPDR |= (1U<<27);
}
 80020ac:	bf00      	nop
 80020ae:	46bd      	mov	sp, r7
 80020b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b4:	4770      	bx	lr
 80020b6:	bf00      	nop
 80020b8:	40023800 	.word	0x40023800
 80020bc:	40020800 	.word	0x40020800

080020c0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80020c0:	b480      	push	{r7}
 80020c2:	b083      	sub	sp, #12
 80020c4:	af00      	add	r7, sp, #0
 80020c6:	4603      	mov	r3, r0
 80020c8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80020ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020ce:	2b00      	cmp	r3, #0
 80020d0:	db0b      	blt.n	80020ea <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020d2:	79fb      	ldrb	r3, [r7, #7]
 80020d4:	f003 021f 	and.w	r2, r3, #31
 80020d8:	4907      	ldr	r1, [pc, #28]	; (80020f8 <__NVIC_EnableIRQ+0x38>)
 80020da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020de:	095b      	lsrs	r3, r3, #5
 80020e0:	2001      	movs	r0, #1
 80020e2:	fa00 f202 	lsl.w	r2, r0, r2
 80020e6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80020ea:	bf00      	nop
 80020ec:	370c      	adds	r7, #12
 80020ee:	46bd      	mov	sp, r7
 80020f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020f4:	4770      	bx	lr
 80020f6:	bf00      	nop
 80020f8:	e000e100 	.word	0xe000e100

080020fc <i2c1_init>:

uint8_t g_rx__cmplt;
uint8_t g_tx__cmplt;

void i2c1_init(void)
{
 80020fc:	b480      	push	{r7}
 80020fe:	af00      	add	r7, sp, #0
	/********I2C GPIO Configuration*************/
	/*Enable clock access to GPIOB*/
	RCC->AHB1ENR |= GPIOBEN;
 8002100:	4b4c      	ldr	r3, [pc, #304]	; (8002234 <i2c1_init+0x138>)
 8002102:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002104:	4a4b      	ldr	r2, [pc, #300]	; (8002234 <i2c1_init+0x138>)
 8002106:	f043 0302 	orr.w	r3, r3, #2
 800210a:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PB8 and PB9 mode to alternate function mode*/
	/*PB8*/
	GPIOB->MODER &= ~(1U<<16);
 800210c:	4b4a      	ldr	r3, [pc, #296]	; (8002238 <i2c1_init+0x13c>)
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	4a49      	ldr	r2, [pc, #292]	; (8002238 <i2c1_init+0x13c>)
 8002112:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002116:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (1U<<17);
 8002118:	4b47      	ldr	r3, [pc, #284]	; (8002238 <i2c1_init+0x13c>)
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	4a46      	ldr	r2, [pc, #280]	; (8002238 <i2c1_init+0x13c>)
 800211e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002122:	6013      	str	r3, [r2, #0]


	/*PB9*/
	GPIOB->MODER &= ~(1U<<18);
 8002124:	4b44      	ldr	r3, [pc, #272]	; (8002238 <i2c1_init+0x13c>)
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	4a43      	ldr	r2, [pc, #268]	; (8002238 <i2c1_init+0x13c>)
 800212a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800212e:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= (1U<<19);
 8002130:	4b41      	ldr	r3, [pc, #260]	; (8002238 <i2c1_init+0x13c>)
 8002132:	681b      	ldr	r3, [r3, #0]
 8002134:	4a40      	ldr	r2, [pc, #256]	; (8002238 <i2c1_init+0x13c>)
 8002136:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800213a:	6013      	str	r3, [r2, #0]


	/*Set PB8 and PB9 alternate function type to I2C1 (AF4)  */
	/*PB8*/
	GPIOB->AFR[1] &=~(1U<<0);
 800213c:	4b3e      	ldr	r3, [pc, #248]	; (8002238 <i2c1_init+0x13c>)
 800213e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002140:	4a3d      	ldr	r2, [pc, #244]	; (8002238 <i2c1_init+0x13c>)
 8002142:	f023 0301 	bic.w	r3, r3, #1
 8002146:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &=~(1U<<1);
 8002148:	4b3b      	ldr	r3, [pc, #236]	; (8002238 <i2c1_init+0x13c>)
 800214a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800214c:	4a3a      	ldr	r2, [pc, #232]	; (8002238 <i2c1_init+0x13c>)
 800214e:	f023 0302 	bic.w	r3, r3, #2
 8002152:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |=(1U<<2);
 8002154:	4b38      	ldr	r3, [pc, #224]	; (8002238 <i2c1_init+0x13c>)
 8002156:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002158:	4a37      	ldr	r2, [pc, #220]	; (8002238 <i2c1_init+0x13c>)
 800215a:	f043 0304 	orr.w	r3, r3, #4
 800215e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &=~(1U<<3);
 8002160:	4b35      	ldr	r3, [pc, #212]	; (8002238 <i2c1_init+0x13c>)
 8002162:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002164:	4a34      	ldr	r2, [pc, #208]	; (8002238 <i2c1_init+0x13c>)
 8002166:	f023 0308 	bic.w	r3, r3, #8
 800216a:	6253      	str	r3, [r2, #36]	; 0x24

	/*PB9*/
	GPIOB->AFR[1] &=~(1U<<4);
 800216c:	4b32      	ldr	r3, [pc, #200]	; (8002238 <i2c1_init+0x13c>)
 800216e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002170:	4a31      	ldr	r2, [pc, #196]	; (8002238 <i2c1_init+0x13c>)
 8002172:	f023 0310 	bic.w	r3, r3, #16
 8002176:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &=~(1U<<5);
 8002178:	4b2f      	ldr	r3, [pc, #188]	; (8002238 <i2c1_init+0x13c>)
 800217a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800217c:	4a2e      	ldr	r2, [pc, #184]	; (8002238 <i2c1_init+0x13c>)
 800217e:	f023 0320 	bic.w	r3, r3, #32
 8002182:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] |=(1U<<6);
 8002184:	4b2c      	ldr	r3, [pc, #176]	; (8002238 <i2c1_init+0x13c>)
 8002186:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002188:	4a2b      	ldr	r2, [pc, #172]	; (8002238 <i2c1_init+0x13c>)
 800218a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800218e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOB->AFR[1] &=~(1U<<7);
 8002190:	4b29      	ldr	r3, [pc, #164]	; (8002238 <i2c1_init+0x13c>)
 8002192:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002194:	4a28      	ldr	r2, [pc, #160]	; (8002238 <i2c1_init+0x13c>)
 8002196:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800219a:	6253      	str	r3, [r2, #36]	; 0x24

	/*SCL and SDA respectively*/
	/*Set output type of PB8 and PB9 to open-drain*/
	GPIOB->OTYPER |=(1U<<8);
 800219c:	4b26      	ldr	r3, [pc, #152]	; (8002238 <i2c1_init+0x13c>)
 800219e:	685b      	ldr	r3, [r3, #4]
 80021a0:	4a25      	ldr	r2, [pc, #148]	; (8002238 <i2c1_init+0x13c>)
 80021a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80021a6:	6053      	str	r3, [r2, #4]
	GPIOB->OTYPER |=(1U<<9);
 80021a8:	4b23      	ldr	r3, [pc, #140]	; (8002238 <i2c1_init+0x13c>)
 80021aa:	685b      	ldr	r3, [r3, #4]
 80021ac:	4a22      	ldr	r2, [pc, #136]	; (8002238 <i2c1_init+0x13c>)
 80021ae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80021b2:	6053      	str	r3, [r2, #4]

	/********I2C  Configuration*************/
	/*Enable clock access to I2C1*/
	RCC->APB1ENR |= I2C1EN;
 80021b4:	4b1f      	ldr	r3, [pc, #124]	; (8002234 <i2c1_init+0x138>)
 80021b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021b8:	4a1e      	ldr	r2, [pc, #120]	; (8002234 <i2c1_init+0x138>)
 80021ba:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80021be:	6413      	str	r3, [r2, #64]	; 0x40

	/*Reset I2C module*/
	I2C1->CR1 = CR1_SWRST;
 80021c0:	4b1e      	ldr	r3, [pc, #120]	; (800223c <i2c1_init+0x140>)
 80021c2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80021c6:	601a      	str	r2, [r3, #0]


	/*Release the reset*/
	I2C1->CR1 &= ~CR1_SWRST;
 80021c8:	4b1c      	ldr	r3, [pc, #112]	; (800223c <i2c1_init+0x140>)
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	4a1b      	ldr	r2, [pc, #108]	; (800223c <i2c1_init+0x140>)
 80021ce:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80021d2:	6013      	str	r3, [r2, #0]

	/*Enable clock stretching*/
	I2C1->CR1 &=~CR1_NOSTRETCH;
 80021d4:	4b19      	ldr	r3, [pc, #100]	; (800223c <i2c1_init+0x140>)
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	4a18      	ldr	r2, [pc, #96]	; (800223c <i2c1_init+0x140>)
 80021da:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80021de:	6013      	str	r3, [r2, #0]

	/*Disable General Call*/
	I2C1->CR1 &=~CR1_ENGC;
 80021e0:	4b16      	ldr	r3, [pc, #88]	; (800223c <i2c1_init+0x140>)
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	4a15      	ldr	r2, [pc, #84]	; (800223c <i2c1_init+0x140>)
 80021e6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80021ea:	6013      	str	r3, [r2, #0]

	/*Select to use DMA*/
	I2C1->CR2 |=CR2_DMAEN;
 80021ec:	4b13      	ldr	r3, [pc, #76]	; (800223c <i2c1_init+0x140>)
 80021ee:	685b      	ldr	r3, [r3, #4]
 80021f0:	4a12      	ldr	r2, [pc, #72]	; (800223c <i2c1_init+0x140>)
 80021f2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80021f6:	6053      	str	r3, [r2, #4]

	/*Enable LAST*/
	I2C1->CR2 |=CR2_LAST;
 80021f8:	4b10      	ldr	r3, [pc, #64]	; (800223c <i2c1_init+0x140>)
 80021fa:	685b      	ldr	r3, [r3, #4]
 80021fc:	4a0f      	ldr	r2, [pc, #60]	; (800223c <i2c1_init+0x140>)
 80021fe:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002202:	6053      	str	r3, [r2, #4]

	/*Set source clock speed*/
	I2C1->CR2 |=PERIPH_CLK;
 8002204:	4b0d      	ldr	r3, [pc, #52]	; (800223c <i2c1_init+0x140>)
 8002206:	685b      	ldr	r3, [r3, #4]
 8002208:	4a0c      	ldr	r2, [pc, #48]	; (800223c <i2c1_init+0x140>)
 800220a:	f043 0310 	orr.w	r3, r3, #16
 800220e:	6053      	str	r3, [r2, #4]

	 /*Set I2C to standard mode, 100kHz clock*/
	I2C1->CCR = I2C_100KHZ; /*Based on Computation*/
 8002210:	4b0a      	ldr	r3, [pc, #40]	; (800223c <i2c1_init+0x140>)
 8002212:	2250      	movs	r2, #80	; 0x50
 8002214:	61da      	str	r2, [r3, #28]

	I2C1->TRISE = SD_MODE_MAX_RISE_TIME;
 8002216:	4b09      	ldr	r3, [pc, #36]	; (800223c <i2c1_init+0x140>)
 8002218:	2211      	movs	r2, #17
 800221a:	621a      	str	r2, [r3, #32]

	/*Enable I2C module*/
	I2C1->CR1 |=CR1_PE;
 800221c:	4b07      	ldr	r3, [pc, #28]	; (800223c <i2c1_init+0x140>)
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	4a06      	ldr	r2, [pc, #24]	; (800223c <i2c1_init+0x140>)
 8002222:	f043 0301 	orr.w	r3, r3, #1
 8002226:	6013      	str	r3, [r2, #0]

}
 8002228:	bf00      	nop
 800222a:	46bd      	mov	sp, r7
 800222c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002230:	4770      	bx	lr
 8002232:	bf00      	nop
 8002234:	40023800 	.word	0x40023800
 8002238:	40020400 	.word	0x40020400
 800223c:	40005400 	.word	0x40005400

08002240 <dma1_stream6_i2c1_tx_init>:


void dma1_stream6_i2c1_tx_init(void)
{
 8002240:	b580      	push	{r7, lr}
 8002242:	af00      	add	r7, sp, #0
	/*Enable clock access DMA*/
	RCC->AHB1ENR |=DMA1EN;
 8002244:	4b1f      	ldr	r3, [pc, #124]	; (80022c4 <dma1_stream6_i2c1_tx_init+0x84>)
 8002246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002248:	4a1e      	ldr	r2, [pc, #120]	; (80022c4 <dma1_stream6_i2c1_tx_init+0x84>)
 800224a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800224e:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA1_Stream6->CR = 0;
 8002250:	4b1d      	ldr	r3, [pc, #116]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 8002252:	2200      	movs	r2, #0
 8002254:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA1_Stream6->CR & DMA_SCR_EN)){}
 8002256:	bf00      	nop
 8002258:	4b1b      	ldr	r3, [pc, #108]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	f003 0301 	and.w	r3, r3, #1
 8002260:	2b00      	cmp	r3, #0
 8002262:	d1f9      	bne.n	8002258 <dma1_stream6_i2c1_tx_init+0x18>


	/*Select DMA channel : CH1*/
	DMA1_Stream6->CR |=(1U<<25);
 8002264:	4b18      	ldr	r3, [pc, #96]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	4a17      	ldr	r2, [pc, #92]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 800226a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800226e:	6013      	str	r3, [r2, #0]
	DMA1_Stream6->CR &=~(1U<<26);
 8002270:	4b15      	ldr	r3, [pc, #84]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	4a14      	ldr	r2, [pc, #80]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 8002276:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800227a:	6013      	str	r3, [r2, #0]
	DMA1_Stream6->CR &=~(1U<<27);
 800227c:	4b12      	ldr	r3, [pc, #72]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 800227e:	681b      	ldr	r3, [r3, #0]
 8002280:	4a11      	ldr	r2, [pc, #68]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 8002282:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8002286:	6013      	str	r3, [r2, #0]

	/*Enable Mem Addr increment*/
	DMA1_Stream6->CR |=DMA_SCR_MINC;
 8002288:	4b0f      	ldr	r3, [pc, #60]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	4a0e      	ldr	r2, [pc, #56]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 800228e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002292:	6013      	str	r3, [r2, #0]

	/*Enable Transfer Complete Interrupt*/
	DMA1_Stream6->CR |=DMA_SCR_TCIE;
 8002294:	4b0c      	ldr	r3, [pc, #48]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	4a0b      	ldr	r2, [pc, #44]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 800229a:	f043 0310 	orr.w	r3, r3, #16
 800229e:	6013      	str	r3, [r2, #0]

	/*Set Transfer direction :  Mem to Periph*/
	DMA1_Stream6->CR |=(1U<<6);
 80022a0:	4b09      	ldr	r3, [pc, #36]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 80022a2:	681b      	ldr	r3, [r3, #0]
 80022a4:	4a08      	ldr	r2, [pc, #32]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 80022a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80022aa:	6013      	str	r3, [r2, #0]
	DMA1_Stream6->CR &=~(1U<<7);
 80022ac:	4b06      	ldr	r3, [pc, #24]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	4a05      	ldr	r2, [pc, #20]	; (80022c8 <dma1_stream6_i2c1_tx_init+0x88>)
 80022b2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80022b6:	6013      	str	r3, [r2, #0]

	/*Enable Stream Interrupt in NVIC*/
	NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 80022b8:	2011      	movs	r0, #17
 80022ba:	f7ff ff01 	bl	80020c0 <__NVIC_EnableIRQ>

}
 80022be:	bf00      	nop
 80022c0:	bd80      	pop	{r7, pc}
 80022c2:	bf00      	nop
 80022c4:	40023800 	.word	0x40023800
 80022c8:	400260a0 	.word	0x400260a0

080022cc <dma1_stream5_i2c1_rx_init>:

void dma1_stream5_i2c1_rx_init(void)
{
 80022cc:	b580      	push	{r7, lr}
 80022ce:	af00      	add	r7, sp, #0
	/*Enable clock access DMA*/
	RCC->AHB1ENR |=DMA1EN;
 80022d0:	4b1f      	ldr	r3, [pc, #124]	; (8002350 <dma1_stream5_i2c1_rx_init+0x84>)
 80022d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022d4:	4a1e      	ldr	r2, [pc, #120]	; (8002350 <dma1_stream5_i2c1_rx_init+0x84>)
 80022d6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80022da:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA1_Stream5->CR = 0;
 80022dc:	4b1d      	ldr	r3, [pc, #116]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 80022de:	2200      	movs	r2, #0
 80022e0:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA1_Stream5->CR & DMA_SCR_EN)){}
 80022e2:	bf00      	nop
 80022e4:	4b1b      	ldr	r3, [pc, #108]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 80022e6:	681b      	ldr	r3, [r3, #0]
 80022e8:	f003 0301 	and.w	r3, r3, #1
 80022ec:	2b00      	cmp	r3, #0
 80022ee:	d1f9      	bne.n	80022e4 <dma1_stream5_i2c1_rx_init+0x18>

	/*Select DMA channel : CH1*/
	DMA1_Stream5->CR |=(1U<<25);
 80022f0:	4b18      	ldr	r3, [pc, #96]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	4a17      	ldr	r2, [pc, #92]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 80022f6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80022fa:	6013      	str	r3, [r2, #0]
	DMA1_Stream5->CR &=~(1U<<26);
 80022fc:	4b15      	ldr	r3, [pc, #84]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	4a14      	ldr	r2, [pc, #80]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 8002302:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8002306:	6013      	str	r3, [r2, #0]
	DMA1_Stream5->CR &=~(1U<<27);
 8002308:	4b12      	ldr	r3, [pc, #72]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	4a11      	ldr	r2, [pc, #68]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 800230e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8002312:	6013      	str	r3, [r2, #0]

	/*Enable Mem Addr increment*/
	DMA1_Stream5->CR |=DMA_SCR_MINC;
 8002314:	4b0f      	ldr	r3, [pc, #60]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	4a0e      	ldr	r2, [pc, #56]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 800231a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800231e:	6013      	str	r3, [r2, #0]

	/*Enable Transfer Complete Interrupt*/
	DMA1_Stream5->CR |=DMA_SCR_TCIE;
 8002320:	4b0c      	ldr	r3, [pc, #48]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	4a0b      	ldr	r2, [pc, #44]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 8002326:	f043 0310 	orr.w	r3, r3, #16
 800232a:	6013      	str	r3, [r2, #0]

	/*Set Transfer direction :   Periph to Mem*/
	DMA1_Stream5->CR &=~(1U<<6);
 800232c:	4b09      	ldr	r3, [pc, #36]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	4a08      	ldr	r2, [pc, #32]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 8002332:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002336:	6013      	str	r3, [r2, #0]
	DMA1_Stream5->CR &=~(1U<<7);
 8002338:	4b06      	ldr	r3, [pc, #24]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	4a05      	ldr	r2, [pc, #20]	; (8002354 <dma1_stream5_i2c1_rx_init+0x88>)
 800233e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002342:	6013      	str	r3, [r2, #0]

	/*Enable Stream Interrupt in NVIC*/
	NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8002344:	2010      	movs	r0, #16
 8002346:	f7ff febb 	bl	80020c0 <__NVIC_EnableIRQ>

}
 800234a:	bf00      	nop
 800234c:	bd80      	pop	{r7, pc}
 800234e:	bf00      	nop
 8002350:	40023800 	.word	0x40023800
 8002354:	40026088 	.word	0x40026088

08002358 <dma1_stream6_i2c1_transfer>:

void dma1_stream6_i2c1_transfer(uint8_t *msg_to_send, uint32_t msg_len)
{
 8002358:	b480      	push	{r7}
 800235a:	b083      	sub	sp, #12
 800235c:	af00      	add	r7, sp, #0
 800235e:	6078      	str	r0, [r7, #4]
 8002360:	6039      	str	r1, [r7, #0]
	if( NULL != msg_to_send )
 8002362:	687b      	ldr	r3, [r7, #4]
 8002364:	2b00      	cmp	r3, #0
 8002366:	d012      	beq.n	800238e <dma1_stream6_i2c1_transfer+0x36>
	{

		/*Clear interrupt flags*/
		DMA1->HIFCR = HIFCR_CTCIF6;
 8002368:	4b0c      	ldr	r3, [pc, #48]	; (800239c <dma1_stream6_i2c1_transfer+0x44>)
 800236a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800236e:	60da      	str	r2, [r3, #12]

		/*Set Peripheral address*/
		DMA1_Stream6->PAR =	(uint32_t)(&(I2C1->DR));
 8002370:	4b0b      	ldr	r3, [pc, #44]	; (80023a0 <dma1_stream6_i2c1_transfer+0x48>)
 8002372:	4a0c      	ldr	r2, [pc, #48]	; (80023a4 <dma1_stream6_i2c1_transfer+0x4c>)
 8002374:	609a      	str	r2, [r3, #8]

		/*Set Memory address*/
		DMA1_Stream6->M0AR = (uint32_t)msg_to_send;
 8002376:	4a0a      	ldr	r2, [pc, #40]	; (80023a0 <dma1_stream6_i2c1_transfer+0x48>)
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	60d3      	str	r3, [r2, #12]

		/*Set transfer length*/
		DMA1_Stream6->NDTR = msg_len;
 800237c:	4a08      	ldr	r2, [pc, #32]	; (80023a0 <dma1_stream6_i2c1_transfer+0x48>)
 800237e:	683b      	ldr	r3, [r7, #0]
 8002380:	6053      	str	r3, [r2, #4]

		/*Enable the DMA Stream*/
		DMA1_Stream6->CR |= DMA_SCR_EN;
 8002382:	4b07      	ldr	r3, [pc, #28]	; (80023a0 <dma1_stream6_i2c1_transfer+0x48>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	4a06      	ldr	r2, [pc, #24]	; (80023a0 <dma1_stream6_i2c1_transfer+0x48>)
 8002388:	f043 0301 	orr.w	r3, r3, #1
 800238c:	6013      	str	r3, [r2, #0]
	}
	else
	{
		//Do something...
	}
}
 800238e:	bf00      	nop
 8002390:	370c      	adds	r7, #12
 8002392:	46bd      	mov	sp, r7
 8002394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002398:	4770      	bx	lr
 800239a:	bf00      	nop
 800239c:	40026000 	.word	0x40026000
 80023a0:	400260a0 	.word	0x400260a0
 80023a4:	40005410 	.word	0x40005410

080023a8 <dma1_stream5_i2c1_receive>:


void dma1_stream5_i2c1_receive(uint8_t * received_msg, uint32_t msg_len)
{
 80023a8:	b480      	push	{r7}
 80023aa:	b083      	sub	sp, #12
 80023ac:	af00      	add	r7, sp, #0
 80023ae:	6078      	str	r0, [r7, #4]
 80023b0:	6039      	str	r1, [r7, #0]
	if( NULL != received_msg )
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	d012      	beq.n	80023de <dma1_stream5_i2c1_receive+0x36>
	{

		/*Clear interrupt flags*/
		DMA1->HIFCR = HIFCR_CTCIF5;
 80023b8:	4b0c      	ldr	r3, [pc, #48]	; (80023ec <dma1_stream5_i2c1_receive+0x44>)
 80023ba:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80023be:	60da      	str	r2, [r3, #12]

		/*Set Peripheral address*/
		DMA1_Stream5->PAR =	(uint32_t)(&(I2C1->DR));
 80023c0:	4b0b      	ldr	r3, [pc, #44]	; (80023f0 <dma1_stream5_i2c1_receive+0x48>)
 80023c2:	4a0c      	ldr	r2, [pc, #48]	; (80023f4 <dma1_stream5_i2c1_receive+0x4c>)
 80023c4:	609a      	str	r2, [r3, #8]

		/*Set Memory address*/
		DMA1_Stream5->M0AR = (uint32_t)received_msg;
 80023c6:	4a0a      	ldr	r2, [pc, #40]	; (80023f0 <dma1_stream5_i2c1_receive+0x48>)
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	60d3      	str	r3, [r2, #12]

		/*Set transfer length*/
		DMA1_Stream5->NDTR = msg_len;
 80023cc:	4a08      	ldr	r2, [pc, #32]	; (80023f0 <dma1_stream5_i2c1_receive+0x48>)
 80023ce:	683b      	ldr	r3, [r7, #0]
 80023d0:	6053      	str	r3, [r2, #4]

		/*Enable the DMA Stream*/
		DMA1_Stream5->CR |= DMA_SCR_EN;
 80023d2:	4b07      	ldr	r3, [pc, #28]	; (80023f0 <dma1_stream5_i2c1_receive+0x48>)
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	4a06      	ldr	r2, [pc, #24]	; (80023f0 <dma1_stream5_i2c1_receive+0x48>)
 80023d8:	f043 0301 	orr.w	r3, r3, #1
 80023dc:	6013      	str	r3, [r2, #0]

	else
	{
		//Do something...
	}
}
 80023de:	bf00      	nop
 80023e0:	370c      	adds	r7, #12
 80023e2:	46bd      	mov	sp, r7
 80023e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e8:	4770      	bx	lr
 80023ea:	bf00      	nop
 80023ec:	40026000 	.word	0x40026000
 80023f0:	40026088 	.word	0x40026088
 80023f4:	40005410 	.word	0x40005410

080023f8 <i2c_dma_write>:


void i2c_dma_write(uint8_t slave_addr, uint8_t *p_write_buff, uint16_t num_of_bytes)
{
 80023f8:	b580      	push	{r7, lr}
 80023fa:	b082      	sub	sp, #8
 80023fc:	af00      	add	r7, sp, #0
 80023fe:	4603      	mov	r3, r0
 8002400:	6039      	str	r1, [r7, #0]
 8002402:	71fb      	strb	r3, [r7, #7]
 8002404:	4613      	mov	r3, r2
 8002406:	80bb      	strh	r3, [r7, #4]
	/*Wait while BUSY flag is set*/
	while((I2C1->SR2 & SR2_BUSY)){}
 8002408:	bf00      	nop
 800240a:	4b16      	ldr	r3, [pc, #88]	; (8002464 <i2c_dma_write+0x6c>)
 800240c:	699b      	ldr	r3, [r3, #24]
 800240e:	f003 0302 	and.w	r3, r3, #2
 8002412:	2b00      	cmp	r3, #0
 8002414:	d1f9      	bne.n	800240a <i2c_dma_write+0x12>

	/*Generate START condition*/
	I2C1->CR1 |= CR1_START;
 8002416:	4b13      	ldr	r3, [pc, #76]	; (8002464 <i2c_dma_write+0x6c>)
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	4a12      	ldr	r2, [pc, #72]	; (8002464 <i2c_dma_write+0x6c>)
 800241c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002420:	6013      	str	r3, [r2, #0]

	/*Wait until the SB flag  is set*/
	while(!(I2C1->SR1 & SR1_SB)){}
 8002422:	bf00      	nop
 8002424:	4b0f      	ldr	r3, [pc, #60]	; (8002464 <i2c_dma_write+0x6c>)
 8002426:	695b      	ldr	r3, [r3, #20]
 8002428:	f003 0301 	and.w	r3, r3, #1
 800242c:	2b00      	cmp	r3, #0
 800242e:	d0f9      	beq.n	8002424 <i2c_dma_write+0x2c>

	/*Read SR1*/
	 I2C1->SR1;
 8002430:	4b0c      	ldr	r3, [pc, #48]	; (8002464 <i2c_dma_write+0x6c>)
 8002432:	695b      	ldr	r3, [r3, #20]

	/*Send Slave Addr "Write"*/
	 I2C1->DR = (slave_addr<<1|0);
 8002434:	79fb      	ldrb	r3, [r7, #7]
 8002436:	005a      	lsls	r2, r3, #1
 8002438:	4b0a      	ldr	r3, [pc, #40]	; (8002464 <i2c_dma_write+0x6c>)
 800243a:	611a      	str	r2, [r3, #16]

	/*Wait for Addr Flag to be set*/
	 while(!((I2C1->SR1)& SR1_ADDR)){}
 800243c:	bf00      	nop
 800243e:	4b09      	ldr	r3, [pc, #36]	; (8002464 <i2c_dma_write+0x6c>)
 8002440:	695b      	ldr	r3, [r3, #20]
 8002442:	f003 0302 	and.w	r3, r3, #2
 8002446:	2b00      	cmp	r3, #0
 8002448:	d0f9      	beq.n	800243e <i2c_dma_write+0x46>

	/*Call DMA transfer function*/
	 dma1_stream6_i2c1_transfer(p_write_buff,num_of_bytes);
 800244a:	88bb      	ldrh	r3, [r7, #4]
 800244c:	4619      	mov	r1, r3
 800244e:	6838      	ldr	r0, [r7, #0]
 8002450:	f7ff ff82 	bl	8002358 <dma1_stream6_i2c1_transfer>

	/*Read SR1*/
	 I2C1->SR1;
 8002454:	4b03      	ldr	r3, [pc, #12]	; (8002464 <i2c_dma_write+0x6c>)
 8002456:	695b      	ldr	r3, [r3, #20]

	/*Read SR2*/
	 I2C1->SR2;
 8002458:	4b02      	ldr	r3, [pc, #8]	; (8002464 <i2c_dma_write+0x6c>)
 800245a:	699b      	ldr	r3, [r3, #24]


}
 800245c:	bf00      	nop
 800245e:	3708      	adds	r7, #8
 8002460:	46bd      	mov	sp, r7
 8002462:	bd80      	pop	{r7, pc}
 8002464:	40005400 	.word	0x40005400

08002468 <i2c_dma_read>:

void i2c_dma_read(uint8_t slave_addr, uint8_t reg_addr, uint8_t *p_read_buff, uint16_t num_of_bytes)
{
 8002468:	b580      	push	{r7, lr}
 800246a:	b082      	sub	sp, #8
 800246c:	af00      	add	r7, sp, #0
 800246e:	603a      	str	r2, [r7, #0]
 8002470:	461a      	mov	r2, r3
 8002472:	4603      	mov	r3, r0
 8002474:	71fb      	strb	r3, [r7, #7]
 8002476:	460b      	mov	r3, r1
 8002478:	71bb      	strb	r3, [r7, #6]
 800247a:	4613      	mov	r3, r2
 800247c:	80bb      	strh	r3, [r7, #4]
	/*Wait while BUSY flag is set*/
	while((I2C1->SR2 & SR2_BUSY)){}
 800247e:	bf00      	nop
 8002480:	4b38      	ldr	r3, [pc, #224]	; (8002564 <i2c_dma_read+0xfc>)
 8002482:	699b      	ldr	r3, [r3, #24]
 8002484:	f003 0302 	and.w	r3, r3, #2
 8002488:	2b00      	cmp	r3, #0
 800248a:	d1f9      	bne.n	8002480 <i2c_dma_read+0x18>

	/*Generate START condition*/
	I2C1->CR1 |= CR1_START;
 800248c:	4b35      	ldr	r3, [pc, #212]	; (8002564 <i2c_dma_read+0xfc>)
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	4a34      	ldr	r2, [pc, #208]	; (8002564 <i2c_dma_read+0xfc>)
 8002492:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002496:	6013      	str	r3, [r2, #0]

	/*Wait until the SB flag  is set*/
	while(!(I2C1->SR1 & SR1_SB)){}
 8002498:	bf00      	nop
 800249a:	4b32      	ldr	r3, [pc, #200]	; (8002564 <i2c_dma_read+0xfc>)
 800249c:	695b      	ldr	r3, [r3, #20]
 800249e:	f003 0301 	and.w	r3, r3, #1
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d0f9      	beq.n	800249a <i2c_dma_read+0x32>

	/*Read SR1*/
	 I2C1->SR1;
 80024a6:	4b2f      	ldr	r3, [pc, #188]	; (8002564 <i2c_dma_read+0xfc>)
 80024a8:	695b      	ldr	r3, [r3, #20]

	/*Send Slave Addr "Write"*/
	 I2C1->DR = (slave_addr<<1|0);
 80024aa:	79fb      	ldrb	r3, [r7, #7]
 80024ac:	005a      	lsls	r2, r3, #1
 80024ae:	4b2d      	ldr	r3, [pc, #180]	; (8002564 <i2c_dma_read+0xfc>)
 80024b0:	611a      	str	r2, [r3, #16]

	/*Wait for Addr Flag to be set*/
	 while(!((I2C1->SR1)& SR1_ADDR)){}
 80024b2:	bf00      	nop
 80024b4:	4b2b      	ldr	r3, [pc, #172]	; (8002564 <i2c_dma_read+0xfc>)
 80024b6:	695b      	ldr	r3, [r3, #20]
 80024b8:	f003 0302 	and.w	r3, r3, #2
 80024bc:	2b00      	cmp	r3, #0
 80024be:	d0f9      	beq.n	80024b4 <i2c_dma_read+0x4c>

	/*Read SR1*/
	 I2C1->SR1;
 80024c0:	4b28      	ldr	r3, [pc, #160]	; (8002564 <i2c_dma_read+0xfc>)
 80024c2:	695b      	ldr	r3, [r3, #20]

    /*Read SR2*/
	 I2C1->SR2;
 80024c4:	4b27      	ldr	r3, [pc, #156]	; (8002564 <i2c_dma_read+0xfc>)
 80024c6:	699b      	ldr	r3, [r3, #24]

	/*Wait for TXE flag to be set*/
	while(!(I2C1->SR1 & SR1_TXE)){}
 80024c8:	bf00      	nop
 80024ca:	4b26      	ldr	r3, [pc, #152]	; (8002564 <i2c_dma_read+0xfc>)
 80024cc:	695b      	ldr	r3, [r3, #20]
 80024ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80024d2:	2b00      	cmp	r3, #0
 80024d4:	d0f9      	beq.n	80024ca <i2c_dma_read+0x62>

	/*Send RegAddr*/
	if(num_of_bytes >= 2)
 80024d6:	88bb      	ldrh	r3, [r7, #4]
 80024d8:	2b01      	cmp	r3, #1
 80024da:	d909      	bls.n	80024f0 <i2c_dma_read+0x88>
	{
		/*Enable ACK*/
		I2C1->CR1 |=CR1_ACK;
 80024dc:	4b21      	ldr	r3, [pc, #132]	; (8002564 <i2c_dma_read+0xfc>)
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	4a20      	ldr	r2, [pc, #128]	; (8002564 <i2c_dma_read+0xfc>)
 80024e2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80024e6:	6013      	str	r3, [r2, #0]

		/*Send register address to read*/
		I2C1->DR = reg_addr;
 80024e8:	4a1e      	ldr	r2, [pc, #120]	; (8002564 <i2c_dma_read+0xfc>)
 80024ea:	79bb      	ldrb	r3, [r7, #6]
 80024ec:	6113      	str	r3, [r2, #16]
 80024ee:	e008      	b.n	8002502 <i2c_dma_read+0x9a>

	}
	else
	{
		/*Disable ACK*/
		I2C1->CR1 &=~CR1_ACK;
 80024f0:	4b1c      	ldr	r3, [pc, #112]	; (8002564 <i2c_dma_read+0xfc>)
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	4a1b      	ldr	r2, [pc, #108]	; (8002564 <i2c_dma_read+0xfc>)
 80024f6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80024fa:	6013      	str	r3, [r2, #0]

		/*Send register address to read*/
		I2C1->DR = reg_addr;
 80024fc:	4a19      	ldr	r2, [pc, #100]	; (8002564 <i2c_dma_read+0xfc>)
 80024fe:	79bb      	ldrb	r3, [r7, #6]
 8002500:	6113      	str	r3, [r2, #16]
	}

	/*Wait for BTF flag*/
	while(!(I2C1->SR1 & SR1_BTF)){}
 8002502:	bf00      	nop
 8002504:	4b17      	ldr	r3, [pc, #92]	; (8002564 <i2c_dma_read+0xfc>)
 8002506:	695b      	ldr	r3, [r3, #20]
 8002508:	f003 0304 	and.w	r3, r3, #4
 800250c:	2b00      	cmp	r3, #0
 800250e:	d0f9      	beq.n	8002504 <i2c_dma_read+0x9c>

	/*Generate RESTART*/
	I2C1->CR1 |= CR1_START;
 8002510:	4b14      	ldr	r3, [pc, #80]	; (8002564 <i2c_dma_read+0xfc>)
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	4a13      	ldr	r2, [pc, #76]	; (8002564 <i2c_dma_read+0xfc>)
 8002516:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800251a:	6013      	str	r3, [r2, #0]

	/*Wait until the SB flag is set*/
	while(!(I2C1->SR1 & SR1_SB)){}
 800251c:	bf00      	nop
 800251e:	4b11      	ldr	r3, [pc, #68]	; (8002564 <i2c_dma_read+0xfc>)
 8002520:	695b      	ldr	r3, [r3, #20]
 8002522:	f003 0301 	and.w	r3, r3, #1
 8002526:	2b00      	cmp	r3, #0
 8002528:	d0f9      	beq.n	800251e <i2c_dma_read+0xb6>

	/*Read SR1*/
	I2C1->SR1;
 800252a:	4b0e      	ldr	r3, [pc, #56]	; (8002564 <i2c_dma_read+0xfc>)
 800252c:	695b      	ldr	r3, [r3, #20]

	/*Send Slave Addr with "read"*/
	 I2C1->DR = (slave_addr<<1|1);
 800252e:	79fb      	ldrb	r3, [r7, #7]
 8002530:	005b      	lsls	r3, r3, #1
 8002532:	f043 0201 	orr.w	r2, r3, #1
 8002536:	4b0b      	ldr	r3, [pc, #44]	; (8002564 <i2c_dma_read+0xfc>)
 8002538:	611a      	str	r2, [r3, #16]

	/*Wait for the Addr flag to be set*/
	 while(!((I2C1->SR1)& SR1_ADDR)){}
 800253a:	bf00      	nop
 800253c:	4b09      	ldr	r3, [pc, #36]	; (8002564 <i2c_dma_read+0xfc>)
 800253e:	695b      	ldr	r3, [r3, #20]
 8002540:	f003 0302 	and.w	r3, r3, #2
 8002544:	2b00      	cmp	r3, #0
 8002546:	d0f9      	beq.n	800253c <i2c_dma_read+0xd4>

	/*Call DMA receive function*/
	 dma1_stream5_i2c1_receive(p_read_buff,num_of_bytes);
 8002548:	88bb      	ldrh	r3, [r7, #4]
 800254a:	4619      	mov	r1, r3
 800254c:	6838      	ldr	r0, [r7, #0]
 800254e:	f7ff ff2b 	bl	80023a8 <dma1_stream5_i2c1_receive>

	/*Read SR1*/
	I2C1->SR1;
 8002552:	4b04      	ldr	r3, [pc, #16]	; (8002564 <i2c_dma_read+0xfc>)
 8002554:	695b      	ldr	r3, [r3, #20]

	/*Read SR2*/
	I2C1->SR2;
 8002556:	4b03      	ldr	r3, [pc, #12]	; (8002564 <i2c_dma_read+0xfc>)
 8002558:	699b      	ldr	r3, [r3, #24]

}
 800255a:	bf00      	nop
 800255c:	3708      	adds	r7, #8
 800255e:	46bd      	mov	sp, r7
 8002560:	bd80      	pop	{r7, pc}
 8002562:	bf00      	nop
 8002564:	40005400 	.word	0x40005400

08002568 <DMA1_Stream6_IRQHandler>:


void DMA1_Stream6_IRQHandler(void)
{
 8002568:	b480      	push	{r7}
 800256a:	af00      	add	r7, sp, #0
	if((DMA1->HISR) & HIFSR_TCIF6)
 800256c:	4b0c      	ldr	r3, [pc, #48]	; (80025a0 <DMA1_Stream6_IRQHandler+0x38>)
 800256e:	685b      	ldr	r3, [r3, #4]
 8002570:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002574:	2b00      	cmp	r3, #0
 8002576:	d00e      	beq.n	8002596 <DMA1_Stream6_IRQHandler+0x2e>
	{
		//do_ssomething
		g_tx__cmplt = 1;
 8002578:	4b0a      	ldr	r3, [pc, #40]	; (80025a4 <DMA1_Stream6_IRQHandler+0x3c>)
 800257a:	2201      	movs	r2, #1
 800257c:	701a      	strb	r2, [r3, #0]

		/*Generate STOP condition*/
		 I2C1->CR1 |= CR1_STOP;
 800257e:	4b0a      	ldr	r3, [pc, #40]	; (80025a8 <DMA1_Stream6_IRQHandler+0x40>)
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	4a09      	ldr	r2, [pc, #36]	; (80025a8 <DMA1_Stream6_IRQHandler+0x40>)
 8002584:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002588:	6013      	str	r3, [r2, #0]

		/*Clear the flag*/
		DMA1->HIFCR |= HIFCR_CTCIF6;
 800258a:	4b05      	ldr	r3, [pc, #20]	; (80025a0 <DMA1_Stream6_IRQHandler+0x38>)
 800258c:	68db      	ldr	r3, [r3, #12]
 800258e:	4a04      	ldr	r2, [pc, #16]	; (80025a0 <DMA1_Stream6_IRQHandler+0x38>)
 8002590:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002594:	60d3      	str	r3, [r2, #12]
	}
}
 8002596:	bf00      	nop
 8002598:	46bd      	mov	sp, r7
 800259a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800259e:	4770      	bx	lr
 80025a0:	40026000 	.word	0x40026000
 80025a4:	2000026a 	.word	0x2000026a
 80025a8:	40005400 	.word	0x40005400

080025ac <DMA1_Stream5_IRQHandler>:

void DMA1_Stream5_IRQHandler(void)
{
 80025ac:	b480      	push	{r7}
 80025ae:	af00      	add	r7, sp, #0
	if((DMA1->HISR) & HIFSR_TCIF5)
 80025b0:	4b0c      	ldr	r3, [pc, #48]	; (80025e4 <DMA1_Stream5_IRQHandler+0x38>)
 80025b2:	685b      	ldr	r3, [r3, #4]
 80025b4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	d00e      	beq.n	80025da <DMA1_Stream5_IRQHandler+0x2e>
	{

		g_rx__cmplt = 1;
 80025bc:	4b0a      	ldr	r3, [pc, #40]	; (80025e8 <DMA1_Stream5_IRQHandler+0x3c>)
 80025be:	2201      	movs	r2, #1
 80025c0:	701a      	strb	r2, [r3, #0]

		//do_ssomething

		/*Generate STOP condition*/
		I2C1->CR1 |= CR1_STOP;
 80025c2:	4b0a      	ldr	r3, [pc, #40]	; (80025ec <DMA1_Stream5_IRQHandler+0x40>)
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	4a09      	ldr	r2, [pc, #36]	; (80025ec <DMA1_Stream5_IRQHandler+0x40>)
 80025c8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80025cc:	6013      	str	r3, [r2, #0]

		/*Clear the flag*/
		DMA1->HIFCR |= HIFCR_CTCIF5;
 80025ce:	4b05      	ldr	r3, [pc, #20]	; (80025e4 <DMA1_Stream5_IRQHandler+0x38>)
 80025d0:	68db      	ldr	r3, [r3, #12]
 80025d2:	4a04      	ldr	r2, [pc, #16]	; (80025e4 <DMA1_Stream5_IRQHandler+0x38>)
 80025d4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80025d8:	60d3      	str	r3, [r2, #12]

	}
}
 80025da:	bf00      	nop
 80025dc:	46bd      	mov	sp, r7
 80025de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e2:	4770      	bx	lr
 80025e4:	40026000 	.word	0x40026000
 80025e8:	20000269 	.word	0x20000269
 80025ec:	40005400 	.word	0x40005400

080025f0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80025f0:	b480      	push	{r7}
 80025f2:	b083      	sub	sp, #12
 80025f4:	af00      	add	r7, sp, #0
 80025f6:	4603      	mov	r3, r0
 80025f8:	6039      	str	r1, [r7, #0]
 80025fa:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80025fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002600:	2b00      	cmp	r3, #0
 8002602:	db0a      	blt.n	800261a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002604:	683b      	ldr	r3, [r7, #0]
 8002606:	b2da      	uxtb	r2, r3
 8002608:	490c      	ldr	r1, [pc, #48]	; (800263c <__NVIC_SetPriority+0x4c>)
 800260a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800260e:	0112      	lsls	r2, r2, #4
 8002610:	b2d2      	uxtb	r2, r2
 8002612:	440b      	add	r3, r1
 8002614:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8002618:	e00a      	b.n	8002630 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800261a:	683b      	ldr	r3, [r7, #0]
 800261c:	b2da      	uxtb	r2, r3
 800261e:	4908      	ldr	r1, [pc, #32]	; (8002640 <__NVIC_SetPriority+0x50>)
 8002620:	79fb      	ldrb	r3, [r7, #7]
 8002622:	f003 030f 	and.w	r3, r3, #15
 8002626:	3b04      	subs	r3, #4
 8002628:	0112      	lsls	r2, r2, #4
 800262a:	b2d2      	uxtb	r2, r2
 800262c:	440b      	add	r3, r1
 800262e:	761a      	strb	r2, [r3, #24]
}
 8002630:	bf00      	nop
 8002632:	370c      	adds	r7, #12
 8002634:	46bd      	mov	sp, r7
 8002636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800263a:	4770      	bx	lr
 800263c:	e000e100 	.word	0xe000e100
 8002640:	e000ed00 	.word	0xe000ed00

08002644 <GPIO_PA8_Init>:
uint32_t Status_Magneto = 0;
lsm303MagData MagnetometerData;

uint8_t Switch_Interrupt=0;

void GPIO_PA8_Init(void){
 8002644:	b480      	push	{r7}
 8002646:	af00      	add	r7, sp, #0

	/*1.Enable clk to PORT A*/
	RCC->AHB1ENR |= 1U<<0;
 8002648:	4b0d      	ldr	r3, [pc, #52]	; (8002680 <GPIO_PA8_Init+0x3c>)
 800264a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800264c:	4a0c      	ldr	r2, [pc, #48]	; (8002680 <GPIO_PA8_Init+0x3c>)
 800264e:	f043 0301 	orr.w	r3, r3, #1
 8002652:	6313      	str	r3, [r2, #48]	; 0x30

	/*2. Set PIN to Output*/
	GPIOA->MODER |= (1U<<16);
 8002654:	4b0b      	ldr	r3, [pc, #44]	; (8002684 <GPIO_PA8_Init+0x40>)
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	4a0a      	ldr	r2, [pc, #40]	; (8002684 <GPIO_PA8_Init+0x40>)
 800265a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800265e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U<<17);
 8002660:	4b08      	ldr	r3, [pc, #32]	; (8002684 <GPIO_PA8_Init+0x40>)
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	4a07      	ldr	r2, [pc, #28]	; (8002684 <GPIO_PA8_Init+0x40>)
 8002666:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800266a:	6013      	str	r3, [r2, #0]
	GPIOA->BSRR = (1U<<24);		//Reset PA8
 800266c:	4b05      	ldr	r3, [pc, #20]	; (8002684 <GPIO_PA8_Init+0x40>)
 800266e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002672:	619a      	str	r2, [r3, #24]
}
 8002674:	bf00      	nop
 8002676:	46bd      	mov	sp, r7
 8002678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800267c:	4770      	bx	lr
 800267e:	bf00      	nop
 8002680:	40023800 	.word	0x40023800
 8002684:	40020000 	.word	0x40020000

08002688 <main>:


int main(void)
{
 8002688:	b580      	push	{r7, lr}
 800268a:	b088      	sub	sp, #32
 800268c:	af00      	add	r7, sp, #0
	GPIO_PA8_Init();
 800268e:	f7ff ffd9 	bl	8002644 <GPIO_PA8_Init>

	/*create start conditions for the Kalman-Filter*/
	float P[2]={KALMAN_P_INIT, KALMAN_P_INIT};			//Kovarianzmatrix
 8002692:	4b2a      	ldr	r3, [pc, #168]	; (800273c <main+0xb4>)
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	61bb      	str	r3, [r7, #24]
 8002698:	4b28      	ldr	r3, [pc, #160]	; (800273c <main+0xb4>)
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	61fb      	str	r3, [r7, #28]
	float Q[2]={KALMAN_Q, KALMAN_Q}; 					//Kovarianzmatrix Prozessrauschen
 800269e:	4b28      	ldr	r3, [pc, #160]	; (8002740 <main+0xb8>)
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	613b      	str	r3, [r7, #16]
 80026a4:	4b26      	ldr	r3, [pc, #152]	; (8002740 <main+0xb8>)
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	617b      	str	r3, [r7, #20]
	float R[3]={KALMAN_R,KALMAN_R,KALMAN_R};			//Kovarianzmatrix Messrauschen
 80026aa:	4b26      	ldr	r3, [pc, #152]	; (8002744 <main+0xbc>)
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	607b      	str	r3, [r7, #4]
 80026b0:	4b24      	ldr	r3, [pc, #144]	; (8002744 <main+0xbc>)
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	60bb      	str	r3, [r7, #8]
 80026b6:	4b23      	ldr	r3, [pc, #140]	; (8002744 <main+0xbc>)
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	60fb      	str	r3, [r7, #12]
	/*create start conditions for the Kalman-Filter*/
//	float P_Yaw[2]={KALMAN_P_INIT, KALMAN_P_INIT};			//Kovarianzmatrix
//	float Q_Yaw[2]={KALMAN_Q, KALMAN_Q, KALMAN_Q}; 			//Kovarianzmatrix Prozessrauschen
//	float R_Yaw[3]={KALMAN_R,KALMAN_R,KALMAN_R};			//Kovarianzmatrix Messrauschen

	EKF_Init(&Start_Conditions, P, Q, R);
 80026bc:	1d3b      	adds	r3, r7, #4
 80026be:	f107 0210 	add.w	r2, r7, #16
 80026c2:	f107 0118 	add.w	r1, r7, #24
 80026c6:	4820      	ldr	r0, [pc, #128]	; (8002748 <main+0xc0>)
 80026c8:	f7fe fb1c 	bl	8000d04 <EKF_Init>
	//Offset_value_gyro  measurements_gyro_mpu9250 = {-0.17926,0.06552,0.01092};
	//Offset_value_gyro  measurements_gyro_mpu9250 = {0,0,0};	//calibration gets executed at the beginning
	//Offset_Scale_value_acc measurements_acc_mpu9250 = {0.03552, 9.81508/9.81f,0.01730,9.82851/9.81f,0.08203,9.97796/9.81f};

	/*Enable User Button*/
	BTN_init();
 80026cc:	f7ff fcda 	bl	8002084 <BTN_init>

	/*SysTick Timer init*/
	systick_counter_init();
 80026d0:	f001 f870 	bl	80037b4 <systick_counter_init>

	/***MPU*config***************************************/
	/*Enable SPI*/
	spi1_dma_init();
 80026d4:	f000 fd5c 	bl	8003190 <spi1_dma_init>

	/*Enable Floating Point Unit*/
	SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));
 80026d8:	4b1c      	ldr	r3, [pc, #112]	; (800274c <main+0xc4>)
 80026da:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80026de:	4a1b      	ldr	r2, [pc, #108]	; (800274c <main+0xc4>)
 80026e0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80026e4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

	/*Config NCS pin*/
	mpu9250_ncs_pin_config();
 80026e8:	f000 fa2e 	bl	8002b48 <mpu9250_ncs_pin_config>

	/*Enable tx stream*/
	dma2_stream3_spi_tx_init();
 80026ec:	f000 fe06 	bl	80032fc <dma2_stream3_spi_tx_init>

	/*Enable rx stream*/
	dma2_stream2_spi_rx_init();
 80026f0:	f000 fe62 	bl	80033b8 <dma2_stream2_spi_rx_init>
	/******************************************************/

	/*ACCELEROMETER+Gyroskope****START SPI********/
	/*Reset NCS pin*/
	mpu9250_ncs_pin_reset();
 80026f4:	f000 fa56 	bl	8002ba4 <mpu9250_ncs_pin_reset>

	/*Config accel & gyro*/
	mpu9250_accel_config(ACC_FULL_SCALE_2_G);
 80026f8:	2000      	movs	r0, #0
 80026fa:	f000 fa63 	bl	8002bc4 <mpu9250_accel_config>

	mpu9250_gyro_config(GYRO_FULL_SCALE_250);
 80026fe:	2000      	movs	r0, #0
 8002700:	f000 fc16 	bl	8002f30 <mpu9250_gyro_config>

	/*Set NCS pin to high-level*/
	mpu9250_ncs_pin_set();
 8002704:	f000 fa3e 	bl	8002b84 <mpu9250_ncs_pin_set>
// delta_t_gyro = tim2_500hz_interrupt_init();
//	delta_t_gyro = tim2_100hz_interrupt_init();


	//SystemClock_Config();
	SystemCoreClockUpdate(); //Used to read the HCLK frequency
 8002708:	f000 ffd4 	bl	80036b4 <SystemCoreClockUpdate>

	/***Magnetometer*config********************************/
	/*Enable I2C*/
	i2c1_init();
 800270c:	f7ff fcf6 	bl	80020fc <i2c1_init>

	/*Enable Floating Point Unit*/
	//SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));

	/*Enable tx stream*/
	dma1_stream6_i2c1_tx_init();
 8002710:	f7ff fd96 	bl	8002240 <dma1_stream6_i2c1_tx_init>

	/*Enable rx stream*/
	dma1_stream5_i2c1_rx_init();
 8002714:	f7ff fdda 	bl	80022cc <dma1_stream5_i2c1_rx_init>
	/*******************************************************/
	/*Config Magnetometer*/
	GY511_init(LSM303_CONTIMODE, LSM303_MAGGAIN_8_1, LSM303_MAGRATE_220);
 8002718:	221c      	movs	r2, #28
 800271a:	21e0      	movs	r1, #224	; 0xe0
 800271c:	2000      	movs	r0, #0
 800271e:	f7ff fa9d 	bl	8001c5c <GY511_init>
	/******************************************************/

	/*Enable Timer 1kHz*/
	delta_t_gyro = tim2_1khz_interrupt_init();
 8002722:	f001 f87b 	bl	800381c <tim2_1khz_interrupt_init>
 8002726:	eef0 7a40 	vmov.f32	s15, s0
 800272a:	4b09      	ldr	r3, [pc, #36]	; (8002750 <main+0xc8>)
 800272c:	edc3 7a00 	vstr	s15, [r3]
	NVIC_SetPriority(TIM2_IRQn,70);
 8002730:	2146      	movs	r1, #70	; 0x46
 8002732:	201c      	movs	r0, #28
 8002734:	f7ff ff5c 	bl	80025f0 <__NVIC_SetPriority>


	while(1)
 8002738:	e7fe      	b.n	8002738 <main+0xb0>
 800273a:	bf00      	nop
 800273c:	20000004 	.word	0x20000004
 8002740:	20000008 	.word	0x20000008
 8002744:	2000000c 	.word	0x2000000c
 8002748:	200002c0 	.word	0x200002c0
 800274c:	e000ed00 	.word	0xe000ed00
 8002750:	200002bc 	.word	0x200002bc

08002754 <TIM2_IRQHandler>:
    printf( "%c", low_byte);
}

/*INTERRUPTS**********************************/
void TIM2_IRQHandler(void) // jede 1ms Interrupt
{
 8002754:	b580      	push	{r7, lr}
 8002756:	b082      	sub	sp, #8
 8002758:	af00      	add	r7, sp, #0
//	GY_511_update(&MagnetometerData);

	uint16_t calibration_cycles = 1000;
 800275a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800275e:	80fb      	strh	r3, [r7, #6]
	if(cnt_gyro_cali <= calibration_cycles)
 8002760:	4b0d      	ldr	r3, [pc, #52]	; (8002798 <TIM2_IRQHandler+0x44>)
 8002762:	881b      	ldrh	r3, [r3, #0]
 8002764:	88fa      	ldrh	r2, [r7, #6]
 8002766:	429a      	cmp	r2, r3
 8002768:	d30d      	bcc.n	8002786 <TIM2_IRQHandler+0x32>
	{
		set_gyro_offset(cnt_gyro_cali, calibration_cycles);
 800276a:	4b0b      	ldr	r3, [pc, #44]	; (8002798 <TIM2_IRQHandler+0x44>)
 800276c:	881b      	ldrh	r3, [r3, #0]
 800276e:	88fa      	ldrh	r2, [r7, #6]
 8002770:	4611      	mov	r1, r2
 8002772:	4618      	mov	r0, r3
 8002774:	f000 f99c 	bl	8002ab0 <set_gyro_offset>
		cnt_gyro_cali++;
 8002778:	4b07      	ldr	r3, [pc, #28]	; (8002798 <TIM2_IRQHandler+0x44>)
 800277a:	881b      	ldrh	r3, [r3, #0]
 800277c:	3301      	adds	r3, #1
 800277e:	b29a      	uxth	r2, r3
 8002780:	4b05      	ldr	r3, [pc, #20]	; (8002798 <TIM2_IRQHandler+0x44>)
 8002782:	801a      	strh	r2, [r3, #0]
	else
	{
		get_camera_position(&MagnetometerData,&measurements_acc_mpu9250, &measurements_gyro_mpu9250);
	}

}
 8002784:	e004      	b.n	8002790 <TIM2_IRQHandler+0x3c>
		get_camera_position(&MagnetometerData,&measurements_acc_mpu9250, &measurements_gyro_mpu9250);
 8002786:	4a05      	ldr	r2, [pc, #20]	; (800279c <TIM2_IRQHandler+0x48>)
 8002788:	4905      	ldr	r1, [pc, #20]	; (80027a0 <TIM2_IRQHandler+0x4c>)
 800278a:	4806      	ldr	r0, [pc, #24]	; (80027a4 <TIM2_IRQHandler+0x50>)
 800278c:	f000 f80c 	bl	80027a8 <get_camera_position>
}
 8002790:	bf00      	nop
 8002792:	3708      	adds	r7, #8
 8002794:	46bd      	mov	sp, r7
 8002796:	bd80      	pop	{r7, pc}
 8002798:	200002b8 	.word	0x200002b8
 800279c:	200002ac 	.word	0x200002ac
 80027a0:	20000010 	.word	0x20000010
 80027a4:	200002f0 	.word	0x200002f0

080027a8 <get_camera_position>:

void static get_camera_position(lsm303MagData *MagnetometerData,Offset_Scale_value_acc* acc_offset_scale, Offset_value_gyro* gyro_offset)
{
 80027a8:	b580      	push	{r7, lr}
 80027aa:	b084      	sub	sp, #16
 80027ac:	af00      	add	r7, sp, #0
 80027ae:	60f8      	str	r0, [r7, #12]
 80027b0:	60b9      	str	r1, [r7, #8]
 80027b2:	607a      	str	r2, [r7, #4]
		//GPIOA->BSRR = (1U<<8);		//Set PA8, for Oszi Measurement

		GY_511_update(MagnetometerData);
 80027b4:	68f8      	ldr	r0, [r7, #12]
 80027b6:	f7ff faeb 	bl	8001d90 <GY_511_update>

		/*Set NCS pin to low-level*/
		mpu9250_ncs_pin_reset();
 80027ba:	f000 f9f3 	bl	8002ba4 <mpu9250_ncs_pin_reset>
		/*Update accel values*/
		mpu9250_accel_gyro_update();
 80027be:	f000 fabd 	bl	8002d3c <mpu9250_accel_gyro_update>
		/*Set NCS pin to high-level*/
		mpu9250_ncs_pin_set();
 80027c2:	f000 f9df 	bl	8002b84 <mpu9250_ncs_pin_set>

		/*Get accel data*/
		acc_x =  mpu9250_get_acc_x()/acc_offset_scale->x_scale_acc - acc_offset_scale->x_offset_acc;
 80027c6:	f000 fb91 	bl	8002eec <mpu9250_get_acc_x>
 80027ca:	eef0 6a40 	vmov.f32	s13, s0
 80027ce:	68bb      	ldr	r3, [r7, #8]
 80027d0:	edd3 7a01 	vldr	s15, [r3, #4]
 80027d4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80027d8:	68bb      	ldr	r3, [r7, #8]
 80027da:	edd3 7a00 	vldr	s15, [r3]
 80027de:	ee77 7a67 	vsub.f32	s15, s14, s15
 80027e2:	4b9f      	ldr	r3, [pc, #636]	; (8002a60 <get_camera_position+0x2b8>)
 80027e4:	edc3 7a00 	vstr	s15, [r3]
		acc_y =  mpu9250_get_acc_y()/acc_offset_scale->y_scale_acc - acc_offset_scale->y_offset_acc;
 80027e8:	f000 fb8b 	bl	8002f02 <mpu9250_get_acc_y>
 80027ec:	eef0 6a40 	vmov.f32	s13, s0
 80027f0:	68bb      	ldr	r3, [r7, #8]
 80027f2:	edd3 7a03 	vldr	s15, [r3, #12]
 80027f6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80027fa:	68bb      	ldr	r3, [r7, #8]
 80027fc:	edd3 7a02 	vldr	s15, [r3, #8]
 8002800:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002804:	4b97      	ldr	r3, [pc, #604]	; (8002a64 <get_camera_position+0x2bc>)
 8002806:	edc3 7a00 	vstr	s15, [r3]
		acc_z =  -mpu9250_get_acc_z()/acc_offset_scale->z_scale_acc - acc_offset_scale->z_offset_acc;
 800280a:	f000 fb85 	bl	8002f18 <mpu9250_get_acc_z>
 800280e:	eef0 7a40 	vmov.f32	s15, s0
 8002812:	eef1 6a67 	vneg.f32	s13, s15
 8002816:	68bb      	ldr	r3, [r7, #8]
 8002818:	edd3 7a05 	vldr	s15, [r3, #20]
 800281c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8002820:	68bb      	ldr	r3, [r7, #8]
 8002822:	edd3 7a04 	vldr	s15, [r3, #16]
 8002826:	ee77 7a67 	vsub.f32	s15, s14, s15
 800282a:	4b8f      	ldr	r3, [pc, #572]	; (8002a68 <get_camera_position+0x2c0>)
 800282c:	edc3 7a00 	vstr	s15, [r3]

		/*Get accel data*/
		gyro_x =  mpu9250_get_gyro_x()-gyro_offset->x_offset_gyro;
 8002830:	f000 fbfe 	bl	8003030 <mpu9250_get_gyro_x>
 8002834:	eeb0 7a40 	vmov.f32	s14, s0
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	edd3 7a00 	vldr	s15, [r3]
 800283e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002842:	4b8a      	ldr	r3, [pc, #552]	; (8002a6c <get_camera_position+0x2c4>)
 8002844:	edc3 7a00 	vstr	s15, [r3]
		gyro_y =  mpu9250_get_gyro_y()-gyro_offset->y_offset_gyro;
 8002848:	f000 fbfd 	bl	8003046 <mpu9250_get_gyro_y>
 800284c:	eeb0 7a40 	vmov.f32	s14, s0
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	edd3 7a01 	vldr	s15, [r3, #4]
 8002856:	ee77 7a67 	vsub.f32	s15, s14, s15
 800285a:	4b85      	ldr	r3, [pc, #532]	; (8002a70 <get_camera_position+0x2c8>)
 800285c:	edc3 7a00 	vstr	s15, [r3]
		gyro_z =  mpu9250_get_gyro_z()-gyro_offset->z_offset_gyro;
 8002860:	f000 fbfc 	bl	800305c <mpu9250_get_gyro_z>
 8002864:	eeb0 7a40 	vmov.f32	s14, s0
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	edd3 7a02 	vldr	s15, [r3, #8]
 800286e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002872:	4b80      	ldr	r3, [pc, #512]	; (8002a74 <get_camera_position+0x2cc>)
 8002874:	edc3 7a00 	vstr	s15, [r3]
		gyro_z_messung = gyro_z * 180/M_PI;
 8002878:	4b7e      	ldr	r3, [pc, #504]	; (8002a74 <get_camera_position+0x2cc>)
 800287a:	edd3 7a00 	vldr	s15, [r3]
 800287e:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 8002a78 <get_camera_position+0x2d0>
 8002882:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002886:	ee17 0a90 	vmov	r0, s15
 800288a:	f7fd fe65 	bl	8000558 <__aeabi_f2d>
 800288e:	a370      	add	r3, pc, #448	; (adr r3, 8002a50 <get_camera_position+0x2a8>)
 8002890:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002894:	f7fd ffe2 	bl	800085c <__aeabi_ddiv>
 8002898:	4602      	mov	r2, r0
 800289a:	460b      	mov	r3, r1
 800289c:	4610      	mov	r0, r2
 800289e:	4619      	mov	r1, r3
 80028a0:	f7fe f9aa 	bl	8000bf8 <__aeabi_d2f>
 80028a4:	4603      	mov	r3, r0
 80028a6:	4a75      	ldr	r2, [pc, #468]	; (8002a7c <get_camera_position+0x2d4>)
 80028a8:	6013      	str	r3, [r2, #0]
//				Start_Conditions.yaw_r = atanf(MagnetometerData->x/MagnetometerData->y);
//			}
//
//		}

		EKF_Predict(&Start_Conditions, gyro_x, gyro_y, gyro_z, delta_t_gyro);
 80028aa:	4b70      	ldr	r3, [pc, #448]	; (8002a6c <get_camera_position+0x2c4>)
 80028ac:	edd3 7a00 	vldr	s15, [r3]
 80028b0:	4b6f      	ldr	r3, [pc, #444]	; (8002a70 <get_camera_position+0x2c8>)
 80028b2:	ed93 7a00 	vldr	s14, [r3]
 80028b6:	4b6f      	ldr	r3, [pc, #444]	; (8002a74 <get_camera_position+0x2cc>)
 80028b8:	edd3 6a00 	vldr	s13, [r3]
 80028bc:	4b70      	ldr	r3, [pc, #448]	; (8002a80 <get_camera_position+0x2d8>)
 80028be:	ed93 6a00 	vldr	s12, [r3]
 80028c2:	eef0 1a46 	vmov.f32	s3, s12
 80028c6:	eeb0 1a66 	vmov.f32	s2, s13
 80028ca:	eef0 0a47 	vmov.f32	s1, s14
 80028ce:	eeb0 0a67 	vmov.f32	s0, s15
 80028d2:	486c      	ldr	r0, [pc, #432]	; (8002a84 <get_camera_position+0x2dc>)
 80028d4:	f7fe fa53 	bl	8000d7e <EKF_Predict>
		roll_angle_pr	= Start_Conditions.roll_r 	*180/M_PI;
 80028d8:	4b6a      	ldr	r3, [pc, #424]	; (8002a84 <get_camera_position+0x2dc>)
 80028da:	edd3 7a00 	vldr	s15, [r3]
 80028de:	ed9f 7a66 	vldr	s14, [pc, #408]	; 8002a78 <get_camera_position+0x2d0>
 80028e2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80028e6:	ee17 0a90 	vmov	r0, s15
 80028ea:	f7fd fe35 	bl	8000558 <__aeabi_f2d>
 80028ee:	a358      	add	r3, pc, #352	; (adr r3, 8002a50 <get_camera_position+0x2a8>)
 80028f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028f4:	f7fd ffb2 	bl	800085c <__aeabi_ddiv>
 80028f8:	4602      	mov	r2, r0
 80028fa:	460b      	mov	r3, r1
 80028fc:	4610      	mov	r0, r2
 80028fe:	4619      	mov	r1, r3
 8002900:	f7fe f97a 	bl	8000bf8 <__aeabi_d2f>
 8002904:	4603      	mov	r3, r0
 8002906:	4a60      	ldr	r2, [pc, #384]	; (8002a88 <get_camera_position+0x2e0>)
 8002908:	6013      	str	r3, [r2, #0]
		pitch_angle_pr	= Start_Conditions.pitch_r 	*180/M_PI;
 800290a:	4b5e      	ldr	r3, [pc, #376]	; (8002a84 <get_camera_position+0x2dc>)
 800290c:	edd3 7a01 	vldr	s15, [r3, #4]
 8002910:	ed9f 7a59 	vldr	s14, [pc, #356]	; 8002a78 <get_camera_position+0x2d0>
 8002914:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002918:	ee17 0a90 	vmov	r0, s15
 800291c:	f7fd fe1c 	bl	8000558 <__aeabi_f2d>
 8002920:	a34b      	add	r3, pc, #300	; (adr r3, 8002a50 <get_camera_position+0x2a8>)
 8002922:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002926:	f7fd ff99 	bl	800085c <__aeabi_ddiv>
 800292a:	4602      	mov	r2, r0
 800292c:	460b      	mov	r3, r1
 800292e:	4610      	mov	r0, r2
 8002930:	4619      	mov	r1, r3
 8002932:	f7fe f961 	bl	8000bf8 <__aeabi_d2f>
 8002936:	4603      	mov	r3, r0
 8002938:	4a54      	ldr	r2, [pc, #336]	; (8002a8c <get_camera_position+0x2e4>)
 800293a:	6013      	str	r3, [r2, #0]
		yaw_angle_pr	= Start_Conditions.yaw_r 	*180/M_PI;
 800293c:	4b51      	ldr	r3, [pc, #324]	; (8002a84 <get_camera_position+0x2dc>)
 800293e:	edd3 7a02 	vldr	s15, [r3, #8]
 8002942:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 8002a78 <get_camera_position+0x2d0>
 8002946:	ee67 7a87 	vmul.f32	s15, s15, s14
 800294a:	ee17 0a90 	vmov	r0, s15
 800294e:	f7fd fe03 	bl	8000558 <__aeabi_f2d>
 8002952:	a33f      	add	r3, pc, #252	; (adr r3, 8002a50 <get_camera_position+0x2a8>)
 8002954:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002958:	f7fd ff80 	bl	800085c <__aeabi_ddiv>
 800295c:	4602      	mov	r2, r0
 800295e:	460b      	mov	r3, r1
 8002960:	4610      	mov	r0, r2
 8002962:	4619      	mov	r1, r3
 8002964:	f7fe f948 	bl	8000bf8 <__aeabi_d2f>
 8002968:	4603      	mov	r3, r0
 800296a:	4a49      	ldr	r2, [pc, #292]	; (8002a90 <get_camera_position+0x2e8>)
 800296c:	6013      	str	r3, [r2, #0]
//		after = SysTick->VAL;
//		time_taken = (before - after)*0.0000000625;

		if (ii==10)
 800296e:	4b49      	ldr	r3, [pc, #292]	; (8002a94 <get_camera_position+0x2ec>)
 8002970:	881b      	ldrh	r3, [r3, #0]
 8002972:	2b0a      	cmp	r3, #10
 8002974:	d160      	bne.n	8002a38 <get_camera_position+0x290>
		{

//			before = SysTick->VAL;
//			GY_511_update(MagnetometerData);
			EKF_Update(&Start_Conditions, acc_x, acc_y, acc_z);
 8002976:	4b3a      	ldr	r3, [pc, #232]	; (8002a60 <get_camera_position+0x2b8>)
 8002978:	edd3 7a00 	vldr	s15, [r3]
 800297c:	4b39      	ldr	r3, [pc, #228]	; (8002a64 <get_camera_position+0x2bc>)
 800297e:	ed93 7a00 	vldr	s14, [r3]
 8002982:	4b39      	ldr	r3, [pc, #228]	; (8002a68 <get_camera_position+0x2c0>)
 8002984:	edd3 6a00 	vldr	s13, [r3]
 8002988:	eeb0 1a66 	vmov.f32	s2, s13
 800298c:	eef0 0a47 	vmov.f32	s1, s14
 8002990:	eeb0 0a67 	vmov.f32	s0, s15
 8002994:	483b      	ldr	r0, [pc, #236]	; (8002a84 <get_camera_position+0x2dc>)
 8002996:	f7fe fba9 	bl	80010ec <EKF_Update>

			after = SysTick->VAL;
 800299a:	4b3f      	ldr	r3, [pc, #252]	; (8002a98 <get_camera_position+0x2f0>)
 800299c:	689b      	ldr	r3, [r3, #8]
 800299e:	4a3f      	ldr	r2, [pc, #252]	; (8002a9c <get_camera_position+0x2f4>)
 80029a0:	6013      	str	r3, [r2, #0]
			time_taken = (before - after)*0.0000000625; // f = 16MhZ => t = 62.5ns = 0.0000000625s
 80029a2:	4b3f      	ldr	r3, [pc, #252]	; (8002aa0 <get_camera_position+0x2f8>)
 80029a4:	681a      	ldr	r2, [r3, #0]
 80029a6:	4b3d      	ldr	r3, [pc, #244]	; (8002a9c <get_camera_position+0x2f4>)
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	1ad3      	subs	r3, r2, r3
 80029ac:	4618      	mov	r0, r3
 80029ae:	f7fd fdb1 	bl	8000514 <__aeabi_ui2d>
 80029b2:	a329      	add	r3, pc, #164	; (adr r3, 8002a58 <get_camera_position+0x2b0>)
 80029b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80029b8:	f7fd fe26 	bl	8000608 <__aeabi_dmul>
 80029bc:	4602      	mov	r2, r0
 80029be:	460b      	mov	r3, r1
 80029c0:	4610      	mov	r0, r2
 80029c2:	4619      	mov	r1, r3
 80029c4:	f7fe f918 	bl	8000bf8 <__aeabi_d2f>
 80029c8:	4603      	mov	r3, r0
 80029ca:	4a36      	ldr	r2, [pc, #216]	; (8002aa4 <get_camera_position+0x2fc>)
 80029cc:	6013      	str	r3, [r2, #0]
			roll_angle_up	= Start_Conditions.roll_r 	*180/M_PI;
 80029ce:	4b2d      	ldr	r3, [pc, #180]	; (8002a84 <get_camera_position+0x2dc>)
 80029d0:	edd3 7a00 	vldr	s15, [r3]
 80029d4:	ed9f 7a28 	vldr	s14, [pc, #160]	; 8002a78 <get_camera_position+0x2d0>
 80029d8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80029dc:	ee17 0a90 	vmov	r0, s15
 80029e0:	f7fd fdba 	bl	8000558 <__aeabi_f2d>
 80029e4:	a31a      	add	r3, pc, #104	; (adr r3, 8002a50 <get_camera_position+0x2a8>)
 80029e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80029ea:	f7fd ff37 	bl	800085c <__aeabi_ddiv>
 80029ee:	4602      	mov	r2, r0
 80029f0:	460b      	mov	r3, r1
 80029f2:	4610      	mov	r0, r2
 80029f4:	4619      	mov	r1, r3
 80029f6:	f7fe f8ff 	bl	8000bf8 <__aeabi_d2f>
 80029fa:	4603      	mov	r3, r0
 80029fc:	4a2a      	ldr	r2, [pc, #168]	; (8002aa8 <get_camera_position+0x300>)
 80029fe:	6013      	str	r3, [r2, #0]
			pitch_angle_up	= Start_Conditions.pitch_r 	*180/M_PI;
 8002a00:	4b20      	ldr	r3, [pc, #128]	; (8002a84 <get_camera_position+0x2dc>)
 8002a02:	edd3 7a01 	vldr	s15, [r3, #4]
 8002a06:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8002a78 <get_camera_position+0x2d0>
 8002a0a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002a0e:	ee17 0a90 	vmov	r0, s15
 8002a12:	f7fd fda1 	bl	8000558 <__aeabi_f2d>
 8002a16:	a30e      	add	r3, pc, #56	; (adr r3, 8002a50 <get_camera_position+0x2a8>)
 8002a18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a1c:	f7fd ff1e 	bl	800085c <__aeabi_ddiv>
 8002a20:	4602      	mov	r2, r0
 8002a22:	460b      	mov	r3, r1
 8002a24:	4610      	mov	r0, r2
 8002a26:	4619      	mov	r1, r3
 8002a28:	f7fe f8e6 	bl	8000bf8 <__aeabi_d2f>
 8002a2c:	4603      	mov	r3, r0
 8002a2e:	4a1f      	ldr	r2, [pc, #124]	; (8002aac <get_camera_position+0x304>)
 8002a30:	6013      	str	r3, [r2, #0]
//			yaw_angle_up	= YAW_Complementary(MagnetometerData,&Start_Conditions, 0.4);
			ii=0;
 8002a32:	4b18      	ldr	r3, [pc, #96]	; (8002a94 <get_camera_position+0x2ec>)
 8002a34:	2200      	movs	r2, #0
 8002a36:	801a      	strh	r2, [r3, #0]
		}
		ii++;
 8002a38:	4b16      	ldr	r3, [pc, #88]	; (8002a94 <get_camera_position+0x2ec>)
 8002a3a:	881b      	ldrh	r3, [r3, #0]
 8002a3c:	3301      	adds	r3, #1
 8002a3e:	b29a      	uxth	r2, r3
 8002a40:	4b14      	ldr	r3, [pc, #80]	; (8002a94 <get_camera_position+0x2ec>)
 8002a42:	801a      	strh	r2, [r3, #0]
		//GPIOA->BSRR = (1U<<24);		//Reset PA8,  for Oszi Measurement

}
 8002a44:	bf00      	nop
 8002a46:	3710      	adds	r7, #16
 8002a48:	46bd      	mov	sp, r7
 8002a4a:	bd80      	pop	{r7, pc}
 8002a4c:	f3af 8000 	nop.w
 8002a50:	54442d18 	.word	0x54442d18
 8002a54:	400921fb 	.word	0x400921fb
 8002a58:	a0b5ed8d 	.word	0xa0b5ed8d
 8002a5c:	3e70c6f7 	.word	0x3e70c6f7
 8002a60:	2000026c 	.word	0x2000026c
 8002a64:	20000270 	.word	0x20000270
 8002a68:	20000274 	.word	0x20000274
 8002a6c:	20000278 	.word	0x20000278
 8002a70:	2000027c 	.word	0x2000027c
 8002a74:	20000280 	.word	0x20000280
 8002a78:	43340000 	.word	0x43340000
 8002a7c:	20000284 	.word	0x20000284
 8002a80:	200002bc 	.word	0x200002bc
 8002a84:	200002c0 	.word	0x200002c0
 8002a88:	200002a0 	.word	0x200002a0
 8002a8c:	200002a4 	.word	0x200002a4
 8002a90:	200002a8 	.word	0x200002a8
 8002a94:	20000294 	.word	0x20000294
 8002a98:	e000e010 	.word	0xe000e010
 8002a9c:	2000028c 	.word	0x2000028c
 8002aa0:	20000288 	.word	0x20000288
 8002aa4:	20000290 	.word	0x20000290
 8002aa8:	20000298 	.word	0x20000298
 8002aac:	2000029c 	.word	0x2000029c

08002ab0 <set_gyro_offset>:
		acc_z =  mpu9250_get_acc_z();

}

void static set_gyro_offset(uint16_t counter, uint16_t cycle_times)
{
 8002ab0:	b580      	push	{r7, lr}
 8002ab2:	b082      	sub	sp, #8
 8002ab4:	af00      	add	r7, sp, #0
 8002ab6:	4603      	mov	r3, r0
 8002ab8:	460a      	mov	r2, r1
 8002aba:	80fb      	strh	r3, [r7, #6]
 8002abc:	4613      	mov	r3, r2
 8002abe:	80bb      	strh	r3, [r7, #4]
		/*Set NCS pin to low-level*/
		mpu9250_ncs_pin_reset();
 8002ac0:	f000 f870 	bl	8002ba4 <mpu9250_ncs_pin_reset>
		/*Update accel values*/
		mpu9250_accel_gyro_update();
 8002ac4:	f000 f93a 	bl	8002d3c <mpu9250_accel_gyro_update>
		/*Set NCS pin to high-level*/
		mpu9250_ncs_pin_set();
 8002ac8:	f000 f85c 	bl	8002b84 <mpu9250_ncs_pin_set>
		counter_pb++;
 8002acc:	4b19      	ldr	r3, [pc, #100]	; (8002b34 <set_gyro_offset+0x84>)
 8002ace:	881b      	ldrh	r3, [r3, #0]
 8002ad0:	3301      	adds	r3, #1
 8002ad2:	b29a      	uxth	r2, r3
 8002ad4:	4b17      	ldr	r3, [pc, #92]	; (8002b34 <set_gyro_offset+0x84>)
 8002ad6:	801a      	strh	r2, [r3, #0]
		/*Get accel data*/
		gyro_x =  mpu9250_get_gyro_x();
 8002ad8:	f000 faaa 	bl	8003030 <mpu9250_get_gyro_x>
 8002adc:	eef0 7a40 	vmov.f32	s15, s0
 8002ae0:	4b15      	ldr	r3, [pc, #84]	; (8002b38 <set_gyro_offset+0x88>)
 8002ae2:	edc3 7a00 	vstr	s15, [r3]
		gyro_y =  mpu9250_get_gyro_y();
 8002ae6:	f000 faae 	bl	8003046 <mpu9250_get_gyro_y>
 8002aea:	eef0 7a40 	vmov.f32	s15, s0
 8002aee:	4b13      	ldr	r3, [pc, #76]	; (8002b3c <set_gyro_offset+0x8c>)
 8002af0:	edc3 7a00 	vstr	s15, [r3]
		gyro_z =  mpu9250_get_gyro_z();
 8002af4:	f000 fab2 	bl	800305c <mpu9250_get_gyro_z>
 8002af8:	eef0 7a40 	vmov.f32	s15, s0
 8002afc:	4b10      	ldr	r3, [pc, #64]	; (8002b40 <set_gyro_offset+0x90>)
 8002afe:	edc3 7a00 	vstr	s15, [r3]
		Offset_Calibration_gyro(&measurements_gyro_mpu9250, gyro_x, gyro_y, gyro_z, counter, cycle_times);
 8002b02:	4b0d      	ldr	r3, [pc, #52]	; (8002b38 <set_gyro_offset+0x88>)
 8002b04:	edd3 7a00 	vldr	s15, [r3]
 8002b08:	4b0c      	ldr	r3, [pc, #48]	; (8002b3c <set_gyro_offset+0x8c>)
 8002b0a:	ed93 7a00 	vldr	s14, [r3]
 8002b0e:	4b0c      	ldr	r3, [pc, #48]	; (8002b40 <set_gyro_offset+0x90>)
 8002b10:	edd3 6a00 	vldr	s13, [r3]
 8002b14:	88ba      	ldrh	r2, [r7, #4]
 8002b16:	88fb      	ldrh	r3, [r7, #6]
 8002b18:	4619      	mov	r1, r3
 8002b1a:	eeb0 1a66 	vmov.f32	s2, s13
 8002b1e:	eef0 0a47 	vmov.f32	s1, s14
 8002b22:	eeb0 0a67 	vmov.f32	s0, s15
 8002b26:	4807      	ldr	r0, [pc, #28]	; (8002b44 <set_gyro_offset+0x94>)
 8002b28:	f7ff fa1e 	bl	8001f68 <Offset_Calibration_gyro>
}
 8002b2c:	bf00      	nop
 8002b2e:	3708      	adds	r7, #8
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bd80      	pop	{r7, pc}
 8002b34:	200002ba 	.word	0x200002ba
 8002b38:	20000278 	.word	0x20000278
 8002b3c:	2000027c 	.word	0x2000027c
 8002b40:	20000280 	.word	0x20000280
 8002b44:	200002ac 	.word	0x200002ac

08002b48 <mpu9250_ncs_pin_config>:




void mpu9250_ncs_pin_config(void)
{
 8002b48:	b480      	push	{r7}
 8002b4a:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;
 8002b4c:	4b0b      	ldr	r3, [pc, #44]	; (8002b7c <mpu9250_ncs_pin_config+0x34>)
 8002b4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b50:	4a0a      	ldr	r2, [pc, #40]	; (8002b7c <mpu9250_ncs_pin_config+0x34>)
 8002b52:	f043 0301 	orr.w	r3, r3, #1
 8002b56:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set PA0 as output pin*/
	GPIOA->MODER |= (1U<<0);
 8002b58:	4b09      	ldr	r3, [pc, #36]	; (8002b80 <mpu9250_ncs_pin_config+0x38>)
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	4a08      	ldr	r2, [pc, #32]	; (8002b80 <mpu9250_ncs_pin_config+0x38>)
 8002b5e:	f043 0301 	orr.w	r3, r3, #1
 8002b62:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U<<1);
 8002b64:	4b06      	ldr	r3, [pc, #24]	; (8002b80 <mpu9250_ncs_pin_config+0x38>)
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	4a05      	ldr	r2, [pc, #20]	; (8002b80 <mpu9250_ncs_pin_config+0x38>)
 8002b6a:	f023 0302 	bic.w	r3, r3, #2
 8002b6e:	6013      	str	r3, [r2, #0]
}
 8002b70:	bf00      	nop
 8002b72:	46bd      	mov	sp, r7
 8002b74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b78:	4770      	bx	lr
 8002b7a:	bf00      	nop
 8002b7c:	40023800 	.word	0x40023800
 8002b80:	40020000 	.word	0x40020000

08002b84 <mpu9250_ncs_pin_set>:

void mpu9250_ncs_pin_set(void)
{
 8002b84:	b480      	push	{r7}
 8002b86:	af00      	add	r7, sp, #0
	GPIOA->ODR |=(1U<<0);
 8002b88:	4b05      	ldr	r3, [pc, #20]	; (8002ba0 <mpu9250_ncs_pin_set+0x1c>)
 8002b8a:	695b      	ldr	r3, [r3, #20]
 8002b8c:	4a04      	ldr	r2, [pc, #16]	; (8002ba0 <mpu9250_ncs_pin_set+0x1c>)
 8002b8e:	f043 0301 	orr.w	r3, r3, #1
 8002b92:	6153      	str	r3, [r2, #20]
}
 8002b94:	bf00      	nop
 8002b96:	46bd      	mov	sp, r7
 8002b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b9c:	4770      	bx	lr
 8002b9e:	bf00      	nop
 8002ba0:	40020000 	.word	0x40020000

08002ba4 <mpu9250_ncs_pin_reset>:

void mpu9250_ncs_pin_reset(void)
{
 8002ba4:	b480      	push	{r7}
 8002ba6:	af00      	add	r7, sp, #0
	GPIOA->ODR &= ~(1U<<0);
 8002ba8:	4b05      	ldr	r3, [pc, #20]	; (8002bc0 <mpu9250_ncs_pin_reset+0x1c>)
 8002baa:	695b      	ldr	r3, [r3, #20]
 8002bac:	4a04      	ldr	r2, [pc, #16]	; (8002bc0 <mpu9250_ncs_pin_reset+0x1c>)
 8002bae:	f023 0301 	bic.w	r3, r3, #1
 8002bb2:	6153      	str	r3, [r2, #20]
}
 8002bb4:	bf00      	nop
 8002bb6:	46bd      	mov	sp, r7
 8002bb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bbc:	4770      	bx	lr
 8002bbe:	bf00      	nop
 8002bc0:	40020000 	.word	0x40020000

08002bc4 <mpu9250_accel_config>:
}


/******************ACCEL**********************/
void mpu9250_accel_config(uint8_t mode)
{
 8002bc4:	b580      	push	{r7, lr}
 8002bc6:	b082      	sub	sp, #8
 8002bc8:	af00      	add	r7, sp, #0
 8002bca:	4603      	mov	r3, r0
 8002bcc:	71fb      	strb	r3, [r7, #7]

	switch(mode)
 8002bce:	79fb      	ldrb	r3, [r7, #7]
 8002bd0:	2b18      	cmp	r3, #24
 8002bd2:	d852      	bhi.n	8002c7a <mpu9250_accel_config+0xb6>
 8002bd4:	a201      	add	r2, pc, #4	; (adr r2, 8002bdc <mpu9250_accel_config+0x18>)
 8002bd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002bda:	bf00      	nop
 8002bdc:	08002c41 	.word	0x08002c41
 8002be0:	08002c7b 	.word	0x08002c7b
 8002be4:	08002c7b 	.word	0x08002c7b
 8002be8:	08002c7b 	.word	0x08002c7b
 8002bec:	08002c7b 	.word	0x08002c7b
 8002bf0:	08002c7b 	.word	0x08002c7b
 8002bf4:	08002c7b 	.word	0x08002c7b
 8002bf8:	08002c7b 	.word	0x08002c7b
 8002bfc:	08002c51 	.word	0x08002c51
 8002c00:	08002c7b 	.word	0x08002c7b
 8002c04:	08002c7b 	.word	0x08002c7b
 8002c08:	08002c7b 	.word	0x08002c7b
 8002c0c:	08002c7b 	.word	0x08002c7b
 8002c10:	08002c7b 	.word	0x08002c7b
 8002c14:	08002c7b 	.word	0x08002c7b
 8002c18:	08002c7b 	.word	0x08002c7b
 8002c1c:	08002c5f 	.word	0x08002c5f
 8002c20:	08002c7b 	.word	0x08002c7b
 8002c24:	08002c7b 	.word	0x08002c7b
 8002c28:	08002c7b 	.word	0x08002c7b
 8002c2c:	08002c7b 	.word	0x08002c7b
 8002c30:	08002c7b 	.word	0x08002c7b
 8002c34:	08002c7b 	.word	0x08002c7b
 8002c38:	08002c7b 	.word	0x08002c7b
 8002c3c:	08002c6d 	.word	0x08002c6d
	{
		case ACC_FULL_SCALE_2_G:
			g_accel_range = 2.0;
 8002c40:	4938      	ldr	r1, [pc, #224]	; (8002d24 <mpu9250_accel_config+0x160>)
 8002c42:	f04f 0200 	mov.w	r2, #0
 8002c46:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002c4a:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002c4e:	e015      	b.n	8002c7c <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_4_G:
			g_accel_range = 4.0;
 8002c50:	4934      	ldr	r1, [pc, #208]	; (8002d24 <mpu9250_accel_config+0x160>)
 8002c52:	f04f 0200 	mov.w	r2, #0
 8002c56:	4b34      	ldr	r3, [pc, #208]	; (8002d28 <mpu9250_accel_config+0x164>)
 8002c58:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002c5c:	e00e      	b.n	8002c7c <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_8_G:
			g_accel_range = 8.0;
 8002c5e:	4931      	ldr	r1, [pc, #196]	; (8002d24 <mpu9250_accel_config+0x160>)
 8002c60:	f04f 0200 	mov.w	r2, #0
 8002c64:	4b31      	ldr	r3, [pc, #196]	; (8002d2c <mpu9250_accel_config+0x168>)
 8002c66:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002c6a:	e007      	b.n	8002c7c <mpu9250_accel_config+0xb8>

		case ACC_FULL_SCALE_16_G:
			g_accel_range = 16.0;
 8002c6c:	492d      	ldr	r1, [pc, #180]	; (8002d24 <mpu9250_accel_config+0x160>)
 8002c6e:	f04f 0200 	mov.w	r2, #0
 8002c72:	4b2f      	ldr	r3, [pc, #188]	; (8002d30 <mpu9250_accel_config+0x16c>)
 8002c74:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002c78:	e000      	b.n	8002c7c <mpu9250_accel_config+0xb8>
		default:
			break;
 8002c7a:	bf00      	nop
	}
	/************************************/
		//Ab hier eingefügter CODE

		/*H_RESET: Reset the PWR_MGMT_1 Register */
		spi_data_buff[0] = 0x6B;
 8002c7c:	4b2d      	ldr	r3, [pc, #180]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002c7e:	226b      	movs	r2, #107	; 0x6b
 8002c80:	701a      	strb	r2, [r3, #0]
		spi_data_buff[1] = (1U<<7);
 8002c82:	4b2c      	ldr	r3, [pc, #176]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002c84:	2280      	movs	r2, #128	; 0x80
 8002c86:	705a      	strb	r2, [r3, #1]

		dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 8002c88:	4b2a      	ldr	r3, [pc, #168]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002c8a:	2102      	movs	r1, #2
 8002c8c:	4618      	mov	r0, r3
 8002c8e:	f000 fbf1 	bl	8003474 <dma2_stream3_spi_transfer>

		/*Wait for transfer completion*/
		while(!g_tx_cmplt){}
 8002c92:	bf00      	nop
 8002c94:	4b28      	ldr	r3, [pc, #160]	; (8002d38 <mpu9250_accel_config+0x174>)
 8002c96:	781b      	ldrb	r3, [r3, #0]
 8002c98:	2b00      	cmp	r3, #0
 8002c9a:	d0fb      	beq.n	8002c94 <mpu9250_accel_config+0xd0>

		/*Reset flag*/
		g_tx_cmplt = 0;
 8002c9c:	4b26      	ldr	r3, [pc, #152]	; (8002d38 <mpu9250_accel_config+0x174>)
 8002c9e:	2200      	movs	r2, #0
 8002ca0:	701a      	strb	r2, [r3, #0]

		/*Disable Sleep Mode */
		spi_data_buff[0] = 0x6B;
 8002ca2:	4b24      	ldr	r3, [pc, #144]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002ca4:	226b      	movs	r2, #107	; 0x6b
 8002ca6:	701a      	strb	r2, [r3, #0]
		spi_data_buff[1] &= ~(1U<<6);
 8002ca8:	4b22      	ldr	r3, [pc, #136]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002caa:	785b      	ldrb	r3, [r3, #1]
 8002cac:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002cb0:	b2da      	uxtb	r2, r3
 8002cb2:	4b20      	ldr	r3, [pc, #128]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002cb4:	705a      	strb	r2, [r3, #1]

		dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 8002cb6:	4b1f      	ldr	r3, [pc, #124]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002cb8:	2102      	movs	r1, #2
 8002cba:	4618      	mov	r0, r3
 8002cbc:	f000 fbda 	bl	8003474 <dma2_stream3_spi_transfer>

		/*Wait for transfer completion*/
		while(!g_tx_cmplt){}
 8002cc0:	bf00      	nop
 8002cc2:	4b1d      	ldr	r3, [pc, #116]	; (8002d38 <mpu9250_accel_config+0x174>)
 8002cc4:	781b      	ldrb	r3, [r3, #0]
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d0fb      	beq.n	8002cc2 <mpu9250_accel_config+0xfe>

		/*Reset flag*/
		g_tx_cmplt = 0;
 8002cca:	4b1b      	ldr	r3, [pc, #108]	; (8002d38 <mpu9250_accel_config+0x174>)
 8002ccc:	2200      	movs	r2, #0
 8002cce:	701a      	strb	r2, [r3, #0]
	/************************************/

	/*Set to SPI mode only*/
	spi_data_buff[0] = MPU9250_ADDR_USER_CTRL;
 8002cd0:	4b18      	ldr	r3, [pc, #96]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002cd2:	226a      	movs	r2, #106	; 0x6a
 8002cd4:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = USER_CTRL_I2C_IF_DIS;
 8002cd6:	4b17      	ldr	r3, [pc, #92]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002cd8:	2210      	movs	r2, #16
 8002cda:	705a      	strb	r2, [r3, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 8002cdc:	4b15      	ldr	r3, [pc, #84]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002cde:	2102      	movs	r1, #2
 8002ce0:	4618      	mov	r0, r3
 8002ce2:	f000 fbc7 	bl	8003474 <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 8002ce6:	bf00      	nop
 8002ce8:	4b13      	ldr	r3, [pc, #76]	; (8002d38 <mpu9250_accel_config+0x174>)
 8002cea:	781b      	ldrb	r3, [r3, #0]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d0fb      	beq.n	8002ce8 <mpu9250_accel_config+0x124>

	/*Reset flag*/
	g_tx_cmplt = 0;
 8002cf0:	4b11      	ldr	r3, [pc, #68]	; (8002d38 <mpu9250_accel_config+0x174>)
 8002cf2:	2200      	movs	r2, #0
 8002cf4:	701a      	strb	r2, [r3, #0]


	/*Configure the ACCEL Range*/
	spi_data_buff[0] = MPU9250_ADDR_ACCELCONFIG;
 8002cf6:	4b0f      	ldr	r3, [pc, #60]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002cf8:	221c      	movs	r2, #28
 8002cfa:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = mode;
 8002cfc:	4a0d      	ldr	r2, [pc, #52]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002cfe:	79fb      	ldrb	r3, [r7, #7]
 8002d00:	7053      	strb	r3, [r2, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 8002d02:	4b0c      	ldr	r3, [pc, #48]	; (8002d34 <mpu9250_accel_config+0x170>)
 8002d04:	2102      	movs	r1, #2
 8002d06:	4618      	mov	r0, r3
 8002d08:	f000 fbb4 	bl	8003474 <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 8002d0c:	bf00      	nop
 8002d0e:	4b0a      	ldr	r3, [pc, #40]	; (8002d38 <mpu9250_accel_config+0x174>)
 8002d10:	781b      	ldrb	r3, [r3, #0]
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d0fb      	beq.n	8002d0e <mpu9250_accel_config+0x14a>

	/*Reset flag*/
	g_tx_cmplt = 0;
 8002d16:	4b08      	ldr	r3, [pc, #32]	; (8002d38 <mpu9250_accel_config+0x174>)
 8002d18:	2200      	movs	r2, #0
 8002d1a:	701a      	strb	r2, [r3, #0]
}
 8002d1c:	bf00      	nop
 8002d1e:	3708      	adds	r7, #8
 8002d20:	46bd      	mov	sp, r7
 8002d22:	bd80      	pop	{r7, pc}
 8002d24:	20000338 	.word	0x20000338
 8002d28:	40100000 	.word	0x40100000
 8002d2c:	40200000 	.word	0x40200000
 8002d30:	40300000 	.word	0x40300000
 8002d34:	2000032c 	.word	0x2000032c
 8002d38:	2000032e 	.word	0x2000032e

08002d3c <mpu9250_accel_gyro_update>:

void mpu9250_accel_gyro_update(void)
{
 8002d3c:	b580      	push	{r7, lr}
 8002d3e:	af00      	add	r7, sp, #0
	dummy_buff[0] =  MPU9250_ACCEL_XOUT_H |READ_FLAG;
 8002d40:	4b0e      	ldr	r3, [pc, #56]	; (8002d7c <mpu9250_accel_gyro_update+0x40>)
 8002d42:	22bb      	movs	r2, #187	; 0xbb
 8002d44:	701a      	strb	r2, [r3, #0]

	dma2_stream3_spi_transfer((uint32_t) dummy_buff, (uint32_t)(MAX_TRANSFER_LEN + 1));
 8002d46:	4b0d      	ldr	r3, [pc, #52]	; (8002d7c <mpu9250_accel_gyro_update+0x40>)
 8002d48:	210f      	movs	r1, #15
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	f000 fb92 	bl	8003474 <dma2_stream3_spi_transfer>

	dma2_stream2_spi_receive((uint32_t)accel_gyro_buff,(uint32_t)(MAX_TRANSFER_LEN + 1));
 8002d50:	4b0b      	ldr	r3, [pc, #44]	; (8002d80 <mpu9250_accel_gyro_update+0x44>)
 8002d52:	210f      	movs	r1, #15
 8002d54:	4618      	mov	r0, r3
 8002d56:	f000 fbb1 	bl	80034bc <dma2_stream2_spi_receive>

	Array_len_accel = sizeof(accel_gyro_buff)/sizeof(uint8_t);
 8002d5a:	4b0a      	ldr	r3, [pc, #40]	; (8002d84 <mpu9250_accel_gyro_update+0x48>)
 8002d5c:	220f      	movs	r2, #15
 8002d5e:	701a      	strb	r2, [r3, #0]
	Array_len_dummy =  sizeof(dummy_buff)/sizeof(uint8_t);
 8002d60:	4b09      	ldr	r3, [pc, #36]	; (8002d88 <mpu9250_accel_gyro_update+0x4c>)
 8002d62:	220f      	movs	r2, #15
 8002d64:	701a      	strb	r2, [r3, #0]

	/*Wait for reception completion*/
	while(!g_rx_cmplt){}
 8002d66:	bf00      	nop
 8002d68:	4b08      	ldr	r3, [pc, #32]	; (8002d8c <mpu9250_accel_gyro_update+0x50>)
 8002d6a:	781b      	ldrb	r3, [r3, #0]
 8002d6c:	2b00      	cmp	r3, #0
 8002d6e:	d0fb      	beq.n	8002d68 <mpu9250_accel_gyro_update+0x2c>

	/*Reset flag*/
	g_rx_cmplt = 0;
 8002d70:	4b06      	ldr	r3, [pc, #24]	; (8002d8c <mpu9250_accel_gyro_update+0x50>)
 8002d72:	2200      	movs	r2, #0
 8002d74:	701a      	strb	r2, [r3, #0]
}
 8002d76:	bf00      	nop
 8002d78:	bd80      	pop	{r7, pc}
 8002d7a:	bf00      	nop
 8002d7c:	20000308 	.word	0x20000308
 8002d80:	20000318 	.word	0x20000318
 8002d84:	20000327 	.word	0x20000327
 8002d88:	20000328 	.word	0x20000328
 8002d8c:	2000032f 	.word	0x2000032f

08002d90 <mpu9250_accel_get>:

float mpu9250_accel_get(uint8_t high_idx, uint8_t low_idx)
{
 8002d90:	b580      	push	{r7, lr}
 8002d92:	b084      	sub	sp, #16
 8002d94:	af00      	add	r7, sp, #0
 8002d96:	4603      	mov	r3, r0
 8002d98:	460a      	mov	r2, r1
 8002d9a:	71fb      	strb	r3, [r7, #7]
 8002d9c:	4613      	mov	r3, r2
 8002d9e:	71bb      	strb	r3, [r7, #6]
	int16_t rslt;
	rslt  =  accel_gyro_buff[high_idx] << 8 | accel_gyro_buff[low_idx];
 8002da0:	79fb      	ldrb	r3, [r7, #7]
 8002da2:	4a23      	ldr	r2, [pc, #140]	; (8002e30 <mpu9250_accel_get+0xa0>)
 8002da4:	5cd3      	ldrb	r3, [r2, r3]
 8002da6:	021b      	lsls	r3, r3, #8
 8002da8:	b21a      	sxth	r2, r3
 8002daa:	79bb      	ldrb	r3, [r7, #6]
 8002dac:	4920      	ldr	r1, [pc, #128]	; (8002e30 <mpu9250_accel_get+0xa0>)
 8002dae:	5ccb      	ldrb	r3, [r1, r3]
 8002db0:	b21b      	sxth	r3, r3
 8002db2:	4313      	orrs	r3, r2
 8002db4:	81fb      	strh	r3, [r7, #14]

	if(rslt)
 8002db6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d029      	beq.n	8002e12 <mpu9250_accel_get+0x82>
	{
		return ((float)- rslt) * g_accel_range / (float)0x8000 *9.81f;
 8002dbe:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002dc2:	425b      	negs	r3, r3
 8002dc4:	ee07 3a90 	vmov	s15, r3
 8002dc8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002dcc:	ee17 0a90 	vmov	r0, s15
 8002dd0:	f7fd fbc2 	bl	8000558 <__aeabi_f2d>
 8002dd4:	4b17      	ldr	r3, [pc, #92]	; (8002e34 <mpu9250_accel_get+0xa4>)
 8002dd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dda:	f7fd fc15 	bl	8000608 <__aeabi_dmul>
 8002dde:	4602      	mov	r2, r0
 8002de0:	460b      	mov	r3, r1
 8002de2:	4610      	mov	r0, r2
 8002de4:	4619      	mov	r1, r3
 8002de6:	f04f 0200 	mov.w	r2, #0
 8002dea:	4b13      	ldr	r3, [pc, #76]	; (8002e38 <mpu9250_accel_get+0xa8>)
 8002dec:	f7fd fd36 	bl	800085c <__aeabi_ddiv>
 8002df0:	4602      	mov	r2, r0
 8002df2:	460b      	mov	r3, r1
 8002df4:	4610      	mov	r0, r2
 8002df6:	4619      	mov	r1, r3
 8002df8:	a30b      	add	r3, pc, #44	; (adr r3, 8002e28 <mpu9250_accel_get+0x98>)
 8002dfa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dfe:	f7fd fc03 	bl	8000608 <__aeabi_dmul>
 8002e02:	4602      	mov	r2, r0
 8002e04:	460b      	mov	r3, r1
 8002e06:	4610      	mov	r0, r2
 8002e08:	4619      	mov	r1, r3
 8002e0a:	f7fd fef5 	bl	8000bf8 <__aeabi_d2f>
 8002e0e:	4603      	mov	r3, r0
 8002e10:	e001      	b.n	8002e16 <mpu9250_accel_get+0x86>
	}
	else
	{
		return 0.0;
 8002e12:	f04f 0300 	mov.w	r3, #0
	}
}
 8002e16:	ee07 3a90 	vmov	s15, r3
 8002e1a:	eeb0 0a67 	vmov.f32	s0, s15
 8002e1e:	3710      	adds	r7, #16
 8002e20:	46bd      	mov	sp, r7
 8002e22:	bd80      	pop	{r7, pc}
 8002e24:	f3af 8000 	nop.w
 8002e28:	60000000 	.word	0x60000000
 8002e2c:	40239eb8 	.word	0x40239eb8
 8002e30:	20000318 	.word	0x20000318
 8002e34:	20000338 	.word	0x20000338
 8002e38:	40e00000 	.word	0x40e00000
 8002e3c:	00000000 	.word	0x00000000

08002e40 <mpu9250_gyro_get>:

float mpu9250_gyro_get(uint8_t high_idx, uint8_t low_idx)
{
 8002e40:	b580      	push	{r7, lr}
 8002e42:	b084      	sub	sp, #16
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	4603      	mov	r3, r0
 8002e48:	460a      	mov	r2, r1
 8002e4a:	71fb      	strb	r3, [r7, #7]
 8002e4c:	4613      	mov	r3, r2
 8002e4e:	71bb      	strb	r3, [r7, #6]
	int16_t rslt;
	rslt  =  accel_gyro_buff[high_idx] << 8 | accel_gyro_buff[low_idx];
 8002e50:	79fb      	ldrb	r3, [r7, #7]
 8002e52:	4a23      	ldr	r2, [pc, #140]	; (8002ee0 <mpu9250_gyro_get+0xa0>)
 8002e54:	5cd3      	ldrb	r3, [r2, r3]
 8002e56:	021b      	lsls	r3, r3, #8
 8002e58:	b21a      	sxth	r2, r3
 8002e5a:	79bb      	ldrb	r3, [r7, #6]
 8002e5c:	4920      	ldr	r1, [pc, #128]	; (8002ee0 <mpu9250_gyro_get+0xa0>)
 8002e5e:	5ccb      	ldrb	r3, [r1, r3]
 8002e60:	b21b      	sxth	r3, r3
 8002e62:	4313      	orrs	r3, r2
 8002e64:	81fb      	strh	r3, [r7, #14]

	if(rslt)
 8002e66:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d029      	beq.n	8002ec2 <mpu9250_gyro_get+0x82>
	{
		return ((float)- rslt) * g_gyro_range / (float)0x8000 *(M_PI/180);
 8002e6e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002e72:	425b      	negs	r3, r3
 8002e74:	ee07 3a90 	vmov	s15, r3
 8002e78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002e7c:	ee17 0a90 	vmov	r0, s15
 8002e80:	f7fd fb6a 	bl	8000558 <__aeabi_f2d>
 8002e84:	4b17      	ldr	r3, [pc, #92]	; (8002ee4 <mpu9250_gyro_get+0xa4>)
 8002e86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e8a:	f7fd fbbd 	bl	8000608 <__aeabi_dmul>
 8002e8e:	4602      	mov	r2, r0
 8002e90:	460b      	mov	r3, r1
 8002e92:	4610      	mov	r0, r2
 8002e94:	4619      	mov	r1, r3
 8002e96:	f04f 0200 	mov.w	r2, #0
 8002e9a:	4b13      	ldr	r3, [pc, #76]	; (8002ee8 <mpu9250_gyro_get+0xa8>)
 8002e9c:	f7fd fcde 	bl	800085c <__aeabi_ddiv>
 8002ea0:	4602      	mov	r2, r0
 8002ea2:	460b      	mov	r3, r1
 8002ea4:	4610      	mov	r0, r2
 8002ea6:	4619      	mov	r1, r3
 8002ea8:	a30b      	add	r3, pc, #44	; (adr r3, 8002ed8 <mpu9250_gyro_get+0x98>)
 8002eaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002eae:	f7fd fbab 	bl	8000608 <__aeabi_dmul>
 8002eb2:	4602      	mov	r2, r0
 8002eb4:	460b      	mov	r3, r1
 8002eb6:	4610      	mov	r0, r2
 8002eb8:	4619      	mov	r1, r3
 8002eba:	f7fd fe9d 	bl	8000bf8 <__aeabi_d2f>
 8002ebe:	4603      	mov	r3, r0
 8002ec0:	e001      	b.n	8002ec6 <mpu9250_gyro_get+0x86>
	}
	else
	{
		return 0.0;
 8002ec2:	f04f 0300 	mov.w	r3, #0
	}
}
 8002ec6:	ee07 3a90 	vmov	s15, r3
 8002eca:	eeb0 0a67 	vmov.f32	s0, s15
 8002ece:	3710      	adds	r7, #16
 8002ed0:	46bd      	mov	sp, r7
 8002ed2:	bd80      	pop	{r7, pc}
 8002ed4:	f3af 8000 	nop.w
 8002ed8:	a2529d39 	.word	0xa2529d39
 8002edc:	3f91df46 	.word	0x3f91df46
 8002ee0:	20000318 	.word	0x20000318
 8002ee4:	20000340 	.word	0x20000340
 8002ee8:	40e00000 	.word	0x40e00000

08002eec <mpu9250_get_acc_x>:
}



float mpu9250_get_acc_x(void)
{
 8002eec:	b580      	push	{r7, lr}
 8002eee:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(1,2);
 8002ef0:	2102      	movs	r1, #2
 8002ef2:	2001      	movs	r0, #1
 8002ef4:	f7ff ff4c 	bl	8002d90 <mpu9250_accel_get>
 8002ef8:	eef0 7a40 	vmov.f32	s15, s0
}
 8002efc:	eeb0 0a67 	vmov.f32	s0, s15
 8002f00:	bd80      	pop	{r7, pc}

08002f02 <mpu9250_get_acc_y>:

float mpu9250_get_acc_y(void)
{
 8002f02:	b580      	push	{r7, lr}
 8002f04:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(3,4);
 8002f06:	2104      	movs	r1, #4
 8002f08:	2003      	movs	r0, #3
 8002f0a:	f7ff ff41 	bl	8002d90 <mpu9250_accel_get>
 8002f0e:	eef0 7a40 	vmov.f32	s15, s0
}
 8002f12:	eeb0 0a67 	vmov.f32	s0, s15
 8002f16:	bd80      	pop	{r7, pc}

08002f18 <mpu9250_get_acc_z>:

float mpu9250_get_acc_z(void)
{
 8002f18:	b580      	push	{r7, lr}
 8002f1a:	af00      	add	r7, sp, #0
	return mpu9250_accel_get(5,6);
 8002f1c:	2106      	movs	r1, #6
 8002f1e:	2005      	movs	r0, #5
 8002f20:	f7ff ff36 	bl	8002d90 <mpu9250_accel_get>
 8002f24:	eef0 7a40 	vmov.f32	s15, s0
}
 8002f28:	eeb0 0a67 	vmov.f32	s0, s15
 8002f2c:	bd80      	pop	{r7, pc}
	...

08002f30 <mpu9250_gyro_config>:
	return mpu9250_accel_get(7,8);
}

/******************GYRO**********************/
void mpu9250_gyro_config(uint8_t mode)
{
 8002f30:	b580      	push	{r7, lr}
 8002f32:	b082      	sub	sp, #8
 8002f34:	af00      	add	r7, sp, #0
 8002f36:	4603      	mov	r3, r0
 8002f38:	71fb      	strb	r3, [r7, #7]

	switch(mode)
 8002f3a:	79fb      	ldrb	r3, [r7, #7]
 8002f3c:	2b18      	cmp	r3, #24
 8002f3e:	d851      	bhi.n	8002fe4 <mpu9250_gyro_config+0xb4>
 8002f40:	a201      	add	r2, pc, #4	; (adr r2, 8002f48 <mpu9250_gyro_config+0x18>)
 8002f42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002f46:	bf00      	nop
 8002f48:	08002fad 	.word	0x08002fad
 8002f4c:	08002fe5 	.word	0x08002fe5
 8002f50:	08002fe5 	.word	0x08002fe5
 8002f54:	08002fe5 	.word	0x08002fe5
 8002f58:	08002fe5 	.word	0x08002fe5
 8002f5c:	08002fe5 	.word	0x08002fe5
 8002f60:	08002fe5 	.word	0x08002fe5
 8002f64:	08002fe5 	.word	0x08002fe5
 8002f68:	08002fbb 	.word	0x08002fbb
 8002f6c:	08002fe5 	.word	0x08002fe5
 8002f70:	08002fe5 	.word	0x08002fe5
 8002f74:	08002fe5 	.word	0x08002fe5
 8002f78:	08002fe5 	.word	0x08002fe5
 8002f7c:	08002fe5 	.word	0x08002fe5
 8002f80:	08002fe5 	.word	0x08002fe5
 8002f84:	08002fe5 	.word	0x08002fe5
 8002f88:	08002fc9 	.word	0x08002fc9
 8002f8c:	08002fe5 	.word	0x08002fe5
 8002f90:	08002fe5 	.word	0x08002fe5
 8002f94:	08002fe5 	.word	0x08002fe5
 8002f98:	08002fe5 	.word	0x08002fe5
 8002f9c:	08002fe5 	.word	0x08002fe5
 8002fa0:	08002fe5 	.word	0x08002fe5
 8002fa4:	08002fe5 	.word	0x08002fe5
 8002fa8:	08002fd7 	.word	0x08002fd7
	{
		case GYRO_FULL_SCALE_250:
			g_gyro_range = 250;
 8002fac:	4919      	ldr	r1, [pc, #100]	; (8003014 <mpu9250_gyro_config+0xe4>)
 8002fae:	f04f 0200 	mov.w	r2, #0
 8002fb2:	4b19      	ldr	r3, [pc, #100]	; (8003018 <mpu9250_gyro_config+0xe8>)
 8002fb4:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002fb8:	e015      	b.n	8002fe6 <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_500:
			g_gyro_range = 500;
 8002fba:	4916      	ldr	r1, [pc, #88]	; (8003014 <mpu9250_gyro_config+0xe4>)
 8002fbc:	f04f 0200 	mov.w	r2, #0
 8002fc0:	4b16      	ldr	r3, [pc, #88]	; (800301c <mpu9250_gyro_config+0xec>)
 8002fc2:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002fc6:	e00e      	b.n	8002fe6 <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_1000:
			g_gyro_range = 1000;
 8002fc8:	4912      	ldr	r1, [pc, #72]	; (8003014 <mpu9250_gyro_config+0xe4>)
 8002fca:	f04f 0200 	mov.w	r2, #0
 8002fce:	4b14      	ldr	r3, [pc, #80]	; (8003020 <mpu9250_gyro_config+0xf0>)
 8002fd0:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002fd4:	e007      	b.n	8002fe6 <mpu9250_gyro_config+0xb6>

		case GYRO_FULL_SCALE_2000:
			g_gyro_range = 2000;
 8002fd6:	490f      	ldr	r1, [pc, #60]	; (8003014 <mpu9250_gyro_config+0xe4>)
 8002fd8:	f04f 0200 	mov.w	r2, #0
 8002fdc:	4b11      	ldr	r3, [pc, #68]	; (8003024 <mpu9250_gyro_config+0xf4>)
 8002fde:	e9c1 2300 	strd	r2, r3, [r1]
			break;
 8002fe2:	e000      	b.n	8002fe6 <mpu9250_gyro_config+0xb6>
		default:
			break;
 8002fe4:	bf00      	nop
	}
	/*Configure the GYRO Range*/
	spi_data_buff[0] = MPU9250_ADDR_GYROCONFIG;
 8002fe6:	4b10      	ldr	r3, [pc, #64]	; (8003028 <mpu9250_gyro_config+0xf8>)
 8002fe8:	221b      	movs	r2, #27
 8002fea:	701a      	strb	r2, [r3, #0]
	spi_data_buff[1] = mode;
 8002fec:	4a0e      	ldr	r2, [pc, #56]	; (8003028 <mpu9250_gyro_config+0xf8>)
 8002fee:	79fb      	ldrb	r3, [r7, #7]
 8002ff0:	7053      	strb	r3, [r2, #1]

	dma2_stream3_spi_transfer((uint32_t) spi_data_buff, (uint32_t) SPI_DATA_BUFF_LEN);
 8002ff2:	4b0d      	ldr	r3, [pc, #52]	; (8003028 <mpu9250_gyro_config+0xf8>)
 8002ff4:	2102      	movs	r1, #2
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	f000 fa3c 	bl	8003474 <dma2_stream3_spi_transfer>

	/*Wait for transfer completion*/
	while(!g_tx_cmplt){}
 8002ffc:	bf00      	nop
 8002ffe:	4b0b      	ldr	r3, [pc, #44]	; (800302c <mpu9250_gyro_config+0xfc>)
 8003000:	781b      	ldrb	r3, [r3, #0]
 8003002:	2b00      	cmp	r3, #0
 8003004:	d0fb      	beq.n	8002ffe <mpu9250_gyro_config+0xce>

	/*Reset flag*/
	g_tx_cmplt = 0;
 8003006:	4b09      	ldr	r3, [pc, #36]	; (800302c <mpu9250_gyro_config+0xfc>)
 8003008:	2200      	movs	r2, #0
 800300a:	701a      	strb	r2, [r3, #0]

}
 800300c:	bf00      	nop
 800300e:	3708      	adds	r7, #8
 8003010:	46bd      	mov	sp, r7
 8003012:	bd80      	pop	{r7, pc}
 8003014:	20000340 	.word	0x20000340
 8003018:	406f4000 	.word	0x406f4000
 800301c:	407f4000 	.word	0x407f4000
 8003020:	408f4000 	.word	0x408f4000
 8003024:	409f4000 	.word	0x409f4000
 8003028:	2000032c 	.word	0x2000032c
 800302c:	2000032e 	.word	0x2000032e

08003030 <mpu9250_get_gyro_x>:
	Array_len_dummy =  sizeof(dummy_buff)/sizeof(uint8_t);

}

float mpu9250_get_gyro_x(void)
{
 8003030:	b580      	push	{r7, lr}
 8003032:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(9,10);
 8003034:	210a      	movs	r1, #10
 8003036:	2009      	movs	r0, #9
 8003038:	f7ff ff02 	bl	8002e40 <mpu9250_gyro_get>
 800303c:	eef0 7a40 	vmov.f32	s15, s0
}
 8003040:	eeb0 0a67 	vmov.f32	s0, s15
 8003044:	bd80      	pop	{r7, pc}

08003046 <mpu9250_get_gyro_y>:

float mpu9250_get_gyro_y(void)
{
 8003046:	b580      	push	{r7, lr}
 8003048:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(11,12);
 800304a:	210c      	movs	r1, #12
 800304c:	200b      	movs	r0, #11
 800304e:	f7ff fef7 	bl	8002e40 <mpu9250_gyro_get>
 8003052:	eef0 7a40 	vmov.f32	s15, s0
}
 8003056:	eeb0 0a67 	vmov.f32	s0, s15
 800305a:	bd80      	pop	{r7, pc}

0800305c <mpu9250_get_gyro_z>:

float mpu9250_get_gyro_z(void)
{
 800305c:	b580      	push	{r7, lr}
 800305e:	af00      	add	r7, sp, #0
	return mpu9250_gyro_get(13,14);
 8003060:	210e      	movs	r1, #14
 8003062:	200d      	movs	r0, #13
 8003064:	f7ff feec 	bl	8002e40 <mpu9250_gyro_get>
 8003068:	eef0 7a40 	vmov.f32	s15, s0
}
 800306c:	eeb0 0a67 	vmov.f32	s0, s15
 8003070:	bd80      	pop	{r7, pc}
	...

08003074 <DMA2_Stream3_IRQHandler>:

/********************************************/

/*****************ISR************************/
void DMA2_Stream3_IRQHandler(void)
{
 8003074:	b480      	push	{r7}
 8003076:	af00      	add	r7, sp, #0
	if((DMA2->LISR) & LISR_TCIF3)
 8003078:	4b16      	ldr	r3, [pc, #88]	; (80030d4 <DMA2_Stream3_IRQHandler+0x60>)
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8003080:	2b00      	cmp	r3, #0
 8003082:	d00f      	beq.n	80030a4 <DMA2_Stream3_IRQHandler+0x30>
	{
		//do something...
		g_tx_cmplt = 1;
 8003084:	4b14      	ldr	r3, [pc, #80]	; (80030d8 <DMA2_Stream3_IRQHandler+0x64>)
 8003086:	2201      	movs	r2, #1
 8003088:	701a      	strb	r2, [r3, #0]
		//DMA2_Stream3->CR &= ~DMA_SxCR_EN;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTCIF3;
 800308a:	4b12      	ldr	r3, [pc, #72]	; (80030d4 <DMA2_Stream3_IRQHandler+0x60>)
 800308c:	689b      	ldr	r3, [r3, #8]
 800308e:	4a11      	ldr	r2, [pc, #68]	; (80030d4 <DMA2_Stream3_IRQHandler+0x60>)
 8003090:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8003094:	6093      	str	r3, [r2, #8]
		data_tx++;
 8003096:	4b11      	ldr	r3, [pc, #68]	; (80030dc <DMA2_Stream3_IRQHandler+0x68>)
 8003098:	881b      	ldrh	r3, [r3, #0]
 800309a:	3301      	adds	r3, #1
 800309c:	b29a      	uxth	r2, r3
 800309e:	4b0f      	ldr	r3, [pc, #60]	; (80030dc <DMA2_Stream3_IRQHandler+0x68>)
 80030a0:	801a      	strh	r2, [r3, #0]
        //do something...
		error_tx++;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTEIF3;
	}
}
 80030a2:	e011      	b.n	80030c8 <DMA2_Stream3_IRQHandler+0x54>
	else if((DMA2->LISR) & LISR_TEIF3)
 80030a4:	4b0b      	ldr	r3, [pc, #44]	; (80030d4 <DMA2_Stream3_IRQHandler+0x60>)
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	d00b      	beq.n	80030c8 <DMA2_Stream3_IRQHandler+0x54>
		error_tx++;
 80030b0:	4b0b      	ldr	r3, [pc, #44]	; (80030e0 <DMA2_Stream3_IRQHandler+0x6c>)
 80030b2:	781b      	ldrb	r3, [r3, #0]
 80030b4:	3301      	adds	r3, #1
 80030b6:	b2da      	uxtb	r2, r3
 80030b8:	4b09      	ldr	r3, [pc, #36]	; (80030e0 <DMA2_Stream3_IRQHandler+0x6c>)
 80030ba:	701a      	strb	r2, [r3, #0]
		DMA2->LIFCR |=LIFCR_CTEIF3;
 80030bc:	4b05      	ldr	r3, [pc, #20]	; (80030d4 <DMA2_Stream3_IRQHandler+0x60>)
 80030be:	689b      	ldr	r3, [r3, #8]
 80030c0:	4a04      	ldr	r2, [pc, #16]	; (80030d4 <DMA2_Stream3_IRQHandler+0x60>)
 80030c2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80030c6:	6093      	str	r3, [r2, #8]
}
 80030c8:	bf00      	nop
 80030ca:	46bd      	mov	sp, r7
 80030cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030d0:	4770      	bx	lr
 80030d2:	bf00      	nop
 80030d4:	40026400 	.word	0x40026400
 80030d8:	2000032e 	.word	0x2000032e
 80030dc:	20000330 	.word	0x20000330
 80030e0:	20000334 	.word	0x20000334

080030e4 <DMA2_Stream2_IRQHandler>:

void DMA2_Stream2_IRQHandler(void)
{
 80030e4:	b480      	push	{r7}
 80030e6:	af00      	add	r7, sp, #0
	if((DMA2->LISR) & LISR_TCIF2)
 80030e8:	4b16      	ldr	r3, [pc, #88]	; (8003144 <DMA2_Stream2_IRQHandler+0x60>)
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80030f0:	2b00      	cmp	r3, #0
 80030f2:	d00f      	beq.n	8003114 <DMA2_Stream2_IRQHandler+0x30>
	{
		//do something...
		g_rx_cmplt = 1;
 80030f4:	4b14      	ldr	r3, [pc, #80]	; (8003148 <DMA2_Stream2_IRQHandler+0x64>)
 80030f6:	2201      	movs	r2, #1
 80030f8:	701a      	strb	r2, [r3, #0]
		//DMA2_Stream2->CR&=~DMA_SxCR_EN;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTCIF2;
 80030fa:	4b12      	ldr	r3, [pc, #72]	; (8003144 <DMA2_Stream2_IRQHandler+0x60>)
 80030fc:	689b      	ldr	r3, [r3, #8]
 80030fe:	4a11      	ldr	r2, [pc, #68]	; (8003144 <DMA2_Stream2_IRQHandler+0x60>)
 8003100:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003104:	6093      	str	r3, [r2, #8]
		data_rx++;
 8003106:	4b11      	ldr	r3, [pc, #68]	; (800314c <DMA2_Stream2_IRQHandler+0x68>)
 8003108:	881b      	ldrh	r3, [r3, #0]
 800310a:	3301      	adds	r3, #1
 800310c:	b29a      	uxth	r2, r3
 800310e:	4b0f      	ldr	r3, [pc, #60]	; (800314c <DMA2_Stream2_IRQHandler+0x68>)
 8003110:	801a      	strh	r2, [r3, #0]
        //do something...
		error_rx++;
		//Clear the flag
		DMA2->LIFCR |=LIFCR_CTEIF2;
	}
}
 8003112:	e011      	b.n	8003138 <DMA2_Stream2_IRQHandler+0x54>
	else if((DMA2->LISR) & LISR_TEIF2)
 8003114:	4b0b      	ldr	r3, [pc, #44]	; (8003144 <DMA2_Stream2_IRQHandler+0x60>)
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800311c:	2b00      	cmp	r3, #0
 800311e:	d00b      	beq.n	8003138 <DMA2_Stream2_IRQHandler+0x54>
		error_rx++;
 8003120:	4b0b      	ldr	r3, [pc, #44]	; (8003150 <DMA2_Stream2_IRQHandler+0x6c>)
 8003122:	781b      	ldrb	r3, [r3, #0]
 8003124:	3301      	adds	r3, #1
 8003126:	b2da      	uxtb	r2, r3
 8003128:	4b09      	ldr	r3, [pc, #36]	; (8003150 <DMA2_Stream2_IRQHandler+0x6c>)
 800312a:	701a      	strb	r2, [r3, #0]
		DMA2->LIFCR |=LIFCR_CTEIF2;
 800312c:	4b05      	ldr	r3, [pc, #20]	; (8003144 <DMA2_Stream2_IRQHandler+0x60>)
 800312e:	689b      	ldr	r3, [r3, #8]
 8003130:	4a04      	ldr	r2, [pc, #16]	; (8003144 <DMA2_Stream2_IRQHandler+0x60>)
 8003132:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8003136:	6093      	str	r3, [r2, #8]
}
 8003138:	bf00      	nop
 800313a:	46bd      	mov	sp, r7
 800313c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003140:	4770      	bx	lr
 8003142:	bf00      	nop
 8003144:	40026400 	.word	0x40026400
 8003148:	2000032f 	.word	0x2000032f
 800314c:	20000332 	.word	0x20000332
 8003150:	20000335 	.word	0x20000335

08003154 <__NVIC_EnableIRQ>:
{
 8003154:	b480      	push	{r7}
 8003156:	b083      	sub	sp, #12
 8003158:	af00      	add	r7, sp, #0
 800315a:	4603      	mov	r3, r0
 800315c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800315e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003162:	2b00      	cmp	r3, #0
 8003164:	db0b      	blt.n	800317e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003166:	79fb      	ldrb	r3, [r7, #7]
 8003168:	f003 021f 	and.w	r2, r3, #31
 800316c:	4907      	ldr	r1, [pc, #28]	; (800318c <__NVIC_EnableIRQ+0x38>)
 800316e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003172:	095b      	lsrs	r3, r3, #5
 8003174:	2001      	movs	r0, #1
 8003176:	fa00 f202 	lsl.w	r2, r0, r2
 800317a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800317e:	bf00      	nop
 8003180:	370c      	adds	r7, #12
 8003182:	46bd      	mov	sp, r7
 8003184:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003188:	4770      	bx	lr
 800318a:	bf00      	nop
 800318c:	e000e100 	.word	0xe000e100

08003190 <spi1_dma_init>:
#define HIFSR_TCIF5		(1U<<11)
#define HIFSR_TCIF6		(1U<<21)


void spi1_dma_init(void)
{
 8003190:	b480      	push	{r7}
 8003192:	af00      	add	r7, sp, #0

	/*************GPIO Configuration*****************/
	/*Enable clock to PORT of SPI pins*/
	RCC->AHB1ENR |= GPIOAEN;
 8003194:	4b56      	ldr	r3, [pc, #344]	; (80032f0 <spi1_dma_init+0x160>)
 8003196:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003198:	4a55      	ldr	r2, [pc, #340]	; (80032f0 <spi1_dma_init+0x160>)
 800319a:	f043 0301 	orr.w	r3, r3, #1
 800319e:	6313      	str	r3, [r2, #48]	; 0x30

	/*Set SPI pins mode to alternate function mode*/
	/*PA5*/
	GPIOA->MODER &=~(1U<<10);
 80031a0:	4b54      	ldr	r3, [pc, #336]	; (80032f4 <spi1_dma_init+0x164>)
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	4a53      	ldr	r2, [pc, #332]	; (80032f4 <spi1_dma_init+0x164>)
 80031a6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80031aa:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<11);
 80031ac:	4b51      	ldr	r3, [pc, #324]	; (80032f4 <spi1_dma_init+0x164>)
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	4a50      	ldr	r2, [pc, #320]	; (80032f4 <spi1_dma_init+0x164>)
 80031b2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80031b6:	6013      	str	r3, [r2, #0]

	/*PA6*/
	GPIOA->MODER &=~(1U<<12);
 80031b8:	4b4e      	ldr	r3, [pc, #312]	; (80032f4 <spi1_dma_init+0x164>)
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	4a4d      	ldr	r2, [pc, #308]	; (80032f4 <spi1_dma_init+0x164>)
 80031be:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80031c2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<13);
 80031c4:	4b4b      	ldr	r3, [pc, #300]	; (80032f4 <spi1_dma_init+0x164>)
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	4a4a      	ldr	r2, [pc, #296]	; (80032f4 <spi1_dma_init+0x164>)
 80031ca:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80031ce:	6013      	str	r3, [r2, #0]

	/*PA7*/
	GPIOA->MODER &=~(1U<<14);
 80031d0:	4b48      	ldr	r3, [pc, #288]	; (80032f4 <spi1_dma_init+0x164>)
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	4a47      	ldr	r2, [pc, #284]	; (80032f4 <spi1_dma_init+0x164>)
 80031d6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80031da:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<15);
 80031dc:	4b45      	ldr	r3, [pc, #276]	; (80032f4 <spi1_dma_init+0x164>)
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	4a44      	ldr	r2, [pc, #272]	; (80032f4 <spi1_dma_init+0x164>)
 80031e2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80031e6:	6013      	str	r3, [r2, #0]

	/*Set alternate type to AF5(SPI1)*/
	/*PA5*/
	GPIOA->AFR[0]  |= (1U<<20);
 80031e8:	4b42      	ldr	r3, [pc, #264]	; (80032f4 <spi1_dma_init+0x164>)
 80031ea:	6a1b      	ldr	r3, [r3, #32]
 80031ec:	4a41      	ldr	r2, [pc, #260]	; (80032f4 <spi1_dma_init+0x164>)
 80031ee:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80031f2:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<21);
 80031f4:	4b3f      	ldr	r3, [pc, #252]	; (80032f4 <spi1_dma_init+0x164>)
 80031f6:	6a1b      	ldr	r3, [r3, #32]
 80031f8:	4a3e      	ldr	r2, [pc, #248]	; (80032f4 <spi1_dma_init+0x164>)
 80031fa:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80031fe:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<22);
 8003200:	4b3c      	ldr	r3, [pc, #240]	; (80032f4 <spi1_dma_init+0x164>)
 8003202:	6a1b      	ldr	r3, [r3, #32]
 8003204:	4a3b      	ldr	r2, [pc, #236]	; (80032f4 <spi1_dma_init+0x164>)
 8003206:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800320a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<23);
 800320c:	4b39      	ldr	r3, [pc, #228]	; (80032f4 <spi1_dma_init+0x164>)
 800320e:	6a1b      	ldr	r3, [r3, #32]
 8003210:	4a38      	ldr	r2, [pc, #224]	; (80032f4 <spi1_dma_init+0x164>)
 8003212:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8003216:	6213      	str	r3, [r2, #32]

	/*PA6*/
	GPIOA->AFR[0]  |= (1U<<24);
 8003218:	4b36      	ldr	r3, [pc, #216]	; (80032f4 <spi1_dma_init+0x164>)
 800321a:	6a1b      	ldr	r3, [r3, #32]
 800321c:	4a35      	ldr	r2, [pc, #212]	; (80032f4 <spi1_dma_init+0x164>)
 800321e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003222:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<25);
 8003224:	4b33      	ldr	r3, [pc, #204]	; (80032f4 <spi1_dma_init+0x164>)
 8003226:	6a1b      	ldr	r3, [r3, #32]
 8003228:	4a32      	ldr	r2, [pc, #200]	; (80032f4 <spi1_dma_init+0x164>)
 800322a:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 800322e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<26);
 8003230:	4b30      	ldr	r3, [pc, #192]	; (80032f4 <spi1_dma_init+0x164>)
 8003232:	6a1b      	ldr	r3, [r3, #32]
 8003234:	4a2f      	ldr	r2, [pc, #188]	; (80032f4 <spi1_dma_init+0x164>)
 8003236:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800323a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<27);
 800323c:	4b2d      	ldr	r3, [pc, #180]	; (80032f4 <spi1_dma_init+0x164>)
 800323e:	6a1b      	ldr	r3, [r3, #32]
 8003240:	4a2c      	ldr	r2, [pc, #176]	; (80032f4 <spi1_dma_init+0x164>)
 8003242:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8003246:	6213      	str	r3, [r2, #32]

	/*PA7*/
	GPIOA->AFR[0]  |= (1U<<28);
 8003248:	4b2a      	ldr	r3, [pc, #168]	; (80032f4 <spi1_dma_init+0x164>)
 800324a:	6a1b      	ldr	r3, [r3, #32]
 800324c:	4a29      	ldr	r2, [pc, #164]	; (80032f4 <spi1_dma_init+0x164>)
 800324e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003252:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<29);
 8003254:	4b27      	ldr	r3, [pc, #156]	; (80032f4 <spi1_dma_init+0x164>)
 8003256:	6a1b      	ldr	r3, [r3, #32]
 8003258:	4a26      	ldr	r2, [pc, #152]	; (80032f4 <spi1_dma_init+0x164>)
 800325a:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800325e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |= (1U<<30);
 8003260:	4b24      	ldr	r3, [pc, #144]	; (80032f4 <spi1_dma_init+0x164>)
 8003262:	6a1b      	ldr	r3, [r3, #32]
 8003264:	4a23      	ldr	r2, [pc, #140]	; (80032f4 <spi1_dma_init+0x164>)
 8003266:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800326a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  &=~(1U<<31);
 800326c:	4b21      	ldr	r3, [pc, #132]	; (80032f4 <spi1_dma_init+0x164>)
 800326e:	6a1b      	ldr	r3, [r3, #32]
 8003270:	4a20      	ldr	r2, [pc, #128]	; (80032f4 <spi1_dma_init+0x164>)
 8003272:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003276:	6213      	str	r3, [r2, #32]

	/*************SPI Configuration*****************/

	/*Enable clock access to SPI1 module*/
	RCC->APB2ENR |=SPI1EN;
 8003278:	4b1d      	ldr	r3, [pc, #116]	; (80032f0 <spi1_dma_init+0x160>)
 800327a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800327c:	4a1c      	ldr	r2, [pc, #112]	; (80032f0 <spi1_dma_init+0x160>)
 800327e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8003282:	6453      	str	r3, [r2, #68]	; 0x44

	/*Set software slave management*/
	SPI1->CR1 |= CR1_SSM|CR1_SSI;
 8003284:	4b1c      	ldr	r3, [pc, #112]	; (80032f8 <spi1_dma_init+0x168>)
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	4a1b      	ldr	r2, [pc, #108]	; (80032f8 <spi1_dma_init+0x168>)
 800328a:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 800328e:	6013      	str	r3, [r2, #0]

	/*Set SPI to master mode*/
	SPI1->CR1 |=CR1_MSTR;
 8003290:	4b19      	ldr	r3, [pc, #100]	; (80032f8 <spi1_dma_init+0x168>)
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	4a18      	ldr	r2, [pc, #96]	; (80032f8 <spi1_dma_init+0x168>)
 8003296:	f043 0304 	orr.w	r3, r3, #4
 800329a:	6013      	str	r3, [r2, #0]

	/*Set CPHA and CPOL*/
	SPI1->CR1 |=SPI_CR1_BR_0|CR1_PHA|CR1_CPOL;
 800329c:	4b16      	ldr	r3, [pc, #88]	; (80032f8 <spi1_dma_init+0x168>)
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	4a15      	ldr	r2, [pc, #84]	; (80032f8 <spi1_dma_init+0x168>)
 80032a2:	f043 030b 	orr.w	r3, r3, #11
 80032a6:	6013      	str	r3, [r2, #0]

	/*Set clock divider : PCLCK/4*/
	SPI1->CR1 |=(1U<<3);
 80032a8:	4b13      	ldr	r3, [pc, #76]	; (80032f8 <spi1_dma_init+0x168>)
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	4a12      	ldr	r2, [pc, #72]	; (80032f8 <spi1_dma_init+0x168>)
 80032ae:	f043 0308 	orr.w	r3, r3, #8
 80032b2:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1U<<4);
 80032b4:	4b10      	ldr	r3, [pc, #64]	; (80032f8 <spi1_dma_init+0x168>)
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	4a0f      	ldr	r2, [pc, #60]	; (80032f8 <spi1_dma_init+0x168>)
 80032ba:	f023 0310 	bic.w	r3, r3, #16
 80032be:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &=~(1U<<5);
 80032c0:	4b0d      	ldr	r3, [pc, #52]	; (80032f8 <spi1_dma_init+0x168>)
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	4a0c      	ldr	r2, [pc, #48]	; (80032f8 <spi1_dma_init+0x168>)
 80032c6:	f023 0320 	bic.w	r3, r3, #32
 80032ca:	6013      	str	r3, [r2, #0]
//	SPI1->CR1 |= (1U<<3);
//	SPI1->CR1 |= (1U<<4);
//	SPI1->CR1 &=~(1U<<5);

	/*Select to use DMA*/
	SPI1->CR2 |=CR2_RXDMAEN|CR2_TXDMAEN;
 80032cc:	4b0a      	ldr	r3, [pc, #40]	; (80032f8 <spi1_dma_init+0x168>)
 80032ce:	685b      	ldr	r3, [r3, #4]
 80032d0:	4a09      	ldr	r2, [pc, #36]	; (80032f8 <spi1_dma_init+0x168>)
 80032d2:	f043 0303 	orr.w	r3, r3, #3
 80032d6:	6053      	str	r3, [r2, #4]

    /*Enable SPI*/
	SPI1->CR1 |=CR1_SPE;
 80032d8:	4b07      	ldr	r3, [pc, #28]	; (80032f8 <spi1_dma_init+0x168>)
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	4a06      	ldr	r2, [pc, #24]	; (80032f8 <spi1_dma_init+0x168>)
 80032de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80032e2:	6013      	str	r3, [r2, #0]
}
 80032e4:	bf00      	nop
 80032e6:	46bd      	mov	sp, r7
 80032e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032ec:	4770      	bx	lr
 80032ee:	bf00      	nop
 80032f0:	40023800 	.word	0x40023800
 80032f4:	40020000 	.word	0x40020000
 80032f8:	40013000 	.word	0x40013000

080032fc <dma2_stream3_spi_tx_init>:

void dma2_stream3_spi_tx_init(void)
{
 80032fc:	b580      	push	{r7, lr}
 80032fe:	af00      	add	r7, sp, #0
	/************DMA Configuration**********/
	/*Enable clock access to DMA*/
	RCC->AHB1ENR |= DMA2EN;
 8003300:	4b2b      	ldr	r3, [pc, #172]	; (80033b0 <dma2_stream3_spi_tx_init+0xb4>)
 8003302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003304:	4a2a      	ldr	r2, [pc, #168]	; (80033b0 <dma2_stream3_spi_tx_init+0xb4>)
 8003306:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800330a:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA2_Stream3->CR = 0;
 800330c:	4b29      	ldr	r3, [pc, #164]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800330e:	2200      	movs	r2, #0
 8003310:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA2_Stream3->CR & DMA_SCR_EN)){}
 8003312:	bf00      	nop
 8003314:	4b27      	ldr	r3, [pc, #156]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	f003 0301 	and.w	r3, r3, #1
 800331c:	2b00      	cmp	r3, #0
 800331e:	d1f9      	bne.n	8003314 <dma2_stream3_spi_tx_init+0x18>

    /*******Configure DMA Stream parameters************/
	/*Enable memory addr increment*/
	DMA2_Stream3->CR |= DMA_SCR_MINC;
 8003320:	4b24      	ldr	r3, [pc, #144]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	4a23      	ldr	r2, [pc, #140]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003326:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800332a:	6013      	str	r3, [r2, #0]

	/*Select Channel :  CH3*/
	DMA2_Stream3->CR |= (1U<<25);
 800332c:	4b21      	ldr	r3, [pc, #132]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	4a20      	ldr	r2, [pc, #128]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003332:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003336:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR |= (1U<<26);
 8003338:	4b1e      	ldr	r3, [pc, #120]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	4a1d      	ldr	r2, [pc, #116]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800333e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8003342:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR &= ~(1U<<27);
 8003344:	4b1b      	ldr	r3, [pc, #108]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	4a1a      	ldr	r2, [pc, #104]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800334a:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800334e:	6013      	str	r3, [r2, #0]

	/*Set transfer direction : Memory to Peripheral*/
	DMA2_Stream3->CR |=(1U<<6);
 8003350:	4b18      	ldr	r3, [pc, #96]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	4a17      	ldr	r2, [pc, #92]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003356:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800335a:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR &=~(1U<<7);
 800335c:	4b15      	ldr	r3, [pc, #84]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	4a14      	ldr	r2, [pc, #80]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003362:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003366:	6013      	str	r3, [r2, #0]

	/*Enable transfer complete interrupt*/
	DMA2_Stream3->CR |= DMA_SCR_TCIE;
 8003368:	4b12      	ldr	r3, [pc, #72]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	4a11      	ldr	r2, [pc, #68]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800336e:	f043 0310 	orr.w	r3, r3, #16
 8003372:	6013      	str	r3, [r2, #0]

	/*Enable transfer error interrupt*/
	DMA2_Stream3->CR |= DMA_SCR_TEIE;
 8003374:	4b0f      	ldr	r3, [pc, #60]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	4a0e      	ldr	r2, [pc, #56]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800337a:	f043 0304 	orr.w	r3, r3, #4
 800337e:	6013      	str	r3, [r2, #0]

	/*Disable direct mode*/
	DMA2_Stream3->FCR |=DMA_SFCR_DMDIS;
 8003380:	4b0c      	ldr	r3, [pc, #48]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003382:	695b      	ldr	r3, [r3, #20]
 8003384:	4a0b      	ldr	r2, [pc, #44]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003386:	f043 0304 	orr.w	r3, r3, #4
 800338a:	6153      	str	r3, [r2, #20]

	/*Set DMA FIFO threshold*/
	DMA2_Stream3->FCR |=(1U<<0);
 800338c:	4b09      	ldr	r3, [pc, #36]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800338e:	695b      	ldr	r3, [r3, #20]
 8003390:	4a08      	ldr	r2, [pc, #32]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 8003392:	f043 0301 	orr.w	r3, r3, #1
 8003396:	6153      	str	r3, [r2, #20]
	DMA2_Stream3->FCR |=(1U<<1);
 8003398:	4b06      	ldr	r3, [pc, #24]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800339a:	695b      	ldr	r3, [r3, #20]
 800339c:	4a05      	ldr	r2, [pc, #20]	; (80033b4 <dma2_stream3_spi_tx_init+0xb8>)
 800339e:	f043 0302 	orr.w	r3, r3, #2
 80033a2:	6153      	str	r3, [r2, #20]

	/*Enable DMA Stream interrupt in the NVIC*/
	NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 80033a4:	203b      	movs	r0, #59	; 0x3b
 80033a6:	f7ff fed5 	bl	8003154 <__NVIC_EnableIRQ>

}
 80033aa:	bf00      	nop
 80033ac:	bd80      	pop	{r7, pc}
 80033ae:	bf00      	nop
 80033b0:	40023800 	.word	0x40023800
 80033b4:	40026458 	.word	0x40026458

080033b8 <dma2_stream2_spi_rx_init>:

void dma2_stream2_spi_rx_init(void)
{
 80033b8:	b580      	push	{r7, lr}
 80033ba:	af00      	add	r7, sp, #0
	/************DMA Configuration**********/
	/*Enable clock access to DMA*/
	RCC->AHB1ENR |= DMA2EN;
 80033bc:	4b2b      	ldr	r3, [pc, #172]	; (800346c <dma2_stream2_spi_rx_init+0xb4>)
 80033be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033c0:	4a2a      	ldr	r2, [pc, #168]	; (800346c <dma2_stream2_spi_rx_init+0xb4>)
 80033c2:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80033c6:	6313      	str	r3, [r2, #48]	; 0x30

	/*Disable DMA stream*/
	DMA2_Stream2->CR = 0;
 80033c8:	4b29      	ldr	r3, [pc, #164]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 80033ca:	2200      	movs	r2, #0
 80033cc:	601a      	str	r2, [r3, #0]

	/*Wait till DMA Stream is disabled*/
	while((DMA2_Stream2->CR & DMA_SCR_EN)){}
 80033ce:	bf00      	nop
 80033d0:	4b27      	ldr	r3, [pc, #156]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	f003 0301 	and.w	r3, r3, #1
 80033d8:	2b00      	cmp	r3, #0
 80033da:	d1f9      	bne.n	80033d0 <dma2_stream2_spi_rx_init+0x18>

    /*******Configure DMA Stream parameters************/
	/*Enable memory addr increment*/
	DMA2_Stream2->CR |= DMA_SCR_MINC;
 80033dc:	4b24      	ldr	r3, [pc, #144]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	4a23      	ldr	r2, [pc, #140]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 80033e2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80033e6:	6013      	str	r3, [r2, #0]

	/*Select Channel :  CH3*/
	DMA2_Stream2->CR |= (1U<<25);
 80033e8:	4b21      	ldr	r3, [pc, #132]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	4a20      	ldr	r2, [pc, #128]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 80033ee:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80033f2:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR |= (1U<<26);
 80033f4:	4b1e      	ldr	r3, [pc, #120]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	4a1d      	ldr	r2, [pc, #116]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 80033fa:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80033fe:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR &= ~(1U<<27);
 8003400:	4b1b      	ldr	r3, [pc, #108]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	4a1a      	ldr	r2, [pc, #104]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 8003406:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800340a:	6013      	str	r3, [r2, #0]

	/*Set transfer direction : Peripheral to Memory*/
	DMA2_Stream2->CR &=~(1U<<6);
 800340c:	4b18      	ldr	r3, [pc, #96]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	4a17      	ldr	r2, [pc, #92]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 8003412:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003416:	6013      	str	r3, [r2, #0]
	DMA2_Stream2->CR &=~(1U<<7);
 8003418:	4b15      	ldr	r3, [pc, #84]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	4a14      	ldr	r2, [pc, #80]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 800341e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003422:	6013      	str	r3, [r2, #0]

	/*Enable transfer complete interrupt*/
	DMA2_Stream2->CR |= DMA_SCR_TCIE;
 8003424:	4b12      	ldr	r3, [pc, #72]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	4a11      	ldr	r2, [pc, #68]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 800342a:	f043 0310 	orr.w	r3, r3, #16
 800342e:	6013      	str	r3, [r2, #0]

	/*Enable transfer error interrupt*/
	DMA2_Stream2->CR |= DMA_SCR_TEIE;
 8003430:	4b0f      	ldr	r3, [pc, #60]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	4a0e      	ldr	r2, [pc, #56]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 8003436:	f043 0304 	orr.w	r3, r3, #4
 800343a:	6013      	str	r3, [r2, #0]

	/*Disable direct mode*/
	DMA2_Stream2->FCR |=DMA_SFCR_DMDIS;
 800343c:	4b0c      	ldr	r3, [pc, #48]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 800343e:	695b      	ldr	r3, [r3, #20]
 8003440:	4a0b      	ldr	r2, [pc, #44]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 8003442:	f043 0304 	orr.w	r3, r3, #4
 8003446:	6153      	str	r3, [r2, #20]

	/*Set DMA FIFO threshold :  Full*/
	DMA2_Stream2->FCR |=(1U<<0);
 8003448:	4b09      	ldr	r3, [pc, #36]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 800344a:	695b      	ldr	r3, [r3, #20]
 800344c:	4a08      	ldr	r2, [pc, #32]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 800344e:	f043 0301 	orr.w	r3, r3, #1
 8003452:	6153      	str	r3, [r2, #20]
	DMA2_Stream2->FCR |=(1U<<1);
 8003454:	4b06      	ldr	r3, [pc, #24]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 8003456:	695b      	ldr	r3, [r3, #20]
 8003458:	4a05      	ldr	r2, [pc, #20]	; (8003470 <dma2_stream2_spi_rx_init+0xb8>)
 800345a:	f043 0302 	orr.w	r3, r3, #2
 800345e:	6153      	str	r3, [r2, #20]

	/*Enable DMA Stream interrupt in the NVIC*/
	NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8003460:	203a      	movs	r0, #58	; 0x3a
 8003462:	f7ff fe77 	bl	8003154 <__NVIC_EnableIRQ>


}
 8003466:	bf00      	nop
 8003468:	bd80      	pop	{r7, pc}
 800346a:	bf00      	nop
 800346c:	40023800 	.word	0x40023800
 8003470:	40026440 	.word	0x40026440

08003474 <dma2_stream3_spi_transfer>:

void dma2_stream3_spi_transfer(uint32_t msg_to_send, uint32_t msg_len)
{
 8003474:	b480      	push	{r7}
 8003476:	b083      	sub	sp, #12
 8003478:	af00      	add	r7, sp, #0
 800347a:	6078      	str	r0, [r7, #4]
 800347c:	6039      	str	r1, [r7, #0]
	/*Clear interrupt flags*/
	DMA2->LIFCR = LIFCR_CTCIF3 |LIFCR_CTEIF3;
 800347e:	4b0c      	ldr	r3, [pc, #48]	; (80034b0 <dma2_stream3_spi_transfer+0x3c>)
 8003480:	f04f 6220 	mov.w	r2, #167772160	; 0xa000000
 8003484:	609a      	str	r2, [r3, #8]

	/*Set Peripheral address*/
	DMA2_Stream3->PAR =	(uint32_t)(&(SPI1->DR));
 8003486:	4b0b      	ldr	r3, [pc, #44]	; (80034b4 <dma2_stream3_spi_transfer+0x40>)
 8003488:	4a0b      	ldr	r2, [pc, #44]	; (80034b8 <dma2_stream3_spi_transfer+0x44>)
 800348a:	609a      	str	r2, [r3, #8]

	/*Set Memory address*/
	DMA2_Stream3->M0AR = msg_to_send;
 800348c:	4a09      	ldr	r2, [pc, #36]	; (80034b4 <dma2_stream3_spi_transfer+0x40>)
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	60d3      	str	r3, [r2, #12]

	/*Set transfer length*/
	DMA2_Stream3->NDTR = msg_len;
 8003492:	4a08      	ldr	r2, [pc, #32]	; (80034b4 <dma2_stream3_spi_transfer+0x40>)
 8003494:	683b      	ldr	r3, [r7, #0]
 8003496:	6053      	str	r3, [r2, #4]

	/*Enable the DMA Stream*/
	DMA2_Stream3->CR |= DMA_SCR_EN;
 8003498:	4b06      	ldr	r3, [pc, #24]	; (80034b4 <dma2_stream3_spi_transfer+0x40>)
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	4a05      	ldr	r2, [pc, #20]	; (80034b4 <dma2_stream3_spi_transfer+0x40>)
 800349e:	f043 0301 	orr.w	r3, r3, #1
 80034a2:	6013      	str	r3, [r2, #0]
}
 80034a4:	bf00      	nop
 80034a6:	370c      	adds	r7, #12
 80034a8:	46bd      	mov	sp, r7
 80034aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ae:	4770      	bx	lr
 80034b0:	40026400 	.word	0x40026400
 80034b4:	40026458 	.word	0x40026458
 80034b8:	4001300c 	.word	0x4001300c

080034bc <dma2_stream2_spi_receive>:

void dma2_stream2_spi_receive(uint32_t received_msg, uint32_t msg_len)
{
 80034bc:	b480      	push	{r7}
 80034be:	b083      	sub	sp, #12
 80034c0:	af00      	add	r7, sp, #0
 80034c2:	6078      	str	r0, [r7, #4]
 80034c4:	6039      	str	r1, [r7, #0]
	/*Clear interrupt flags*/
	DMA2->LIFCR = LIFCR_CTCIF2 |LIFCR_CTEIF2;
 80034c6:	4b0c      	ldr	r3, [pc, #48]	; (80034f8 <dma2_stream2_spi_receive+0x3c>)
 80034c8:	f44f 1220 	mov.w	r2, #2621440	; 0x280000
 80034cc:	609a      	str	r2, [r3, #8]

	/*Set Peripheral address*/
	DMA2_Stream2->PAR =	(uint32_t)(&(SPI1->DR));
 80034ce:	4b0b      	ldr	r3, [pc, #44]	; (80034fc <dma2_stream2_spi_receive+0x40>)
 80034d0:	4a0b      	ldr	r2, [pc, #44]	; (8003500 <dma2_stream2_spi_receive+0x44>)
 80034d2:	609a      	str	r2, [r3, #8]

	/*Set Memory address*/
	DMA2_Stream2->M0AR = received_msg;
 80034d4:	4a09      	ldr	r2, [pc, #36]	; (80034fc <dma2_stream2_spi_receive+0x40>)
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	60d3      	str	r3, [r2, #12]

	/*Set transfer length*/
	DMA2_Stream2->NDTR = msg_len;
 80034da:	4a08      	ldr	r2, [pc, #32]	; (80034fc <dma2_stream2_spi_receive+0x40>)
 80034dc:	683b      	ldr	r3, [r7, #0]
 80034de:	6053      	str	r3, [r2, #4]

	/*Enable the DMA Stream*/
	DMA2_Stream2->CR |= DMA_SCR_EN;
 80034e0:	4b06      	ldr	r3, [pc, #24]	; (80034fc <dma2_stream2_spi_receive+0x40>)
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	4a05      	ldr	r2, [pc, #20]	; (80034fc <dma2_stream2_spi_receive+0x40>)
 80034e6:	f043 0301 	orr.w	r3, r3, #1
 80034ea:	6013      	str	r3, [r2, #0]

}
 80034ec:	bf00      	nop
 80034ee:	370c      	adds	r7, #12
 80034f0:	46bd      	mov	sp, r7
 80034f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034f6:	4770      	bx	lr
 80034f8:	40026400 	.word	0x40026400
 80034fc:	40026440 	.word	0x40026440
 8003500:	4001300c 	.word	0x4001300c

08003504 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8003504:	b480      	push	{r7}
 8003506:	af00      	add	r7, sp, #0
	return 1;
 8003508:	2301      	movs	r3, #1
}
 800350a:	4618      	mov	r0, r3
 800350c:	46bd      	mov	sp, r7
 800350e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003512:	4770      	bx	lr

08003514 <_kill>:

int _kill(int pid, int sig)
{
 8003514:	b580      	push	{r7, lr}
 8003516:	b082      	sub	sp, #8
 8003518:	af00      	add	r7, sp, #0
 800351a:	6078      	str	r0, [r7, #4]
 800351c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800351e:	f000 f9f9 	bl	8003914 <__errno>
 8003522:	4603      	mov	r3, r0
 8003524:	2216      	movs	r2, #22
 8003526:	601a      	str	r2, [r3, #0]
	return -1;
 8003528:	f04f 33ff 	mov.w	r3, #4294967295
}
 800352c:	4618      	mov	r0, r3
 800352e:	3708      	adds	r7, #8
 8003530:	46bd      	mov	sp, r7
 8003532:	bd80      	pop	{r7, pc}

08003534 <_exit>:

void _exit (int status)
{
 8003534:	b580      	push	{r7, lr}
 8003536:	b082      	sub	sp, #8
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800353c:	f04f 31ff 	mov.w	r1, #4294967295
 8003540:	6878      	ldr	r0, [r7, #4]
 8003542:	f7ff ffe7 	bl	8003514 <_kill>
	while (1) {}		/* Make sure we hang here */
 8003546:	e7fe      	b.n	8003546 <_exit+0x12>

08003548 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003548:	b580      	push	{r7, lr}
 800354a:	b086      	sub	sp, #24
 800354c:	af00      	add	r7, sp, #0
 800354e:	60f8      	str	r0, [r7, #12]
 8003550:	60b9      	str	r1, [r7, #8]
 8003552:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003554:	2300      	movs	r3, #0
 8003556:	617b      	str	r3, [r7, #20]
 8003558:	e00a      	b.n	8003570 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800355a:	f3af 8000 	nop.w
 800355e:	4601      	mov	r1, r0
 8003560:	68bb      	ldr	r3, [r7, #8]
 8003562:	1c5a      	adds	r2, r3, #1
 8003564:	60ba      	str	r2, [r7, #8]
 8003566:	b2ca      	uxtb	r2, r1
 8003568:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800356a:	697b      	ldr	r3, [r7, #20]
 800356c:	3301      	adds	r3, #1
 800356e:	617b      	str	r3, [r7, #20]
 8003570:	697a      	ldr	r2, [r7, #20]
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	429a      	cmp	r2, r3
 8003576:	dbf0      	blt.n	800355a <_read+0x12>
	}

return len;
 8003578:	687b      	ldr	r3, [r7, #4]
}
 800357a:	4618      	mov	r0, r3
 800357c:	3718      	adds	r7, #24
 800357e:	46bd      	mov	sp, r7
 8003580:	bd80      	pop	{r7, pc}

08003582 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8003582:	b580      	push	{r7, lr}
 8003584:	b086      	sub	sp, #24
 8003586:	af00      	add	r7, sp, #0
 8003588:	60f8      	str	r0, [r7, #12]
 800358a:	60b9      	str	r1, [r7, #8]
 800358c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800358e:	2300      	movs	r3, #0
 8003590:	617b      	str	r3, [r7, #20]
 8003592:	e009      	b.n	80035a8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8003594:	68bb      	ldr	r3, [r7, #8]
 8003596:	1c5a      	adds	r2, r3, #1
 8003598:	60ba      	str	r2, [r7, #8]
 800359a:	781b      	ldrb	r3, [r3, #0]
 800359c:	4618      	mov	r0, r3
 800359e:	f000 f96b 	bl	8003878 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80035a2:	697b      	ldr	r3, [r7, #20]
 80035a4:	3301      	adds	r3, #1
 80035a6:	617b      	str	r3, [r7, #20]
 80035a8:	697a      	ldr	r2, [r7, #20]
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	429a      	cmp	r2, r3
 80035ae:	dbf1      	blt.n	8003594 <_write+0x12>
	}
	return len;
 80035b0:	687b      	ldr	r3, [r7, #4]
}
 80035b2:	4618      	mov	r0, r3
 80035b4:	3718      	adds	r7, #24
 80035b6:	46bd      	mov	sp, r7
 80035b8:	bd80      	pop	{r7, pc}

080035ba <_close>:

int _close(int file)
{
 80035ba:	b480      	push	{r7}
 80035bc:	b083      	sub	sp, #12
 80035be:	af00      	add	r7, sp, #0
 80035c0:	6078      	str	r0, [r7, #4]
	return -1;
 80035c2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80035c6:	4618      	mov	r0, r3
 80035c8:	370c      	adds	r7, #12
 80035ca:	46bd      	mov	sp, r7
 80035cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035d0:	4770      	bx	lr

080035d2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80035d2:	b480      	push	{r7}
 80035d4:	b083      	sub	sp, #12
 80035d6:	af00      	add	r7, sp, #0
 80035d8:	6078      	str	r0, [r7, #4]
 80035da:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80035dc:	683b      	ldr	r3, [r7, #0]
 80035de:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80035e2:	605a      	str	r2, [r3, #4]
	return 0;
 80035e4:	2300      	movs	r3, #0
}
 80035e6:	4618      	mov	r0, r3
 80035e8:	370c      	adds	r7, #12
 80035ea:	46bd      	mov	sp, r7
 80035ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f0:	4770      	bx	lr

080035f2 <_isatty>:

int _isatty(int file)
{
 80035f2:	b480      	push	{r7}
 80035f4:	b083      	sub	sp, #12
 80035f6:	af00      	add	r7, sp, #0
 80035f8:	6078      	str	r0, [r7, #4]
	return 1;
 80035fa:	2301      	movs	r3, #1
}
 80035fc:	4618      	mov	r0, r3
 80035fe:	370c      	adds	r7, #12
 8003600:	46bd      	mov	sp, r7
 8003602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003606:	4770      	bx	lr

08003608 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8003608:	b480      	push	{r7}
 800360a:	b085      	sub	sp, #20
 800360c:	af00      	add	r7, sp, #0
 800360e:	60f8      	str	r0, [r7, #12]
 8003610:	60b9      	str	r1, [r7, #8]
 8003612:	607a      	str	r2, [r7, #4]
	return 0;
 8003614:	2300      	movs	r3, #0
}
 8003616:	4618      	mov	r0, r3
 8003618:	3714      	adds	r7, #20
 800361a:	46bd      	mov	sp, r7
 800361c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003620:	4770      	bx	lr
	...

08003624 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8003624:	b580      	push	{r7, lr}
 8003626:	b086      	sub	sp, #24
 8003628:	af00      	add	r7, sp, #0
 800362a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800362c:	4a14      	ldr	r2, [pc, #80]	; (8003680 <_sbrk+0x5c>)
 800362e:	4b15      	ldr	r3, [pc, #84]	; (8003684 <_sbrk+0x60>)
 8003630:	1ad3      	subs	r3, r2, r3
 8003632:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003634:	697b      	ldr	r3, [r7, #20]
 8003636:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8003638:	4b13      	ldr	r3, [pc, #76]	; (8003688 <_sbrk+0x64>)
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	2b00      	cmp	r3, #0
 800363e:	d102      	bne.n	8003646 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003640:	4b11      	ldr	r3, [pc, #68]	; (8003688 <_sbrk+0x64>)
 8003642:	4a12      	ldr	r2, [pc, #72]	; (800368c <_sbrk+0x68>)
 8003644:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8003646:	4b10      	ldr	r3, [pc, #64]	; (8003688 <_sbrk+0x64>)
 8003648:	681a      	ldr	r2, [r3, #0]
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	4413      	add	r3, r2
 800364e:	693a      	ldr	r2, [r7, #16]
 8003650:	429a      	cmp	r2, r3
 8003652:	d207      	bcs.n	8003664 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003654:	f000 f95e 	bl	8003914 <__errno>
 8003658:	4603      	mov	r3, r0
 800365a:	220c      	movs	r2, #12
 800365c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800365e:	f04f 33ff 	mov.w	r3, #4294967295
 8003662:	e009      	b.n	8003678 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003664:	4b08      	ldr	r3, [pc, #32]	; (8003688 <_sbrk+0x64>)
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800366a:	4b07      	ldr	r3, [pc, #28]	; (8003688 <_sbrk+0x64>)
 800366c:	681a      	ldr	r2, [r3, #0]
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	4413      	add	r3, r2
 8003672:	4a05      	ldr	r2, [pc, #20]	; (8003688 <_sbrk+0x64>)
 8003674:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8003676:	68fb      	ldr	r3, [r7, #12]
}
 8003678:	4618      	mov	r0, r3
 800367a:	3718      	adds	r7, #24
 800367c:	46bd      	mov	sp, r7
 800367e:	bd80      	pop	{r7, pc}
 8003680:	20020000 	.word	0x20020000
 8003684:	00000400 	.word	0x00000400
 8003688:	20000348 	.word	0x20000348
 800368c:	20000360 	.word	0x20000360

08003690 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8003690:	b480      	push	{r7}
 8003692:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003694:	4b06      	ldr	r3, [pc, #24]	; (80036b0 <SystemInit+0x20>)
 8003696:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800369a:	4a05      	ldr	r2, [pc, #20]	; (80036b0 <SystemInit+0x20>)
 800369c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80036a0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80036a4:	bf00      	nop
 80036a6:	46bd      	mov	sp, r7
 80036a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ac:	4770      	bx	lr
 80036ae:	bf00      	nop
 80036b0:	e000ed00 	.word	0xe000ed00

080036b4 <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 80036b4:	b480      	push	{r7}
 80036b6:	b087      	sub	sp, #28
 80036b8:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 80036ba:	2300      	movs	r3, #0
 80036bc:	613b      	str	r3, [r7, #16]
 80036be:	2300      	movs	r3, #0
 80036c0:	617b      	str	r3, [r7, #20]
 80036c2:	2302      	movs	r3, #2
 80036c4:	60fb      	str	r3, [r7, #12]
 80036c6:	2300      	movs	r3, #0
 80036c8:	60bb      	str	r3, [r7, #8]
 80036ca:	2302      	movs	r3, #2
 80036cc:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 80036ce:	4b34      	ldr	r3, [pc, #208]	; (80037a0 <SystemCoreClockUpdate+0xec>)
 80036d0:	689b      	ldr	r3, [r3, #8]
 80036d2:	f003 030c 	and.w	r3, r3, #12
 80036d6:	613b      	str	r3, [r7, #16]

  switch (tmp)
 80036d8:	693b      	ldr	r3, [r7, #16]
 80036da:	2b08      	cmp	r3, #8
 80036dc:	d011      	beq.n	8003702 <SystemCoreClockUpdate+0x4e>
 80036de:	693b      	ldr	r3, [r7, #16]
 80036e0:	2b08      	cmp	r3, #8
 80036e2:	d844      	bhi.n	800376e <SystemCoreClockUpdate+0xba>
 80036e4:	693b      	ldr	r3, [r7, #16]
 80036e6:	2b00      	cmp	r3, #0
 80036e8:	d003      	beq.n	80036f2 <SystemCoreClockUpdate+0x3e>
 80036ea:	693b      	ldr	r3, [r7, #16]
 80036ec:	2b04      	cmp	r3, #4
 80036ee:	d004      	beq.n	80036fa <SystemCoreClockUpdate+0x46>
 80036f0:	e03d      	b.n	800376e <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 80036f2:	4b2c      	ldr	r3, [pc, #176]	; (80037a4 <SystemCoreClockUpdate+0xf0>)
 80036f4:	4a2c      	ldr	r2, [pc, #176]	; (80037a8 <SystemCoreClockUpdate+0xf4>)
 80036f6:	601a      	str	r2, [r3, #0]
      break;
 80036f8:	e03d      	b.n	8003776 <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 80036fa:	4b2a      	ldr	r3, [pc, #168]	; (80037a4 <SystemCoreClockUpdate+0xf0>)
 80036fc:	4a2b      	ldr	r2, [pc, #172]	; (80037ac <SystemCoreClockUpdate+0xf8>)
 80036fe:	601a      	str	r2, [r3, #0]
      break;
 8003700:	e039      	b.n	8003776 <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8003702:	4b27      	ldr	r3, [pc, #156]	; (80037a0 <SystemCoreClockUpdate+0xec>)
 8003704:	685b      	ldr	r3, [r3, #4]
 8003706:	0d9b      	lsrs	r3, r3, #22
 8003708:	f003 0301 	and.w	r3, r3, #1
 800370c:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800370e:	4b24      	ldr	r3, [pc, #144]	; (80037a0 <SystemCoreClockUpdate+0xec>)
 8003710:	685b      	ldr	r3, [r3, #4]
 8003712:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003716:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 8003718:	68bb      	ldr	r3, [r7, #8]
 800371a:	2b00      	cmp	r3, #0
 800371c:	d00c      	beq.n	8003738 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 800371e:	4a23      	ldr	r2, [pc, #140]	; (80037ac <SystemCoreClockUpdate+0xf8>)
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	fbb2 f3f3 	udiv	r3, r2, r3
 8003726:	4a1e      	ldr	r2, [pc, #120]	; (80037a0 <SystemCoreClockUpdate+0xec>)
 8003728:	6852      	ldr	r2, [r2, #4]
 800372a:	0992      	lsrs	r2, r2, #6
 800372c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003730:	fb02 f303 	mul.w	r3, r2, r3
 8003734:	617b      	str	r3, [r7, #20]
 8003736:	e00b      	b.n	8003750 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8003738:	4a1b      	ldr	r2, [pc, #108]	; (80037a8 <SystemCoreClockUpdate+0xf4>)
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003740:	4a17      	ldr	r2, [pc, #92]	; (80037a0 <SystemCoreClockUpdate+0xec>)
 8003742:	6852      	ldr	r2, [r2, #4]
 8003744:	0992      	lsrs	r2, r2, #6
 8003746:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800374a:	fb02 f303 	mul.w	r3, r2, r3
 800374e:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8003750:	4b13      	ldr	r3, [pc, #76]	; (80037a0 <SystemCoreClockUpdate+0xec>)
 8003752:	685b      	ldr	r3, [r3, #4]
 8003754:	0c1b      	lsrs	r3, r3, #16
 8003756:	f003 0303 	and.w	r3, r3, #3
 800375a:	3301      	adds	r3, #1
 800375c:	005b      	lsls	r3, r3, #1
 800375e:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 8003760:	697a      	ldr	r2, [r7, #20]
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	fbb2 f3f3 	udiv	r3, r2, r3
 8003768:	4a0e      	ldr	r2, [pc, #56]	; (80037a4 <SystemCoreClockUpdate+0xf0>)
 800376a:	6013      	str	r3, [r2, #0]
      break;
 800376c:	e003      	b.n	8003776 <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 800376e:	4b0d      	ldr	r3, [pc, #52]	; (80037a4 <SystemCoreClockUpdate+0xf0>)
 8003770:	4a0d      	ldr	r2, [pc, #52]	; (80037a8 <SystemCoreClockUpdate+0xf4>)
 8003772:	601a      	str	r2, [r3, #0]
      break;
 8003774:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 8003776:	4b0a      	ldr	r3, [pc, #40]	; (80037a0 <SystemCoreClockUpdate+0xec>)
 8003778:	689b      	ldr	r3, [r3, #8]
 800377a:	091b      	lsrs	r3, r3, #4
 800377c:	f003 030f 	and.w	r3, r3, #15
 8003780:	4a0b      	ldr	r2, [pc, #44]	; (80037b0 <SystemCoreClockUpdate+0xfc>)
 8003782:	5cd3      	ldrb	r3, [r2, r3]
 8003784:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8003786:	4b07      	ldr	r3, [pc, #28]	; (80037a4 <SystemCoreClockUpdate+0xf0>)
 8003788:	681a      	ldr	r2, [r3, #0]
 800378a:	693b      	ldr	r3, [r7, #16]
 800378c:	fa22 f303 	lsr.w	r3, r2, r3
 8003790:	4a04      	ldr	r2, [pc, #16]	; (80037a4 <SystemCoreClockUpdate+0xf0>)
 8003792:	6013      	str	r3, [r2, #0]
}
 8003794:	bf00      	nop
 8003796:	371c      	adds	r7, #28
 8003798:	46bd      	mov	sp, r7
 800379a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800379e:	4770      	bx	lr
 80037a0:	40023800 	.word	0x40023800
 80037a4:	20000028 	.word	0x20000028
 80037a8:	00f42400 	.word	0x00f42400
 80037ac:	017d7840 	.word	0x017d7840
 80037b0:	080092b8 	.word	0x080092b8

080037b4 <systick_counter_init>:
#define CTRL_ENABLE		(1U<<0)
#define CTRL_TICKINT	(1U<<1)
#define CTRL_CLKSRC		(1U<<2)

void systick_counter_init(void)
{
 80037b4:	b480      	push	{r7}
 80037b6:	af00      	add	r7, sp, #0
	/*Disable systick before setup*/
	SysTick->CTRL = 0;
 80037b8:	4b08      	ldr	r3, [pc, #32]	; (80037dc <systick_counter_init+0x28>)
 80037ba:	2200      	movs	r2, #0
 80037bc:	601a      	str	r2, [r3, #0]

	/*Load Systick reload register with maximum value*/
	SysTick->LOAD = 0x00FFFFFF;
 80037be:	4b07      	ldr	r3, [pc, #28]	; (80037dc <systick_counter_init+0x28>)
 80037c0:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 80037c4:	605a      	str	r2, [r3, #4]

	/*Clear Systick current value register*/
	SysTick->VAL = 0;
 80037c6:	4b05      	ldr	r3, [pc, #20]	; (80037dc <systick_counter_init+0x28>)
 80037c8:	2200      	movs	r2, #0
 80037ca:	609a      	str	r2, [r3, #8]

	/*Select internal clock source and enable SysTick*/
	SysTick->CTRL = CTRL_CLKSRC | CTRL_ENABLE;
 80037cc:	4b03      	ldr	r3, [pc, #12]	; (80037dc <systick_counter_init+0x28>)
 80037ce:	2205      	movs	r2, #5
 80037d0:	601a      	str	r2, [r3, #0]


}
 80037d2:	bf00      	nop
 80037d4:	46bd      	mov	sp, r7
 80037d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037da:	4770      	bx	lr
 80037dc:	e000e010 	.word	0xe000e010

080037e0 <__NVIC_EnableIRQ>:
{
 80037e0:	b480      	push	{r7}
 80037e2:	b083      	sub	sp, #12
 80037e4:	af00      	add	r7, sp, #0
 80037e6:	4603      	mov	r3, r0
 80037e8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80037ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	db0b      	blt.n	800380a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80037f2:	79fb      	ldrb	r3, [r7, #7]
 80037f4:	f003 021f 	and.w	r2, r3, #31
 80037f8:	4907      	ldr	r1, [pc, #28]	; (8003818 <__NVIC_EnableIRQ+0x38>)
 80037fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037fe:	095b      	lsrs	r3, r3, #5
 8003800:	2001      	movs	r0, #1
 8003802:	fa00 f202 	lsl.w	r2, r0, r2
 8003806:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800380a:	bf00      	nop
 800380c:	370c      	adds	r7, #12
 800380e:	46bd      	mov	sp, r7
 8003810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003814:	4770      	bx	lr
 8003816:	bf00      	nop
 8003818:	e000e100 	.word	0xe000e100

0800381c <tim2_1khz_interrupt_init>:
	return 1;
}


float tim2_1khz_interrupt_init(void)
{
 800381c:	b580      	push	{r7, lr}
 800381e:	af00      	add	r7, sp, #0
	/*enable clock access to tim2*/
	RCC->APB1ENR |= TIM2EN;
 8003820:	4b13      	ldr	r3, [pc, #76]	; (8003870 <tim2_1khz_interrupt_init+0x54>)
 8003822:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003824:	4a12      	ldr	r2, [pc, #72]	; (8003870 <tim2_1khz_interrupt_init+0x54>)
 8003826:	f043 0301 	orr.w	r3, r3, #1
 800382a:	6413      	str	r3, [r2, #64]	; 0x40

	/*Set prescaler value*/
	TIM2->PSC = 16-1;  // (clk_freq) 16 000 000/ (prescaler) 16 = 1 000 000 (1MHz)
 800382c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003830:	220f      	movs	r2, #15
 8003832:	629a      	str	r2, [r3, #40]	; 0x28

	/*Set auto-reload value*/
	TIM2->ARR = 1000-1;  // 1 000 / 1 000 000 = 1e-3s = 1 ms
 8003834:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003838:	f240 32e7 	movw	r2, #999	; 0x3e7
 800383c:	62da      	str	r2, [r3, #44]	; 0x2c

	/*Clear counter*/
	TIM2->CNT = 0;	// komplettes Register Null-setzen
 800383e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003842:	2200      	movs	r2, #0
 8003844:	625a      	str	r2, [r3, #36]	; 0x24

	/*Enable timer*/
	TIM2->CR1 = CR1_CEN;
 8003846:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800384a:	2201      	movs	r2, #1
 800384c:	601a      	str	r2, [r3, #0]

	/*Enable TIM interrupt*/
	TIM2->DIER |= DIER_UIE;
 800384e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003852:	68db      	ldr	r3, [r3, #12]
 8003854:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003858:	f043 0301 	orr.w	r3, r3, #1
 800385c:	60d3      	str	r3, [r2, #12]

	/*Enable TIM interrupt in NVIC*/
	NVIC_EnableIRQ(TIM2_IRQn);
 800385e:	201c      	movs	r0, #28
 8003860:	f7ff ffbe 	bl	80037e0 <__NVIC_EnableIRQ>

	return 0.001;
 8003864:	4b03      	ldr	r3, [pc, #12]	; (8003874 <tim2_1khz_interrupt_init+0x58>)
 8003866:	ee07 3a90 	vmov	s15, r3
}
 800386a:	eeb0 0a67 	vmov.f32	s0, s15
 800386e:	bd80      	pop	{r7, pc}
 8003870:	40023800 	.word	0x40023800
 8003874:	3a83126f 	.word	0x3a83126f

08003878 <__io_putchar>:
static void uart_set_baudrate(uint32_t periph_clk, uint32_t baudrate);
static void uart2_write(int ch);


int __io_putchar(int ch)
{
 8003878:	b580      	push	{r7, lr}
 800387a:	b082      	sub	sp, #8
 800387c:	af00      	add	r7, sp, #0
 800387e:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8003880:	6878      	ldr	r0, [r7, #4]
 8003882:	f000 f805 	bl	8003890 <uart2_write>
	return ch;
 8003886:	687b      	ldr	r3, [r7, #4]
}
 8003888:	4618      	mov	r0, r3
 800388a:	3708      	adds	r7, #8
 800388c:	46bd      	mov	sp, r7
 800388e:	bd80      	pop	{r7, pc}

08003890 <uart2_write>:
	/*7. Enable uart module*/
	 USART2->CR1 |= CR1_UE;
}

static void uart2_write(int ch)
{
 8003890:	b480      	push	{r7}
 8003892:	b083      	sub	sp, #12
 8003894:	af00      	add	r7, sp, #0
 8003896:	6078      	str	r0, [r7, #4]
	/*Make sure the transmit data register is empty*/
	while(!(USART2->SR & SR_TXE)){}
 8003898:	bf00      	nop
 800389a:	4b08      	ldr	r3, [pc, #32]	; (80038bc <uart2_write+0x2c>)
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	d0f9      	beq.n	800389a <uart2_write+0xa>

	/*Write to transmit data register*/
	USART2->DR = (ch & 0xFF);
 80038a6:	687b      	ldr	r3, [r7, #4]
 80038a8:	4a04      	ldr	r2, [pc, #16]	; (80038bc <uart2_write+0x2c>)
 80038aa:	b2db      	uxtb	r3, r3
 80038ac:	6053      	str	r3, [r2, #4]
}
 80038ae:	bf00      	nop
 80038b0:	370c      	adds	r7, #12
 80038b2:	46bd      	mov	sp, r7
 80038b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038b8:	4770      	bx	lr
 80038ba:	bf00      	nop
 80038bc:	40004400 	.word	0x40004400

080038c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80038c0:	480d      	ldr	r0, [pc, #52]	; (80038f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80038c2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80038c4:	f7ff fee4 	bl	8003690 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80038c8:	480c      	ldr	r0, [pc, #48]	; (80038fc <LoopForever+0x6>)
  ldr r1, =_edata
 80038ca:	490d      	ldr	r1, [pc, #52]	; (8003900 <LoopForever+0xa>)
  ldr r2, =_sidata
 80038cc:	4a0d      	ldr	r2, [pc, #52]	; (8003904 <LoopForever+0xe>)
  movs r3, #0
 80038ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80038d0:	e002      	b.n	80038d8 <LoopCopyDataInit>

080038d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80038d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80038d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80038d6:	3304      	adds	r3, #4

080038d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80038d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80038da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80038dc:	d3f9      	bcc.n	80038d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80038de:	4a0a      	ldr	r2, [pc, #40]	; (8003908 <LoopForever+0x12>)
  ldr r4, =_ebss
 80038e0:	4c0a      	ldr	r4, [pc, #40]	; (800390c <LoopForever+0x16>)
  movs r3, #0
 80038e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80038e4:	e001      	b.n	80038ea <LoopFillZerobss>

080038e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80038e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80038e8:	3204      	adds	r2, #4

080038ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80038ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80038ec:	d3fb      	bcc.n	80038e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80038ee:	f000 f817 	bl	8003920 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80038f2:	f7fe fec9 	bl	8002688 <main>

080038f6 <LoopForever>:

LoopForever:
    b LoopForever
 80038f6:	e7fe      	b.n	80038f6 <LoopForever>
  ldr   r0, =_estack
 80038f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80038fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003900:	20000200 	.word	0x20000200
  ldr r2, =_sidata
 8003904:	08009b84 	.word	0x08009b84
  ldr r2, =_sbss
 8003908:	20000200 	.word	0x20000200
  ldr r4, =_ebss
 800390c:	2000035c 	.word	0x2000035c

08003910 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003910:	e7fe      	b.n	8003910 <ADC_IRQHandler>
	...

08003914 <__errno>:
 8003914:	4b01      	ldr	r3, [pc, #4]	; (800391c <__errno+0x8>)
 8003916:	6818      	ldr	r0, [r3, #0]
 8003918:	4770      	bx	lr
 800391a:	bf00      	nop
 800391c:	2000002c 	.word	0x2000002c

08003920 <__libc_init_array>:
 8003920:	b570      	push	{r4, r5, r6, lr}
 8003922:	4d0d      	ldr	r5, [pc, #52]	; (8003958 <__libc_init_array+0x38>)
 8003924:	4c0d      	ldr	r4, [pc, #52]	; (800395c <__libc_init_array+0x3c>)
 8003926:	1b64      	subs	r4, r4, r5
 8003928:	10a4      	asrs	r4, r4, #2
 800392a:	2600      	movs	r6, #0
 800392c:	42a6      	cmp	r6, r4
 800392e:	d109      	bne.n	8003944 <__libc_init_array+0x24>
 8003930:	4d0b      	ldr	r5, [pc, #44]	; (8003960 <__libc_init_array+0x40>)
 8003932:	4c0c      	ldr	r4, [pc, #48]	; (8003964 <__libc_init_array+0x44>)
 8003934:	f005 fcb2 	bl	800929c <_init>
 8003938:	1b64      	subs	r4, r4, r5
 800393a:	10a4      	asrs	r4, r4, #2
 800393c:	2600      	movs	r6, #0
 800393e:	42a6      	cmp	r6, r4
 8003940:	d105      	bne.n	800394e <__libc_init_array+0x2e>
 8003942:	bd70      	pop	{r4, r5, r6, pc}
 8003944:	f855 3b04 	ldr.w	r3, [r5], #4
 8003948:	4798      	blx	r3
 800394a:	3601      	adds	r6, #1
 800394c:	e7ee      	b.n	800392c <__libc_init_array+0xc>
 800394e:	f855 3b04 	ldr.w	r3, [r5], #4
 8003952:	4798      	blx	r3
 8003954:	3601      	adds	r6, #1
 8003956:	e7f2      	b.n	800393e <__libc_init_array+0x1e>
 8003958:	08009b7c 	.word	0x08009b7c
 800395c:	08009b7c 	.word	0x08009b7c
 8003960:	08009b7c 	.word	0x08009b7c
 8003964:	08009b80 	.word	0x08009b80

08003968 <memset>:
 8003968:	4402      	add	r2, r0
 800396a:	4603      	mov	r3, r0
 800396c:	4293      	cmp	r3, r2
 800396e:	d100      	bne.n	8003972 <memset+0xa>
 8003970:	4770      	bx	lr
 8003972:	f803 1b01 	strb.w	r1, [r3], #1
 8003976:	e7f9      	b.n	800396c <memset+0x4>

08003978 <__cvt>:
 8003978:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800397c:	ec55 4b10 	vmov	r4, r5, d0
 8003980:	2d00      	cmp	r5, #0
 8003982:	460e      	mov	r6, r1
 8003984:	4619      	mov	r1, r3
 8003986:	462b      	mov	r3, r5
 8003988:	bfbb      	ittet	lt
 800398a:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800398e:	461d      	movlt	r5, r3
 8003990:	2300      	movge	r3, #0
 8003992:	232d      	movlt	r3, #45	; 0x2d
 8003994:	700b      	strb	r3, [r1, #0]
 8003996:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003998:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800399c:	4691      	mov	r9, r2
 800399e:	f023 0820 	bic.w	r8, r3, #32
 80039a2:	bfbc      	itt	lt
 80039a4:	4622      	movlt	r2, r4
 80039a6:	4614      	movlt	r4, r2
 80039a8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80039ac:	d005      	beq.n	80039ba <__cvt+0x42>
 80039ae:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80039b2:	d100      	bne.n	80039b6 <__cvt+0x3e>
 80039b4:	3601      	adds	r6, #1
 80039b6:	2102      	movs	r1, #2
 80039b8:	e000      	b.n	80039bc <__cvt+0x44>
 80039ba:	2103      	movs	r1, #3
 80039bc:	ab03      	add	r3, sp, #12
 80039be:	9301      	str	r3, [sp, #4]
 80039c0:	ab02      	add	r3, sp, #8
 80039c2:	9300      	str	r3, [sp, #0]
 80039c4:	ec45 4b10 	vmov	d0, r4, r5
 80039c8:	4653      	mov	r3, sl
 80039ca:	4632      	mov	r2, r6
 80039cc:	f001 fdac 	bl	8005528 <_dtoa_r>
 80039d0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80039d4:	4607      	mov	r7, r0
 80039d6:	d102      	bne.n	80039de <__cvt+0x66>
 80039d8:	f019 0f01 	tst.w	r9, #1
 80039dc:	d022      	beq.n	8003a24 <__cvt+0xac>
 80039de:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80039e2:	eb07 0906 	add.w	r9, r7, r6
 80039e6:	d110      	bne.n	8003a0a <__cvt+0x92>
 80039e8:	783b      	ldrb	r3, [r7, #0]
 80039ea:	2b30      	cmp	r3, #48	; 0x30
 80039ec:	d10a      	bne.n	8003a04 <__cvt+0x8c>
 80039ee:	2200      	movs	r2, #0
 80039f0:	2300      	movs	r3, #0
 80039f2:	4620      	mov	r0, r4
 80039f4:	4629      	mov	r1, r5
 80039f6:	f7fd f86f 	bl	8000ad8 <__aeabi_dcmpeq>
 80039fa:	b918      	cbnz	r0, 8003a04 <__cvt+0x8c>
 80039fc:	f1c6 0601 	rsb	r6, r6, #1
 8003a00:	f8ca 6000 	str.w	r6, [sl]
 8003a04:	f8da 3000 	ldr.w	r3, [sl]
 8003a08:	4499      	add	r9, r3
 8003a0a:	2200      	movs	r2, #0
 8003a0c:	2300      	movs	r3, #0
 8003a0e:	4620      	mov	r0, r4
 8003a10:	4629      	mov	r1, r5
 8003a12:	f7fd f861 	bl	8000ad8 <__aeabi_dcmpeq>
 8003a16:	b108      	cbz	r0, 8003a1c <__cvt+0xa4>
 8003a18:	f8cd 900c 	str.w	r9, [sp, #12]
 8003a1c:	2230      	movs	r2, #48	; 0x30
 8003a1e:	9b03      	ldr	r3, [sp, #12]
 8003a20:	454b      	cmp	r3, r9
 8003a22:	d307      	bcc.n	8003a34 <__cvt+0xbc>
 8003a24:	9b03      	ldr	r3, [sp, #12]
 8003a26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003a28:	1bdb      	subs	r3, r3, r7
 8003a2a:	4638      	mov	r0, r7
 8003a2c:	6013      	str	r3, [r2, #0]
 8003a2e:	b004      	add	sp, #16
 8003a30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a34:	1c59      	adds	r1, r3, #1
 8003a36:	9103      	str	r1, [sp, #12]
 8003a38:	701a      	strb	r2, [r3, #0]
 8003a3a:	e7f0      	b.n	8003a1e <__cvt+0xa6>

08003a3c <__exponent>:
 8003a3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003a3e:	4603      	mov	r3, r0
 8003a40:	2900      	cmp	r1, #0
 8003a42:	bfb8      	it	lt
 8003a44:	4249      	neglt	r1, r1
 8003a46:	f803 2b02 	strb.w	r2, [r3], #2
 8003a4a:	bfb4      	ite	lt
 8003a4c:	222d      	movlt	r2, #45	; 0x2d
 8003a4e:	222b      	movge	r2, #43	; 0x2b
 8003a50:	2909      	cmp	r1, #9
 8003a52:	7042      	strb	r2, [r0, #1]
 8003a54:	dd2a      	ble.n	8003aac <__exponent+0x70>
 8003a56:	f10d 0407 	add.w	r4, sp, #7
 8003a5a:	46a4      	mov	ip, r4
 8003a5c:	270a      	movs	r7, #10
 8003a5e:	46a6      	mov	lr, r4
 8003a60:	460a      	mov	r2, r1
 8003a62:	fb91 f6f7 	sdiv	r6, r1, r7
 8003a66:	fb07 1516 	mls	r5, r7, r6, r1
 8003a6a:	3530      	adds	r5, #48	; 0x30
 8003a6c:	2a63      	cmp	r2, #99	; 0x63
 8003a6e:	f104 34ff 	add.w	r4, r4, #4294967295
 8003a72:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8003a76:	4631      	mov	r1, r6
 8003a78:	dcf1      	bgt.n	8003a5e <__exponent+0x22>
 8003a7a:	3130      	adds	r1, #48	; 0x30
 8003a7c:	f1ae 0502 	sub.w	r5, lr, #2
 8003a80:	f804 1c01 	strb.w	r1, [r4, #-1]
 8003a84:	1c44      	adds	r4, r0, #1
 8003a86:	4629      	mov	r1, r5
 8003a88:	4561      	cmp	r1, ip
 8003a8a:	d30a      	bcc.n	8003aa2 <__exponent+0x66>
 8003a8c:	f10d 0209 	add.w	r2, sp, #9
 8003a90:	eba2 020e 	sub.w	r2, r2, lr
 8003a94:	4565      	cmp	r5, ip
 8003a96:	bf88      	it	hi
 8003a98:	2200      	movhi	r2, #0
 8003a9a:	4413      	add	r3, r2
 8003a9c:	1a18      	subs	r0, r3, r0
 8003a9e:	b003      	add	sp, #12
 8003aa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003aa2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003aa6:	f804 2f01 	strb.w	r2, [r4, #1]!
 8003aaa:	e7ed      	b.n	8003a88 <__exponent+0x4c>
 8003aac:	2330      	movs	r3, #48	; 0x30
 8003aae:	3130      	adds	r1, #48	; 0x30
 8003ab0:	7083      	strb	r3, [r0, #2]
 8003ab2:	70c1      	strb	r1, [r0, #3]
 8003ab4:	1d03      	adds	r3, r0, #4
 8003ab6:	e7f1      	b.n	8003a9c <__exponent+0x60>

08003ab8 <_printf_float>:
 8003ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003abc:	ed2d 8b02 	vpush	{d8}
 8003ac0:	b08d      	sub	sp, #52	; 0x34
 8003ac2:	460c      	mov	r4, r1
 8003ac4:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8003ac8:	4616      	mov	r6, r2
 8003aca:	461f      	mov	r7, r3
 8003acc:	4605      	mov	r5, r0
 8003ace:	f002 ff7d 	bl	80069cc <_localeconv_r>
 8003ad2:	f8d0 a000 	ldr.w	sl, [r0]
 8003ad6:	4650      	mov	r0, sl
 8003ad8:	f7fc fb82 	bl	80001e0 <strlen>
 8003adc:	2300      	movs	r3, #0
 8003ade:	930a      	str	r3, [sp, #40]	; 0x28
 8003ae0:	6823      	ldr	r3, [r4, #0]
 8003ae2:	9305      	str	r3, [sp, #20]
 8003ae4:	f8d8 3000 	ldr.w	r3, [r8]
 8003ae8:	f894 b018 	ldrb.w	fp, [r4, #24]
 8003aec:	3307      	adds	r3, #7
 8003aee:	f023 0307 	bic.w	r3, r3, #7
 8003af2:	f103 0208 	add.w	r2, r3, #8
 8003af6:	f8c8 2000 	str.w	r2, [r8]
 8003afa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003afe:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8003b02:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8003b06:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003b0a:	9307      	str	r3, [sp, #28]
 8003b0c:	f8cd 8018 	str.w	r8, [sp, #24]
 8003b10:	ee08 0a10 	vmov	s16, r0
 8003b14:	4b9f      	ldr	r3, [pc, #636]	; (8003d94 <_printf_float+0x2dc>)
 8003b16:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003b1a:	f04f 32ff 	mov.w	r2, #4294967295
 8003b1e:	f7fd f80d 	bl	8000b3c <__aeabi_dcmpun>
 8003b22:	bb88      	cbnz	r0, 8003b88 <_printf_float+0xd0>
 8003b24:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003b28:	4b9a      	ldr	r3, [pc, #616]	; (8003d94 <_printf_float+0x2dc>)
 8003b2a:	f04f 32ff 	mov.w	r2, #4294967295
 8003b2e:	f7fc ffe7 	bl	8000b00 <__aeabi_dcmple>
 8003b32:	bb48      	cbnz	r0, 8003b88 <_printf_float+0xd0>
 8003b34:	2200      	movs	r2, #0
 8003b36:	2300      	movs	r3, #0
 8003b38:	4640      	mov	r0, r8
 8003b3a:	4649      	mov	r1, r9
 8003b3c:	f7fc ffd6 	bl	8000aec <__aeabi_dcmplt>
 8003b40:	b110      	cbz	r0, 8003b48 <_printf_float+0x90>
 8003b42:	232d      	movs	r3, #45	; 0x2d
 8003b44:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003b48:	4b93      	ldr	r3, [pc, #588]	; (8003d98 <_printf_float+0x2e0>)
 8003b4a:	4894      	ldr	r0, [pc, #592]	; (8003d9c <_printf_float+0x2e4>)
 8003b4c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8003b50:	bf94      	ite	ls
 8003b52:	4698      	movls	r8, r3
 8003b54:	4680      	movhi	r8, r0
 8003b56:	2303      	movs	r3, #3
 8003b58:	6123      	str	r3, [r4, #16]
 8003b5a:	9b05      	ldr	r3, [sp, #20]
 8003b5c:	f023 0204 	bic.w	r2, r3, #4
 8003b60:	6022      	str	r2, [r4, #0]
 8003b62:	f04f 0900 	mov.w	r9, #0
 8003b66:	9700      	str	r7, [sp, #0]
 8003b68:	4633      	mov	r3, r6
 8003b6a:	aa0b      	add	r2, sp, #44	; 0x2c
 8003b6c:	4621      	mov	r1, r4
 8003b6e:	4628      	mov	r0, r5
 8003b70:	f000 f9d8 	bl	8003f24 <_printf_common>
 8003b74:	3001      	adds	r0, #1
 8003b76:	f040 8090 	bne.w	8003c9a <_printf_float+0x1e2>
 8003b7a:	f04f 30ff 	mov.w	r0, #4294967295
 8003b7e:	b00d      	add	sp, #52	; 0x34
 8003b80:	ecbd 8b02 	vpop	{d8}
 8003b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b88:	4642      	mov	r2, r8
 8003b8a:	464b      	mov	r3, r9
 8003b8c:	4640      	mov	r0, r8
 8003b8e:	4649      	mov	r1, r9
 8003b90:	f7fc ffd4 	bl	8000b3c <__aeabi_dcmpun>
 8003b94:	b140      	cbz	r0, 8003ba8 <_printf_float+0xf0>
 8003b96:	464b      	mov	r3, r9
 8003b98:	2b00      	cmp	r3, #0
 8003b9a:	bfbc      	itt	lt
 8003b9c:	232d      	movlt	r3, #45	; 0x2d
 8003b9e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8003ba2:	487f      	ldr	r0, [pc, #508]	; (8003da0 <_printf_float+0x2e8>)
 8003ba4:	4b7f      	ldr	r3, [pc, #508]	; (8003da4 <_printf_float+0x2ec>)
 8003ba6:	e7d1      	b.n	8003b4c <_printf_float+0x94>
 8003ba8:	6863      	ldr	r3, [r4, #4]
 8003baa:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8003bae:	9206      	str	r2, [sp, #24]
 8003bb0:	1c5a      	adds	r2, r3, #1
 8003bb2:	d13f      	bne.n	8003c34 <_printf_float+0x17c>
 8003bb4:	2306      	movs	r3, #6
 8003bb6:	6063      	str	r3, [r4, #4]
 8003bb8:	9b05      	ldr	r3, [sp, #20]
 8003bba:	6861      	ldr	r1, [r4, #4]
 8003bbc:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8003bc0:	2300      	movs	r3, #0
 8003bc2:	9303      	str	r3, [sp, #12]
 8003bc4:	ab0a      	add	r3, sp, #40	; 0x28
 8003bc6:	e9cd b301 	strd	fp, r3, [sp, #4]
 8003bca:	ab09      	add	r3, sp, #36	; 0x24
 8003bcc:	ec49 8b10 	vmov	d0, r8, r9
 8003bd0:	9300      	str	r3, [sp, #0]
 8003bd2:	6022      	str	r2, [r4, #0]
 8003bd4:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8003bd8:	4628      	mov	r0, r5
 8003bda:	f7ff fecd 	bl	8003978 <__cvt>
 8003bde:	9b06      	ldr	r3, [sp, #24]
 8003be0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003be2:	2b47      	cmp	r3, #71	; 0x47
 8003be4:	4680      	mov	r8, r0
 8003be6:	d108      	bne.n	8003bfa <_printf_float+0x142>
 8003be8:	1cc8      	adds	r0, r1, #3
 8003bea:	db02      	blt.n	8003bf2 <_printf_float+0x13a>
 8003bec:	6863      	ldr	r3, [r4, #4]
 8003bee:	4299      	cmp	r1, r3
 8003bf0:	dd41      	ble.n	8003c76 <_printf_float+0x1be>
 8003bf2:	f1ab 0b02 	sub.w	fp, fp, #2
 8003bf6:	fa5f fb8b 	uxtb.w	fp, fp
 8003bfa:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8003bfe:	d820      	bhi.n	8003c42 <_printf_float+0x18a>
 8003c00:	3901      	subs	r1, #1
 8003c02:	465a      	mov	r2, fp
 8003c04:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8003c08:	9109      	str	r1, [sp, #36]	; 0x24
 8003c0a:	f7ff ff17 	bl	8003a3c <__exponent>
 8003c0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003c10:	1813      	adds	r3, r2, r0
 8003c12:	2a01      	cmp	r2, #1
 8003c14:	4681      	mov	r9, r0
 8003c16:	6123      	str	r3, [r4, #16]
 8003c18:	dc02      	bgt.n	8003c20 <_printf_float+0x168>
 8003c1a:	6822      	ldr	r2, [r4, #0]
 8003c1c:	07d2      	lsls	r2, r2, #31
 8003c1e:	d501      	bpl.n	8003c24 <_printf_float+0x16c>
 8003c20:	3301      	adds	r3, #1
 8003c22:	6123      	str	r3, [r4, #16]
 8003c24:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8003c28:	2b00      	cmp	r3, #0
 8003c2a:	d09c      	beq.n	8003b66 <_printf_float+0xae>
 8003c2c:	232d      	movs	r3, #45	; 0x2d
 8003c2e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003c32:	e798      	b.n	8003b66 <_printf_float+0xae>
 8003c34:	9a06      	ldr	r2, [sp, #24]
 8003c36:	2a47      	cmp	r2, #71	; 0x47
 8003c38:	d1be      	bne.n	8003bb8 <_printf_float+0x100>
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d1bc      	bne.n	8003bb8 <_printf_float+0x100>
 8003c3e:	2301      	movs	r3, #1
 8003c40:	e7b9      	b.n	8003bb6 <_printf_float+0xfe>
 8003c42:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8003c46:	d118      	bne.n	8003c7a <_printf_float+0x1c2>
 8003c48:	2900      	cmp	r1, #0
 8003c4a:	6863      	ldr	r3, [r4, #4]
 8003c4c:	dd0b      	ble.n	8003c66 <_printf_float+0x1ae>
 8003c4e:	6121      	str	r1, [r4, #16]
 8003c50:	b913      	cbnz	r3, 8003c58 <_printf_float+0x1a0>
 8003c52:	6822      	ldr	r2, [r4, #0]
 8003c54:	07d0      	lsls	r0, r2, #31
 8003c56:	d502      	bpl.n	8003c5e <_printf_float+0x1a6>
 8003c58:	3301      	adds	r3, #1
 8003c5a:	440b      	add	r3, r1
 8003c5c:	6123      	str	r3, [r4, #16]
 8003c5e:	65a1      	str	r1, [r4, #88]	; 0x58
 8003c60:	f04f 0900 	mov.w	r9, #0
 8003c64:	e7de      	b.n	8003c24 <_printf_float+0x16c>
 8003c66:	b913      	cbnz	r3, 8003c6e <_printf_float+0x1b6>
 8003c68:	6822      	ldr	r2, [r4, #0]
 8003c6a:	07d2      	lsls	r2, r2, #31
 8003c6c:	d501      	bpl.n	8003c72 <_printf_float+0x1ba>
 8003c6e:	3302      	adds	r3, #2
 8003c70:	e7f4      	b.n	8003c5c <_printf_float+0x1a4>
 8003c72:	2301      	movs	r3, #1
 8003c74:	e7f2      	b.n	8003c5c <_printf_float+0x1a4>
 8003c76:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8003c7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003c7c:	4299      	cmp	r1, r3
 8003c7e:	db05      	blt.n	8003c8c <_printf_float+0x1d4>
 8003c80:	6823      	ldr	r3, [r4, #0]
 8003c82:	6121      	str	r1, [r4, #16]
 8003c84:	07d8      	lsls	r0, r3, #31
 8003c86:	d5ea      	bpl.n	8003c5e <_printf_float+0x1a6>
 8003c88:	1c4b      	adds	r3, r1, #1
 8003c8a:	e7e7      	b.n	8003c5c <_printf_float+0x1a4>
 8003c8c:	2900      	cmp	r1, #0
 8003c8e:	bfd4      	ite	le
 8003c90:	f1c1 0202 	rsble	r2, r1, #2
 8003c94:	2201      	movgt	r2, #1
 8003c96:	4413      	add	r3, r2
 8003c98:	e7e0      	b.n	8003c5c <_printf_float+0x1a4>
 8003c9a:	6823      	ldr	r3, [r4, #0]
 8003c9c:	055a      	lsls	r2, r3, #21
 8003c9e:	d407      	bmi.n	8003cb0 <_printf_float+0x1f8>
 8003ca0:	6923      	ldr	r3, [r4, #16]
 8003ca2:	4642      	mov	r2, r8
 8003ca4:	4631      	mov	r1, r6
 8003ca6:	4628      	mov	r0, r5
 8003ca8:	47b8      	blx	r7
 8003caa:	3001      	adds	r0, #1
 8003cac:	d12c      	bne.n	8003d08 <_printf_float+0x250>
 8003cae:	e764      	b.n	8003b7a <_printf_float+0xc2>
 8003cb0:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8003cb4:	f240 80e0 	bls.w	8003e78 <_printf_float+0x3c0>
 8003cb8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003cbc:	2200      	movs	r2, #0
 8003cbe:	2300      	movs	r3, #0
 8003cc0:	f7fc ff0a 	bl	8000ad8 <__aeabi_dcmpeq>
 8003cc4:	2800      	cmp	r0, #0
 8003cc6:	d034      	beq.n	8003d32 <_printf_float+0x27a>
 8003cc8:	4a37      	ldr	r2, [pc, #220]	; (8003da8 <_printf_float+0x2f0>)
 8003cca:	2301      	movs	r3, #1
 8003ccc:	4631      	mov	r1, r6
 8003cce:	4628      	mov	r0, r5
 8003cd0:	47b8      	blx	r7
 8003cd2:	3001      	adds	r0, #1
 8003cd4:	f43f af51 	beq.w	8003b7a <_printf_float+0xc2>
 8003cd8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003cdc:	429a      	cmp	r2, r3
 8003cde:	db02      	blt.n	8003ce6 <_printf_float+0x22e>
 8003ce0:	6823      	ldr	r3, [r4, #0]
 8003ce2:	07d8      	lsls	r0, r3, #31
 8003ce4:	d510      	bpl.n	8003d08 <_printf_float+0x250>
 8003ce6:	ee18 3a10 	vmov	r3, s16
 8003cea:	4652      	mov	r2, sl
 8003cec:	4631      	mov	r1, r6
 8003cee:	4628      	mov	r0, r5
 8003cf0:	47b8      	blx	r7
 8003cf2:	3001      	adds	r0, #1
 8003cf4:	f43f af41 	beq.w	8003b7a <_printf_float+0xc2>
 8003cf8:	f04f 0800 	mov.w	r8, #0
 8003cfc:	f104 091a 	add.w	r9, r4, #26
 8003d00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003d02:	3b01      	subs	r3, #1
 8003d04:	4543      	cmp	r3, r8
 8003d06:	dc09      	bgt.n	8003d1c <_printf_float+0x264>
 8003d08:	6823      	ldr	r3, [r4, #0]
 8003d0a:	079b      	lsls	r3, r3, #30
 8003d0c:	f100 8105 	bmi.w	8003f1a <_printf_float+0x462>
 8003d10:	68e0      	ldr	r0, [r4, #12]
 8003d12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003d14:	4298      	cmp	r0, r3
 8003d16:	bfb8      	it	lt
 8003d18:	4618      	movlt	r0, r3
 8003d1a:	e730      	b.n	8003b7e <_printf_float+0xc6>
 8003d1c:	2301      	movs	r3, #1
 8003d1e:	464a      	mov	r2, r9
 8003d20:	4631      	mov	r1, r6
 8003d22:	4628      	mov	r0, r5
 8003d24:	47b8      	blx	r7
 8003d26:	3001      	adds	r0, #1
 8003d28:	f43f af27 	beq.w	8003b7a <_printf_float+0xc2>
 8003d2c:	f108 0801 	add.w	r8, r8, #1
 8003d30:	e7e6      	b.n	8003d00 <_printf_float+0x248>
 8003d32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d34:	2b00      	cmp	r3, #0
 8003d36:	dc39      	bgt.n	8003dac <_printf_float+0x2f4>
 8003d38:	4a1b      	ldr	r2, [pc, #108]	; (8003da8 <_printf_float+0x2f0>)
 8003d3a:	2301      	movs	r3, #1
 8003d3c:	4631      	mov	r1, r6
 8003d3e:	4628      	mov	r0, r5
 8003d40:	47b8      	blx	r7
 8003d42:	3001      	adds	r0, #1
 8003d44:	f43f af19 	beq.w	8003b7a <_printf_float+0xc2>
 8003d48:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003d4c:	4313      	orrs	r3, r2
 8003d4e:	d102      	bne.n	8003d56 <_printf_float+0x29e>
 8003d50:	6823      	ldr	r3, [r4, #0]
 8003d52:	07d9      	lsls	r1, r3, #31
 8003d54:	d5d8      	bpl.n	8003d08 <_printf_float+0x250>
 8003d56:	ee18 3a10 	vmov	r3, s16
 8003d5a:	4652      	mov	r2, sl
 8003d5c:	4631      	mov	r1, r6
 8003d5e:	4628      	mov	r0, r5
 8003d60:	47b8      	blx	r7
 8003d62:	3001      	adds	r0, #1
 8003d64:	f43f af09 	beq.w	8003b7a <_printf_float+0xc2>
 8003d68:	f04f 0900 	mov.w	r9, #0
 8003d6c:	f104 0a1a 	add.w	sl, r4, #26
 8003d70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d72:	425b      	negs	r3, r3
 8003d74:	454b      	cmp	r3, r9
 8003d76:	dc01      	bgt.n	8003d7c <_printf_float+0x2c4>
 8003d78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003d7a:	e792      	b.n	8003ca2 <_printf_float+0x1ea>
 8003d7c:	2301      	movs	r3, #1
 8003d7e:	4652      	mov	r2, sl
 8003d80:	4631      	mov	r1, r6
 8003d82:	4628      	mov	r0, r5
 8003d84:	47b8      	blx	r7
 8003d86:	3001      	adds	r0, #1
 8003d88:	f43f aef7 	beq.w	8003b7a <_printf_float+0xc2>
 8003d8c:	f109 0901 	add.w	r9, r9, #1
 8003d90:	e7ee      	b.n	8003d70 <_printf_float+0x2b8>
 8003d92:	bf00      	nop
 8003d94:	7fefffff 	.word	0x7fefffff
 8003d98:	080092cc 	.word	0x080092cc
 8003d9c:	080092d0 	.word	0x080092d0
 8003da0:	080092d8 	.word	0x080092d8
 8003da4:	080092d4 	.word	0x080092d4
 8003da8:	080092dc 	.word	0x080092dc
 8003dac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003dae:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003db0:	429a      	cmp	r2, r3
 8003db2:	bfa8      	it	ge
 8003db4:	461a      	movge	r2, r3
 8003db6:	2a00      	cmp	r2, #0
 8003db8:	4691      	mov	r9, r2
 8003dba:	dc37      	bgt.n	8003e2c <_printf_float+0x374>
 8003dbc:	f04f 0b00 	mov.w	fp, #0
 8003dc0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003dc4:	f104 021a 	add.w	r2, r4, #26
 8003dc8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003dca:	9305      	str	r3, [sp, #20]
 8003dcc:	eba3 0309 	sub.w	r3, r3, r9
 8003dd0:	455b      	cmp	r3, fp
 8003dd2:	dc33      	bgt.n	8003e3c <_printf_float+0x384>
 8003dd4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003dd8:	429a      	cmp	r2, r3
 8003dda:	db3b      	blt.n	8003e54 <_printf_float+0x39c>
 8003ddc:	6823      	ldr	r3, [r4, #0]
 8003dde:	07da      	lsls	r2, r3, #31
 8003de0:	d438      	bmi.n	8003e54 <_printf_float+0x39c>
 8003de2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003de4:	9a05      	ldr	r2, [sp, #20]
 8003de6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003de8:	1a9a      	subs	r2, r3, r2
 8003dea:	eba3 0901 	sub.w	r9, r3, r1
 8003dee:	4591      	cmp	r9, r2
 8003df0:	bfa8      	it	ge
 8003df2:	4691      	movge	r9, r2
 8003df4:	f1b9 0f00 	cmp.w	r9, #0
 8003df8:	dc35      	bgt.n	8003e66 <_printf_float+0x3ae>
 8003dfa:	f04f 0800 	mov.w	r8, #0
 8003dfe:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003e02:	f104 0a1a 	add.w	sl, r4, #26
 8003e06:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8003e0a:	1a9b      	subs	r3, r3, r2
 8003e0c:	eba3 0309 	sub.w	r3, r3, r9
 8003e10:	4543      	cmp	r3, r8
 8003e12:	f77f af79 	ble.w	8003d08 <_printf_float+0x250>
 8003e16:	2301      	movs	r3, #1
 8003e18:	4652      	mov	r2, sl
 8003e1a:	4631      	mov	r1, r6
 8003e1c:	4628      	mov	r0, r5
 8003e1e:	47b8      	blx	r7
 8003e20:	3001      	adds	r0, #1
 8003e22:	f43f aeaa 	beq.w	8003b7a <_printf_float+0xc2>
 8003e26:	f108 0801 	add.w	r8, r8, #1
 8003e2a:	e7ec      	b.n	8003e06 <_printf_float+0x34e>
 8003e2c:	4613      	mov	r3, r2
 8003e2e:	4631      	mov	r1, r6
 8003e30:	4642      	mov	r2, r8
 8003e32:	4628      	mov	r0, r5
 8003e34:	47b8      	blx	r7
 8003e36:	3001      	adds	r0, #1
 8003e38:	d1c0      	bne.n	8003dbc <_printf_float+0x304>
 8003e3a:	e69e      	b.n	8003b7a <_printf_float+0xc2>
 8003e3c:	2301      	movs	r3, #1
 8003e3e:	4631      	mov	r1, r6
 8003e40:	4628      	mov	r0, r5
 8003e42:	9205      	str	r2, [sp, #20]
 8003e44:	47b8      	blx	r7
 8003e46:	3001      	adds	r0, #1
 8003e48:	f43f ae97 	beq.w	8003b7a <_printf_float+0xc2>
 8003e4c:	9a05      	ldr	r2, [sp, #20]
 8003e4e:	f10b 0b01 	add.w	fp, fp, #1
 8003e52:	e7b9      	b.n	8003dc8 <_printf_float+0x310>
 8003e54:	ee18 3a10 	vmov	r3, s16
 8003e58:	4652      	mov	r2, sl
 8003e5a:	4631      	mov	r1, r6
 8003e5c:	4628      	mov	r0, r5
 8003e5e:	47b8      	blx	r7
 8003e60:	3001      	adds	r0, #1
 8003e62:	d1be      	bne.n	8003de2 <_printf_float+0x32a>
 8003e64:	e689      	b.n	8003b7a <_printf_float+0xc2>
 8003e66:	9a05      	ldr	r2, [sp, #20]
 8003e68:	464b      	mov	r3, r9
 8003e6a:	4442      	add	r2, r8
 8003e6c:	4631      	mov	r1, r6
 8003e6e:	4628      	mov	r0, r5
 8003e70:	47b8      	blx	r7
 8003e72:	3001      	adds	r0, #1
 8003e74:	d1c1      	bne.n	8003dfa <_printf_float+0x342>
 8003e76:	e680      	b.n	8003b7a <_printf_float+0xc2>
 8003e78:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003e7a:	2a01      	cmp	r2, #1
 8003e7c:	dc01      	bgt.n	8003e82 <_printf_float+0x3ca>
 8003e7e:	07db      	lsls	r3, r3, #31
 8003e80:	d538      	bpl.n	8003ef4 <_printf_float+0x43c>
 8003e82:	2301      	movs	r3, #1
 8003e84:	4642      	mov	r2, r8
 8003e86:	4631      	mov	r1, r6
 8003e88:	4628      	mov	r0, r5
 8003e8a:	47b8      	blx	r7
 8003e8c:	3001      	adds	r0, #1
 8003e8e:	f43f ae74 	beq.w	8003b7a <_printf_float+0xc2>
 8003e92:	ee18 3a10 	vmov	r3, s16
 8003e96:	4652      	mov	r2, sl
 8003e98:	4631      	mov	r1, r6
 8003e9a:	4628      	mov	r0, r5
 8003e9c:	47b8      	blx	r7
 8003e9e:	3001      	adds	r0, #1
 8003ea0:	f43f ae6b 	beq.w	8003b7a <_printf_float+0xc2>
 8003ea4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8003ea8:	2200      	movs	r2, #0
 8003eaa:	2300      	movs	r3, #0
 8003eac:	f7fc fe14 	bl	8000ad8 <__aeabi_dcmpeq>
 8003eb0:	b9d8      	cbnz	r0, 8003eea <_printf_float+0x432>
 8003eb2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003eb4:	f108 0201 	add.w	r2, r8, #1
 8003eb8:	3b01      	subs	r3, #1
 8003eba:	4631      	mov	r1, r6
 8003ebc:	4628      	mov	r0, r5
 8003ebe:	47b8      	blx	r7
 8003ec0:	3001      	adds	r0, #1
 8003ec2:	d10e      	bne.n	8003ee2 <_printf_float+0x42a>
 8003ec4:	e659      	b.n	8003b7a <_printf_float+0xc2>
 8003ec6:	2301      	movs	r3, #1
 8003ec8:	4652      	mov	r2, sl
 8003eca:	4631      	mov	r1, r6
 8003ecc:	4628      	mov	r0, r5
 8003ece:	47b8      	blx	r7
 8003ed0:	3001      	adds	r0, #1
 8003ed2:	f43f ae52 	beq.w	8003b7a <_printf_float+0xc2>
 8003ed6:	f108 0801 	add.w	r8, r8, #1
 8003eda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003edc:	3b01      	subs	r3, #1
 8003ede:	4543      	cmp	r3, r8
 8003ee0:	dcf1      	bgt.n	8003ec6 <_printf_float+0x40e>
 8003ee2:	464b      	mov	r3, r9
 8003ee4:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8003ee8:	e6dc      	b.n	8003ca4 <_printf_float+0x1ec>
 8003eea:	f04f 0800 	mov.w	r8, #0
 8003eee:	f104 0a1a 	add.w	sl, r4, #26
 8003ef2:	e7f2      	b.n	8003eda <_printf_float+0x422>
 8003ef4:	2301      	movs	r3, #1
 8003ef6:	4642      	mov	r2, r8
 8003ef8:	e7df      	b.n	8003eba <_printf_float+0x402>
 8003efa:	2301      	movs	r3, #1
 8003efc:	464a      	mov	r2, r9
 8003efe:	4631      	mov	r1, r6
 8003f00:	4628      	mov	r0, r5
 8003f02:	47b8      	blx	r7
 8003f04:	3001      	adds	r0, #1
 8003f06:	f43f ae38 	beq.w	8003b7a <_printf_float+0xc2>
 8003f0a:	f108 0801 	add.w	r8, r8, #1
 8003f0e:	68e3      	ldr	r3, [r4, #12]
 8003f10:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003f12:	1a5b      	subs	r3, r3, r1
 8003f14:	4543      	cmp	r3, r8
 8003f16:	dcf0      	bgt.n	8003efa <_printf_float+0x442>
 8003f18:	e6fa      	b.n	8003d10 <_printf_float+0x258>
 8003f1a:	f04f 0800 	mov.w	r8, #0
 8003f1e:	f104 0919 	add.w	r9, r4, #25
 8003f22:	e7f4      	b.n	8003f0e <_printf_float+0x456>

08003f24 <_printf_common>:
 8003f24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f28:	4616      	mov	r6, r2
 8003f2a:	4699      	mov	r9, r3
 8003f2c:	688a      	ldr	r2, [r1, #8]
 8003f2e:	690b      	ldr	r3, [r1, #16]
 8003f30:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003f34:	4293      	cmp	r3, r2
 8003f36:	bfb8      	it	lt
 8003f38:	4613      	movlt	r3, r2
 8003f3a:	6033      	str	r3, [r6, #0]
 8003f3c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003f40:	4607      	mov	r7, r0
 8003f42:	460c      	mov	r4, r1
 8003f44:	b10a      	cbz	r2, 8003f4a <_printf_common+0x26>
 8003f46:	3301      	adds	r3, #1
 8003f48:	6033      	str	r3, [r6, #0]
 8003f4a:	6823      	ldr	r3, [r4, #0]
 8003f4c:	0699      	lsls	r1, r3, #26
 8003f4e:	bf42      	ittt	mi
 8003f50:	6833      	ldrmi	r3, [r6, #0]
 8003f52:	3302      	addmi	r3, #2
 8003f54:	6033      	strmi	r3, [r6, #0]
 8003f56:	6825      	ldr	r5, [r4, #0]
 8003f58:	f015 0506 	ands.w	r5, r5, #6
 8003f5c:	d106      	bne.n	8003f6c <_printf_common+0x48>
 8003f5e:	f104 0a19 	add.w	sl, r4, #25
 8003f62:	68e3      	ldr	r3, [r4, #12]
 8003f64:	6832      	ldr	r2, [r6, #0]
 8003f66:	1a9b      	subs	r3, r3, r2
 8003f68:	42ab      	cmp	r3, r5
 8003f6a:	dc26      	bgt.n	8003fba <_printf_common+0x96>
 8003f6c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003f70:	1e13      	subs	r3, r2, #0
 8003f72:	6822      	ldr	r2, [r4, #0]
 8003f74:	bf18      	it	ne
 8003f76:	2301      	movne	r3, #1
 8003f78:	0692      	lsls	r2, r2, #26
 8003f7a:	d42b      	bmi.n	8003fd4 <_printf_common+0xb0>
 8003f7c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003f80:	4649      	mov	r1, r9
 8003f82:	4638      	mov	r0, r7
 8003f84:	47c0      	blx	r8
 8003f86:	3001      	adds	r0, #1
 8003f88:	d01e      	beq.n	8003fc8 <_printf_common+0xa4>
 8003f8a:	6823      	ldr	r3, [r4, #0]
 8003f8c:	68e5      	ldr	r5, [r4, #12]
 8003f8e:	6832      	ldr	r2, [r6, #0]
 8003f90:	f003 0306 	and.w	r3, r3, #6
 8003f94:	2b04      	cmp	r3, #4
 8003f96:	bf08      	it	eq
 8003f98:	1aad      	subeq	r5, r5, r2
 8003f9a:	68a3      	ldr	r3, [r4, #8]
 8003f9c:	6922      	ldr	r2, [r4, #16]
 8003f9e:	bf0c      	ite	eq
 8003fa0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003fa4:	2500      	movne	r5, #0
 8003fa6:	4293      	cmp	r3, r2
 8003fa8:	bfc4      	itt	gt
 8003faa:	1a9b      	subgt	r3, r3, r2
 8003fac:	18ed      	addgt	r5, r5, r3
 8003fae:	2600      	movs	r6, #0
 8003fb0:	341a      	adds	r4, #26
 8003fb2:	42b5      	cmp	r5, r6
 8003fb4:	d11a      	bne.n	8003fec <_printf_common+0xc8>
 8003fb6:	2000      	movs	r0, #0
 8003fb8:	e008      	b.n	8003fcc <_printf_common+0xa8>
 8003fba:	2301      	movs	r3, #1
 8003fbc:	4652      	mov	r2, sl
 8003fbe:	4649      	mov	r1, r9
 8003fc0:	4638      	mov	r0, r7
 8003fc2:	47c0      	blx	r8
 8003fc4:	3001      	adds	r0, #1
 8003fc6:	d103      	bne.n	8003fd0 <_printf_common+0xac>
 8003fc8:	f04f 30ff 	mov.w	r0, #4294967295
 8003fcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003fd0:	3501      	adds	r5, #1
 8003fd2:	e7c6      	b.n	8003f62 <_printf_common+0x3e>
 8003fd4:	18e1      	adds	r1, r4, r3
 8003fd6:	1c5a      	adds	r2, r3, #1
 8003fd8:	2030      	movs	r0, #48	; 0x30
 8003fda:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003fde:	4422      	add	r2, r4
 8003fe0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003fe4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003fe8:	3302      	adds	r3, #2
 8003fea:	e7c7      	b.n	8003f7c <_printf_common+0x58>
 8003fec:	2301      	movs	r3, #1
 8003fee:	4622      	mov	r2, r4
 8003ff0:	4649      	mov	r1, r9
 8003ff2:	4638      	mov	r0, r7
 8003ff4:	47c0      	blx	r8
 8003ff6:	3001      	adds	r0, #1
 8003ff8:	d0e6      	beq.n	8003fc8 <_printf_common+0xa4>
 8003ffa:	3601      	adds	r6, #1
 8003ffc:	e7d9      	b.n	8003fb2 <_printf_common+0x8e>
	...

08004000 <_printf_i>:
 8004000:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004004:	7e0f      	ldrb	r7, [r1, #24]
 8004006:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004008:	2f78      	cmp	r7, #120	; 0x78
 800400a:	4691      	mov	r9, r2
 800400c:	4680      	mov	r8, r0
 800400e:	460c      	mov	r4, r1
 8004010:	469a      	mov	sl, r3
 8004012:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004016:	d807      	bhi.n	8004028 <_printf_i+0x28>
 8004018:	2f62      	cmp	r7, #98	; 0x62
 800401a:	d80a      	bhi.n	8004032 <_printf_i+0x32>
 800401c:	2f00      	cmp	r7, #0
 800401e:	f000 80d8 	beq.w	80041d2 <_printf_i+0x1d2>
 8004022:	2f58      	cmp	r7, #88	; 0x58
 8004024:	f000 80a3 	beq.w	800416e <_printf_i+0x16e>
 8004028:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800402c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004030:	e03a      	b.n	80040a8 <_printf_i+0xa8>
 8004032:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004036:	2b15      	cmp	r3, #21
 8004038:	d8f6      	bhi.n	8004028 <_printf_i+0x28>
 800403a:	a101      	add	r1, pc, #4	; (adr r1, 8004040 <_printf_i+0x40>)
 800403c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004040:	08004099 	.word	0x08004099
 8004044:	080040ad 	.word	0x080040ad
 8004048:	08004029 	.word	0x08004029
 800404c:	08004029 	.word	0x08004029
 8004050:	08004029 	.word	0x08004029
 8004054:	08004029 	.word	0x08004029
 8004058:	080040ad 	.word	0x080040ad
 800405c:	08004029 	.word	0x08004029
 8004060:	08004029 	.word	0x08004029
 8004064:	08004029 	.word	0x08004029
 8004068:	08004029 	.word	0x08004029
 800406c:	080041b9 	.word	0x080041b9
 8004070:	080040dd 	.word	0x080040dd
 8004074:	0800419b 	.word	0x0800419b
 8004078:	08004029 	.word	0x08004029
 800407c:	08004029 	.word	0x08004029
 8004080:	080041db 	.word	0x080041db
 8004084:	08004029 	.word	0x08004029
 8004088:	080040dd 	.word	0x080040dd
 800408c:	08004029 	.word	0x08004029
 8004090:	08004029 	.word	0x08004029
 8004094:	080041a3 	.word	0x080041a3
 8004098:	682b      	ldr	r3, [r5, #0]
 800409a:	1d1a      	adds	r2, r3, #4
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	602a      	str	r2, [r5, #0]
 80040a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80040a4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80040a8:	2301      	movs	r3, #1
 80040aa:	e0a3      	b.n	80041f4 <_printf_i+0x1f4>
 80040ac:	6820      	ldr	r0, [r4, #0]
 80040ae:	6829      	ldr	r1, [r5, #0]
 80040b0:	0606      	lsls	r6, r0, #24
 80040b2:	f101 0304 	add.w	r3, r1, #4
 80040b6:	d50a      	bpl.n	80040ce <_printf_i+0xce>
 80040b8:	680e      	ldr	r6, [r1, #0]
 80040ba:	602b      	str	r3, [r5, #0]
 80040bc:	2e00      	cmp	r6, #0
 80040be:	da03      	bge.n	80040c8 <_printf_i+0xc8>
 80040c0:	232d      	movs	r3, #45	; 0x2d
 80040c2:	4276      	negs	r6, r6
 80040c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80040c8:	485e      	ldr	r0, [pc, #376]	; (8004244 <_printf_i+0x244>)
 80040ca:	230a      	movs	r3, #10
 80040cc:	e019      	b.n	8004102 <_printf_i+0x102>
 80040ce:	680e      	ldr	r6, [r1, #0]
 80040d0:	602b      	str	r3, [r5, #0]
 80040d2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80040d6:	bf18      	it	ne
 80040d8:	b236      	sxthne	r6, r6
 80040da:	e7ef      	b.n	80040bc <_printf_i+0xbc>
 80040dc:	682b      	ldr	r3, [r5, #0]
 80040de:	6820      	ldr	r0, [r4, #0]
 80040e0:	1d19      	adds	r1, r3, #4
 80040e2:	6029      	str	r1, [r5, #0]
 80040e4:	0601      	lsls	r1, r0, #24
 80040e6:	d501      	bpl.n	80040ec <_printf_i+0xec>
 80040e8:	681e      	ldr	r6, [r3, #0]
 80040ea:	e002      	b.n	80040f2 <_printf_i+0xf2>
 80040ec:	0646      	lsls	r6, r0, #25
 80040ee:	d5fb      	bpl.n	80040e8 <_printf_i+0xe8>
 80040f0:	881e      	ldrh	r6, [r3, #0]
 80040f2:	4854      	ldr	r0, [pc, #336]	; (8004244 <_printf_i+0x244>)
 80040f4:	2f6f      	cmp	r7, #111	; 0x6f
 80040f6:	bf0c      	ite	eq
 80040f8:	2308      	moveq	r3, #8
 80040fa:	230a      	movne	r3, #10
 80040fc:	2100      	movs	r1, #0
 80040fe:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004102:	6865      	ldr	r5, [r4, #4]
 8004104:	60a5      	str	r5, [r4, #8]
 8004106:	2d00      	cmp	r5, #0
 8004108:	bfa2      	ittt	ge
 800410a:	6821      	ldrge	r1, [r4, #0]
 800410c:	f021 0104 	bicge.w	r1, r1, #4
 8004110:	6021      	strge	r1, [r4, #0]
 8004112:	b90e      	cbnz	r6, 8004118 <_printf_i+0x118>
 8004114:	2d00      	cmp	r5, #0
 8004116:	d04d      	beq.n	80041b4 <_printf_i+0x1b4>
 8004118:	4615      	mov	r5, r2
 800411a:	fbb6 f1f3 	udiv	r1, r6, r3
 800411e:	fb03 6711 	mls	r7, r3, r1, r6
 8004122:	5dc7      	ldrb	r7, [r0, r7]
 8004124:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004128:	4637      	mov	r7, r6
 800412a:	42bb      	cmp	r3, r7
 800412c:	460e      	mov	r6, r1
 800412e:	d9f4      	bls.n	800411a <_printf_i+0x11a>
 8004130:	2b08      	cmp	r3, #8
 8004132:	d10b      	bne.n	800414c <_printf_i+0x14c>
 8004134:	6823      	ldr	r3, [r4, #0]
 8004136:	07de      	lsls	r6, r3, #31
 8004138:	d508      	bpl.n	800414c <_printf_i+0x14c>
 800413a:	6923      	ldr	r3, [r4, #16]
 800413c:	6861      	ldr	r1, [r4, #4]
 800413e:	4299      	cmp	r1, r3
 8004140:	bfde      	ittt	le
 8004142:	2330      	movle	r3, #48	; 0x30
 8004144:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004148:	f105 35ff 	addle.w	r5, r5, #4294967295
 800414c:	1b52      	subs	r2, r2, r5
 800414e:	6122      	str	r2, [r4, #16]
 8004150:	f8cd a000 	str.w	sl, [sp]
 8004154:	464b      	mov	r3, r9
 8004156:	aa03      	add	r2, sp, #12
 8004158:	4621      	mov	r1, r4
 800415a:	4640      	mov	r0, r8
 800415c:	f7ff fee2 	bl	8003f24 <_printf_common>
 8004160:	3001      	adds	r0, #1
 8004162:	d14c      	bne.n	80041fe <_printf_i+0x1fe>
 8004164:	f04f 30ff 	mov.w	r0, #4294967295
 8004168:	b004      	add	sp, #16
 800416a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800416e:	4835      	ldr	r0, [pc, #212]	; (8004244 <_printf_i+0x244>)
 8004170:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8004174:	6829      	ldr	r1, [r5, #0]
 8004176:	6823      	ldr	r3, [r4, #0]
 8004178:	f851 6b04 	ldr.w	r6, [r1], #4
 800417c:	6029      	str	r1, [r5, #0]
 800417e:	061d      	lsls	r5, r3, #24
 8004180:	d514      	bpl.n	80041ac <_printf_i+0x1ac>
 8004182:	07df      	lsls	r7, r3, #31
 8004184:	bf44      	itt	mi
 8004186:	f043 0320 	orrmi.w	r3, r3, #32
 800418a:	6023      	strmi	r3, [r4, #0]
 800418c:	b91e      	cbnz	r6, 8004196 <_printf_i+0x196>
 800418e:	6823      	ldr	r3, [r4, #0]
 8004190:	f023 0320 	bic.w	r3, r3, #32
 8004194:	6023      	str	r3, [r4, #0]
 8004196:	2310      	movs	r3, #16
 8004198:	e7b0      	b.n	80040fc <_printf_i+0xfc>
 800419a:	6823      	ldr	r3, [r4, #0]
 800419c:	f043 0320 	orr.w	r3, r3, #32
 80041a0:	6023      	str	r3, [r4, #0]
 80041a2:	2378      	movs	r3, #120	; 0x78
 80041a4:	4828      	ldr	r0, [pc, #160]	; (8004248 <_printf_i+0x248>)
 80041a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80041aa:	e7e3      	b.n	8004174 <_printf_i+0x174>
 80041ac:	0659      	lsls	r1, r3, #25
 80041ae:	bf48      	it	mi
 80041b0:	b2b6      	uxthmi	r6, r6
 80041b2:	e7e6      	b.n	8004182 <_printf_i+0x182>
 80041b4:	4615      	mov	r5, r2
 80041b6:	e7bb      	b.n	8004130 <_printf_i+0x130>
 80041b8:	682b      	ldr	r3, [r5, #0]
 80041ba:	6826      	ldr	r6, [r4, #0]
 80041bc:	6961      	ldr	r1, [r4, #20]
 80041be:	1d18      	adds	r0, r3, #4
 80041c0:	6028      	str	r0, [r5, #0]
 80041c2:	0635      	lsls	r5, r6, #24
 80041c4:	681b      	ldr	r3, [r3, #0]
 80041c6:	d501      	bpl.n	80041cc <_printf_i+0x1cc>
 80041c8:	6019      	str	r1, [r3, #0]
 80041ca:	e002      	b.n	80041d2 <_printf_i+0x1d2>
 80041cc:	0670      	lsls	r0, r6, #25
 80041ce:	d5fb      	bpl.n	80041c8 <_printf_i+0x1c8>
 80041d0:	8019      	strh	r1, [r3, #0]
 80041d2:	2300      	movs	r3, #0
 80041d4:	6123      	str	r3, [r4, #16]
 80041d6:	4615      	mov	r5, r2
 80041d8:	e7ba      	b.n	8004150 <_printf_i+0x150>
 80041da:	682b      	ldr	r3, [r5, #0]
 80041dc:	1d1a      	adds	r2, r3, #4
 80041de:	602a      	str	r2, [r5, #0]
 80041e0:	681d      	ldr	r5, [r3, #0]
 80041e2:	6862      	ldr	r2, [r4, #4]
 80041e4:	2100      	movs	r1, #0
 80041e6:	4628      	mov	r0, r5
 80041e8:	f7fc f802 	bl	80001f0 <memchr>
 80041ec:	b108      	cbz	r0, 80041f2 <_printf_i+0x1f2>
 80041ee:	1b40      	subs	r0, r0, r5
 80041f0:	6060      	str	r0, [r4, #4]
 80041f2:	6863      	ldr	r3, [r4, #4]
 80041f4:	6123      	str	r3, [r4, #16]
 80041f6:	2300      	movs	r3, #0
 80041f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80041fc:	e7a8      	b.n	8004150 <_printf_i+0x150>
 80041fe:	6923      	ldr	r3, [r4, #16]
 8004200:	462a      	mov	r2, r5
 8004202:	4649      	mov	r1, r9
 8004204:	4640      	mov	r0, r8
 8004206:	47d0      	blx	sl
 8004208:	3001      	adds	r0, #1
 800420a:	d0ab      	beq.n	8004164 <_printf_i+0x164>
 800420c:	6823      	ldr	r3, [r4, #0]
 800420e:	079b      	lsls	r3, r3, #30
 8004210:	d413      	bmi.n	800423a <_printf_i+0x23a>
 8004212:	68e0      	ldr	r0, [r4, #12]
 8004214:	9b03      	ldr	r3, [sp, #12]
 8004216:	4298      	cmp	r0, r3
 8004218:	bfb8      	it	lt
 800421a:	4618      	movlt	r0, r3
 800421c:	e7a4      	b.n	8004168 <_printf_i+0x168>
 800421e:	2301      	movs	r3, #1
 8004220:	4632      	mov	r2, r6
 8004222:	4649      	mov	r1, r9
 8004224:	4640      	mov	r0, r8
 8004226:	47d0      	blx	sl
 8004228:	3001      	adds	r0, #1
 800422a:	d09b      	beq.n	8004164 <_printf_i+0x164>
 800422c:	3501      	adds	r5, #1
 800422e:	68e3      	ldr	r3, [r4, #12]
 8004230:	9903      	ldr	r1, [sp, #12]
 8004232:	1a5b      	subs	r3, r3, r1
 8004234:	42ab      	cmp	r3, r5
 8004236:	dcf2      	bgt.n	800421e <_printf_i+0x21e>
 8004238:	e7eb      	b.n	8004212 <_printf_i+0x212>
 800423a:	2500      	movs	r5, #0
 800423c:	f104 0619 	add.w	r6, r4, #25
 8004240:	e7f5      	b.n	800422e <_printf_i+0x22e>
 8004242:	bf00      	nop
 8004244:	080092de 	.word	0x080092de
 8004248:	080092ef 	.word	0x080092ef

0800424c <_scanf_float>:
 800424c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004250:	b087      	sub	sp, #28
 8004252:	4617      	mov	r7, r2
 8004254:	9303      	str	r3, [sp, #12]
 8004256:	688b      	ldr	r3, [r1, #8]
 8004258:	1e5a      	subs	r2, r3, #1
 800425a:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800425e:	bf83      	ittte	hi
 8004260:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8004264:	195b      	addhi	r3, r3, r5
 8004266:	9302      	strhi	r3, [sp, #8]
 8004268:	2300      	movls	r3, #0
 800426a:	bf86      	itte	hi
 800426c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8004270:	608b      	strhi	r3, [r1, #8]
 8004272:	9302      	strls	r3, [sp, #8]
 8004274:	680b      	ldr	r3, [r1, #0]
 8004276:	468b      	mov	fp, r1
 8004278:	2500      	movs	r5, #0
 800427a:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800427e:	f84b 3b1c 	str.w	r3, [fp], #28
 8004282:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8004286:	4680      	mov	r8, r0
 8004288:	460c      	mov	r4, r1
 800428a:	465e      	mov	r6, fp
 800428c:	46aa      	mov	sl, r5
 800428e:	46a9      	mov	r9, r5
 8004290:	9501      	str	r5, [sp, #4]
 8004292:	68a2      	ldr	r2, [r4, #8]
 8004294:	b152      	cbz	r2, 80042ac <_scanf_float+0x60>
 8004296:	683b      	ldr	r3, [r7, #0]
 8004298:	781b      	ldrb	r3, [r3, #0]
 800429a:	2b4e      	cmp	r3, #78	; 0x4e
 800429c:	d864      	bhi.n	8004368 <_scanf_float+0x11c>
 800429e:	2b40      	cmp	r3, #64	; 0x40
 80042a0:	d83c      	bhi.n	800431c <_scanf_float+0xd0>
 80042a2:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 80042a6:	b2c8      	uxtb	r0, r1
 80042a8:	280e      	cmp	r0, #14
 80042aa:	d93a      	bls.n	8004322 <_scanf_float+0xd6>
 80042ac:	f1b9 0f00 	cmp.w	r9, #0
 80042b0:	d003      	beq.n	80042ba <_scanf_float+0x6e>
 80042b2:	6823      	ldr	r3, [r4, #0]
 80042b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80042b8:	6023      	str	r3, [r4, #0]
 80042ba:	f10a 3aff 	add.w	sl, sl, #4294967295
 80042be:	f1ba 0f01 	cmp.w	sl, #1
 80042c2:	f200 8113 	bhi.w	80044ec <_scanf_float+0x2a0>
 80042c6:	455e      	cmp	r6, fp
 80042c8:	f200 8105 	bhi.w	80044d6 <_scanf_float+0x28a>
 80042cc:	2501      	movs	r5, #1
 80042ce:	4628      	mov	r0, r5
 80042d0:	b007      	add	sp, #28
 80042d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042d6:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80042da:	2a0d      	cmp	r2, #13
 80042dc:	d8e6      	bhi.n	80042ac <_scanf_float+0x60>
 80042de:	a101      	add	r1, pc, #4	; (adr r1, 80042e4 <_scanf_float+0x98>)
 80042e0:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80042e4:	08004423 	.word	0x08004423
 80042e8:	080042ad 	.word	0x080042ad
 80042ec:	080042ad 	.word	0x080042ad
 80042f0:	080042ad 	.word	0x080042ad
 80042f4:	08004483 	.word	0x08004483
 80042f8:	0800445b 	.word	0x0800445b
 80042fc:	080042ad 	.word	0x080042ad
 8004300:	080042ad 	.word	0x080042ad
 8004304:	08004431 	.word	0x08004431
 8004308:	080042ad 	.word	0x080042ad
 800430c:	080042ad 	.word	0x080042ad
 8004310:	080042ad 	.word	0x080042ad
 8004314:	080042ad 	.word	0x080042ad
 8004318:	080043e9 	.word	0x080043e9
 800431c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8004320:	e7db      	b.n	80042da <_scanf_float+0x8e>
 8004322:	290e      	cmp	r1, #14
 8004324:	d8c2      	bhi.n	80042ac <_scanf_float+0x60>
 8004326:	a001      	add	r0, pc, #4	; (adr r0, 800432c <_scanf_float+0xe0>)
 8004328:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800432c:	080043db 	.word	0x080043db
 8004330:	080042ad 	.word	0x080042ad
 8004334:	080043db 	.word	0x080043db
 8004338:	0800446f 	.word	0x0800446f
 800433c:	080042ad 	.word	0x080042ad
 8004340:	08004389 	.word	0x08004389
 8004344:	080043c5 	.word	0x080043c5
 8004348:	080043c5 	.word	0x080043c5
 800434c:	080043c5 	.word	0x080043c5
 8004350:	080043c5 	.word	0x080043c5
 8004354:	080043c5 	.word	0x080043c5
 8004358:	080043c5 	.word	0x080043c5
 800435c:	080043c5 	.word	0x080043c5
 8004360:	080043c5 	.word	0x080043c5
 8004364:	080043c5 	.word	0x080043c5
 8004368:	2b6e      	cmp	r3, #110	; 0x6e
 800436a:	d809      	bhi.n	8004380 <_scanf_float+0x134>
 800436c:	2b60      	cmp	r3, #96	; 0x60
 800436e:	d8b2      	bhi.n	80042d6 <_scanf_float+0x8a>
 8004370:	2b54      	cmp	r3, #84	; 0x54
 8004372:	d077      	beq.n	8004464 <_scanf_float+0x218>
 8004374:	2b59      	cmp	r3, #89	; 0x59
 8004376:	d199      	bne.n	80042ac <_scanf_float+0x60>
 8004378:	2d07      	cmp	r5, #7
 800437a:	d197      	bne.n	80042ac <_scanf_float+0x60>
 800437c:	2508      	movs	r5, #8
 800437e:	e029      	b.n	80043d4 <_scanf_float+0x188>
 8004380:	2b74      	cmp	r3, #116	; 0x74
 8004382:	d06f      	beq.n	8004464 <_scanf_float+0x218>
 8004384:	2b79      	cmp	r3, #121	; 0x79
 8004386:	e7f6      	b.n	8004376 <_scanf_float+0x12a>
 8004388:	6821      	ldr	r1, [r4, #0]
 800438a:	05c8      	lsls	r0, r1, #23
 800438c:	d51a      	bpl.n	80043c4 <_scanf_float+0x178>
 800438e:	9b02      	ldr	r3, [sp, #8]
 8004390:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8004394:	6021      	str	r1, [r4, #0]
 8004396:	f109 0901 	add.w	r9, r9, #1
 800439a:	b11b      	cbz	r3, 80043a4 <_scanf_float+0x158>
 800439c:	3b01      	subs	r3, #1
 800439e:	3201      	adds	r2, #1
 80043a0:	9302      	str	r3, [sp, #8]
 80043a2:	60a2      	str	r2, [r4, #8]
 80043a4:	68a3      	ldr	r3, [r4, #8]
 80043a6:	3b01      	subs	r3, #1
 80043a8:	60a3      	str	r3, [r4, #8]
 80043aa:	6923      	ldr	r3, [r4, #16]
 80043ac:	3301      	adds	r3, #1
 80043ae:	6123      	str	r3, [r4, #16]
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	3b01      	subs	r3, #1
 80043b4:	2b00      	cmp	r3, #0
 80043b6:	607b      	str	r3, [r7, #4]
 80043b8:	f340 8084 	ble.w	80044c4 <_scanf_float+0x278>
 80043bc:	683b      	ldr	r3, [r7, #0]
 80043be:	3301      	adds	r3, #1
 80043c0:	603b      	str	r3, [r7, #0]
 80043c2:	e766      	b.n	8004292 <_scanf_float+0x46>
 80043c4:	eb1a 0f05 	cmn.w	sl, r5
 80043c8:	f47f af70 	bne.w	80042ac <_scanf_float+0x60>
 80043cc:	6822      	ldr	r2, [r4, #0]
 80043ce:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 80043d2:	6022      	str	r2, [r4, #0]
 80043d4:	f806 3b01 	strb.w	r3, [r6], #1
 80043d8:	e7e4      	b.n	80043a4 <_scanf_float+0x158>
 80043da:	6822      	ldr	r2, [r4, #0]
 80043dc:	0610      	lsls	r0, r2, #24
 80043de:	f57f af65 	bpl.w	80042ac <_scanf_float+0x60>
 80043e2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80043e6:	e7f4      	b.n	80043d2 <_scanf_float+0x186>
 80043e8:	f1ba 0f00 	cmp.w	sl, #0
 80043ec:	d10e      	bne.n	800440c <_scanf_float+0x1c0>
 80043ee:	f1b9 0f00 	cmp.w	r9, #0
 80043f2:	d10e      	bne.n	8004412 <_scanf_float+0x1c6>
 80043f4:	6822      	ldr	r2, [r4, #0]
 80043f6:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80043fa:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80043fe:	d108      	bne.n	8004412 <_scanf_float+0x1c6>
 8004400:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8004404:	6022      	str	r2, [r4, #0]
 8004406:	f04f 0a01 	mov.w	sl, #1
 800440a:	e7e3      	b.n	80043d4 <_scanf_float+0x188>
 800440c:	f1ba 0f02 	cmp.w	sl, #2
 8004410:	d055      	beq.n	80044be <_scanf_float+0x272>
 8004412:	2d01      	cmp	r5, #1
 8004414:	d002      	beq.n	800441c <_scanf_float+0x1d0>
 8004416:	2d04      	cmp	r5, #4
 8004418:	f47f af48 	bne.w	80042ac <_scanf_float+0x60>
 800441c:	3501      	adds	r5, #1
 800441e:	b2ed      	uxtb	r5, r5
 8004420:	e7d8      	b.n	80043d4 <_scanf_float+0x188>
 8004422:	f1ba 0f01 	cmp.w	sl, #1
 8004426:	f47f af41 	bne.w	80042ac <_scanf_float+0x60>
 800442a:	f04f 0a02 	mov.w	sl, #2
 800442e:	e7d1      	b.n	80043d4 <_scanf_float+0x188>
 8004430:	b97d      	cbnz	r5, 8004452 <_scanf_float+0x206>
 8004432:	f1b9 0f00 	cmp.w	r9, #0
 8004436:	f47f af3c 	bne.w	80042b2 <_scanf_float+0x66>
 800443a:	6822      	ldr	r2, [r4, #0]
 800443c:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8004440:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8004444:	f47f af39 	bne.w	80042ba <_scanf_float+0x6e>
 8004448:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800444c:	6022      	str	r2, [r4, #0]
 800444e:	2501      	movs	r5, #1
 8004450:	e7c0      	b.n	80043d4 <_scanf_float+0x188>
 8004452:	2d03      	cmp	r5, #3
 8004454:	d0e2      	beq.n	800441c <_scanf_float+0x1d0>
 8004456:	2d05      	cmp	r5, #5
 8004458:	e7de      	b.n	8004418 <_scanf_float+0x1cc>
 800445a:	2d02      	cmp	r5, #2
 800445c:	f47f af26 	bne.w	80042ac <_scanf_float+0x60>
 8004460:	2503      	movs	r5, #3
 8004462:	e7b7      	b.n	80043d4 <_scanf_float+0x188>
 8004464:	2d06      	cmp	r5, #6
 8004466:	f47f af21 	bne.w	80042ac <_scanf_float+0x60>
 800446a:	2507      	movs	r5, #7
 800446c:	e7b2      	b.n	80043d4 <_scanf_float+0x188>
 800446e:	6822      	ldr	r2, [r4, #0]
 8004470:	0591      	lsls	r1, r2, #22
 8004472:	f57f af1b 	bpl.w	80042ac <_scanf_float+0x60>
 8004476:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800447a:	6022      	str	r2, [r4, #0]
 800447c:	f8cd 9004 	str.w	r9, [sp, #4]
 8004480:	e7a8      	b.n	80043d4 <_scanf_float+0x188>
 8004482:	6822      	ldr	r2, [r4, #0]
 8004484:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8004488:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800448c:	d006      	beq.n	800449c <_scanf_float+0x250>
 800448e:	0550      	lsls	r0, r2, #21
 8004490:	f57f af0c 	bpl.w	80042ac <_scanf_float+0x60>
 8004494:	f1b9 0f00 	cmp.w	r9, #0
 8004498:	f43f af0f 	beq.w	80042ba <_scanf_float+0x6e>
 800449c:	0591      	lsls	r1, r2, #22
 800449e:	bf58      	it	pl
 80044a0:	9901      	ldrpl	r1, [sp, #4]
 80044a2:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80044a6:	bf58      	it	pl
 80044a8:	eba9 0101 	subpl.w	r1, r9, r1
 80044ac:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 80044b0:	bf58      	it	pl
 80044b2:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80044b6:	6022      	str	r2, [r4, #0]
 80044b8:	f04f 0900 	mov.w	r9, #0
 80044bc:	e78a      	b.n	80043d4 <_scanf_float+0x188>
 80044be:	f04f 0a03 	mov.w	sl, #3
 80044c2:	e787      	b.n	80043d4 <_scanf_float+0x188>
 80044c4:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80044c8:	4639      	mov	r1, r7
 80044ca:	4640      	mov	r0, r8
 80044cc:	4798      	blx	r3
 80044ce:	2800      	cmp	r0, #0
 80044d0:	f43f aedf 	beq.w	8004292 <_scanf_float+0x46>
 80044d4:	e6ea      	b.n	80042ac <_scanf_float+0x60>
 80044d6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80044da:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80044de:	463a      	mov	r2, r7
 80044e0:	4640      	mov	r0, r8
 80044e2:	4798      	blx	r3
 80044e4:	6923      	ldr	r3, [r4, #16]
 80044e6:	3b01      	subs	r3, #1
 80044e8:	6123      	str	r3, [r4, #16]
 80044ea:	e6ec      	b.n	80042c6 <_scanf_float+0x7a>
 80044ec:	1e6b      	subs	r3, r5, #1
 80044ee:	2b06      	cmp	r3, #6
 80044f0:	d825      	bhi.n	800453e <_scanf_float+0x2f2>
 80044f2:	2d02      	cmp	r5, #2
 80044f4:	d836      	bhi.n	8004564 <_scanf_float+0x318>
 80044f6:	455e      	cmp	r6, fp
 80044f8:	f67f aee8 	bls.w	80042cc <_scanf_float+0x80>
 80044fc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004500:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8004504:	463a      	mov	r2, r7
 8004506:	4640      	mov	r0, r8
 8004508:	4798      	blx	r3
 800450a:	6923      	ldr	r3, [r4, #16]
 800450c:	3b01      	subs	r3, #1
 800450e:	6123      	str	r3, [r4, #16]
 8004510:	e7f1      	b.n	80044f6 <_scanf_float+0x2aa>
 8004512:	9802      	ldr	r0, [sp, #8]
 8004514:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004518:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800451c:	9002      	str	r0, [sp, #8]
 800451e:	463a      	mov	r2, r7
 8004520:	4640      	mov	r0, r8
 8004522:	4798      	blx	r3
 8004524:	6923      	ldr	r3, [r4, #16]
 8004526:	3b01      	subs	r3, #1
 8004528:	6123      	str	r3, [r4, #16]
 800452a:	f10a 3aff 	add.w	sl, sl, #4294967295
 800452e:	fa5f fa8a 	uxtb.w	sl, sl
 8004532:	f1ba 0f02 	cmp.w	sl, #2
 8004536:	d1ec      	bne.n	8004512 <_scanf_float+0x2c6>
 8004538:	3d03      	subs	r5, #3
 800453a:	b2ed      	uxtb	r5, r5
 800453c:	1b76      	subs	r6, r6, r5
 800453e:	6823      	ldr	r3, [r4, #0]
 8004540:	05da      	lsls	r2, r3, #23
 8004542:	d52f      	bpl.n	80045a4 <_scanf_float+0x358>
 8004544:	055b      	lsls	r3, r3, #21
 8004546:	d510      	bpl.n	800456a <_scanf_float+0x31e>
 8004548:	455e      	cmp	r6, fp
 800454a:	f67f aebf 	bls.w	80042cc <_scanf_float+0x80>
 800454e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004552:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8004556:	463a      	mov	r2, r7
 8004558:	4640      	mov	r0, r8
 800455a:	4798      	blx	r3
 800455c:	6923      	ldr	r3, [r4, #16]
 800455e:	3b01      	subs	r3, #1
 8004560:	6123      	str	r3, [r4, #16]
 8004562:	e7f1      	b.n	8004548 <_scanf_float+0x2fc>
 8004564:	46aa      	mov	sl, r5
 8004566:	9602      	str	r6, [sp, #8]
 8004568:	e7df      	b.n	800452a <_scanf_float+0x2de>
 800456a:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800456e:	6923      	ldr	r3, [r4, #16]
 8004570:	2965      	cmp	r1, #101	; 0x65
 8004572:	f103 33ff 	add.w	r3, r3, #4294967295
 8004576:	f106 35ff 	add.w	r5, r6, #4294967295
 800457a:	6123      	str	r3, [r4, #16]
 800457c:	d00c      	beq.n	8004598 <_scanf_float+0x34c>
 800457e:	2945      	cmp	r1, #69	; 0x45
 8004580:	d00a      	beq.n	8004598 <_scanf_float+0x34c>
 8004582:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8004586:	463a      	mov	r2, r7
 8004588:	4640      	mov	r0, r8
 800458a:	4798      	blx	r3
 800458c:	6923      	ldr	r3, [r4, #16]
 800458e:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8004592:	3b01      	subs	r3, #1
 8004594:	1eb5      	subs	r5, r6, #2
 8004596:	6123      	str	r3, [r4, #16]
 8004598:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800459c:	463a      	mov	r2, r7
 800459e:	4640      	mov	r0, r8
 80045a0:	4798      	blx	r3
 80045a2:	462e      	mov	r6, r5
 80045a4:	6825      	ldr	r5, [r4, #0]
 80045a6:	f015 0510 	ands.w	r5, r5, #16
 80045aa:	d159      	bne.n	8004660 <_scanf_float+0x414>
 80045ac:	7035      	strb	r5, [r6, #0]
 80045ae:	6823      	ldr	r3, [r4, #0]
 80045b0:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80045b4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80045b8:	d11b      	bne.n	80045f2 <_scanf_float+0x3a6>
 80045ba:	9b01      	ldr	r3, [sp, #4]
 80045bc:	454b      	cmp	r3, r9
 80045be:	eba3 0209 	sub.w	r2, r3, r9
 80045c2:	d123      	bne.n	800460c <_scanf_float+0x3c0>
 80045c4:	2200      	movs	r2, #0
 80045c6:	4659      	mov	r1, fp
 80045c8:	4640      	mov	r0, r8
 80045ca:	f000 fe97 	bl	80052fc <_strtod_r>
 80045ce:	6822      	ldr	r2, [r4, #0]
 80045d0:	9b03      	ldr	r3, [sp, #12]
 80045d2:	f012 0f02 	tst.w	r2, #2
 80045d6:	ec57 6b10 	vmov	r6, r7, d0
 80045da:	681b      	ldr	r3, [r3, #0]
 80045dc:	d021      	beq.n	8004622 <_scanf_float+0x3d6>
 80045de:	9903      	ldr	r1, [sp, #12]
 80045e0:	1d1a      	adds	r2, r3, #4
 80045e2:	600a      	str	r2, [r1, #0]
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	e9c3 6700 	strd	r6, r7, [r3]
 80045ea:	68e3      	ldr	r3, [r4, #12]
 80045ec:	3301      	adds	r3, #1
 80045ee:	60e3      	str	r3, [r4, #12]
 80045f0:	e66d      	b.n	80042ce <_scanf_float+0x82>
 80045f2:	9b04      	ldr	r3, [sp, #16]
 80045f4:	2b00      	cmp	r3, #0
 80045f6:	d0e5      	beq.n	80045c4 <_scanf_float+0x378>
 80045f8:	9905      	ldr	r1, [sp, #20]
 80045fa:	230a      	movs	r3, #10
 80045fc:	462a      	mov	r2, r5
 80045fe:	3101      	adds	r1, #1
 8004600:	4640      	mov	r0, r8
 8004602:	f000 ff03 	bl	800540c <_strtol_r>
 8004606:	9b04      	ldr	r3, [sp, #16]
 8004608:	9e05      	ldr	r6, [sp, #20]
 800460a:	1ac2      	subs	r2, r0, r3
 800460c:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8004610:	429e      	cmp	r6, r3
 8004612:	bf28      	it	cs
 8004614:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8004618:	4912      	ldr	r1, [pc, #72]	; (8004664 <_scanf_float+0x418>)
 800461a:	4630      	mov	r0, r6
 800461c:	f000 f82c 	bl	8004678 <siprintf>
 8004620:	e7d0      	b.n	80045c4 <_scanf_float+0x378>
 8004622:	9903      	ldr	r1, [sp, #12]
 8004624:	f012 0f04 	tst.w	r2, #4
 8004628:	f103 0204 	add.w	r2, r3, #4
 800462c:	600a      	str	r2, [r1, #0]
 800462e:	d1d9      	bne.n	80045e4 <_scanf_float+0x398>
 8004630:	f8d3 8000 	ldr.w	r8, [r3]
 8004634:	ee10 2a10 	vmov	r2, s0
 8004638:	ee10 0a10 	vmov	r0, s0
 800463c:	463b      	mov	r3, r7
 800463e:	4639      	mov	r1, r7
 8004640:	f7fc fa7c 	bl	8000b3c <__aeabi_dcmpun>
 8004644:	b128      	cbz	r0, 8004652 <_scanf_float+0x406>
 8004646:	4808      	ldr	r0, [pc, #32]	; (8004668 <_scanf_float+0x41c>)
 8004648:	f000 f810 	bl	800466c <nanf>
 800464c:	ed88 0a00 	vstr	s0, [r8]
 8004650:	e7cb      	b.n	80045ea <_scanf_float+0x39e>
 8004652:	4630      	mov	r0, r6
 8004654:	4639      	mov	r1, r7
 8004656:	f7fc facf 	bl	8000bf8 <__aeabi_d2f>
 800465a:	f8c8 0000 	str.w	r0, [r8]
 800465e:	e7c4      	b.n	80045ea <_scanf_float+0x39e>
 8004660:	2500      	movs	r5, #0
 8004662:	e634      	b.n	80042ce <_scanf_float+0x82>
 8004664:	08009300 	.word	0x08009300
 8004668:	08009770 	.word	0x08009770

0800466c <nanf>:
 800466c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8004674 <nanf+0x8>
 8004670:	4770      	bx	lr
 8004672:	bf00      	nop
 8004674:	7fc00000 	.word	0x7fc00000

08004678 <siprintf>:
 8004678:	b40e      	push	{r1, r2, r3}
 800467a:	b500      	push	{lr}
 800467c:	b09c      	sub	sp, #112	; 0x70
 800467e:	ab1d      	add	r3, sp, #116	; 0x74
 8004680:	9002      	str	r0, [sp, #8]
 8004682:	9006      	str	r0, [sp, #24]
 8004684:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004688:	4809      	ldr	r0, [pc, #36]	; (80046b0 <siprintf+0x38>)
 800468a:	9107      	str	r1, [sp, #28]
 800468c:	9104      	str	r1, [sp, #16]
 800468e:	4909      	ldr	r1, [pc, #36]	; (80046b4 <siprintf+0x3c>)
 8004690:	f853 2b04 	ldr.w	r2, [r3], #4
 8004694:	9105      	str	r1, [sp, #20]
 8004696:	6800      	ldr	r0, [r0, #0]
 8004698:	9301      	str	r3, [sp, #4]
 800469a:	a902      	add	r1, sp, #8
 800469c:	f002 ffda 	bl	8007654 <_svfiprintf_r>
 80046a0:	9b02      	ldr	r3, [sp, #8]
 80046a2:	2200      	movs	r2, #0
 80046a4:	701a      	strb	r2, [r3, #0]
 80046a6:	b01c      	add	sp, #112	; 0x70
 80046a8:	f85d eb04 	ldr.w	lr, [sp], #4
 80046ac:	b003      	add	sp, #12
 80046ae:	4770      	bx	lr
 80046b0:	2000002c 	.word	0x2000002c
 80046b4:	ffff0208 	.word	0xffff0208

080046b8 <sulp>:
 80046b8:	b570      	push	{r4, r5, r6, lr}
 80046ba:	4604      	mov	r4, r0
 80046bc:	460d      	mov	r5, r1
 80046be:	ec45 4b10 	vmov	d0, r4, r5
 80046c2:	4616      	mov	r6, r2
 80046c4:	f002 fd24 	bl	8007110 <__ulp>
 80046c8:	ec51 0b10 	vmov	r0, r1, d0
 80046cc:	b17e      	cbz	r6, 80046ee <sulp+0x36>
 80046ce:	f3c5 530a 	ubfx	r3, r5, #20, #11
 80046d2:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80046d6:	2b00      	cmp	r3, #0
 80046d8:	dd09      	ble.n	80046ee <sulp+0x36>
 80046da:	051b      	lsls	r3, r3, #20
 80046dc:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80046e0:	2400      	movs	r4, #0
 80046e2:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80046e6:	4622      	mov	r2, r4
 80046e8:	462b      	mov	r3, r5
 80046ea:	f7fb ff8d 	bl	8000608 <__aeabi_dmul>
 80046ee:	bd70      	pop	{r4, r5, r6, pc}

080046f0 <_strtod_l>:
 80046f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046f4:	ed2d 8b02 	vpush	{d8}
 80046f8:	b09d      	sub	sp, #116	; 0x74
 80046fa:	461f      	mov	r7, r3
 80046fc:	2300      	movs	r3, #0
 80046fe:	9318      	str	r3, [sp, #96]	; 0x60
 8004700:	4ba2      	ldr	r3, [pc, #648]	; (800498c <_strtod_l+0x29c>)
 8004702:	9213      	str	r2, [sp, #76]	; 0x4c
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	9305      	str	r3, [sp, #20]
 8004708:	4604      	mov	r4, r0
 800470a:	4618      	mov	r0, r3
 800470c:	4688      	mov	r8, r1
 800470e:	f7fb fd67 	bl	80001e0 <strlen>
 8004712:	f04f 0a00 	mov.w	sl, #0
 8004716:	4605      	mov	r5, r0
 8004718:	f04f 0b00 	mov.w	fp, #0
 800471c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8004720:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004722:	781a      	ldrb	r2, [r3, #0]
 8004724:	2a2b      	cmp	r2, #43	; 0x2b
 8004726:	d04e      	beq.n	80047c6 <_strtod_l+0xd6>
 8004728:	d83b      	bhi.n	80047a2 <_strtod_l+0xb2>
 800472a:	2a0d      	cmp	r2, #13
 800472c:	d834      	bhi.n	8004798 <_strtod_l+0xa8>
 800472e:	2a08      	cmp	r2, #8
 8004730:	d834      	bhi.n	800479c <_strtod_l+0xac>
 8004732:	2a00      	cmp	r2, #0
 8004734:	d03e      	beq.n	80047b4 <_strtod_l+0xc4>
 8004736:	2300      	movs	r3, #0
 8004738:	930a      	str	r3, [sp, #40]	; 0x28
 800473a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800473c:	7833      	ldrb	r3, [r6, #0]
 800473e:	2b30      	cmp	r3, #48	; 0x30
 8004740:	f040 80b0 	bne.w	80048a4 <_strtod_l+0x1b4>
 8004744:	7873      	ldrb	r3, [r6, #1]
 8004746:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800474a:	2b58      	cmp	r3, #88	; 0x58
 800474c:	d168      	bne.n	8004820 <_strtod_l+0x130>
 800474e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004750:	9301      	str	r3, [sp, #4]
 8004752:	ab18      	add	r3, sp, #96	; 0x60
 8004754:	9702      	str	r7, [sp, #8]
 8004756:	9300      	str	r3, [sp, #0]
 8004758:	4a8d      	ldr	r2, [pc, #564]	; (8004990 <_strtod_l+0x2a0>)
 800475a:	ab19      	add	r3, sp, #100	; 0x64
 800475c:	a917      	add	r1, sp, #92	; 0x5c
 800475e:	4620      	mov	r0, r4
 8004760:	f001 fe2c 	bl	80063bc <__gethex>
 8004764:	f010 0707 	ands.w	r7, r0, #7
 8004768:	4605      	mov	r5, r0
 800476a:	d005      	beq.n	8004778 <_strtod_l+0x88>
 800476c:	2f06      	cmp	r7, #6
 800476e:	d12c      	bne.n	80047ca <_strtod_l+0xda>
 8004770:	3601      	adds	r6, #1
 8004772:	2300      	movs	r3, #0
 8004774:	9617      	str	r6, [sp, #92]	; 0x5c
 8004776:	930a      	str	r3, [sp, #40]	; 0x28
 8004778:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800477a:	2b00      	cmp	r3, #0
 800477c:	f040 8590 	bne.w	80052a0 <_strtod_l+0xbb0>
 8004780:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004782:	b1eb      	cbz	r3, 80047c0 <_strtod_l+0xd0>
 8004784:	4652      	mov	r2, sl
 8004786:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800478a:	ec43 2b10 	vmov	d0, r2, r3
 800478e:	b01d      	add	sp, #116	; 0x74
 8004790:	ecbd 8b02 	vpop	{d8}
 8004794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004798:	2a20      	cmp	r2, #32
 800479a:	d1cc      	bne.n	8004736 <_strtod_l+0x46>
 800479c:	3301      	adds	r3, #1
 800479e:	9317      	str	r3, [sp, #92]	; 0x5c
 80047a0:	e7be      	b.n	8004720 <_strtod_l+0x30>
 80047a2:	2a2d      	cmp	r2, #45	; 0x2d
 80047a4:	d1c7      	bne.n	8004736 <_strtod_l+0x46>
 80047a6:	2201      	movs	r2, #1
 80047a8:	920a      	str	r2, [sp, #40]	; 0x28
 80047aa:	1c5a      	adds	r2, r3, #1
 80047ac:	9217      	str	r2, [sp, #92]	; 0x5c
 80047ae:	785b      	ldrb	r3, [r3, #1]
 80047b0:	2b00      	cmp	r3, #0
 80047b2:	d1c2      	bne.n	800473a <_strtod_l+0x4a>
 80047b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80047b6:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80047ba:	2b00      	cmp	r3, #0
 80047bc:	f040 856e 	bne.w	800529c <_strtod_l+0xbac>
 80047c0:	4652      	mov	r2, sl
 80047c2:	465b      	mov	r3, fp
 80047c4:	e7e1      	b.n	800478a <_strtod_l+0x9a>
 80047c6:	2200      	movs	r2, #0
 80047c8:	e7ee      	b.n	80047a8 <_strtod_l+0xb8>
 80047ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80047cc:	b13a      	cbz	r2, 80047de <_strtod_l+0xee>
 80047ce:	2135      	movs	r1, #53	; 0x35
 80047d0:	a81a      	add	r0, sp, #104	; 0x68
 80047d2:	f002 fda8 	bl	8007326 <__copybits>
 80047d6:	9918      	ldr	r1, [sp, #96]	; 0x60
 80047d8:	4620      	mov	r0, r4
 80047da:	f002 f967 	bl	8006aac <_Bfree>
 80047de:	3f01      	subs	r7, #1
 80047e0:	2f04      	cmp	r7, #4
 80047e2:	d806      	bhi.n	80047f2 <_strtod_l+0x102>
 80047e4:	e8df f007 	tbb	[pc, r7]
 80047e8:	1714030a 	.word	0x1714030a
 80047ec:	0a          	.byte	0x0a
 80047ed:	00          	.byte	0x00
 80047ee:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 80047f2:	0728      	lsls	r0, r5, #28
 80047f4:	d5c0      	bpl.n	8004778 <_strtod_l+0x88>
 80047f6:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 80047fa:	e7bd      	b.n	8004778 <_strtod_l+0x88>
 80047fc:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 8004800:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8004802:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004806:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800480a:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800480e:	e7f0      	b.n	80047f2 <_strtod_l+0x102>
 8004810:	f8df b180 	ldr.w	fp, [pc, #384]	; 8004994 <_strtod_l+0x2a4>
 8004814:	e7ed      	b.n	80047f2 <_strtod_l+0x102>
 8004816:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 800481a:	f04f 3aff 	mov.w	sl, #4294967295
 800481e:	e7e8      	b.n	80047f2 <_strtod_l+0x102>
 8004820:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004822:	1c5a      	adds	r2, r3, #1
 8004824:	9217      	str	r2, [sp, #92]	; 0x5c
 8004826:	785b      	ldrb	r3, [r3, #1]
 8004828:	2b30      	cmp	r3, #48	; 0x30
 800482a:	d0f9      	beq.n	8004820 <_strtod_l+0x130>
 800482c:	2b00      	cmp	r3, #0
 800482e:	d0a3      	beq.n	8004778 <_strtod_l+0x88>
 8004830:	2301      	movs	r3, #1
 8004832:	f04f 0900 	mov.w	r9, #0
 8004836:	9304      	str	r3, [sp, #16]
 8004838:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800483a:	9308      	str	r3, [sp, #32]
 800483c:	f8cd 901c 	str.w	r9, [sp, #28]
 8004840:	464f      	mov	r7, r9
 8004842:	220a      	movs	r2, #10
 8004844:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004846:	7806      	ldrb	r6, [r0, #0]
 8004848:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800484c:	b2d9      	uxtb	r1, r3
 800484e:	2909      	cmp	r1, #9
 8004850:	d92a      	bls.n	80048a8 <_strtod_l+0x1b8>
 8004852:	9905      	ldr	r1, [sp, #20]
 8004854:	462a      	mov	r2, r5
 8004856:	f003 f85a 	bl	800790e <strncmp>
 800485a:	b398      	cbz	r0, 80048c4 <_strtod_l+0x1d4>
 800485c:	2000      	movs	r0, #0
 800485e:	4632      	mov	r2, r6
 8004860:	463d      	mov	r5, r7
 8004862:	9005      	str	r0, [sp, #20]
 8004864:	4603      	mov	r3, r0
 8004866:	2a65      	cmp	r2, #101	; 0x65
 8004868:	d001      	beq.n	800486e <_strtod_l+0x17e>
 800486a:	2a45      	cmp	r2, #69	; 0x45
 800486c:	d118      	bne.n	80048a0 <_strtod_l+0x1b0>
 800486e:	b91d      	cbnz	r5, 8004878 <_strtod_l+0x188>
 8004870:	9a04      	ldr	r2, [sp, #16]
 8004872:	4302      	orrs	r2, r0
 8004874:	d09e      	beq.n	80047b4 <_strtod_l+0xc4>
 8004876:	2500      	movs	r5, #0
 8004878:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 800487c:	f108 0201 	add.w	r2, r8, #1
 8004880:	9217      	str	r2, [sp, #92]	; 0x5c
 8004882:	f898 2001 	ldrb.w	r2, [r8, #1]
 8004886:	2a2b      	cmp	r2, #43	; 0x2b
 8004888:	d075      	beq.n	8004976 <_strtod_l+0x286>
 800488a:	2a2d      	cmp	r2, #45	; 0x2d
 800488c:	d07b      	beq.n	8004986 <_strtod_l+0x296>
 800488e:	f04f 0c00 	mov.w	ip, #0
 8004892:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8004896:	2909      	cmp	r1, #9
 8004898:	f240 8082 	bls.w	80049a0 <_strtod_l+0x2b0>
 800489c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80048a0:	2600      	movs	r6, #0
 80048a2:	e09d      	b.n	80049e0 <_strtod_l+0x2f0>
 80048a4:	2300      	movs	r3, #0
 80048a6:	e7c4      	b.n	8004832 <_strtod_l+0x142>
 80048a8:	2f08      	cmp	r7, #8
 80048aa:	bfd8      	it	le
 80048ac:	9907      	ldrle	r1, [sp, #28]
 80048ae:	f100 0001 	add.w	r0, r0, #1
 80048b2:	bfda      	itte	le
 80048b4:	fb02 3301 	mlale	r3, r2, r1, r3
 80048b8:	9307      	strle	r3, [sp, #28]
 80048ba:	fb02 3909 	mlagt	r9, r2, r9, r3
 80048be:	3701      	adds	r7, #1
 80048c0:	9017      	str	r0, [sp, #92]	; 0x5c
 80048c2:	e7bf      	b.n	8004844 <_strtod_l+0x154>
 80048c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80048c6:	195a      	adds	r2, r3, r5
 80048c8:	9217      	str	r2, [sp, #92]	; 0x5c
 80048ca:	5d5a      	ldrb	r2, [r3, r5]
 80048cc:	2f00      	cmp	r7, #0
 80048ce:	d037      	beq.n	8004940 <_strtod_l+0x250>
 80048d0:	9005      	str	r0, [sp, #20]
 80048d2:	463d      	mov	r5, r7
 80048d4:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80048d8:	2b09      	cmp	r3, #9
 80048da:	d912      	bls.n	8004902 <_strtod_l+0x212>
 80048dc:	2301      	movs	r3, #1
 80048de:	e7c2      	b.n	8004866 <_strtod_l+0x176>
 80048e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80048e2:	1c5a      	adds	r2, r3, #1
 80048e4:	9217      	str	r2, [sp, #92]	; 0x5c
 80048e6:	785a      	ldrb	r2, [r3, #1]
 80048e8:	3001      	adds	r0, #1
 80048ea:	2a30      	cmp	r2, #48	; 0x30
 80048ec:	d0f8      	beq.n	80048e0 <_strtod_l+0x1f0>
 80048ee:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 80048f2:	2b08      	cmp	r3, #8
 80048f4:	f200 84d9 	bhi.w	80052aa <_strtod_l+0xbba>
 80048f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80048fa:	9005      	str	r0, [sp, #20]
 80048fc:	2000      	movs	r0, #0
 80048fe:	9308      	str	r3, [sp, #32]
 8004900:	4605      	mov	r5, r0
 8004902:	3a30      	subs	r2, #48	; 0x30
 8004904:	f100 0301 	add.w	r3, r0, #1
 8004908:	d014      	beq.n	8004934 <_strtod_l+0x244>
 800490a:	9905      	ldr	r1, [sp, #20]
 800490c:	4419      	add	r1, r3
 800490e:	9105      	str	r1, [sp, #20]
 8004910:	462b      	mov	r3, r5
 8004912:	eb00 0e05 	add.w	lr, r0, r5
 8004916:	210a      	movs	r1, #10
 8004918:	4573      	cmp	r3, lr
 800491a:	d113      	bne.n	8004944 <_strtod_l+0x254>
 800491c:	182b      	adds	r3, r5, r0
 800491e:	2b08      	cmp	r3, #8
 8004920:	f105 0501 	add.w	r5, r5, #1
 8004924:	4405      	add	r5, r0
 8004926:	dc1c      	bgt.n	8004962 <_strtod_l+0x272>
 8004928:	9907      	ldr	r1, [sp, #28]
 800492a:	230a      	movs	r3, #10
 800492c:	fb03 2301 	mla	r3, r3, r1, r2
 8004930:	9307      	str	r3, [sp, #28]
 8004932:	2300      	movs	r3, #0
 8004934:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004936:	1c51      	adds	r1, r2, #1
 8004938:	9117      	str	r1, [sp, #92]	; 0x5c
 800493a:	7852      	ldrb	r2, [r2, #1]
 800493c:	4618      	mov	r0, r3
 800493e:	e7c9      	b.n	80048d4 <_strtod_l+0x1e4>
 8004940:	4638      	mov	r0, r7
 8004942:	e7d2      	b.n	80048ea <_strtod_l+0x1fa>
 8004944:	2b08      	cmp	r3, #8
 8004946:	dc04      	bgt.n	8004952 <_strtod_l+0x262>
 8004948:	9e07      	ldr	r6, [sp, #28]
 800494a:	434e      	muls	r6, r1
 800494c:	9607      	str	r6, [sp, #28]
 800494e:	3301      	adds	r3, #1
 8004950:	e7e2      	b.n	8004918 <_strtod_l+0x228>
 8004952:	f103 0c01 	add.w	ip, r3, #1
 8004956:	f1bc 0f10 	cmp.w	ip, #16
 800495a:	bfd8      	it	le
 800495c:	fb01 f909 	mulle.w	r9, r1, r9
 8004960:	e7f5      	b.n	800494e <_strtod_l+0x25e>
 8004962:	2d10      	cmp	r5, #16
 8004964:	bfdc      	itt	le
 8004966:	230a      	movle	r3, #10
 8004968:	fb03 2909 	mlale	r9, r3, r9, r2
 800496c:	e7e1      	b.n	8004932 <_strtod_l+0x242>
 800496e:	2300      	movs	r3, #0
 8004970:	9305      	str	r3, [sp, #20]
 8004972:	2301      	movs	r3, #1
 8004974:	e77c      	b.n	8004870 <_strtod_l+0x180>
 8004976:	f04f 0c00 	mov.w	ip, #0
 800497a:	f108 0202 	add.w	r2, r8, #2
 800497e:	9217      	str	r2, [sp, #92]	; 0x5c
 8004980:	f898 2002 	ldrb.w	r2, [r8, #2]
 8004984:	e785      	b.n	8004892 <_strtod_l+0x1a2>
 8004986:	f04f 0c01 	mov.w	ip, #1
 800498a:	e7f6      	b.n	800497a <_strtod_l+0x28a>
 800498c:	080095b4 	.word	0x080095b4
 8004990:	08009308 	.word	0x08009308
 8004994:	7ff00000 	.word	0x7ff00000
 8004998:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800499a:	1c51      	adds	r1, r2, #1
 800499c:	9117      	str	r1, [sp, #92]	; 0x5c
 800499e:	7852      	ldrb	r2, [r2, #1]
 80049a0:	2a30      	cmp	r2, #48	; 0x30
 80049a2:	d0f9      	beq.n	8004998 <_strtod_l+0x2a8>
 80049a4:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 80049a8:	2908      	cmp	r1, #8
 80049aa:	f63f af79 	bhi.w	80048a0 <_strtod_l+0x1b0>
 80049ae:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 80049b2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80049b4:	9206      	str	r2, [sp, #24]
 80049b6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80049b8:	1c51      	adds	r1, r2, #1
 80049ba:	9117      	str	r1, [sp, #92]	; 0x5c
 80049bc:	7852      	ldrb	r2, [r2, #1]
 80049be:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 80049c2:	2e09      	cmp	r6, #9
 80049c4:	d937      	bls.n	8004a36 <_strtod_l+0x346>
 80049c6:	9e06      	ldr	r6, [sp, #24]
 80049c8:	1b89      	subs	r1, r1, r6
 80049ca:	2908      	cmp	r1, #8
 80049cc:	f644 661f 	movw	r6, #19999	; 0x4e1f
 80049d0:	dc02      	bgt.n	80049d8 <_strtod_l+0x2e8>
 80049d2:	4576      	cmp	r6, lr
 80049d4:	bfa8      	it	ge
 80049d6:	4676      	movge	r6, lr
 80049d8:	f1bc 0f00 	cmp.w	ip, #0
 80049dc:	d000      	beq.n	80049e0 <_strtod_l+0x2f0>
 80049de:	4276      	negs	r6, r6
 80049e0:	2d00      	cmp	r5, #0
 80049e2:	d14d      	bne.n	8004a80 <_strtod_l+0x390>
 80049e4:	9904      	ldr	r1, [sp, #16]
 80049e6:	4301      	orrs	r1, r0
 80049e8:	f47f aec6 	bne.w	8004778 <_strtod_l+0x88>
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	f47f aee1 	bne.w	80047b4 <_strtod_l+0xc4>
 80049f2:	2a69      	cmp	r2, #105	; 0x69
 80049f4:	d027      	beq.n	8004a46 <_strtod_l+0x356>
 80049f6:	dc24      	bgt.n	8004a42 <_strtod_l+0x352>
 80049f8:	2a49      	cmp	r2, #73	; 0x49
 80049fa:	d024      	beq.n	8004a46 <_strtod_l+0x356>
 80049fc:	2a4e      	cmp	r2, #78	; 0x4e
 80049fe:	f47f aed9 	bne.w	80047b4 <_strtod_l+0xc4>
 8004a02:	499f      	ldr	r1, [pc, #636]	; (8004c80 <_strtod_l+0x590>)
 8004a04:	a817      	add	r0, sp, #92	; 0x5c
 8004a06:	f001 ff31 	bl	800686c <__match>
 8004a0a:	2800      	cmp	r0, #0
 8004a0c:	f43f aed2 	beq.w	80047b4 <_strtod_l+0xc4>
 8004a10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004a12:	781b      	ldrb	r3, [r3, #0]
 8004a14:	2b28      	cmp	r3, #40	; 0x28
 8004a16:	d12d      	bne.n	8004a74 <_strtod_l+0x384>
 8004a18:	499a      	ldr	r1, [pc, #616]	; (8004c84 <_strtod_l+0x594>)
 8004a1a:	aa1a      	add	r2, sp, #104	; 0x68
 8004a1c:	a817      	add	r0, sp, #92	; 0x5c
 8004a1e:	f001 ff39 	bl	8006894 <__hexnan>
 8004a22:	2805      	cmp	r0, #5
 8004a24:	d126      	bne.n	8004a74 <_strtod_l+0x384>
 8004a26:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004a28:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8004a2c:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8004a30:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8004a34:	e6a0      	b.n	8004778 <_strtod_l+0x88>
 8004a36:	210a      	movs	r1, #10
 8004a38:	fb01 2e0e 	mla	lr, r1, lr, r2
 8004a3c:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8004a40:	e7b9      	b.n	80049b6 <_strtod_l+0x2c6>
 8004a42:	2a6e      	cmp	r2, #110	; 0x6e
 8004a44:	e7db      	b.n	80049fe <_strtod_l+0x30e>
 8004a46:	4990      	ldr	r1, [pc, #576]	; (8004c88 <_strtod_l+0x598>)
 8004a48:	a817      	add	r0, sp, #92	; 0x5c
 8004a4a:	f001 ff0f 	bl	800686c <__match>
 8004a4e:	2800      	cmp	r0, #0
 8004a50:	f43f aeb0 	beq.w	80047b4 <_strtod_l+0xc4>
 8004a54:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004a56:	498d      	ldr	r1, [pc, #564]	; (8004c8c <_strtod_l+0x59c>)
 8004a58:	3b01      	subs	r3, #1
 8004a5a:	a817      	add	r0, sp, #92	; 0x5c
 8004a5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8004a5e:	f001 ff05 	bl	800686c <__match>
 8004a62:	b910      	cbnz	r0, 8004a6a <_strtod_l+0x37a>
 8004a64:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004a66:	3301      	adds	r3, #1
 8004a68:	9317      	str	r3, [sp, #92]	; 0x5c
 8004a6a:	f8df b230 	ldr.w	fp, [pc, #560]	; 8004c9c <_strtod_l+0x5ac>
 8004a6e:	f04f 0a00 	mov.w	sl, #0
 8004a72:	e681      	b.n	8004778 <_strtod_l+0x88>
 8004a74:	4886      	ldr	r0, [pc, #536]	; (8004c90 <_strtod_l+0x5a0>)
 8004a76:	f002 feef 	bl	8007858 <nan>
 8004a7a:	ec5b ab10 	vmov	sl, fp, d0
 8004a7e:	e67b      	b.n	8004778 <_strtod_l+0x88>
 8004a80:	9b05      	ldr	r3, [sp, #20]
 8004a82:	9807      	ldr	r0, [sp, #28]
 8004a84:	1af3      	subs	r3, r6, r3
 8004a86:	2f00      	cmp	r7, #0
 8004a88:	bf08      	it	eq
 8004a8a:	462f      	moveq	r7, r5
 8004a8c:	2d10      	cmp	r5, #16
 8004a8e:	9306      	str	r3, [sp, #24]
 8004a90:	46a8      	mov	r8, r5
 8004a92:	bfa8      	it	ge
 8004a94:	f04f 0810 	movge.w	r8, #16
 8004a98:	f7fb fd3c 	bl	8000514 <__aeabi_ui2d>
 8004a9c:	2d09      	cmp	r5, #9
 8004a9e:	4682      	mov	sl, r0
 8004aa0:	468b      	mov	fp, r1
 8004aa2:	dd13      	ble.n	8004acc <_strtod_l+0x3dc>
 8004aa4:	4b7b      	ldr	r3, [pc, #492]	; (8004c94 <_strtod_l+0x5a4>)
 8004aa6:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8004aaa:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8004aae:	f7fb fdab 	bl	8000608 <__aeabi_dmul>
 8004ab2:	4682      	mov	sl, r0
 8004ab4:	4648      	mov	r0, r9
 8004ab6:	468b      	mov	fp, r1
 8004ab8:	f7fb fd2c 	bl	8000514 <__aeabi_ui2d>
 8004abc:	4602      	mov	r2, r0
 8004abe:	460b      	mov	r3, r1
 8004ac0:	4650      	mov	r0, sl
 8004ac2:	4659      	mov	r1, fp
 8004ac4:	f7fb fbea 	bl	800029c <__adddf3>
 8004ac8:	4682      	mov	sl, r0
 8004aca:	468b      	mov	fp, r1
 8004acc:	2d0f      	cmp	r5, #15
 8004ace:	dc38      	bgt.n	8004b42 <_strtod_l+0x452>
 8004ad0:	9b06      	ldr	r3, [sp, #24]
 8004ad2:	2b00      	cmp	r3, #0
 8004ad4:	f43f ae50 	beq.w	8004778 <_strtod_l+0x88>
 8004ad8:	dd24      	ble.n	8004b24 <_strtod_l+0x434>
 8004ada:	2b16      	cmp	r3, #22
 8004adc:	dc0b      	bgt.n	8004af6 <_strtod_l+0x406>
 8004ade:	496d      	ldr	r1, [pc, #436]	; (8004c94 <_strtod_l+0x5a4>)
 8004ae0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004ae4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004ae8:	4652      	mov	r2, sl
 8004aea:	465b      	mov	r3, fp
 8004aec:	f7fb fd8c 	bl	8000608 <__aeabi_dmul>
 8004af0:	4682      	mov	sl, r0
 8004af2:	468b      	mov	fp, r1
 8004af4:	e640      	b.n	8004778 <_strtod_l+0x88>
 8004af6:	9a06      	ldr	r2, [sp, #24]
 8004af8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8004afc:	4293      	cmp	r3, r2
 8004afe:	db20      	blt.n	8004b42 <_strtod_l+0x452>
 8004b00:	4c64      	ldr	r4, [pc, #400]	; (8004c94 <_strtod_l+0x5a4>)
 8004b02:	f1c5 050f 	rsb	r5, r5, #15
 8004b06:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004b0a:	4652      	mov	r2, sl
 8004b0c:	465b      	mov	r3, fp
 8004b0e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b12:	f7fb fd79 	bl	8000608 <__aeabi_dmul>
 8004b16:	9b06      	ldr	r3, [sp, #24]
 8004b18:	1b5d      	subs	r5, r3, r5
 8004b1a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004b1e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004b22:	e7e3      	b.n	8004aec <_strtod_l+0x3fc>
 8004b24:	9b06      	ldr	r3, [sp, #24]
 8004b26:	3316      	adds	r3, #22
 8004b28:	db0b      	blt.n	8004b42 <_strtod_l+0x452>
 8004b2a:	9b05      	ldr	r3, [sp, #20]
 8004b2c:	1b9e      	subs	r6, r3, r6
 8004b2e:	4b59      	ldr	r3, [pc, #356]	; (8004c94 <_strtod_l+0x5a4>)
 8004b30:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 8004b34:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004b38:	4650      	mov	r0, sl
 8004b3a:	4659      	mov	r1, fp
 8004b3c:	f7fb fe8e 	bl	800085c <__aeabi_ddiv>
 8004b40:	e7d6      	b.n	8004af0 <_strtod_l+0x400>
 8004b42:	9b06      	ldr	r3, [sp, #24]
 8004b44:	eba5 0808 	sub.w	r8, r5, r8
 8004b48:	4498      	add	r8, r3
 8004b4a:	f1b8 0f00 	cmp.w	r8, #0
 8004b4e:	dd74      	ble.n	8004c3a <_strtod_l+0x54a>
 8004b50:	f018 030f 	ands.w	r3, r8, #15
 8004b54:	d00a      	beq.n	8004b6c <_strtod_l+0x47c>
 8004b56:	494f      	ldr	r1, [pc, #316]	; (8004c94 <_strtod_l+0x5a4>)
 8004b58:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004b5c:	4652      	mov	r2, sl
 8004b5e:	465b      	mov	r3, fp
 8004b60:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b64:	f7fb fd50 	bl	8000608 <__aeabi_dmul>
 8004b68:	4682      	mov	sl, r0
 8004b6a:	468b      	mov	fp, r1
 8004b6c:	f038 080f 	bics.w	r8, r8, #15
 8004b70:	d04f      	beq.n	8004c12 <_strtod_l+0x522>
 8004b72:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8004b76:	dd22      	ble.n	8004bbe <_strtod_l+0x4ce>
 8004b78:	2500      	movs	r5, #0
 8004b7a:	462e      	mov	r6, r5
 8004b7c:	9507      	str	r5, [sp, #28]
 8004b7e:	9505      	str	r5, [sp, #20]
 8004b80:	2322      	movs	r3, #34	; 0x22
 8004b82:	f8df b118 	ldr.w	fp, [pc, #280]	; 8004c9c <_strtod_l+0x5ac>
 8004b86:	6023      	str	r3, [r4, #0]
 8004b88:	f04f 0a00 	mov.w	sl, #0
 8004b8c:	9b07      	ldr	r3, [sp, #28]
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	f43f adf2 	beq.w	8004778 <_strtod_l+0x88>
 8004b94:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004b96:	4620      	mov	r0, r4
 8004b98:	f001 ff88 	bl	8006aac <_Bfree>
 8004b9c:	9905      	ldr	r1, [sp, #20]
 8004b9e:	4620      	mov	r0, r4
 8004ba0:	f001 ff84 	bl	8006aac <_Bfree>
 8004ba4:	4631      	mov	r1, r6
 8004ba6:	4620      	mov	r0, r4
 8004ba8:	f001 ff80 	bl	8006aac <_Bfree>
 8004bac:	9907      	ldr	r1, [sp, #28]
 8004bae:	4620      	mov	r0, r4
 8004bb0:	f001 ff7c 	bl	8006aac <_Bfree>
 8004bb4:	4629      	mov	r1, r5
 8004bb6:	4620      	mov	r0, r4
 8004bb8:	f001 ff78 	bl	8006aac <_Bfree>
 8004bbc:	e5dc      	b.n	8004778 <_strtod_l+0x88>
 8004bbe:	4b36      	ldr	r3, [pc, #216]	; (8004c98 <_strtod_l+0x5a8>)
 8004bc0:	9304      	str	r3, [sp, #16]
 8004bc2:	2300      	movs	r3, #0
 8004bc4:	ea4f 1828 	mov.w	r8, r8, asr #4
 8004bc8:	4650      	mov	r0, sl
 8004bca:	4659      	mov	r1, fp
 8004bcc:	4699      	mov	r9, r3
 8004bce:	f1b8 0f01 	cmp.w	r8, #1
 8004bd2:	dc21      	bgt.n	8004c18 <_strtod_l+0x528>
 8004bd4:	b10b      	cbz	r3, 8004bda <_strtod_l+0x4ea>
 8004bd6:	4682      	mov	sl, r0
 8004bd8:	468b      	mov	fp, r1
 8004bda:	4b2f      	ldr	r3, [pc, #188]	; (8004c98 <_strtod_l+0x5a8>)
 8004bdc:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8004be0:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8004be4:	4652      	mov	r2, sl
 8004be6:	465b      	mov	r3, fp
 8004be8:	e9d9 0100 	ldrd	r0, r1, [r9]
 8004bec:	f7fb fd0c 	bl	8000608 <__aeabi_dmul>
 8004bf0:	4b2a      	ldr	r3, [pc, #168]	; (8004c9c <_strtod_l+0x5ac>)
 8004bf2:	460a      	mov	r2, r1
 8004bf4:	400b      	ands	r3, r1
 8004bf6:	492a      	ldr	r1, [pc, #168]	; (8004ca0 <_strtod_l+0x5b0>)
 8004bf8:	428b      	cmp	r3, r1
 8004bfa:	4682      	mov	sl, r0
 8004bfc:	d8bc      	bhi.n	8004b78 <_strtod_l+0x488>
 8004bfe:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8004c02:	428b      	cmp	r3, r1
 8004c04:	bf86      	itte	hi
 8004c06:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 8004ca4 <_strtod_l+0x5b4>
 8004c0a:	f04f 3aff 	movhi.w	sl, #4294967295
 8004c0e:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8004c12:	2300      	movs	r3, #0
 8004c14:	9304      	str	r3, [sp, #16]
 8004c16:	e084      	b.n	8004d22 <_strtod_l+0x632>
 8004c18:	f018 0f01 	tst.w	r8, #1
 8004c1c:	d005      	beq.n	8004c2a <_strtod_l+0x53a>
 8004c1e:	9b04      	ldr	r3, [sp, #16]
 8004c20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c24:	f7fb fcf0 	bl	8000608 <__aeabi_dmul>
 8004c28:	2301      	movs	r3, #1
 8004c2a:	9a04      	ldr	r2, [sp, #16]
 8004c2c:	3208      	adds	r2, #8
 8004c2e:	f109 0901 	add.w	r9, r9, #1
 8004c32:	ea4f 0868 	mov.w	r8, r8, asr #1
 8004c36:	9204      	str	r2, [sp, #16]
 8004c38:	e7c9      	b.n	8004bce <_strtod_l+0x4de>
 8004c3a:	d0ea      	beq.n	8004c12 <_strtod_l+0x522>
 8004c3c:	f1c8 0800 	rsb	r8, r8, #0
 8004c40:	f018 020f 	ands.w	r2, r8, #15
 8004c44:	d00a      	beq.n	8004c5c <_strtod_l+0x56c>
 8004c46:	4b13      	ldr	r3, [pc, #76]	; (8004c94 <_strtod_l+0x5a4>)
 8004c48:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004c4c:	4650      	mov	r0, sl
 8004c4e:	4659      	mov	r1, fp
 8004c50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c54:	f7fb fe02 	bl	800085c <__aeabi_ddiv>
 8004c58:	4682      	mov	sl, r0
 8004c5a:	468b      	mov	fp, r1
 8004c5c:	ea5f 1828 	movs.w	r8, r8, asr #4
 8004c60:	d0d7      	beq.n	8004c12 <_strtod_l+0x522>
 8004c62:	f1b8 0f1f 	cmp.w	r8, #31
 8004c66:	dd1f      	ble.n	8004ca8 <_strtod_l+0x5b8>
 8004c68:	2500      	movs	r5, #0
 8004c6a:	462e      	mov	r6, r5
 8004c6c:	9507      	str	r5, [sp, #28]
 8004c6e:	9505      	str	r5, [sp, #20]
 8004c70:	2322      	movs	r3, #34	; 0x22
 8004c72:	f04f 0a00 	mov.w	sl, #0
 8004c76:	f04f 0b00 	mov.w	fp, #0
 8004c7a:	6023      	str	r3, [r4, #0]
 8004c7c:	e786      	b.n	8004b8c <_strtod_l+0x49c>
 8004c7e:	bf00      	nop
 8004c80:	080092d9 	.word	0x080092d9
 8004c84:	0800931c 	.word	0x0800931c
 8004c88:	080092d1 	.word	0x080092d1
 8004c8c:	0800945c 	.word	0x0800945c
 8004c90:	08009770 	.word	0x08009770
 8004c94:	08009650 	.word	0x08009650
 8004c98:	08009628 	.word	0x08009628
 8004c9c:	7ff00000 	.word	0x7ff00000
 8004ca0:	7ca00000 	.word	0x7ca00000
 8004ca4:	7fefffff 	.word	0x7fefffff
 8004ca8:	f018 0310 	ands.w	r3, r8, #16
 8004cac:	bf18      	it	ne
 8004cae:	236a      	movne	r3, #106	; 0x6a
 8004cb0:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8005060 <_strtod_l+0x970>
 8004cb4:	9304      	str	r3, [sp, #16]
 8004cb6:	4650      	mov	r0, sl
 8004cb8:	4659      	mov	r1, fp
 8004cba:	2300      	movs	r3, #0
 8004cbc:	f018 0f01 	tst.w	r8, #1
 8004cc0:	d004      	beq.n	8004ccc <_strtod_l+0x5dc>
 8004cc2:	e9d9 2300 	ldrd	r2, r3, [r9]
 8004cc6:	f7fb fc9f 	bl	8000608 <__aeabi_dmul>
 8004cca:	2301      	movs	r3, #1
 8004ccc:	ea5f 0868 	movs.w	r8, r8, asr #1
 8004cd0:	f109 0908 	add.w	r9, r9, #8
 8004cd4:	d1f2      	bne.n	8004cbc <_strtod_l+0x5cc>
 8004cd6:	b10b      	cbz	r3, 8004cdc <_strtod_l+0x5ec>
 8004cd8:	4682      	mov	sl, r0
 8004cda:	468b      	mov	fp, r1
 8004cdc:	9b04      	ldr	r3, [sp, #16]
 8004cde:	b1c3      	cbz	r3, 8004d12 <_strtod_l+0x622>
 8004ce0:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004ce4:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8004ce8:	2b00      	cmp	r3, #0
 8004cea:	4659      	mov	r1, fp
 8004cec:	dd11      	ble.n	8004d12 <_strtod_l+0x622>
 8004cee:	2b1f      	cmp	r3, #31
 8004cf0:	f340 8124 	ble.w	8004f3c <_strtod_l+0x84c>
 8004cf4:	2b34      	cmp	r3, #52	; 0x34
 8004cf6:	bfde      	ittt	le
 8004cf8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8004cfc:	f04f 33ff 	movle.w	r3, #4294967295
 8004d00:	fa03 f202 	lslle.w	r2, r3, r2
 8004d04:	f04f 0a00 	mov.w	sl, #0
 8004d08:	bfcc      	ite	gt
 8004d0a:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8004d0e:	ea02 0b01 	andle.w	fp, r2, r1
 8004d12:	2200      	movs	r2, #0
 8004d14:	2300      	movs	r3, #0
 8004d16:	4650      	mov	r0, sl
 8004d18:	4659      	mov	r1, fp
 8004d1a:	f7fb fedd 	bl	8000ad8 <__aeabi_dcmpeq>
 8004d1e:	2800      	cmp	r0, #0
 8004d20:	d1a2      	bne.n	8004c68 <_strtod_l+0x578>
 8004d22:	9b07      	ldr	r3, [sp, #28]
 8004d24:	9300      	str	r3, [sp, #0]
 8004d26:	9908      	ldr	r1, [sp, #32]
 8004d28:	462b      	mov	r3, r5
 8004d2a:	463a      	mov	r2, r7
 8004d2c:	4620      	mov	r0, r4
 8004d2e:	f001 ff25 	bl	8006b7c <__s2b>
 8004d32:	9007      	str	r0, [sp, #28]
 8004d34:	2800      	cmp	r0, #0
 8004d36:	f43f af1f 	beq.w	8004b78 <_strtod_l+0x488>
 8004d3a:	9b05      	ldr	r3, [sp, #20]
 8004d3c:	1b9e      	subs	r6, r3, r6
 8004d3e:	9b06      	ldr	r3, [sp, #24]
 8004d40:	2b00      	cmp	r3, #0
 8004d42:	bfb4      	ite	lt
 8004d44:	4633      	movlt	r3, r6
 8004d46:	2300      	movge	r3, #0
 8004d48:	930c      	str	r3, [sp, #48]	; 0x30
 8004d4a:	9b06      	ldr	r3, [sp, #24]
 8004d4c:	2500      	movs	r5, #0
 8004d4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004d52:	9312      	str	r3, [sp, #72]	; 0x48
 8004d54:	462e      	mov	r6, r5
 8004d56:	9b07      	ldr	r3, [sp, #28]
 8004d58:	4620      	mov	r0, r4
 8004d5a:	6859      	ldr	r1, [r3, #4]
 8004d5c:	f001 fe66 	bl	8006a2c <_Balloc>
 8004d60:	9005      	str	r0, [sp, #20]
 8004d62:	2800      	cmp	r0, #0
 8004d64:	f43f af0c 	beq.w	8004b80 <_strtod_l+0x490>
 8004d68:	9b07      	ldr	r3, [sp, #28]
 8004d6a:	691a      	ldr	r2, [r3, #16]
 8004d6c:	3202      	adds	r2, #2
 8004d6e:	f103 010c 	add.w	r1, r3, #12
 8004d72:	0092      	lsls	r2, r2, #2
 8004d74:	300c      	adds	r0, #12
 8004d76:	f001 fe4b 	bl	8006a10 <memcpy>
 8004d7a:	ec4b ab10 	vmov	d0, sl, fp
 8004d7e:	aa1a      	add	r2, sp, #104	; 0x68
 8004d80:	a919      	add	r1, sp, #100	; 0x64
 8004d82:	4620      	mov	r0, r4
 8004d84:	f002 fa40 	bl	8007208 <__d2b>
 8004d88:	ec4b ab18 	vmov	d8, sl, fp
 8004d8c:	9018      	str	r0, [sp, #96]	; 0x60
 8004d8e:	2800      	cmp	r0, #0
 8004d90:	f43f aef6 	beq.w	8004b80 <_strtod_l+0x490>
 8004d94:	2101      	movs	r1, #1
 8004d96:	4620      	mov	r0, r4
 8004d98:	f001 ff8a 	bl	8006cb0 <__i2b>
 8004d9c:	4606      	mov	r6, r0
 8004d9e:	2800      	cmp	r0, #0
 8004da0:	f43f aeee 	beq.w	8004b80 <_strtod_l+0x490>
 8004da4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004da6:	9904      	ldr	r1, [sp, #16]
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	bfab      	itete	ge
 8004dac:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 8004dae:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 8004db0:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8004db2:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 8004db6:	bfac      	ite	ge
 8004db8:	eb03 0902 	addge.w	r9, r3, r2
 8004dbc:	1ad7      	sublt	r7, r2, r3
 8004dbe:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8004dc0:	eba3 0801 	sub.w	r8, r3, r1
 8004dc4:	4490      	add	r8, r2
 8004dc6:	4ba1      	ldr	r3, [pc, #644]	; (800504c <_strtod_l+0x95c>)
 8004dc8:	f108 38ff 	add.w	r8, r8, #4294967295
 8004dcc:	4598      	cmp	r8, r3
 8004dce:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004dd2:	f280 80c7 	bge.w	8004f64 <_strtod_l+0x874>
 8004dd6:	eba3 0308 	sub.w	r3, r3, r8
 8004dda:	2b1f      	cmp	r3, #31
 8004ddc:	eba2 0203 	sub.w	r2, r2, r3
 8004de0:	f04f 0101 	mov.w	r1, #1
 8004de4:	f300 80b1 	bgt.w	8004f4a <_strtod_l+0x85a>
 8004de8:	fa01 f303 	lsl.w	r3, r1, r3
 8004dec:	930d      	str	r3, [sp, #52]	; 0x34
 8004dee:	2300      	movs	r3, #0
 8004df0:	9308      	str	r3, [sp, #32]
 8004df2:	eb09 0802 	add.w	r8, r9, r2
 8004df6:	9b04      	ldr	r3, [sp, #16]
 8004df8:	45c1      	cmp	r9, r8
 8004dfa:	4417      	add	r7, r2
 8004dfc:	441f      	add	r7, r3
 8004dfe:	464b      	mov	r3, r9
 8004e00:	bfa8      	it	ge
 8004e02:	4643      	movge	r3, r8
 8004e04:	42bb      	cmp	r3, r7
 8004e06:	bfa8      	it	ge
 8004e08:	463b      	movge	r3, r7
 8004e0a:	2b00      	cmp	r3, #0
 8004e0c:	bfc2      	ittt	gt
 8004e0e:	eba8 0803 	subgt.w	r8, r8, r3
 8004e12:	1aff      	subgt	r7, r7, r3
 8004e14:	eba9 0903 	subgt.w	r9, r9, r3
 8004e18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004e1a:	2b00      	cmp	r3, #0
 8004e1c:	dd17      	ble.n	8004e4e <_strtod_l+0x75e>
 8004e1e:	4631      	mov	r1, r6
 8004e20:	461a      	mov	r2, r3
 8004e22:	4620      	mov	r0, r4
 8004e24:	f002 f804 	bl	8006e30 <__pow5mult>
 8004e28:	4606      	mov	r6, r0
 8004e2a:	2800      	cmp	r0, #0
 8004e2c:	f43f aea8 	beq.w	8004b80 <_strtod_l+0x490>
 8004e30:	4601      	mov	r1, r0
 8004e32:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8004e34:	4620      	mov	r0, r4
 8004e36:	f001 ff51 	bl	8006cdc <__multiply>
 8004e3a:	900b      	str	r0, [sp, #44]	; 0x2c
 8004e3c:	2800      	cmp	r0, #0
 8004e3e:	f43f ae9f 	beq.w	8004b80 <_strtod_l+0x490>
 8004e42:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004e44:	4620      	mov	r0, r4
 8004e46:	f001 fe31 	bl	8006aac <_Bfree>
 8004e4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004e4c:	9318      	str	r3, [sp, #96]	; 0x60
 8004e4e:	f1b8 0f00 	cmp.w	r8, #0
 8004e52:	f300 808c 	bgt.w	8004f6e <_strtod_l+0x87e>
 8004e56:	9b06      	ldr	r3, [sp, #24]
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	dd08      	ble.n	8004e6e <_strtod_l+0x77e>
 8004e5c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004e5e:	9905      	ldr	r1, [sp, #20]
 8004e60:	4620      	mov	r0, r4
 8004e62:	f001 ffe5 	bl	8006e30 <__pow5mult>
 8004e66:	9005      	str	r0, [sp, #20]
 8004e68:	2800      	cmp	r0, #0
 8004e6a:	f43f ae89 	beq.w	8004b80 <_strtod_l+0x490>
 8004e6e:	2f00      	cmp	r7, #0
 8004e70:	dd08      	ble.n	8004e84 <_strtod_l+0x794>
 8004e72:	9905      	ldr	r1, [sp, #20]
 8004e74:	463a      	mov	r2, r7
 8004e76:	4620      	mov	r0, r4
 8004e78:	f002 f834 	bl	8006ee4 <__lshift>
 8004e7c:	9005      	str	r0, [sp, #20]
 8004e7e:	2800      	cmp	r0, #0
 8004e80:	f43f ae7e 	beq.w	8004b80 <_strtod_l+0x490>
 8004e84:	f1b9 0f00 	cmp.w	r9, #0
 8004e88:	dd08      	ble.n	8004e9c <_strtod_l+0x7ac>
 8004e8a:	4631      	mov	r1, r6
 8004e8c:	464a      	mov	r2, r9
 8004e8e:	4620      	mov	r0, r4
 8004e90:	f002 f828 	bl	8006ee4 <__lshift>
 8004e94:	4606      	mov	r6, r0
 8004e96:	2800      	cmp	r0, #0
 8004e98:	f43f ae72 	beq.w	8004b80 <_strtod_l+0x490>
 8004e9c:	9a05      	ldr	r2, [sp, #20]
 8004e9e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004ea0:	4620      	mov	r0, r4
 8004ea2:	f002 f8ab 	bl	8006ffc <__mdiff>
 8004ea6:	4605      	mov	r5, r0
 8004ea8:	2800      	cmp	r0, #0
 8004eaa:	f43f ae69 	beq.w	8004b80 <_strtod_l+0x490>
 8004eae:	68c3      	ldr	r3, [r0, #12]
 8004eb0:	930b      	str	r3, [sp, #44]	; 0x2c
 8004eb2:	2300      	movs	r3, #0
 8004eb4:	60c3      	str	r3, [r0, #12]
 8004eb6:	4631      	mov	r1, r6
 8004eb8:	f002 f884 	bl	8006fc4 <__mcmp>
 8004ebc:	2800      	cmp	r0, #0
 8004ebe:	da60      	bge.n	8004f82 <_strtod_l+0x892>
 8004ec0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004ec2:	ea53 030a 	orrs.w	r3, r3, sl
 8004ec6:	f040 8082 	bne.w	8004fce <_strtod_l+0x8de>
 8004eca:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004ece:	2b00      	cmp	r3, #0
 8004ed0:	d17d      	bne.n	8004fce <_strtod_l+0x8de>
 8004ed2:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004ed6:	0d1b      	lsrs	r3, r3, #20
 8004ed8:	051b      	lsls	r3, r3, #20
 8004eda:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004ede:	d976      	bls.n	8004fce <_strtod_l+0x8de>
 8004ee0:	696b      	ldr	r3, [r5, #20]
 8004ee2:	b913      	cbnz	r3, 8004eea <_strtod_l+0x7fa>
 8004ee4:	692b      	ldr	r3, [r5, #16]
 8004ee6:	2b01      	cmp	r3, #1
 8004ee8:	dd71      	ble.n	8004fce <_strtod_l+0x8de>
 8004eea:	4629      	mov	r1, r5
 8004eec:	2201      	movs	r2, #1
 8004eee:	4620      	mov	r0, r4
 8004ef0:	f001 fff8 	bl	8006ee4 <__lshift>
 8004ef4:	4631      	mov	r1, r6
 8004ef6:	4605      	mov	r5, r0
 8004ef8:	f002 f864 	bl	8006fc4 <__mcmp>
 8004efc:	2800      	cmp	r0, #0
 8004efe:	dd66      	ble.n	8004fce <_strtod_l+0x8de>
 8004f00:	9904      	ldr	r1, [sp, #16]
 8004f02:	4a53      	ldr	r2, [pc, #332]	; (8005050 <_strtod_l+0x960>)
 8004f04:	465b      	mov	r3, fp
 8004f06:	2900      	cmp	r1, #0
 8004f08:	f000 8081 	beq.w	800500e <_strtod_l+0x91e>
 8004f0c:	ea02 010b 	and.w	r1, r2, fp
 8004f10:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8004f14:	dc7b      	bgt.n	800500e <_strtod_l+0x91e>
 8004f16:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004f1a:	f77f aea9 	ble.w	8004c70 <_strtod_l+0x580>
 8004f1e:	4b4d      	ldr	r3, [pc, #308]	; (8005054 <_strtod_l+0x964>)
 8004f20:	4650      	mov	r0, sl
 8004f22:	4659      	mov	r1, fp
 8004f24:	2200      	movs	r2, #0
 8004f26:	f7fb fb6f 	bl	8000608 <__aeabi_dmul>
 8004f2a:	460b      	mov	r3, r1
 8004f2c:	4303      	orrs	r3, r0
 8004f2e:	bf08      	it	eq
 8004f30:	2322      	moveq	r3, #34	; 0x22
 8004f32:	4682      	mov	sl, r0
 8004f34:	468b      	mov	fp, r1
 8004f36:	bf08      	it	eq
 8004f38:	6023      	streq	r3, [r4, #0]
 8004f3a:	e62b      	b.n	8004b94 <_strtod_l+0x4a4>
 8004f3c:	f04f 32ff 	mov.w	r2, #4294967295
 8004f40:	fa02 f303 	lsl.w	r3, r2, r3
 8004f44:	ea03 0a0a 	and.w	sl, r3, sl
 8004f48:	e6e3      	b.n	8004d12 <_strtod_l+0x622>
 8004f4a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8004f4e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8004f52:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8004f56:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8004f5a:	fa01 f308 	lsl.w	r3, r1, r8
 8004f5e:	9308      	str	r3, [sp, #32]
 8004f60:	910d      	str	r1, [sp, #52]	; 0x34
 8004f62:	e746      	b.n	8004df2 <_strtod_l+0x702>
 8004f64:	2300      	movs	r3, #0
 8004f66:	9308      	str	r3, [sp, #32]
 8004f68:	2301      	movs	r3, #1
 8004f6a:	930d      	str	r3, [sp, #52]	; 0x34
 8004f6c:	e741      	b.n	8004df2 <_strtod_l+0x702>
 8004f6e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004f70:	4642      	mov	r2, r8
 8004f72:	4620      	mov	r0, r4
 8004f74:	f001 ffb6 	bl	8006ee4 <__lshift>
 8004f78:	9018      	str	r0, [sp, #96]	; 0x60
 8004f7a:	2800      	cmp	r0, #0
 8004f7c:	f47f af6b 	bne.w	8004e56 <_strtod_l+0x766>
 8004f80:	e5fe      	b.n	8004b80 <_strtod_l+0x490>
 8004f82:	465f      	mov	r7, fp
 8004f84:	d16e      	bne.n	8005064 <_strtod_l+0x974>
 8004f86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004f88:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004f8c:	b342      	cbz	r2, 8004fe0 <_strtod_l+0x8f0>
 8004f8e:	4a32      	ldr	r2, [pc, #200]	; (8005058 <_strtod_l+0x968>)
 8004f90:	4293      	cmp	r3, r2
 8004f92:	d128      	bne.n	8004fe6 <_strtod_l+0x8f6>
 8004f94:	9b04      	ldr	r3, [sp, #16]
 8004f96:	4651      	mov	r1, sl
 8004f98:	b1eb      	cbz	r3, 8004fd6 <_strtod_l+0x8e6>
 8004f9a:	4b2d      	ldr	r3, [pc, #180]	; (8005050 <_strtod_l+0x960>)
 8004f9c:	403b      	ands	r3, r7
 8004f9e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004fa2:	f04f 32ff 	mov.w	r2, #4294967295
 8004fa6:	d819      	bhi.n	8004fdc <_strtod_l+0x8ec>
 8004fa8:	0d1b      	lsrs	r3, r3, #20
 8004faa:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004fae:	fa02 f303 	lsl.w	r3, r2, r3
 8004fb2:	4299      	cmp	r1, r3
 8004fb4:	d117      	bne.n	8004fe6 <_strtod_l+0x8f6>
 8004fb6:	4b29      	ldr	r3, [pc, #164]	; (800505c <_strtod_l+0x96c>)
 8004fb8:	429f      	cmp	r7, r3
 8004fba:	d102      	bne.n	8004fc2 <_strtod_l+0x8d2>
 8004fbc:	3101      	adds	r1, #1
 8004fbe:	f43f addf 	beq.w	8004b80 <_strtod_l+0x490>
 8004fc2:	4b23      	ldr	r3, [pc, #140]	; (8005050 <_strtod_l+0x960>)
 8004fc4:	403b      	ands	r3, r7
 8004fc6:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8004fca:	f04f 0a00 	mov.w	sl, #0
 8004fce:	9b04      	ldr	r3, [sp, #16]
 8004fd0:	2b00      	cmp	r3, #0
 8004fd2:	d1a4      	bne.n	8004f1e <_strtod_l+0x82e>
 8004fd4:	e5de      	b.n	8004b94 <_strtod_l+0x4a4>
 8004fd6:	f04f 33ff 	mov.w	r3, #4294967295
 8004fda:	e7ea      	b.n	8004fb2 <_strtod_l+0x8c2>
 8004fdc:	4613      	mov	r3, r2
 8004fde:	e7e8      	b.n	8004fb2 <_strtod_l+0x8c2>
 8004fe0:	ea53 030a 	orrs.w	r3, r3, sl
 8004fe4:	d08c      	beq.n	8004f00 <_strtod_l+0x810>
 8004fe6:	9b08      	ldr	r3, [sp, #32]
 8004fe8:	b1db      	cbz	r3, 8005022 <_strtod_l+0x932>
 8004fea:	423b      	tst	r3, r7
 8004fec:	d0ef      	beq.n	8004fce <_strtod_l+0x8de>
 8004fee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004ff0:	9a04      	ldr	r2, [sp, #16]
 8004ff2:	4650      	mov	r0, sl
 8004ff4:	4659      	mov	r1, fp
 8004ff6:	b1c3      	cbz	r3, 800502a <_strtod_l+0x93a>
 8004ff8:	f7ff fb5e 	bl	80046b8 <sulp>
 8004ffc:	4602      	mov	r2, r0
 8004ffe:	460b      	mov	r3, r1
 8005000:	ec51 0b18 	vmov	r0, r1, d8
 8005004:	f7fb f94a 	bl	800029c <__adddf3>
 8005008:	4682      	mov	sl, r0
 800500a:	468b      	mov	fp, r1
 800500c:	e7df      	b.n	8004fce <_strtod_l+0x8de>
 800500e:	4013      	ands	r3, r2
 8005010:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8005014:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8005018:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800501c:	f04f 3aff 	mov.w	sl, #4294967295
 8005020:	e7d5      	b.n	8004fce <_strtod_l+0x8de>
 8005022:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005024:	ea13 0f0a 	tst.w	r3, sl
 8005028:	e7e0      	b.n	8004fec <_strtod_l+0x8fc>
 800502a:	f7ff fb45 	bl	80046b8 <sulp>
 800502e:	4602      	mov	r2, r0
 8005030:	460b      	mov	r3, r1
 8005032:	ec51 0b18 	vmov	r0, r1, d8
 8005036:	f7fb f92f 	bl	8000298 <__aeabi_dsub>
 800503a:	2200      	movs	r2, #0
 800503c:	2300      	movs	r3, #0
 800503e:	4682      	mov	sl, r0
 8005040:	468b      	mov	fp, r1
 8005042:	f7fb fd49 	bl	8000ad8 <__aeabi_dcmpeq>
 8005046:	2800      	cmp	r0, #0
 8005048:	d0c1      	beq.n	8004fce <_strtod_l+0x8de>
 800504a:	e611      	b.n	8004c70 <_strtod_l+0x580>
 800504c:	fffffc02 	.word	0xfffffc02
 8005050:	7ff00000 	.word	0x7ff00000
 8005054:	39500000 	.word	0x39500000
 8005058:	000fffff 	.word	0x000fffff
 800505c:	7fefffff 	.word	0x7fefffff
 8005060:	08009330 	.word	0x08009330
 8005064:	4631      	mov	r1, r6
 8005066:	4628      	mov	r0, r5
 8005068:	f002 f92a 	bl	80072c0 <__ratio>
 800506c:	ec59 8b10 	vmov	r8, r9, d0
 8005070:	ee10 0a10 	vmov	r0, s0
 8005074:	2200      	movs	r2, #0
 8005076:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800507a:	4649      	mov	r1, r9
 800507c:	f7fb fd40 	bl	8000b00 <__aeabi_dcmple>
 8005080:	2800      	cmp	r0, #0
 8005082:	d07a      	beq.n	800517a <_strtod_l+0xa8a>
 8005084:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005086:	2b00      	cmp	r3, #0
 8005088:	d04a      	beq.n	8005120 <_strtod_l+0xa30>
 800508a:	4b95      	ldr	r3, [pc, #596]	; (80052e0 <_strtod_l+0xbf0>)
 800508c:	2200      	movs	r2, #0
 800508e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8005092:	f8df 924c 	ldr.w	r9, [pc, #588]	; 80052e0 <_strtod_l+0xbf0>
 8005096:	f04f 0800 	mov.w	r8, #0
 800509a:	4b92      	ldr	r3, [pc, #584]	; (80052e4 <_strtod_l+0xbf4>)
 800509c:	403b      	ands	r3, r7
 800509e:	930d      	str	r3, [sp, #52]	; 0x34
 80050a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80050a2:	4b91      	ldr	r3, [pc, #580]	; (80052e8 <_strtod_l+0xbf8>)
 80050a4:	429a      	cmp	r2, r3
 80050a6:	f040 80b0 	bne.w	800520a <_strtod_l+0xb1a>
 80050aa:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80050ae:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 80050b2:	ec4b ab10 	vmov	d0, sl, fp
 80050b6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80050ba:	f002 f829 	bl	8007110 <__ulp>
 80050be:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80050c2:	ec53 2b10 	vmov	r2, r3, d0
 80050c6:	f7fb fa9f 	bl	8000608 <__aeabi_dmul>
 80050ca:	4652      	mov	r2, sl
 80050cc:	465b      	mov	r3, fp
 80050ce:	f7fb f8e5 	bl	800029c <__adddf3>
 80050d2:	460b      	mov	r3, r1
 80050d4:	4983      	ldr	r1, [pc, #524]	; (80052e4 <_strtod_l+0xbf4>)
 80050d6:	4a85      	ldr	r2, [pc, #532]	; (80052ec <_strtod_l+0xbfc>)
 80050d8:	4019      	ands	r1, r3
 80050da:	4291      	cmp	r1, r2
 80050dc:	4682      	mov	sl, r0
 80050de:	d960      	bls.n	80051a2 <_strtod_l+0xab2>
 80050e0:	ee18 3a90 	vmov	r3, s17
 80050e4:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 80050e8:	4293      	cmp	r3, r2
 80050ea:	d104      	bne.n	80050f6 <_strtod_l+0xa06>
 80050ec:	ee18 3a10 	vmov	r3, s16
 80050f0:	3301      	adds	r3, #1
 80050f2:	f43f ad45 	beq.w	8004b80 <_strtod_l+0x490>
 80050f6:	f8df b200 	ldr.w	fp, [pc, #512]	; 80052f8 <_strtod_l+0xc08>
 80050fa:	f04f 3aff 	mov.w	sl, #4294967295
 80050fe:	9918      	ldr	r1, [sp, #96]	; 0x60
 8005100:	4620      	mov	r0, r4
 8005102:	f001 fcd3 	bl	8006aac <_Bfree>
 8005106:	9905      	ldr	r1, [sp, #20]
 8005108:	4620      	mov	r0, r4
 800510a:	f001 fccf 	bl	8006aac <_Bfree>
 800510e:	4631      	mov	r1, r6
 8005110:	4620      	mov	r0, r4
 8005112:	f001 fccb 	bl	8006aac <_Bfree>
 8005116:	4629      	mov	r1, r5
 8005118:	4620      	mov	r0, r4
 800511a:	f001 fcc7 	bl	8006aac <_Bfree>
 800511e:	e61a      	b.n	8004d56 <_strtod_l+0x666>
 8005120:	f1ba 0f00 	cmp.w	sl, #0
 8005124:	d11b      	bne.n	800515e <_strtod_l+0xa6e>
 8005126:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800512a:	b9f3      	cbnz	r3, 800516a <_strtod_l+0xa7a>
 800512c:	4b6c      	ldr	r3, [pc, #432]	; (80052e0 <_strtod_l+0xbf0>)
 800512e:	2200      	movs	r2, #0
 8005130:	4640      	mov	r0, r8
 8005132:	4649      	mov	r1, r9
 8005134:	f7fb fcda 	bl	8000aec <__aeabi_dcmplt>
 8005138:	b9d0      	cbnz	r0, 8005170 <_strtod_l+0xa80>
 800513a:	4640      	mov	r0, r8
 800513c:	4649      	mov	r1, r9
 800513e:	4b6c      	ldr	r3, [pc, #432]	; (80052f0 <_strtod_l+0xc00>)
 8005140:	2200      	movs	r2, #0
 8005142:	f7fb fa61 	bl	8000608 <__aeabi_dmul>
 8005146:	4680      	mov	r8, r0
 8005148:	4689      	mov	r9, r1
 800514a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800514e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 8005152:	9315      	str	r3, [sp, #84]	; 0x54
 8005154:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8005158:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800515c:	e79d      	b.n	800509a <_strtod_l+0x9aa>
 800515e:	f1ba 0f01 	cmp.w	sl, #1
 8005162:	d102      	bne.n	800516a <_strtod_l+0xa7a>
 8005164:	2f00      	cmp	r7, #0
 8005166:	f43f ad83 	beq.w	8004c70 <_strtod_l+0x580>
 800516a:	4b62      	ldr	r3, [pc, #392]	; (80052f4 <_strtod_l+0xc04>)
 800516c:	2200      	movs	r2, #0
 800516e:	e78e      	b.n	800508e <_strtod_l+0x99e>
 8005170:	f8df 917c 	ldr.w	r9, [pc, #380]	; 80052f0 <_strtod_l+0xc00>
 8005174:	f04f 0800 	mov.w	r8, #0
 8005178:	e7e7      	b.n	800514a <_strtod_l+0xa5a>
 800517a:	4b5d      	ldr	r3, [pc, #372]	; (80052f0 <_strtod_l+0xc00>)
 800517c:	4640      	mov	r0, r8
 800517e:	4649      	mov	r1, r9
 8005180:	2200      	movs	r2, #0
 8005182:	f7fb fa41 	bl	8000608 <__aeabi_dmul>
 8005186:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005188:	4680      	mov	r8, r0
 800518a:	4689      	mov	r9, r1
 800518c:	b933      	cbnz	r3, 800519c <_strtod_l+0xaac>
 800518e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005192:	900e      	str	r0, [sp, #56]	; 0x38
 8005194:	930f      	str	r3, [sp, #60]	; 0x3c
 8005196:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800519a:	e7dd      	b.n	8005158 <_strtod_l+0xa68>
 800519c:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 80051a0:	e7f9      	b.n	8005196 <_strtod_l+0xaa6>
 80051a2:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 80051a6:	9b04      	ldr	r3, [sp, #16]
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d1a8      	bne.n	80050fe <_strtod_l+0xa0e>
 80051ac:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80051b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80051b2:	0d1b      	lsrs	r3, r3, #20
 80051b4:	051b      	lsls	r3, r3, #20
 80051b6:	429a      	cmp	r2, r3
 80051b8:	d1a1      	bne.n	80050fe <_strtod_l+0xa0e>
 80051ba:	4640      	mov	r0, r8
 80051bc:	4649      	mov	r1, r9
 80051be:	f7fb fd6b 	bl	8000c98 <__aeabi_d2lz>
 80051c2:	f7fb f9f3 	bl	80005ac <__aeabi_l2d>
 80051c6:	4602      	mov	r2, r0
 80051c8:	460b      	mov	r3, r1
 80051ca:	4640      	mov	r0, r8
 80051cc:	4649      	mov	r1, r9
 80051ce:	f7fb f863 	bl	8000298 <__aeabi_dsub>
 80051d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80051d4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80051d8:	ea43 030a 	orr.w	r3, r3, sl
 80051dc:	4313      	orrs	r3, r2
 80051de:	4680      	mov	r8, r0
 80051e0:	4689      	mov	r9, r1
 80051e2:	d055      	beq.n	8005290 <_strtod_l+0xba0>
 80051e4:	a336      	add	r3, pc, #216	; (adr r3, 80052c0 <_strtod_l+0xbd0>)
 80051e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051ea:	f7fb fc7f 	bl	8000aec <__aeabi_dcmplt>
 80051ee:	2800      	cmp	r0, #0
 80051f0:	f47f acd0 	bne.w	8004b94 <_strtod_l+0x4a4>
 80051f4:	a334      	add	r3, pc, #208	; (adr r3, 80052c8 <_strtod_l+0xbd8>)
 80051f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051fa:	4640      	mov	r0, r8
 80051fc:	4649      	mov	r1, r9
 80051fe:	f7fb fc93 	bl	8000b28 <__aeabi_dcmpgt>
 8005202:	2800      	cmp	r0, #0
 8005204:	f43f af7b 	beq.w	80050fe <_strtod_l+0xa0e>
 8005208:	e4c4      	b.n	8004b94 <_strtod_l+0x4a4>
 800520a:	9b04      	ldr	r3, [sp, #16]
 800520c:	b333      	cbz	r3, 800525c <_strtod_l+0xb6c>
 800520e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005210:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8005214:	d822      	bhi.n	800525c <_strtod_l+0xb6c>
 8005216:	a32e      	add	r3, pc, #184	; (adr r3, 80052d0 <_strtod_l+0xbe0>)
 8005218:	e9d3 2300 	ldrd	r2, r3, [r3]
 800521c:	4640      	mov	r0, r8
 800521e:	4649      	mov	r1, r9
 8005220:	f7fb fc6e 	bl	8000b00 <__aeabi_dcmple>
 8005224:	b1a0      	cbz	r0, 8005250 <_strtod_l+0xb60>
 8005226:	4649      	mov	r1, r9
 8005228:	4640      	mov	r0, r8
 800522a:	f7fb fcc5 	bl	8000bb8 <__aeabi_d2uiz>
 800522e:	2801      	cmp	r0, #1
 8005230:	bf38      	it	cc
 8005232:	2001      	movcc	r0, #1
 8005234:	f7fb f96e 	bl	8000514 <__aeabi_ui2d>
 8005238:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800523a:	4680      	mov	r8, r0
 800523c:	4689      	mov	r9, r1
 800523e:	bb23      	cbnz	r3, 800528a <_strtod_l+0xb9a>
 8005240:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005244:	9010      	str	r0, [sp, #64]	; 0x40
 8005246:	9311      	str	r3, [sp, #68]	; 0x44
 8005248:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800524c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8005250:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005252:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005254:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8005258:	1a9b      	subs	r3, r3, r2
 800525a:	9309      	str	r3, [sp, #36]	; 0x24
 800525c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8005260:	eeb0 0a48 	vmov.f32	s0, s16
 8005264:	eef0 0a68 	vmov.f32	s1, s17
 8005268:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800526c:	f001 ff50 	bl	8007110 <__ulp>
 8005270:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8005274:	ec53 2b10 	vmov	r2, r3, d0
 8005278:	f7fb f9c6 	bl	8000608 <__aeabi_dmul>
 800527c:	ec53 2b18 	vmov	r2, r3, d8
 8005280:	f7fb f80c 	bl	800029c <__adddf3>
 8005284:	4682      	mov	sl, r0
 8005286:	468b      	mov	fp, r1
 8005288:	e78d      	b.n	80051a6 <_strtod_l+0xab6>
 800528a:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 800528e:	e7db      	b.n	8005248 <_strtod_l+0xb58>
 8005290:	a311      	add	r3, pc, #68	; (adr r3, 80052d8 <_strtod_l+0xbe8>)
 8005292:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005296:	f7fb fc29 	bl	8000aec <__aeabi_dcmplt>
 800529a:	e7b2      	b.n	8005202 <_strtod_l+0xb12>
 800529c:	2300      	movs	r3, #0
 800529e:	930a      	str	r3, [sp, #40]	; 0x28
 80052a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80052a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80052a4:	6013      	str	r3, [r2, #0]
 80052a6:	f7ff ba6b 	b.w	8004780 <_strtod_l+0x90>
 80052aa:	2a65      	cmp	r2, #101	; 0x65
 80052ac:	f43f ab5f 	beq.w	800496e <_strtod_l+0x27e>
 80052b0:	2a45      	cmp	r2, #69	; 0x45
 80052b2:	f43f ab5c 	beq.w	800496e <_strtod_l+0x27e>
 80052b6:	2301      	movs	r3, #1
 80052b8:	f7ff bb94 	b.w	80049e4 <_strtod_l+0x2f4>
 80052bc:	f3af 8000 	nop.w
 80052c0:	94a03595 	.word	0x94a03595
 80052c4:	3fdfffff 	.word	0x3fdfffff
 80052c8:	35afe535 	.word	0x35afe535
 80052cc:	3fe00000 	.word	0x3fe00000
 80052d0:	ffc00000 	.word	0xffc00000
 80052d4:	41dfffff 	.word	0x41dfffff
 80052d8:	94a03595 	.word	0x94a03595
 80052dc:	3fcfffff 	.word	0x3fcfffff
 80052e0:	3ff00000 	.word	0x3ff00000
 80052e4:	7ff00000 	.word	0x7ff00000
 80052e8:	7fe00000 	.word	0x7fe00000
 80052ec:	7c9fffff 	.word	0x7c9fffff
 80052f0:	3fe00000 	.word	0x3fe00000
 80052f4:	bff00000 	.word	0xbff00000
 80052f8:	7fefffff 	.word	0x7fefffff

080052fc <_strtod_r>:
 80052fc:	4b01      	ldr	r3, [pc, #4]	; (8005304 <_strtod_r+0x8>)
 80052fe:	f7ff b9f7 	b.w	80046f0 <_strtod_l>
 8005302:	bf00      	nop
 8005304:	20000094 	.word	0x20000094

08005308 <_strtol_l.constprop.0>:
 8005308:	2b01      	cmp	r3, #1
 800530a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800530e:	d001      	beq.n	8005314 <_strtol_l.constprop.0+0xc>
 8005310:	2b24      	cmp	r3, #36	; 0x24
 8005312:	d906      	bls.n	8005322 <_strtol_l.constprop.0+0x1a>
 8005314:	f7fe fafe 	bl	8003914 <__errno>
 8005318:	2316      	movs	r3, #22
 800531a:	6003      	str	r3, [r0, #0]
 800531c:	2000      	movs	r0, #0
 800531e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005322:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8005408 <_strtol_l.constprop.0+0x100>
 8005326:	460d      	mov	r5, r1
 8005328:	462e      	mov	r6, r5
 800532a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800532e:	f814 700c 	ldrb.w	r7, [r4, ip]
 8005332:	f017 0708 	ands.w	r7, r7, #8
 8005336:	d1f7      	bne.n	8005328 <_strtol_l.constprop.0+0x20>
 8005338:	2c2d      	cmp	r4, #45	; 0x2d
 800533a:	d132      	bne.n	80053a2 <_strtol_l.constprop.0+0x9a>
 800533c:	782c      	ldrb	r4, [r5, #0]
 800533e:	2701      	movs	r7, #1
 8005340:	1cb5      	adds	r5, r6, #2
 8005342:	2b00      	cmp	r3, #0
 8005344:	d05b      	beq.n	80053fe <_strtol_l.constprop.0+0xf6>
 8005346:	2b10      	cmp	r3, #16
 8005348:	d109      	bne.n	800535e <_strtol_l.constprop.0+0x56>
 800534a:	2c30      	cmp	r4, #48	; 0x30
 800534c:	d107      	bne.n	800535e <_strtol_l.constprop.0+0x56>
 800534e:	782c      	ldrb	r4, [r5, #0]
 8005350:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8005354:	2c58      	cmp	r4, #88	; 0x58
 8005356:	d14d      	bne.n	80053f4 <_strtol_l.constprop.0+0xec>
 8005358:	786c      	ldrb	r4, [r5, #1]
 800535a:	2310      	movs	r3, #16
 800535c:	3502      	adds	r5, #2
 800535e:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8005362:	f108 38ff 	add.w	r8, r8, #4294967295
 8005366:	f04f 0c00 	mov.w	ip, #0
 800536a:	fbb8 f9f3 	udiv	r9, r8, r3
 800536e:	4666      	mov	r6, ip
 8005370:	fb03 8a19 	mls	sl, r3, r9, r8
 8005374:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8005378:	f1be 0f09 	cmp.w	lr, #9
 800537c:	d816      	bhi.n	80053ac <_strtol_l.constprop.0+0xa4>
 800537e:	4674      	mov	r4, lr
 8005380:	42a3      	cmp	r3, r4
 8005382:	dd24      	ble.n	80053ce <_strtol_l.constprop.0+0xc6>
 8005384:	f1bc 0f00 	cmp.w	ip, #0
 8005388:	db1e      	blt.n	80053c8 <_strtol_l.constprop.0+0xc0>
 800538a:	45b1      	cmp	r9, r6
 800538c:	d31c      	bcc.n	80053c8 <_strtol_l.constprop.0+0xc0>
 800538e:	d101      	bne.n	8005394 <_strtol_l.constprop.0+0x8c>
 8005390:	45a2      	cmp	sl, r4
 8005392:	db19      	blt.n	80053c8 <_strtol_l.constprop.0+0xc0>
 8005394:	fb06 4603 	mla	r6, r6, r3, r4
 8005398:	f04f 0c01 	mov.w	ip, #1
 800539c:	f815 4b01 	ldrb.w	r4, [r5], #1
 80053a0:	e7e8      	b.n	8005374 <_strtol_l.constprop.0+0x6c>
 80053a2:	2c2b      	cmp	r4, #43	; 0x2b
 80053a4:	bf04      	itt	eq
 80053a6:	782c      	ldrbeq	r4, [r5, #0]
 80053a8:	1cb5      	addeq	r5, r6, #2
 80053aa:	e7ca      	b.n	8005342 <_strtol_l.constprop.0+0x3a>
 80053ac:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 80053b0:	f1be 0f19 	cmp.w	lr, #25
 80053b4:	d801      	bhi.n	80053ba <_strtol_l.constprop.0+0xb2>
 80053b6:	3c37      	subs	r4, #55	; 0x37
 80053b8:	e7e2      	b.n	8005380 <_strtol_l.constprop.0+0x78>
 80053ba:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 80053be:	f1be 0f19 	cmp.w	lr, #25
 80053c2:	d804      	bhi.n	80053ce <_strtol_l.constprop.0+0xc6>
 80053c4:	3c57      	subs	r4, #87	; 0x57
 80053c6:	e7db      	b.n	8005380 <_strtol_l.constprop.0+0x78>
 80053c8:	f04f 3cff 	mov.w	ip, #4294967295
 80053cc:	e7e6      	b.n	800539c <_strtol_l.constprop.0+0x94>
 80053ce:	f1bc 0f00 	cmp.w	ip, #0
 80053d2:	da05      	bge.n	80053e0 <_strtol_l.constprop.0+0xd8>
 80053d4:	2322      	movs	r3, #34	; 0x22
 80053d6:	6003      	str	r3, [r0, #0]
 80053d8:	4646      	mov	r6, r8
 80053da:	b942      	cbnz	r2, 80053ee <_strtol_l.constprop.0+0xe6>
 80053dc:	4630      	mov	r0, r6
 80053de:	e79e      	b.n	800531e <_strtol_l.constprop.0+0x16>
 80053e0:	b107      	cbz	r7, 80053e4 <_strtol_l.constprop.0+0xdc>
 80053e2:	4276      	negs	r6, r6
 80053e4:	2a00      	cmp	r2, #0
 80053e6:	d0f9      	beq.n	80053dc <_strtol_l.constprop.0+0xd4>
 80053e8:	f1bc 0f00 	cmp.w	ip, #0
 80053ec:	d000      	beq.n	80053f0 <_strtol_l.constprop.0+0xe8>
 80053ee:	1e69      	subs	r1, r5, #1
 80053f0:	6011      	str	r1, [r2, #0]
 80053f2:	e7f3      	b.n	80053dc <_strtol_l.constprop.0+0xd4>
 80053f4:	2430      	movs	r4, #48	; 0x30
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	d1b1      	bne.n	800535e <_strtol_l.constprop.0+0x56>
 80053fa:	2308      	movs	r3, #8
 80053fc:	e7af      	b.n	800535e <_strtol_l.constprop.0+0x56>
 80053fe:	2c30      	cmp	r4, #48	; 0x30
 8005400:	d0a5      	beq.n	800534e <_strtol_l.constprop.0+0x46>
 8005402:	230a      	movs	r3, #10
 8005404:	e7ab      	b.n	800535e <_strtol_l.constprop.0+0x56>
 8005406:	bf00      	nop
 8005408:	08009359 	.word	0x08009359

0800540c <_strtol_r>:
 800540c:	f7ff bf7c 	b.w	8005308 <_strtol_l.constprop.0>

08005410 <quorem>:
 8005410:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005414:	6903      	ldr	r3, [r0, #16]
 8005416:	690c      	ldr	r4, [r1, #16]
 8005418:	42a3      	cmp	r3, r4
 800541a:	4607      	mov	r7, r0
 800541c:	f2c0 8081 	blt.w	8005522 <quorem+0x112>
 8005420:	3c01      	subs	r4, #1
 8005422:	f101 0814 	add.w	r8, r1, #20
 8005426:	f100 0514 	add.w	r5, r0, #20
 800542a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800542e:	9301      	str	r3, [sp, #4]
 8005430:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8005434:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005438:	3301      	adds	r3, #1
 800543a:	429a      	cmp	r2, r3
 800543c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8005440:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8005444:	fbb2 f6f3 	udiv	r6, r2, r3
 8005448:	d331      	bcc.n	80054ae <quorem+0x9e>
 800544a:	f04f 0e00 	mov.w	lr, #0
 800544e:	4640      	mov	r0, r8
 8005450:	46ac      	mov	ip, r5
 8005452:	46f2      	mov	sl, lr
 8005454:	f850 2b04 	ldr.w	r2, [r0], #4
 8005458:	b293      	uxth	r3, r2
 800545a:	fb06 e303 	mla	r3, r6, r3, lr
 800545e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8005462:	b29b      	uxth	r3, r3
 8005464:	ebaa 0303 	sub.w	r3, sl, r3
 8005468:	f8dc a000 	ldr.w	sl, [ip]
 800546c:	0c12      	lsrs	r2, r2, #16
 800546e:	fa13 f38a 	uxtah	r3, r3, sl
 8005472:	fb06 e202 	mla	r2, r6, r2, lr
 8005476:	9300      	str	r3, [sp, #0]
 8005478:	9b00      	ldr	r3, [sp, #0]
 800547a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800547e:	b292      	uxth	r2, r2
 8005480:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8005484:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005488:	f8bd 3000 	ldrh.w	r3, [sp]
 800548c:	4581      	cmp	r9, r0
 800548e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005492:	f84c 3b04 	str.w	r3, [ip], #4
 8005496:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800549a:	d2db      	bcs.n	8005454 <quorem+0x44>
 800549c:	f855 300b 	ldr.w	r3, [r5, fp]
 80054a0:	b92b      	cbnz	r3, 80054ae <quorem+0x9e>
 80054a2:	9b01      	ldr	r3, [sp, #4]
 80054a4:	3b04      	subs	r3, #4
 80054a6:	429d      	cmp	r5, r3
 80054a8:	461a      	mov	r2, r3
 80054aa:	d32e      	bcc.n	800550a <quorem+0xfa>
 80054ac:	613c      	str	r4, [r7, #16]
 80054ae:	4638      	mov	r0, r7
 80054b0:	f001 fd88 	bl	8006fc4 <__mcmp>
 80054b4:	2800      	cmp	r0, #0
 80054b6:	db24      	blt.n	8005502 <quorem+0xf2>
 80054b8:	3601      	adds	r6, #1
 80054ba:	4628      	mov	r0, r5
 80054bc:	f04f 0c00 	mov.w	ip, #0
 80054c0:	f858 2b04 	ldr.w	r2, [r8], #4
 80054c4:	f8d0 e000 	ldr.w	lr, [r0]
 80054c8:	b293      	uxth	r3, r2
 80054ca:	ebac 0303 	sub.w	r3, ip, r3
 80054ce:	0c12      	lsrs	r2, r2, #16
 80054d0:	fa13 f38e 	uxtah	r3, r3, lr
 80054d4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80054d8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80054dc:	b29b      	uxth	r3, r3
 80054de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80054e2:	45c1      	cmp	r9, r8
 80054e4:	f840 3b04 	str.w	r3, [r0], #4
 80054e8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80054ec:	d2e8      	bcs.n	80054c0 <quorem+0xb0>
 80054ee:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80054f2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80054f6:	b922      	cbnz	r2, 8005502 <quorem+0xf2>
 80054f8:	3b04      	subs	r3, #4
 80054fa:	429d      	cmp	r5, r3
 80054fc:	461a      	mov	r2, r3
 80054fe:	d30a      	bcc.n	8005516 <quorem+0x106>
 8005500:	613c      	str	r4, [r7, #16]
 8005502:	4630      	mov	r0, r6
 8005504:	b003      	add	sp, #12
 8005506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800550a:	6812      	ldr	r2, [r2, #0]
 800550c:	3b04      	subs	r3, #4
 800550e:	2a00      	cmp	r2, #0
 8005510:	d1cc      	bne.n	80054ac <quorem+0x9c>
 8005512:	3c01      	subs	r4, #1
 8005514:	e7c7      	b.n	80054a6 <quorem+0x96>
 8005516:	6812      	ldr	r2, [r2, #0]
 8005518:	3b04      	subs	r3, #4
 800551a:	2a00      	cmp	r2, #0
 800551c:	d1f0      	bne.n	8005500 <quorem+0xf0>
 800551e:	3c01      	subs	r4, #1
 8005520:	e7eb      	b.n	80054fa <quorem+0xea>
 8005522:	2000      	movs	r0, #0
 8005524:	e7ee      	b.n	8005504 <quorem+0xf4>
	...

08005528 <_dtoa_r>:
 8005528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800552c:	ed2d 8b04 	vpush	{d8-d9}
 8005530:	ec57 6b10 	vmov	r6, r7, d0
 8005534:	b093      	sub	sp, #76	; 0x4c
 8005536:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005538:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800553c:	9106      	str	r1, [sp, #24]
 800553e:	ee10 aa10 	vmov	sl, s0
 8005542:	4604      	mov	r4, r0
 8005544:	9209      	str	r2, [sp, #36]	; 0x24
 8005546:	930c      	str	r3, [sp, #48]	; 0x30
 8005548:	46bb      	mov	fp, r7
 800554a:	b975      	cbnz	r5, 800556a <_dtoa_r+0x42>
 800554c:	2010      	movs	r0, #16
 800554e:	f001 fa45 	bl	80069dc <malloc>
 8005552:	4602      	mov	r2, r0
 8005554:	6260      	str	r0, [r4, #36]	; 0x24
 8005556:	b920      	cbnz	r0, 8005562 <_dtoa_r+0x3a>
 8005558:	4ba7      	ldr	r3, [pc, #668]	; (80057f8 <_dtoa_r+0x2d0>)
 800555a:	21ea      	movs	r1, #234	; 0xea
 800555c:	48a7      	ldr	r0, [pc, #668]	; (80057fc <_dtoa_r+0x2d4>)
 800555e:	f002 facb 	bl	8007af8 <__assert_func>
 8005562:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8005566:	6005      	str	r5, [r0, #0]
 8005568:	60c5      	str	r5, [r0, #12]
 800556a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800556c:	6819      	ldr	r1, [r3, #0]
 800556e:	b151      	cbz	r1, 8005586 <_dtoa_r+0x5e>
 8005570:	685a      	ldr	r2, [r3, #4]
 8005572:	604a      	str	r2, [r1, #4]
 8005574:	2301      	movs	r3, #1
 8005576:	4093      	lsls	r3, r2
 8005578:	608b      	str	r3, [r1, #8]
 800557a:	4620      	mov	r0, r4
 800557c:	f001 fa96 	bl	8006aac <_Bfree>
 8005580:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005582:	2200      	movs	r2, #0
 8005584:	601a      	str	r2, [r3, #0]
 8005586:	1e3b      	subs	r3, r7, #0
 8005588:	bfaa      	itet	ge
 800558a:	2300      	movge	r3, #0
 800558c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8005590:	f8c8 3000 	strge.w	r3, [r8]
 8005594:	4b9a      	ldr	r3, [pc, #616]	; (8005800 <_dtoa_r+0x2d8>)
 8005596:	bfbc      	itt	lt
 8005598:	2201      	movlt	r2, #1
 800559a:	f8c8 2000 	strlt.w	r2, [r8]
 800559e:	ea33 030b 	bics.w	r3, r3, fp
 80055a2:	d11b      	bne.n	80055dc <_dtoa_r+0xb4>
 80055a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80055a6:	f242 730f 	movw	r3, #9999	; 0x270f
 80055aa:	6013      	str	r3, [r2, #0]
 80055ac:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80055b0:	4333      	orrs	r3, r6
 80055b2:	f000 8592 	beq.w	80060da <_dtoa_r+0xbb2>
 80055b6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80055b8:	b963      	cbnz	r3, 80055d4 <_dtoa_r+0xac>
 80055ba:	4b92      	ldr	r3, [pc, #584]	; (8005804 <_dtoa_r+0x2dc>)
 80055bc:	e022      	b.n	8005604 <_dtoa_r+0xdc>
 80055be:	4b92      	ldr	r3, [pc, #584]	; (8005808 <_dtoa_r+0x2e0>)
 80055c0:	9301      	str	r3, [sp, #4]
 80055c2:	3308      	adds	r3, #8
 80055c4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80055c6:	6013      	str	r3, [r2, #0]
 80055c8:	9801      	ldr	r0, [sp, #4]
 80055ca:	b013      	add	sp, #76	; 0x4c
 80055cc:	ecbd 8b04 	vpop	{d8-d9}
 80055d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055d4:	4b8b      	ldr	r3, [pc, #556]	; (8005804 <_dtoa_r+0x2dc>)
 80055d6:	9301      	str	r3, [sp, #4]
 80055d8:	3303      	adds	r3, #3
 80055da:	e7f3      	b.n	80055c4 <_dtoa_r+0x9c>
 80055dc:	2200      	movs	r2, #0
 80055de:	2300      	movs	r3, #0
 80055e0:	4650      	mov	r0, sl
 80055e2:	4659      	mov	r1, fp
 80055e4:	f7fb fa78 	bl	8000ad8 <__aeabi_dcmpeq>
 80055e8:	ec4b ab19 	vmov	d9, sl, fp
 80055ec:	4680      	mov	r8, r0
 80055ee:	b158      	cbz	r0, 8005608 <_dtoa_r+0xe0>
 80055f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80055f2:	2301      	movs	r3, #1
 80055f4:	6013      	str	r3, [r2, #0]
 80055f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80055f8:	2b00      	cmp	r3, #0
 80055fa:	f000 856b 	beq.w	80060d4 <_dtoa_r+0xbac>
 80055fe:	4883      	ldr	r0, [pc, #524]	; (800580c <_dtoa_r+0x2e4>)
 8005600:	6018      	str	r0, [r3, #0]
 8005602:	1e43      	subs	r3, r0, #1
 8005604:	9301      	str	r3, [sp, #4]
 8005606:	e7df      	b.n	80055c8 <_dtoa_r+0xa0>
 8005608:	ec4b ab10 	vmov	d0, sl, fp
 800560c:	aa10      	add	r2, sp, #64	; 0x40
 800560e:	a911      	add	r1, sp, #68	; 0x44
 8005610:	4620      	mov	r0, r4
 8005612:	f001 fdf9 	bl	8007208 <__d2b>
 8005616:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800561a:	ee08 0a10 	vmov	s16, r0
 800561e:	2d00      	cmp	r5, #0
 8005620:	f000 8084 	beq.w	800572c <_dtoa_r+0x204>
 8005624:	ee19 3a90 	vmov	r3, s19
 8005628:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800562c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8005630:	4656      	mov	r6, sl
 8005632:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8005636:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800563a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800563e:	4b74      	ldr	r3, [pc, #464]	; (8005810 <_dtoa_r+0x2e8>)
 8005640:	2200      	movs	r2, #0
 8005642:	4630      	mov	r0, r6
 8005644:	4639      	mov	r1, r7
 8005646:	f7fa fe27 	bl	8000298 <__aeabi_dsub>
 800564a:	a365      	add	r3, pc, #404	; (adr r3, 80057e0 <_dtoa_r+0x2b8>)
 800564c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005650:	f7fa ffda 	bl	8000608 <__aeabi_dmul>
 8005654:	a364      	add	r3, pc, #400	; (adr r3, 80057e8 <_dtoa_r+0x2c0>)
 8005656:	e9d3 2300 	ldrd	r2, r3, [r3]
 800565a:	f7fa fe1f 	bl	800029c <__adddf3>
 800565e:	4606      	mov	r6, r0
 8005660:	4628      	mov	r0, r5
 8005662:	460f      	mov	r7, r1
 8005664:	f7fa ff66 	bl	8000534 <__aeabi_i2d>
 8005668:	a361      	add	r3, pc, #388	; (adr r3, 80057f0 <_dtoa_r+0x2c8>)
 800566a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800566e:	f7fa ffcb 	bl	8000608 <__aeabi_dmul>
 8005672:	4602      	mov	r2, r0
 8005674:	460b      	mov	r3, r1
 8005676:	4630      	mov	r0, r6
 8005678:	4639      	mov	r1, r7
 800567a:	f7fa fe0f 	bl	800029c <__adddf3>
 800567e:	4606      	mov	r6, r0
 8005680:	460f      	mov	r7, r1
 8005682:	f7fb fa71 	bl	8000b68 <__aeabi_d2iz>
 8005686:	2200      	movs	r2, #0
 8005688:	9000      	str	r0, [sp, #0]
 800568a:	2300      	movs	r3, #0
 800568c:	4630      	mov	r0, r6
 800568e:	4639      	mov	r1, r7
 8005690:	f7fb fa2c 	bl	8000aec <__aeabi_dcmplt>
 8005694:	b150      	cbz	r0, 80056ac <_dtoa_r+0x184>
 8005696:	9800      	ldr	r0, [sp, #0]
 8005698:	f7fa ff4c 	bl	8000534 <__aeabi_i2d>
 800569c:	4632      	mov	r2, r6
 800569e:	463b      	mov	r3, r7
 80056a0:	f7fb fa1a 	bl	8000ad8 <__aeabi_dcmpeq>
 80056a4:	b910      	cbnz	r0, 80056ac <_dtoa_r+0x184>
 80056a6:	9b00      	ldr	r3, [sp, #0]
 80056a8:	3b01      	subs	r3, #1
 80056aa:	9300      	str	r3, [sp, #0]
 80056ac:	9b00      	ldr	r3, [sp, #0]
 80056ae:	2b16      	cmp	r3, #22
 80056b0:	d85a      	bhi.n	8005768 <_dtoa_r+0x240>
 80056b2:	9a00      	ldr	r2, [sp, #0]
 80056b4:	4b57      	ldr	r3, [pc, #348]	; (8005814 <_dtoa_r+0x2ec>)
 80056b6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80056ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056be:	ec51 0b19 	vmov	r0, r1, d9
 80056c2:	f7fb fa13 	bl	8000aec <__aeabi_dcmplt>
 80056c6:	2800      	cmp	r0, #0
 80056c8:	d050      	beq.n	800576c <_dtoa_r+0x244>
 80056ca:	9b00      	ldr	r3, [sp, #0]
 80056cc:	3b01      	subs	r3, #1
 80056ce:	9300      	str	r3, [sp, #0]
 80056d0:	2300      	movs	r3, #0
 80056d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80056d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80056d6:	1b5d      	subs	r5, r3, r5
 80056d8:	1e6b      	subs	r3, r5, #1
 80056da:	9305      	str	r3, [sp, #20]
 80056dc:	bf45      	ittet	mi
 80056de:	f1c5 0301 	rsbmi	r3, r5, #1
 80056e2:	9304      	strmi	r3, [sp, #16]
 80056e4:	2300      	movpl	r3, #0
 80056e6:	2300      	movmi	r3, #0
 80056e8:	bf4c      	ite	mi
 80056ea:	9305      	strmi	r3, [sp, #20]
 80056ec:	9304      	strpl	r3, [sp, #16]
 80056ee:	9b00      	ldr	r3, [sp, #0]
 80056f0:	2b00      	cmp	r3, #0
 80056f2:	db3d      	blt.n	8005770 <_dtoa_r+0x248>
 80056f4:	9b05      	ldr	r3, [sp, #20]
 80056f6:	9a00      	ldr	r2, [sp, #0]
 80056f8:	920a      	str	r2, [sp, #40]	; 0x28
 80056fa:	4413      	add	r3, r2
 80056fc:	9305      	str	r3, [sp, #20]
 80056fe:	2300      	movs	r3, #0
 8005700:	9307      	str	r3, [sp, #28]
 8005702:	9b06      	ldr	r3, [sp, #24]
 8005704:	2b09      	cmp	r3, #9
 8005706:	f200 8089 	bhi.w	800581c <_dtoa_r+0x2f4>
 800570a:	2b05      	cmp	r3, #5
 800570c:	bfc4      	itt	gt
 800570e:	3b04      	subgt	r3, #4
 8005710:	9306      	strgt	r3, [sp, #24]
 8005712:	9b06      	ldr	r3, [sp, #24]
 8005714:	f1a3 0302 	sub.w	r3, r3, #2
 8005718:	bfcc      	ite	gt
 800571a:	2500      	movgt	r5, #0
 800571c:	2501      	movle	r5, #1
 800571e:	2b03      	cmp	r3, #3
 8005720:	f200 8087 	bhi.w	8005832 <_dtoa_r+0x30a>
 8005724:	e8df f003 	tbb	[pc, r3]
 8005728:	59383a2d 	.word	0x59383a2d
 800572c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8005730:	441d      	add	r5, r3
 8005732:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8005736:	2b20      	cmp	r3, #32
 8005738:	bfc1      	itttt	gt
 800573a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800573e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8005742:	fa0b f303 	lslgt.w	r3, fp, r3
 8005746:	fa26 f000 	lsrgt.w	r0, r6, r0
 800574a:	bfda      	itte	le
 800574c:	f1c3 0320 	rsble	r3, r3, #32
 8005750:	fa06 f003 	lslle.w	r0, r6, r3
 8005754:	4318      	orrgt	r0, r3
 8005756:	f7fa fedd 	bl	8000514 <__aeabi_ui2d>
 800575a:	2301      	movs	r3, #1
 800575c:	4606      	mov	r6, r0
 800575e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8005762:	3d01      	subs	r5, #1
 8005764:	930e      	str	r3, [sp, #56]	; 0x38
 8005766:	e76a      	b.n	800563e <_dtoa_r+0x116>
 8005768:	2301      	movs	r3, #1
 800576a:	e7b2      	b.n	80056d2 <_dtoa_r+0x1aa>
 800576c:	900b      	str	r0, [sp, #44]	; 0x2c
 800576e:	e7b1      	b.n	80056d4 <_dtoa_r+0x1ac>
 8005770:	9b04      	ldr	r3, [sp, #16]
 8005772:	9a00      	ldr	r2, [sp, #0]
 8005774:	1a9b      	subs	r3, r3, r2
 8005776:	9304      	str	r3, [sp, #16]
 8005778:	4253      	negs	r3, r2
 800577a:	9307      	str	r3, [sp, #28]
 800577c:	2300      	movs	r3, #0
 800577e:	930a      	str	r3, [sp, #40]	; 0x28
 8005780:	e7bf      	b.n	8005702 <_dtoa_r+0x1da>
 8005782:	2300      	movs	r3, #0
 8005784:	9308      	str	r3, [sp, #32]
 8005786:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005788:	2b00      	cmp	r3, #0
 800578a:	dc55      	bgt.n	8005838 <_dtoa_r+0x310>
 800578c:	2301      	movs	r3, #1
 800578e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8005792:	461a      	mov	r2, r3
 8005794:	9209      	str	r2, [sp, #36]	; 0x24
 8005796:	e00c      	b.n	80057b2 <_dtoa_r+0x28a>
 8005798:	2301      	movs	r3, #1
 800579a:	e7f3      	b.n	8005784 <_dtoa_r+0x25c>
 800579c:	2300      	movs	r3, #0
 800579e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80057a0:	9308      	str	r3, [sp, #32]
 80057a2:	9b00      	ldr	r3, [sp, #0]
 80057a4:	4413      	add	r3, r2
 80057a6:	9302      	str	r3, [sp, #8]
 80057a8:	3301      	adds	r3, #1
 80057aa:	2b01      	cmp	r3, #1
 80057ac:	9303      	str	r3, [sp, #12]
 80057ae:	bfb8      	it	lt
 80057b0:	2301      	movlt	r3, #1
 80057b2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80057b4:	2200      	movs	r2, #0
 80057b6:	6042      	str	r2, [r0, #4]
 80057b8:	2204      	movs	r2, #4
 80057ba:	f102 0614 	add.w	r6, r2, #20
 80057be:	429e      	cmp	r6, r3
 80057c0:	6841      	ldr	r1, [r0, #4]
 80057c2:	d93d      	bls.n	8005840 <_dtoa_r+0x318>
 80057c4:	4620      	mov	r0, r4
 80057c6:	f001 f931 	bl	8006a2c <_Balloc>
 80057ca:	9001      	str	r0, [sp, #4]
 80057cc:	2800      	cmp	r0, #0
 80057ce:	d13b      	bne.n	8005848 <_dtoa_r+0x320>
 80057d0:	4b11      	ldr	r3, [pc, #68]	; (8005818 <_dtoa_r+0x2f0>)
 80057d2:	4602      	mov	r2, r0
 80057d4:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80057d8:	e6c0      	b.n	800555c <_dtoa_r+0x34>
 80057da:	2301      	movs	r3, #1
 80057dc:	e7df      	b.n	800579e <_dtoa_r+0x276>
 80057de:	bf00      	nop
 80057e0:	636f4361 	.word	0x636f4361
 80057e4:	3fd287a7 	.word	0x3fd287a7
 80057e8:	8b60c8b3 	.word	0x8b60c8b3
 80057ec:	3fc68a28 	.word	0x3fc68a28
 80057f0:	509f79fb 	.word	0x509f79fb
 80057f4:	3fd34413 	.word	0x3fd34413
 80057f8:	08009466 	.word	0x08009466
 80057fc:	0800947d 	.word	0x0800947d
 8005800:	7ff00000 	.word	0x7ff00000
 8005804:	08009462 	.word	0x08009462
 8005808:	08009459 	.word	0x08009459
 800580c:	080092dd 	.word	0x080092dd
 8005810:	3ff80000 	.word	0x3ff80000
 8005814:	08009650 	.word	0x08009650
 8005818:	080094d8 	.word	0x080094d8
 800581c:	2501      	movs	r5, #1
 800581e:	2300      	movs	r3, #0
 8005820:	9306      	str	r3, [sp, #24]
 8005822:	9508      	str	r5, [sp, #32]
 8005824:	f04f 33ff 	mov.w	r3, #4294967295
 8005828:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800582c:	2200      	movs	r2, #0
 800582e:	2312      	movs	r3, #18
 8005830:	e7b0      	b.n	8005794 <_dtoa_r+0x26c>
 8005832:	2301      	movs	r3, #1
 8005834:	9308      	str	r3, [sp, #32]
 8005836:	e7f5      	b.n	8005824 <_dtoa_r+0x2fc>
 8005838:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800583a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800583e:	e7b8      	b.n	80057b2 <_dtoa_r+0x28a>
 8005840:	3101      	adds	r1, #1
 8005842:	6041      	str	r1, [r0, #4]
 8005844:	0052      	lsls	r2, r2, #1
 8005846:	e7b8      	b.n	80057ba <_dtoa_r+0x292>
 8005848:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800584a:	9a01      	ldr	r2, [sp, #4]
 800584c:	601a      	str	r2, [r3, #0]
 800584e:	9b03      	ldr	r3, [sp, #12]
 8005850:	2b0e      	cmp	r3, #14
 8005852:	f200 809d 	bhi.w	8005990 <_dtoa_r+0x468>
 8005856:	2d00      	cmp	r5, #0
 8005858:	f000 809a 	beq.w	8005990 <_dtoa_r+0x468>
 800585c:	9b00      	ldr	r3, [sp, #0]
 800585e:	2b00      	cmp	r3, #0
 8005860:	dd32      	ble.n	80058c8 <_dtoa_r+0x3a0>
 8005862:	4ab7      	ldr	r2, [pc, #732]	; (8005b40 <_dtoa_r+0x618>)
 8005864:	f003 030f 	and.w	r3, r3, #15
 8005868:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800586c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005870:	9b00      	ldr	r3, [sp, #0]
 8005872:	05d8      	lsls	r0, r3, #23
 8005874:	ea4f 1723 	mov.w	r7, r3, asr #4
 8005878:	d516      	bpl.n	80058a8 <_dtoa_r+0x380>
 800587a:	4bb2      	ldr	r3, [pc, #712]	; (8005b44 <_dtoa_r+0x61c>)
 800587c:	ec51 0b19 	vmov	r0, r1, d9
 8005880:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8005884:	f7fa ffea 	bl	800085c <__aeabi_ddiv>
 8005888:	f007 070f 	and.w	r7, r7, #15
 800588c:	4682      	mov	sl, r0
 800588e:	468b      	mov	fp, r1
 8005890:	2503      	movs	r5, #3
 8005892:	4eac      	ldr	r6, [pc, #688]	; (8005b44 <_dtoa_r+0x61c>)
 8005894:	b957      	cbnz	r7, 80058ac <_dtoa_r+0x384>
 8005896:	4642      	mov	r2, r8
 8005898:	464b      	mov	r3, r9
 800589a:	4650      	mov	r0, sl
 800589c:	4659      	mov	r1, fp
 800589e:	f7fa ffdd 	bl	800085c <__aeabi_ddiv>
 80058a2:	4682      	mov	sl, r0
 80058a4:	468b      	mov	fp, r1
 80058a6:	e028      	b.n	80058fa <_dtoa_r+0x3d2>
 80058a8:	2502      	movs	r5, #2
 80058aa:	e7f2      	b.n	8005892 <_dtoa_r+0x36a>
 80058ac:	07f9      	lsls	r1, r7, #31
 80058ae:	d508      	bpl.n	80058c2 <_dtoa_r+0x39a>
 80058b0:	4640      	mov	r0, r8
 80058b2:	4649      	mov	r1, r9
 80058b4:	e9d6 2300 	ldrd	r2, r3, [r6]
 80058b8:	f7fa fea6 	bl	8000608 <__aeabi_dmul>
 80058bc:	3501      	adds	r5, #1
 80058be:	4680      	mov	r8, r0
 80058c0:	4689      	mov	r9, r1
 80058c2:	107f      	asrs	r7, r7, #1
 80058c4:	3608      	adds	r6, #8
 80058c6:	e7e5      	b.n	8005894 <_dtoa_r+0x36c>
 80058c8:	f000 809b 	beq.w	8005a02 <_dtoa_r+0x4da>
 80058cc:	9b00      	ldr	r3, [sp, #0]
 80058ce:	4f9d      	ldr	r7, [pc, #628]	; (8005b44 <_dtoa_r+0x61c>)
 80058d0:	425e      	negs	r6, r3
 80058d2:	4b9b      	ldr	r3, [pc, #620]	; (8005b40 <_dtoa_r+0x618>)
 80058d4:	f006 020f 	and.w	r2, r6, #15
 80058d8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80058dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058e0:	ec51 0b19 	vmov	r0, r1, d9
 80058e4:	f7fa fe90 	bl	8000608 <__aeabi_dmul>
 80058e8:	1136      	asrs	r6, r6, #4
 80058ea:	4682      	mov	sl, r0
 80058ec:	468b      	mov	fp, r1
 80058ee:	2300      	movs	r3, #0
 80058f0:	2502      	movs	r5, #2
 80058f2:	2e00      	cmp	r6, #0
 80058f4:	d17a      	bne.n	80059ec <_dtoa_r+0x4c4>
 80058f6:	2b00      	cmp	r3, #0
 80058f8:	d1d3      	bne.n	80058a2 <_dtoa_r+0x37a>
 80058fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80058fc:	2b00      	cmp	r3, #0
 80058fe:	f000 8082 	beq.w	8005a06 <_dtoa_r+0x4de>
 8005902:	4b91      	ldr	r3, [pc, #580]	; (8005b48 <_dtoa_r+0x620>)
 8005904:	2200      	movs	r2, #0
 8005906:	4650      	mov	r0, sl
 8005908:	4659      	mov	r1, fp
 800590a:	f7fb f8ef 	bl	8000aec <__aeabi_dcmplt>
 800590e:	2800      	cmp	r0, #0
 8005910:	d079      	beq.n	8005a06 <_dtoa_r+0x4de>
 8005912:	9b03      	ldr	r3, [sp, #12]
 8005914:	2b00      	cmp	r3, #0
 8005916:	d076      	beq.n	8005a06 <_dtoa_r+0x4de>
 8005918:	9b02      	ldr	r3, [sp, #8]
 800591a:	2b00      	cmp	r3, #0
 800591c:	dd36      	ble.n	800598c <_dtoa_r+0x464>
 800591e:	9b00      	ldr	r3, [sp, #0]
 8005920:	4650      	mov	r0, sl
 8005922:	4659      	mov	r1, fp
 8005924:	1e5f      	subs	r7, r3, #1
 8005926:	2200      	movs	r2, #0
 8005928:	4b88      	ldr	r3, [pc, #544]	; (8005b4c <_dtoa_r+0x624>)
 800592a:	f7fa fe6d 	bl	8000608 <__aeabi_dmul>
 800592e:	9e02      	ldr	r6, [sp, #8]
 8005930:	4682      	mov	sl, r0
 8005932:	468b      	mov	fp, r1
 8005934:	3501      	adds	r5, #1
 8005936:	4628      	mov	r0, r5
 8005938:	f7fa fdfc 	bl	8000534 <__aeabi_i2d>
 800593c:	4652      	mov	r2, sl
 800593e:	465b      	mov	r3, fp
 8005940:	f7fa fe62 	bl	8000608 <__aeabi_dmul>
 8005944:	4b82      	ldr	r3, [pc, #520]	; (8005b50 <_dtoa_r+0x628>)
 8005946:	2200      	movs	r2, #0
 8005948:	f7fa fca8 	bl	800029c <__adddf3>
 800594c:	46d0      	mov	r8, sl
 800594e:	46d9      	mov	r9, fp
 8005950:	4682      	mov	sl, r0
 8005952:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8005956:	2e00      	cmp	r6, #0
 8005958:	d158      	bne.n	8005a0c <_dtoa_r+0x4e4>
 800595a:	4b7e      	ldr	r3, [pc, #504]	; (8005b54 <_dtoa_r+0x62c>)
 800595c:	2200      	movs	r2, #0
 800595e:	4640      	mov	r0, r8
 8005960:	4649      	mov	r1, r9
 8005962:	f7fa fc99 	bl	8000298 <__aeabi_dsub>
 8005966:	4652      	mov	r2, sl
 8005968:	465b      	mov	r3, fp
 800596a:	4680      	mov	r8, r0
 800596c:	4689      	mov	r9, r1
 800596e:	f7fb f8db 	bl	8000b28 <__aeabi_dcmpgt>
 8005972:	2800      	cmp	r0, #0
 8005974:	f040 8295 	bne.w	8005ea2 <_dtoa_r+0x97a>
 8005978:	4652      	mov	r2, sl
 800597a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800597e:	4640      	mov	r0, r8
 8005980:	4649      	mov	r1, r9
 8005982:	f7fb f8b3 	bl	8000aec <__aeabi_dcmplt>
 8005986:	2800      	cmp	r0, #0
 8005988:	f040 8289 	bne.w	8005e9e <_dtoa_r+0x976>
 800598c:	ec5b ab19 	vmov	sl, fp, d9
 8005990:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005992:	2b00      	cmp	r3, #0
 8005994:	f2c0 8148 	blt.w	8005c28 <_dtoa_r+0x700>
 8005998:	9a00      	ldr	r2, [sp, #0]
 800599a:	2a0e      	cmp	r2, #14
 800599c:	f300 8144 	bgt.w	8005c28 <_dtoa_r+0x700>
 80059a0:	4b67      	ldr	r3, [pc, #412]	; (8005b40 <_dtoa_r+0x618>)
 80059a2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80059a6:	e9d3 8900 	ldrd	r8, r9, [r3]
 80059aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	f280 80d5 	bge.w	8005b5c <_dtoa_r+0x634>
 80059b2:	9b03      	ldr	r3, [sp, #12]
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	f300 80d1 	bgt.w	8005b5c <_dtoa_r+0x634>
 80059ba:	f040 826f 	bne.w	8005e9c <_dtoa_r+0x974>
 80059be:	4b65      	ldr	r3, [pc, #404]	; (8005b54 <_dtoa_r+0x62c>)
 80059c0:	2200      	movs	r2, #0
 80059c2:	4640      	mov	r0, r8
 80059c4:	4649      	mov	r1, r9
 80059c6:	f7fa fe1f 	bl	8000608 <__aeabi_dmul>
 80059ca:	4652      	mov	r2, sl
 80059cc:	465b      	mov	r3, fp
 80059ce:	f7fb f8a1 	bl	8000b14 <__aeabi_dcmpge>
 80059d2:	9e03      	ldr	r6, [sp, #12]
 80059d4:	4637      	mov	r7, r6
 80059d6:	2800      	cmp	r0, #0
 80059d8:	f040 8245 	bne.w	8005e66 <_dtoa_r+0x93e>
 80059dc:	9d01      	ldr	r5, [sp, #4]
 80059de:	2331      	movs	r3, #49	; 0x31
 80059e0:	f805 3b01 	strb.w	r3, [r5], #1
 80059e4:	9b00      	ldr	r3, [sp, #0]
 80059e6:	3301      	adds	r3, #1
 80059e8:	9300      	str	r3, [sp, #0]
 80059ea:	e240      	b.n	8005e6e <_dtoa_r+0x946>
 80059ec:	07f2      	lsls	r2, r6, #31
 80059ee:	d505      	bpl.n	80059fc <_dtoa_r+0x4d4>
 80059f0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80059f4:	f7fa fe08 	bl	8000608 <__aeabi_dmul>
 80059f8:	3501      	adds	r5, #1
 80059fa:	2301      	movs	r3, #1
 80059fc:	1076      	asrs	r6, r6, #1
 80059fe:	3708      	adds	r7, #8
 8005a00:	e777      	b.n	80058f2 <_dtoa_r+0x3ca>
 8005a02:	2502      	movs	r5, #2
 8005a04:	e779      	b.n	80058fa <_dtoa_r+0x3d2>
 8005a06:	9f00      	ldr	r7, [sp, #0]
 8005a08:	9e03      	ldr	r6, [sp, #12]
 8005a0a:	e794      	b.n	8005936 <_dtoa_r+0x40e>
 8005a0c:	9901      	ldr	r1, [sp, #4]
 8005a0e:	4b4c      	ldr	r3, [pc, #304]	; (8005b40 <_dtoa_r+0x618>)
 8005a10:	4431      	add	r1, r6
 8005a12:	910d      	str	r1, [sp, #52]	; 0x34
 8005a14:	9908      	ldr	r1, [sp, #32]
 8005a16:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8005a1a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8005a1e:	2900      	cmp	r1, #0
 8005a20:	d043      	beq.n	8005aaa <_dtoa_r+0x582>
 8005a22:	494d      	ldr	r1, [pc, #308]	; (8005b58 <_dtoa_r+0x630>)
 8005a24:	2000      	movs	r0, #0
 8005a26:	f7fa ff19 	bl	800085c <__aeabi_ddiv>
 8005a2a:	4652      	mov	r2, sl
 8005a2c:	465b      	mov	r3, fp
 8005a2e:	f7fa fc33 	bl	8000298 <__aeabi_dsub>
 8005a32:	9d01      	ldr	r5, [sp, #4]
 8005a34:	4682      	mov	sl, r0
 8005a36:	468b      	mov	fp, r1
 8005a38:	4649      	mov	r1, r9
 8005a3a:	4640      	mov	r0, r8
 8005a3c:	f7fb f894 	bl	8000b68 <__aeabi_d2iz>
 8005a40:	4606      	mov	r6, r0
 8005a42:	f7fa fd77 	bl	8000534 <__aeabi_i2d>
 8005a46:	4602      	mov	r2, r0
 8005a48:	460b      	mov	r3, r1
 8005a4a:	4640      	mov	r0, r8
 8005a4c:	4649      	mov	r1, r9
 8005a4e:	f7fa fc23 	bl	8000298 <__aeabi_dsub>
 8005a52:	3630      	adds	r6, #48	; 0x30
 8005a54:	f805 6b01 	strb.w	r6, [r5], #1
 8005a58:	4652      	mov	r2, sl
 8005a5a:	465b      	mov	r3, fp
 8005a5c:	4680      	mov	r8, r0
 8005a5e:	4689      	mov	r9, r1
 8005a60:	f7fb f844 	bl	8000aec <__aeabi_dcmplt>
 8005a64:	2800      	cmp	r0, #0
 8005a66:	d163      	bne.n	8005b30 <_dtoa_r+0x608>
 8005a68:	4642      	mov	r2, r8
 8005a6a:	464b      	mov	r3, r9
 8005a6c:	4936      	ldr	r1, [pc, #216]	; (8005b48 <_dtoa_r+0x620>)
 8005a6e:	2000      	movs	r0, #0
 8005a70:	f7fa fc12 	bl	8000298 <__aeabi_dsub>
 8005a74:	4652      	mov	r2, sl
 8005a76:	465b      	mov	r3, fp
 8005a78:	f7fb f838 	bl	8000aec <__aeabi_dcmplt>
 8005a7c:	2800      	cmp	r0, #0
 8005a7e:	f040 80b5 	bne.w	8005bec <_dtoa_r+0x6c4>
 8005a82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005a84:	429d      	cmp	r5, r3
 8005a86:	d081      	beq.n	800598c <_dtoa_r+0x464>
 8005a88:	4b30      	ldr	r3, [pc, #192]	; (8005b4c <_dtoa_r+0x624>)
 8005a8a:	2200      	movs	r2, #0
 8005a8c:	4650      	mov	r0, sl
 8005a8e:	4659      	mov	r1, fp
 8005a90:	f7fa fdba 	bl	8000608 <__aeabi_dmul>
 8005a94:	4b2d      	ldr	r3, [pc, #180]	; (8005b4c <_dtoa_r+0x624>)
 8005a96:	4682      	mov	sl, r0
 8005a98:	468b      	mov	fp, r1
 8005a9a:	4640      	mov	r0, r8
 8005a9c:	4649      	mov	r1, r9
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	f7fa fdb2 	bl	8000608 <__aeabi_dmul>
 8005aa4:	4680      	mov	r8, r0
 8005aa6:	4689      	mov	r9, r1
 8005aa8:	e7c6      	b.n	8005a38 <_dtoa_r+0x510>
 8005aaa:	4650      	mov	r0, sl
 8005aac:	4659      	mov	r1, fp
 8005aae:	f7fa fdab 	bl	8000608 <__aeabi_dmul>
 8005ab2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005ab4:	9d01      	ldr	r5, [sp, #4]
 8005ab6:	930f      	str	r3, [sp, #60]	; 0x3c
 8005ab8:	4682      	mov	sl, r0
 8005aba:	468b      	mov	fp, r1
 8005abc:	4649      	mov	r1, r9
 8005abe:	4640      	mov	r0, r8
 8005ac0:	f7fb f852 	bl	8000b68 <__aeabi_d2iz>
 8005ac4:	4606      	mov	r6, r0
 8005ac6:	f7fa fd35 	bl	8000534 <__aeabi_i2d>
 8005aca:	3630      	adds	r6, #48	; 0x30
 8005acc:	4602      	mov	r2, r0
 8005ace:	460b      	mov	r3, r1
 8005ad0:	4640      	mov	r0, r8
 8005ad2:	4649      	mov	r1, r9
 8005ad4:	f7fa fbe0 	bl	8000298 <__aeabi_dsub>
 8005ad8:	f805 6b01 	strb.w	r6, [r5], #1
 8005adc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005ade:	429d      	cmp	r5, r3
 8005ae0:	4680      	mov	r8, r0
 8005ae2:	4689      	mov	r9, r1
 8005ae4:	f04f 0200 	mov.w	r2, #0
 8005ae8:	d124      	bne.n	8005b34 <_dtoa_r+0x60c>
 8005aea:	4b1b      	ldr	r3, [pc, #108]	; (8005b58 <_dtoa_r+0x630>)
 8005aec:	4650      	mov	r0, sl
 8005aee:	4659      	mov	r1, fp
 8005af0:	f7fa fbd4 	bl	800029c <__adddf3>
 8005af4:	4602      	mov	r2, r0
 8005af6:	460b      	mov	r3, r1
 8005af8:	4640      	mov	r0, r8
 8005afa:	4649      	mov	r1, r9
 8005afc:	f7fb f814 	bl	8000b28 <__aeabi_dcmpgt>
 8005b00:	2800      	cmp	r0, #0
 8005b02:	d173      	bne.n	8005bec <_dtoa_r+0x6c4>
 8005b04:	4652      	mov	r2, sl
 8005b06:	465b      	mov	r3, fp
 8005b08:	4913      	ldr	r1, [pc, #76]	; (8005b58 <_dtoa_r+0x630>)
 8005b0a:	2000      	movs	r0, #0
 8005b0c:	f7fa fbc4 	bl	8000298 <__aeabi_dsub>
 8005b10:	4602      	mov	r2, r0
 8005b12:	460b      	mov	r3, r1
 8005b14:	4640      	mov	r0, r8
 8005b16:	4649      	mov	r1, r9
 8005b18:	f7fa ffe8 	bl	8000aec <__aeabi_dcmplt>
 8005b1c:	2800      	cmp	r0, #0
 8005b1e:	f43f af35 	beq.w	800598c <_dtoa_r+0x464>
 8005b22:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005b24:	1e6b      	subs	r3, r5, #1
 8005b26:	930f      	str	r3, [sp, #60]	; 0x3c
 8005b28:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005b2c:	2b30      	cmp	r3, #48	; 0x30
 8005b2e:	d0f8      	beq.n	8005b22 <_dtoa_r+0x5fa>
 8005b30:	9700      	str	r7, [sp, #0]
 8005b32:	e049      	b.n	8005bc8 <_dtoa_r+0x6a0>
 8005b34:	4b05      	ldr	r3, [pc, #20]	; (8005b4c <_dtoa_r+0x624>)
 8005b36:	f7fa fd67 	bl	8000608 <__aeabi_dmul>
 8005b3a:	4680      	mov	r8, r0
 8005b3c:	4689      	mov	r9, r1
 8005b3e:	e7bd      	b.n	8005abc <_dtoa_r+0x594>
 8005b40:	08009650 	.word	0x08009650
 8005b44:	08009628 	.word	0x08009628
 8005b48:	3ff00000 	.word	0x3ff00000
 8005b4c:	40240000 	.word	0x40240000
 8005b50:	401c0000 	.word	0x401c0000
 8005b54:	40140000 	.word	0x40140000
 8005b58:	3fe00000 	.word	0x3fe00000
 8005b5c:	9d01      	ldr	r5, [sp, #4]
 8005b5e:	4656      	mov	r6, sl
 8005b60:	465f      	mov	r7, fp
 8005b62:	4642      	mov	r2, r8
 8005b64:	464b      	mov	r3, r9
 8005b66:	4630      	mov	r0, r6
 8005b68:	4639      	mov	r1, r7
 8005b6a:	f7fa fe77 	bl	800085c <__aeabi_ddiv>
 8005b6e:	f7fa fffb 	bl	8000b68 <__aeabi_d2iz>
 8005b72:	4682      	mov	sl, r0
 8005b74:	f7fa fcde 	bl	8000534 <__aeabi_i2d>
 8005b78:	4642      	mov	r2, r8
 8005b7a:	464b      	mov	r3, r9
 8005b7c:	f7fa fd44 	bl	8000608 <__aeabi_dmul>
 8005b80:	4602      	mov	r2, r0
 8005b82:	460b      	mov	r3, r1
 8005b84:	4630      	mov	r0, r6
 8005b86:	4639      	mov	r1, r7
 8005b88:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 8005b8c:	f7fa fb84 	bl	8000298 <__aeabi_dsub>
 8005b90:	f805 6b01 	strb.w	r6, [r5], #1
 8005b94:	9e01      	ldr	r6, [sp, #4]
 8005b96:	9f03      	ldr	r7, [sp, #12]
 8005b98:	1bae      	subs	r6, r5, r6
 8005b9a:	42b7      	cmp	r7, r6
 8005b9c:	4602      	mov	r2, r0
 8005b9e:	460b      	mov	r3, r1
 8005ba0:	d135      	bne.n	8005c0e <_dtoa_r+0x6e6>
 8005ba2:	f7fa fb7b 	bl	800029c <__adddf3>
 8005ba6:	4642      	mov	r2, r8
 8005ba8:	464b      	mov	r3, r9
 8005baa:	4606      	mov	r6, r0
 8005bac:	460f      	mov	r7, r1
 8005bae:	f7fa ffbb 	bl	8000b28 <__aeabi_dcmpgt>
 8005bb2:	b9d0      	cbnz	r0, 8005bea <_dtoa_r+0x6c2>
 8005bb4:	4642      	mov	r2, r8
 8005bb6:	464b      	mov	r3, r9
 8005bb8:	4630      	mov	r0, r6
 8005bba:	4639      	mov	r1, r7
 8005bbc:	f7fa ff8c 	bl	8000ad8 <__aeabi_dcmpeq>
 8005bc0:	b110      	cbz	r0, 8005bc8 <_dtoa_r+0x6a0>
 8005bc2:	f01a 0f01 	tst.w	sl, #1
 8005bc6:	d110      	bne.n	8005bea <_dtoa_r+0x6c2>
 8005bc8:	4620      	mov	r0, r4
 8005bca:	ee18 1a10 	vmov	r1, s16
 8005bce:	f000 ff6d 	bl	8006aac <_Bfree>
 8005bd2:	2300      	movs	r3, #0
 8005bd4:	9800      	ldr	r0, [sp, #0]
 8005bd6:	702b      	strb	r3, [r5, #0]
 8005bd8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005bda:	3001      	adds	r0, #1
 8005bdc:	6018      	str	r0, [r3, #0]
 8005bde:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005be0:	2b00      	cmp	r3, #0
 8005be2:	f43f acf1 	beq.w	80055c8 <_dtoa_r+0xa0>
 8005be6:	601d      	str	r5, [r3, #0]
 8005be8:	e4ee      	b.n	80055c8 <_dtoa_r+0xa0>
 8005bea:	9f00      	ldr	r7, [sp, #0]
 8005bec:	462b      	mov	r3, r5
 8005bee:	461d      	mov	r5, r3
 8005bf0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005bf4:	2a39      	cmp	r2, #57	; 0x39
 8005bf6:	d106      	bne.n	8005c06 <_dtoa_r+0x6de>
 8005bf8:	9a01      	ldr	r2, [sp, #4]
 8005bfa:	429a      	cmp	r2, r3
 8005bfc:	d1f7      	bne.n	8005bee <_dtoa_r+0x6c6>
 8005bfe:	9901      	ldr	r1, [sp, #4]
 8005c00:	2230      	movs	r2, #48	; 0x30
 8005c02:	3701      	adds	r7, #1
 8005c04:	700a      	strb	r2, [r1, #0]
 8005c06:	781a      	ldrb	r2, [r3, #0]
 8005c08:	3201      	adds	r2, #1
 8005c0a:	701a      	strb	r2, [r3, #0]
 8005c0c:	e790      	b.n	8005b30 <_dtoa_r+0x608>
 8005c0e:	4ba6      	ldr	r3, [pc, #664]	; (8005ea8 <_dtoa_r+0x980>)
 8005c10:	2200      	movs	r2, #0
 8005c12:	f7fa fcf9 	bl	8000608 <__aeabi_dmul>
 8005c16:	2200      	movs	r2, #0
 8005c18:	2300      	movs	r3, #0
 8005c1a:	4606      	mov	r6, r0
 8005c1c:	460f      	mov	r7, r1
 8005c1e:	f7fa ff5b 	bl	8000ad8 <__aeabi_dcmpeq>
 8005c22:	2800      	cmp	r0, #0
 8005c24:	d09d      	beq.n	8005b62 <_dtoa_r+0x63a>
 8005c26:	e7cf      	b.n	8005bc8 <_dtoa_r+0x6a0>
 8005c28:	9a08      	ldr	r2, [sp, #32]
 8005c2a:	2a00      	cmp	r2, #0
 8005c2c:	f000 80d7 	beq.w	8005dde <_dtoa_r+0x8b6>
 8005c30:	9a06      	ldr	r2, [sp, #24]
 8005c32:	2a01      	cmp	r2, #1
 8005c34:	f300 80ba 	bgt.w	8005dac <_dtoa_r+0x884>
 8005c38:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005c3a:	2a00      	cmp	r2, #0
 8005c3c:	f000 80b2 	beq.w	8005da4 <_dtoa_r+0x87c>
 8005c40:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8005c44:	9e07      	ldr	r6, [sp, #28]
 8005c46:	9d04      	ldr	r5, [sp, #16]
 8005c48:	9a04      	ldr	r2, [sp, #16]
 8005c4a:	441a      	add	r2, r3
 8005c4c:	9204      	str	r2, [sp, #16]
 8005c4e:	9a05      	ldr	r2, [sp, #20]
 8005c50:	2101      	movs	r1, #1
 8005c52:	441a      	add	r2, r3
 8005c54:	4620      	mov	r0, r4
 8005c56:	9205      	str	r2, [sp, #20]
 8005c58:	f001 f82a 	bl	8006cb0 <__i2b>
 8005c5c:	4607      	mov	r7, r0
 8005c5e:	2d00      	cmp	r5, #0
 8005c60:	dd0c      	ble.n	8005c7c <_dtoa_r+0x754>
 8005c62:	9b05      	ldr	r3, [sp, #20]
 8005c64:	2b00      	cmp	r3, #0
 8005c66:	dd09      	ble.n	8005c7c <_dtoa_r+0x754>
 8005c68:	42ab      	cmp	r3, r5
 8005c6a:	9a04      	ldr	r2, [sp, #16]
 8005c6c:	bfa8      	it	ge
 8005c6e:	462b      	movge	r3, r5
 8005c70:	1ad2      	subs	r2, r2, r3
 8005c72:	9204      	str	r2, [sp, #16]
 8005c74:	9a05      	ldr	r2, [sp, #20]
 8005c76:	1aed      	subs	r5, r5, r3
 8005c78:	1ad3      	subs	r3, r2, r3
 8005c7a:	9305      	str	r3, [sp, #20]
 8005c7c:	9b07      	ldr	r3, [sp, #28]
 8005c7e:	b31b      	cbz	r3, 8005cc8 <_dtoa_r+0x7a0>
 8005c80:	9b08      	ldr	r3, [sp, #32]
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	f000 80af 	beq.w	8005de6 <_dtoa_r+0x8be>
 8005c88:	2e00      	cmp	r6, #0
 8005c8a:	dd13      	ble.n	8005cb4 <_dtoa_r+0x78c>
 8005c8c:	4639      	mov	r1, r7
 8005c8e:	4632      	mov	r2, r6
 8005c90:	4620      	mov	r0, r4
 8005c92:	f001 f8cd 	bl	8006e30 <__pow5mult>
 8005c96:	ee18 2a10 	vmov	r2, s16
 8005c9a:	4601      	mov	r1, r0
 8005c9c:	4607      	mov	r7, r0
 8005c9e:	4620      	mov	r0, r4
 8005ca0:	f001 f81c 	bl	8006cdc <__multiply>
 8005ca4:	ee18 1a10 	vmov	r1, s16
 8005ca8:	4680      	mov	r8, r0
 8005caa:	4620      	mov	r0, r4
 8005cac:	f000 fefe 	bl	8006aac <_Bfree>
 8005cb0:	ee08 8a10 	vmov	s16, r8
 8005cb4:	9b07      	ldr	r3, [sp, #28]
 8005cb6:	1b9a      	subs	r2, r3, r6
 8005cb8:	d006      	beq.n	8005cc8 <_dtoa_r+0x7a0>
 8005cba:	ee18 1a10 	vmov	r1, s16
 8005cbe:	4620      	mov	r0, r4
 8005cc0:	f001 f8b6 	bl	8006e30 <__pow5mult>
 8005cc4:	ee08 0a10 	vmov	s16, r0
 8005cc8:	2101      	movs	r1, #1
 8005cca:	4620      	mov	r0, r4
 8005ccc:	f000 fff0 	bl	8006cb0 <__i2b>
 8005cd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005cd2:	2b00      	cmp	r3, #0
 8005cd4:	4606      	mov	r6, r0
 8005cd6:	f340 8088 	ble.w	8005dea <_dtoa_r+0x8c2>
 8005cda:	461a      	mov	r2, r3
 8005cdc:	4601      	mov	r1, r0
 8005cde:	4620      	mov	r0, r4
 8005ce0:	f001 f8a6 	bl	8006e30 <__pow5mult>
 8005ce4:	9b06      	ldr	r3, [sp, #24]
 8005ce6:	2b01      	cmp	r3, #1
 8005ce8:	4606      	mov	r6, r0
 8005cea:	f340 8081 	ble.w	8005df0 <_dtoa_r+0x8c8>
 8005cee:	f04f 0800 	mov.w	r8, #0
 8005cf2:	6933      	ldr	r3, [r6, #16]
 8005cf4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8005cf8:	6918      	ldr	r0, [r3, #16]
 8005cfa:	f000 ff89 	bl	8006c10 <__hi0bits>
 8005cfe:	f1c0 0020 	rsb	r0, r0, #32
 8005d02:	9b05      	ldr	r3, [sp, #20]
 8005d04:	4418      	add	r0, r3
 8005d06:	f010 001f 	ands.w	r0, r0, #31
 8005d0a:	f000 8092 	beq.w	8005e32 <_dtoa_r+0x90a>
 8005d0e:	f1c0 0320 	rsb	r3, r0, #32
 8005d12:	2b04      	cmp	r3, #4
 8005d14:	f340 808a 	ble.w	8005e2c <_dtoa_r+0x904>
 8005d18:	f1c0 001c 	rsb	r0, r0, #28
 8005d1c:	9b04      	ldr	r3, [sp, #16]
 8005d1e:	4403      	add	r3, r0
 8005d20:	9304      	str	r3, [sp, #16]
 8005d22:	9b05      	ldr	r3, [sp, #20]
 8005d24:	4403      	add	r3, r0
 8005d26:	4405      	add	r5, r0
 8005d28:	9305      	str	r3, [sp, #20]
 8005d2a:	9b04      	ldr	r3, [sp, #16]
 8005d2c:	2b00      	cmp	r3, #0
 8005d2e:	dd07      	ble.n	8005d40 <_dtoa_r+0x818>
 8005d30:	ee18 1a10 	vmov	r1, s16
 8005d34:	461a      	mov	r2, r3
 8005d36:	4620      	mov	r0, r4
 8005d38:	f001 f8d4 	bl	8006ee4 <__lshift>
 8005d3c:	ee08 0a10 	vmov	s16, r0
 8005d40:	9b05      	ldr	r3, [sp, #20]
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	dd05      	ble.n	8005d52 <_dtoa_r+0x82a>
 8005d46:	4631      	mov	r1, r6
 8005d48:	461a      	mov	r2, r3
 8005d4a:	4620      	mov	r0, r4
 8005d4c:	f001 f8ca 	bl	8006ee4 <__lshift>
 8005d50:	4606      	mov	r6, r0
 8005d52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005d54:	2b00      	cmp	r3, #0
 8005d56:	d06e      	beq.n	8005e36 <_dtoa_r+0x90e>
 8005d58:	ee18 0a10 	vmov	r0, s16
 8005d5c:	4631      	mov	r1, r6
 8005d5e:	f001 f931 	bl	8006fc4 <__mcmp>
 8005d62:	2800      	cmp	r0, #0
 8005d64:	da67      	bge.n	8005e36 <_dtoa_r+0x90e>
 8005d66:	9b00      	ldr	r3, [sp, #0]
 8005d68:	3b01      	subs	r3, #1
 8005d6a:	ee18 1a10 	vmov	r1, s16
 8005d6e:	9300      	str	r3, [sp, #0]
 8005d70:	220a      	movs	r2, #10
 8005d72:	2300      	movs	r3, #0
 8005d74:	4620      	mov	r0, r4
 8005d76:	f000 febb 	bl	8006af0 <__multadd>
 8005d7a:	9b08      	ldr	r3, [sp, #32]
 8005d7c:	ee08 0a10 	vmov	s16, r0
 8005d80:	2b00      	cmp	r3, #0
 8005d82:	f000 81b1 	beq.w	80060e8 <_dtoa_r+0xbc0>
 8005d86:	2300      	movs	r3, #0
 8005d88:	4639      	mov	r1, r7
 8005d8a:	220a      	movs	r2, #10
 8005d8c:	4620      	mov	r0, r4
 8005d8e:	f000 feaf 	bl	8006af0 <__multadd>
 8005d92:	9b02      	ldr	r3, [sp, #8]
 8005d94:	2b00      	cmp	r3, #0
 8005d96:	4607      	mov	r7, r0
 8005d98:	f300 808e 	bgt.w	8005eb8 <_dtoa_r+0x990>
 8005d9c:	9b06      	ldr	r3, [sp, #24]
 8005d9e:	2b02      	cmp	r3, #2
 8005da0:	dc51      	bgt.n	8005e46 <_dtoa_r+0x91e>
 8005da2:	e089      	b.n	8005eb8 <_dtoa_r+0x990>
 8005da4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005da6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8005daa:	e74b      	b.n	8005c44 <_dtoa_r+0x71c>
 8005dac:	9b03      	ldr	r3, [sp, #12]
 8005dae:	1e5e      	subs	r6, r3, #1
 8005db0:	9b07      	ldr	r3, [sp, #28]
 8005db2:	42b3      	cmp	r3, r6
 8005db4:	bfbf      	itttt	lt
 8005db6:	9b07      	ldrlt	r3, [sp, #28]
 8005db8:	9607      	strlt	r6, [sp, #28]
 8005dba:	1af2      	sublt	r2, r6, r3
 8005dbc:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8005dbe:	bfb6      	itet	lt
 8005dc0:	189b      	addlt	r3, r3, r2
 8005dc2:	1b9e      	subge	r6, r3, r6
 8005dc4:	930a      	strlt	r3, [sp, #40]	; 0x28
 8005dc6:	9b03      	ldr	r3, [sp, #12]
 8005dc8:	bfb8      	it	lt
 8005dca:	2600      	movlt	r6, #0
 8005dcc:	2b00      	cmp	r3, #0
 8005dce:	bfb7      	itett	lt
 8005dd0:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 8005dd4:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8005dd8:	1a9d      	sublt	r5, r3, r2
 8005dda:	2300      	movlt	r3, #0
 8005ddc:	e734      	b.n	8005c48 <_dtoa_r+0x720>
 8005dde:	9e07      	ldr	r6, [sp, #28]
 8005de0:	9d04      	ldr	r5, [sp, #16]
 8005de2:	9f08      	ldr	r7, [sp, #32]
 8005de4:	e73b      	b.n	8005c5e <_dtoa_r+0x736>
 8005de6:	9a07      	ldr	r2, [sp, #28]
 8005de8:	e767      	b.n	8005cba <_dtoa_r+0x792>
 8005dea:	9b06      	ldr	r3, [sp, #24]
 8005dec:	2b01      	cmp	r3, #1
 8005dee:	dc18      	bgt.n	8005e22 <_dtoa_r+0x8fa>
 8005df0:	f1ba 0f00 	cmp.w	sl, #0
 8005df4:	d115      	bne.n	8005e22 <_dtoa_r+0x8fa>
 8005df6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005dfa:	b993      	cbnz	r3, 8005e22 <_dtoa_r+0x8fa>
 8005dfc:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8005e00:	0d1b      	lsrs	r3, r3, #20
 8005e02:	051b      	lsls	r3, r3, #20
 8005e04:	b183      	cbz	r3, 8005e28 <_dtoa_r+0x900>
 8005e06:	9b04      	ldr	r3, [sp, #16]
 8005e08:	3301      	adds	r3, #1
 8005e0a:	9304      	str	r3, [sp, #16]
 8005e0c:	9b05      	ldr	r3, [sp, #20]
 8005e0e:	3301      	adds	r3, #1
 8005e10:	9305      	str	r3, [sp, #20]
 8005e12:	f04f 0801 	mov.w	r8, #1
 8005e16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e18:	2b00      	cmp	r3, #0
 8005e1a:	f47f af6a 	bne.w	8005cf2 <_dtoa_r+0x7ca>
 8005e1e:	2001      	movs	r0, #1
 8005e20:	e76f      	b.n	8005d02 <_dtoa_r+0x7da>
 8005e22:	f04f 0800 	mov.w	r8, #0
 8005e26:	e7f6      	b.n	8005e16 <_dtoa_r+0x8ee>
 8005e28:	4698      	mov	r8, r3
 8005e2a:	e7f4      	b.n	8005e16 <_dtoa_r+0x8ee>
 8005e2c:	f43f af7d 	beq.w	8005d2a <_dtoa_r+0x802>
 8005e30:	4618      	mov	r0, r3
 8005e32:	301c      	adds	r0, #28
 8005e34:	e772      	b.n	8005d1c <_dtoa_r+0x7f4>
 8005e36:	9b03      	ldr	r3, [sp, #12]
 8005e38:	2b00      	cmp	r3, #0
 8005e3a:	dc37      	bgt.n	8005eac <_dtoa_r+0x984>
 8005e3c:	9b06      	ldr	r3, [sp, #24]
 8005e3e:	2b02      	cmp	r3, #2
 8005e40:	dd34      	ble.n	8005eac <_dtoa_r+0x984>
 8005e42:	9b03      	ldr	r3, [sp, #12]
 8005e44:	9302      	str	r3, [sp, #8]
 8005e46:	9b02      	ldr	r3, [sp, #8]
 8005e48:	b96b      	cbnz	r3, 8005e66 <_dtoa_r+0x93e>
 8005e4a:	4631      	mov	r1, r6
 8005e4c:	2205      	movs	r2, #5
 8005e4e:	4620      	mov	r0, r4
 8005e50:	f000 fe4e 	bl	8006af0 <__multadd>
 8005e54:	4601      	mov	r1, r0
 8005e56:	4606      	mov	r6, r0
 8005e58:	ee18 0a10 	vmov	r0, s16
 8005e5c:	f001 f8b2 	bl	8006fc4 <__mcmp>
 8005e60:	2800      	cmp	r0, #0
 8005e62:	f73f adbb 	bgt.w	80059dc <_dtoa_r+0x4b4>
 8005e66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e68:	9d01      	ldr	r5, [sp, #4]
 8005e6a:	43db      	mvns	r3, r3
 8005e6c:	9300      	str	r3, [sp, #0]
 8005e6e:	f04f 0800 	mov.w	r8, #0
 8005e72:	4631      	mov	r1, r6
 8005e74:	4620      	mov	r0, r4
 8005e76:	f000 fe19 	bl	8006aac <_Bfree>
 8005e7a:	2f00      	cmp	r7, #0
 8005e7c:	f43f aea4 	beq.w	8005bc8 <_dtoa_r+0x6a0>
 8005e80:	f1b8 0f00 	cmp.w	r8, #0
 8005e84:	d005      	beq.n	8005e92 <_dtoa_r+0x96a>
 8005e86:	45b8      	cmp	r8, r7
 8005e88:	d003      	beq.n	8005e92 <_dtoa_r+0x96a>
 8005e8a:	4641      	mov	r1, r8
 8005e8c:	4620      	mov	r0, r4
 8005e8e:	f000 fe0d 	bl	8006aac <_Bfree>
 8005e92:	4639      	mov	r1, r7
 8005e94:	4620      	mov	r0, r4
 8005e96:	f000 fe09 	bl	8006aac <_Bfree>
 8005e9a:	e695      	b.n	8005bc8 <_dtoa_r+0x6a0>
 8005e9c:	2600      	movs	r6, #0
 8005e9e:	4637      	mov	r7, r6
 8005ea0:	e7e1      	b.n	8005e66 <_dtoa_r+0x93e>
 8005ea2:	9700      	str	r7, [sp, #0]
 8005ea4:	4637      	mov	r7, r6
 8005ea6:	e599      	b.n	80059dc <_dtoa_r+0x4b4>
 8005ea8:	40240000 	.word	0x40240000
 8005eac:	9b08      	ldr	r3, [sp, #32]
 8005eae:	2b00      	cmp	r3, #0
 8005eb0:	f000 80ca 	beq.w	8006048 <_dtoa_r+0xb20>
 8005eb4:	9b03      	ldr	r3, [sp, #12]
 8005eb6:	9302      	str	r3, [sp, #8]
 8005eb8:	2d00      	cmp	r5, #0
 8005eba:	dd05      	ble.n	8005ec8 <_dtoa_r+0x9a0>
 8005ebc:	4639      	mov	r1, r7
 8005ebe:	462a      	mov	r2, r5
 8005ec0:	4620      	mov	r0, r4
 8005ec2:	f001 f80f 	bl	8006ee4 <__lshift>
 8005ec6:	4607      	mov	r7, r0
 8005ec8:	f1b8 0f00 	cmp.w	r8, #0
 8005ecc:	d05b      	beq.n	8005f86 <_dtoa_r+0xa5e>
 8005ece:	6879      	ldr	r1, [r7, #4]
 8005ed0:	4620      	mov	r0, r4
 8005ed2:	f000 fdab 	bl	8006a2c <_Balloc>
 8005ed6:	4605      	mov	r5, r0
 8005ed8:	b928      	cbnz	r0, 8005ee6 <_dtoa_r+0x9be>
 8005eda:	4b87      	ldr	r3, [pc, #540]	; (80060f8 <_dtoa_r+0xbd0>)
 8005edc:	4602      	mov	r2, r0
 8005ede:	f240 21ea 	movw	r1, #746	; 0x2ea
 8005ee2:	f7ff bb3b 	b.w	800555c <_dtoa_r+0x34>
 8005ee6:	693a      	ldr	r2, [r7, #16]
 8005ee8:	3202      	adds	r2, #2
 8005eea:	0092      	lsls	r2, r2, #2
 8005eec:	f107 010c 	add.w	r1, r7, #12
 8005ef0:	300c      	adds	r0, #12
 8005ef2:	f000 fd8d 	bl	8006a10 <memcpy>
 8005ef6:	2201      	movs	r2, #1
 8005ef8:	4629      	mov	r1, r5
 8005efa:	4620      	mov	r0, r4
 8005efc:	f000 fff2 	bl	8006ee4 <__lshift>
 8005f00:	9b01      	ldr	r3, [sp, #4]
 8005f02:	f103 0901 	add.w	r9, r3, #1
 8005f06:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8005f0a:	4413      	add	r3, r2
 8005f0c:	9305      	str	r3, [sp, #20]
 8005f0e:	f00a 0301 	and.w	r3, sl, #1
 8005f12:	46b8      	mov	r8, r7
 8005f14:	9304      	str	r3, [sp, #16]
 8005f16:	4607      	mov	r7, r0
 8005f18:	4631      	mov	r1, r6
 8005f1a:	ee18 0a10 	vmov	r0, s16
 8005f1e:	f7ff fa77 	bl	8005410 <quorem>
 8005f22:	4641      	mov	r1, r8
 8005f24:	9002      	str	r0, [sp, #8]
 8005f26:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8005f2a:	ee18 0a10 	vmov	r0, s16
 8005f2e:	f001 f849 	bl	8006fc4 <__mcmp>
 8005f32:	463a      	mov	r2, r7
 8005f34:	9003      	str	r0, [sp, #12]
 8005f36:	4631      	mov	r1, r6
 8005f38:	4620      	mov	r0, r4
 8005f3a:	f001 f85f 	bl	8006ffc <__mdiff>
 8005f3e:	68c2      	ldr	r2, [r0, #12]
 8005f40:	f109 3bff 	add.w	fp, r9, #4294967295
 8005f44:	4605      	mov	r5, r0
 8005f46:	bb02      	cbnz	r2, 8005f8a <_dtoa_r+0xa62>
 8005f48:	4601      	mov	r1, r0
 8005f4a:	ee18 0a10 	vmov	r0, s16
 8005f4e:	f001 f839 	bl	8006fc4 <__mcmp>
 8005f52:	4602      	mov	r2, r0
 8005f54:	4629      	mov	r1, r5
 8005f56:	4620      	mov	r0, r4
 8005f58:	9207      	str	r2, [sp, #28]
 8005f5a:	f000 fda7 	bl	8006aac <_Bfree>
 8005f5e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8005f62:	ea43 0102 	orr.w	r1, r3, r2
 8005f66:	9b04      	ldr	r3, [sp, #16]
 8005f68:	430b      	orrs	r3, r1
 8005f6a:	464d      	mov	r5, r9
 8005f6c:	d10f      	bne.n	8005f8e <_dtoa_r+0xa66>
 8005f6e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005f72:	d02a      	beq.n	8005fca <_dtoa_r+0xaa2>
 8005f74:	9b03      	ldr	r3, [sp, #12]
 8005f76:	2b00      	cmp	r3, #0
 8005f78:	dd02      	ble.n	8005f80 <_dtoa_r+0xa58>
 8005f7a:	9b02      	ldr	r3, [sp, #8]
 8005f7c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8005f80:	f88b a000 	strb.w	sl, [fp]
 8005f84:	e775      	b.n	8005e72 <_dtoa_r+0x94a>
 8005f86:	4638      	mov	r0, r7
 8005f88:	e7ba      	b.n	8005f00 <_dtoa_r+0x9d8>
 8005f8a:	2201      	movs	r2, #1
 8005f8c:	e7e2      	b.n	8005f54 <_dtoa_r+0xa2c>
 8005f8e:	9b03      	ldr	r3, [sp, #12]
 8005f90:	2b00      	cmp	r3, #0
 8005f92:	db04      	blt.n	8005f9e <_dtoa_r+0xa76>
 8005f94:	9906      	ldr	r1, [sp, #24]
 8005f96:	430b      	orrs	r3, r1
 8005f98:	9904      	ldr	r1, [sp, #16]
 8005f9a:	430b      	orrs	r3, r1
 8005f9c:	d122      	bne.n	8005fe4 <_dtoa_r+0xabc>
 8005f9e:	2a00      	cmp	r2, #0
 8005fa0:	ddee      	ble.n	8005f80 <_dtoa_r+0xa58>
 8005fa2:	ee18 1a10 	vmov	r1, s16
 8005fa6:	2201      	movs	r2, #1
 8005fa8:	4620      	mov	r0, r4
 8005faa:	f000 ff9b 	bl	8006ee4 <__lshift>
 8005fae:	4631      	mov	r1, r6
 8005fb0:	ee08 0a10 	vmov	s16, r0
 8005fb4:	f001 f806 	bl	8006fc4 <__mcmp>
 8005fb8:	2800      	cmp	r0, #0
 8005fba:	dc03      	bgt.n	8005fc4 <_dtoa_r+0xa9c>
 8005fbc:	d1e0      	bne.n	8005f80 <_dtoa_r+0xa58>
 8005fbe:	f01a 0f01 	tst.w	sl, #1
 8005fc2:	d0dd      	beq.n	8005f80 <_dtoa_r+0xa58>
 8005fc4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005fc8:	d1d7      	bne.n	8005f7a <_dtoa_r+0xa52>
 8005fca:	2339      	movs	r3, #57	; 0x39
 8005fcc:	f88b 3000 	strb.w	r3, [fp]
 8005fd0:	462b      	mov	r3, r5
 8005fd2:	461d      	mov	r5, r3
 8005fd4:	3b01      	subs	r3, #1
 8005fd6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8005fda:	2a39      	cmp	r2, #57	; 0x39
 8005fdc:	d071      	beq.n	80060c2 <_dtoa_r+0xb9a>
 8005fde:	3201      	adds	r2, #1
 8005fe0:	701a      	strb	r2, [r3, #0]
 8005fe2:	e746      	b.n	8005e72 <_dtoa_r+0x94a>
 8005fe4:	2a00      	cmp	r2, #0
 8005fe6:	dd07      	ble.n	8005ff8 <_dtoa_r+0xad0>
 8005fe8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8005fec:	d0ed      	beq.n	8005fca <_dtoa_r+0xaa2>
 8005fee:	f10a 0301 	add.w	r3, sl, #1
 8005ff2:	f88b 3000 	strb.w	r3, [fp]
 8005ff6:	e73c      	b.n	8005e72 <_dtoa_r+0x94a>
 8005ff8:	9b05      	ldr	r3, [sp, #20]
 8005ffa:	f809 ac01 	strb.w	sl, [r9, #-1]
 8005ffe:	4599      	cmp	r9, r3
 8006000:	d047      	beq.n	8006092 <_dtoa_r+0xb6a>
 8006002:	ee18 1a10 	vmov	r1, s16
 8006006:	2300      	movs	r3, #0
 8006008:	220a      	movs	r2, #10
 800600a:	4620      	mov	r0, r4
 800600c:	f000 fd70 	bl	8006af0 <__multadd>
 8006010:	45b8      	cmp	r8, r7
 8006012:	ee08 0a10 	vmov	s16, r0
 8006016:	f04f 0300 	mov.w	r3, #0
 800601a:	f04f 020a 	mov.w	r2, #10
 800601e:	4641      	mov	r1, r8
 8006020:	4620      	mov	r0, r4
 8006022:	d106      	bne.n	8006032 <_dtoa_r+0xb0a>
 8006024:	f000 fd64 	bl	8006af0 <__multadd>
 8006028:	4680      	mov	r8, r0
 800602a:	4607      	mov	r7, r0
 800602c:	f109 0901 	add.w	r9, r9, #1
 8006030:	e772      	b.n	8005f18 <_dtoa_r+0x9f0>
 8006032:	f000 fd5d 	bl	8006af0 <__multadd>
 8006036:	4639      	mov	r1, r7
 8006038:	4680      	mov	r8, r0
 800603a:	2300      	movs	r3, #0
 800603c:	220a      	movs	r2, #10
 800603e:	4620      	mov	r0, r4
 8006040:	f000 fd56 	bl	8006af0 <__multadd>
 8006044:	4607      	mov	r7, r0
 8006046:	e7f1      	b.n	800602c <_dtoa_r+0xb04>
 8006048:	9b03      	ldr	r3, [sp, #12]
 800604a:	9302      	str	r3, [sp, #8]
 800604c:	9d01      	ldr	r5, [sp, #4]
 800604e:	ee18 0a10 	vmov	r0, s16
 8006052:	4631      	mov	r1, r6
 8006054:	f7ff f9dc 	bl	8005410 <quorem>
 8006058:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800605c:	9b01      	ldr	r3, [sp, #4]
 800605e:	f805 ab01 	strb.w	sl, [r5], #1
 8006062:	1aea      	subs	r2, r5, r3
 8006064:	9b02      	ldr	r3, [sp, #8]
 8006066:	4293      	cmp	r3, r2
 8006068:	dd09      	ble.n	800607e <_dtoa_r+0xb56>
 800606a:	ee18 1a10 	vmov	r1, s16
 800606e:	2300      	movs	r3, #0
 8006070:	220a      	movs	r2, #10
 8006072:	4620      	mov	r0, r4
 8006074:	f000 fd3c 	bl	8006af0 <__multadd>
 8006078:	ee08 0a10 	vmov	s16, r0
 800607c:	e7e7      	b.n	800604e <_dtoa_r+0xb26>
 800607e:	9b02      	ldr	r3, [sp, #8]
 8006080:	2b00      	cmp	r3, #0
 8006082:	bfc8      	it	gt
 8006084:	461d      	movgt	r5, r3
 8006086:	9b01      	ldr	r3, [sp, #4]
 8006088:	bfd8      	it	le
 800608a:	2501      	movle	r5, #1
 800608c:	441d      	add	r5, r3
 800608e:	f04f 0800 	mov.w	r8, #0
 8006092:	ee18 1a10 	vmov	r1, s16
 8006096:	2201      	movs	r2, #1
 8006098:	4620      	mov	r0, r4
 800609a:	f000 ff23 	bl	8006ee4 <__lshift>
 800609e:	4631      	mov	r1, r6
 80060a0:	ee08 0a10 	vmov	s16, r0
 80060a4:	f000 ff8e 	bl	8006fc4 <__mcmp>
 80060a8:	2800      	cmp	r0, #0
 80060aa:	dc91      	bgt.n	8005fd0 <_dtoa_r+0xaa8>
 80060ac:	d102      	bne.n	80060b4 <_dtoa_r+0xb8c>
 80060ae:	f01a 0f01 	tst.w	sl, #1
 80060b2:	d18d      	bne.n	8005fd0 <_dtoa_r+0xaa8>
 80060b4:	462b      	mov	r3, r5
 80060b6:	461d      	mov	r5, r3
 80060b8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80060bc:	2a30      	cmp	r2, #48	; 0x30
 80060be:	d0fa      	beq.n	80060b6 <_dtoa_r+0xb8e>
 80060c0:	e6d7      	b.n	8005e72 <_dtoa_r+0x94a>
 80060c2:	9a01      	ldr	r2, [sp, #4]
 80060c4:	429a      	cmp	r2, r3
 80060c6:	d184      	bne.n	8005fd2 <_dtoa_r+0xaaa>
 80060c8:	9b00      	ldr	r3, [sp, #0]
 80060ca:	3301      	adds	r3, #1
 80060cc:	9300      	str	r3, [sp, #0]
 80060ce:	2331      	movs	r3, #49	; 0x31
 80060d0:	7013      	strb	r3, [r2, #0]
 80060d2:	e6ce      	b.n	8005e72 <_dtoa_r+0x94a>
 80060d4:	4b09      	ldr	r3, [pc, #36]	; (80060fc <_dtoa_r+0xbd4>)
 80060d6:	f7ff ba95 	b.w	8005604 <_dtoa_r+0xdc>
 80060da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80060dc:	2b00      	cmp	r3, #0
 80060de:	f47f aa6e 	bne.w	80055be <_dtoa_r+0x96>
 80060e2:	4b07      	ldr	r3, [pc, #28]	; (8006100 <_dtoa_r+0xbd8>)
 80060e4:	f7ff ba8e 	b.w	8005604 <_dtoa_r+0xdc>
 80060e8:	9b02      	ldr	r3, [sp, #8]
 80060ea:	2b00      	cmp	r3, #0
 80060ec:	dcae      	bgt.n	800604c <_dtoa_r+0xb24>
 80060ee:	9b06      	ldr	r3, [sp, #24]
 80060f0:	2b02      	cmp	r3, #2
 80060f2:	f73f aea8 	bgt.w	8005e46 <_dtoa_r+0x91e>
 80060f6:	e7a9      	b.n	800604c <_dtoa_r+0xb24>
 80060f8:	080094d8 	.word	0x080094d8
 80060fc:	080092dc 	.word	0x080092dc
 8006100:	08009459 	.word	0x08009459

08006104 <std>:
 8006104:	2300      	movs	r3, #0
 8006106:	b510      	push	{r4, lr}
 8006108:	4604      	mov	r4, r0
 800610a:	e9c0 3300 	strd	r3, r3, [r0]
 800610e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006112:	6083      	str	r3, [r0, #8]
 8006114:	8181      	strh	r1, [r0, #12]
 8006116:	6643      	str	r3, [r0, #100]	; 0x64
 8006118:	81c2      	strh	r2, [r0, #14]
 800611a:	6183      	str	r3, [r0, #24]
 800611c:	4619      	mov	r1, r3
 800611e:	2208      	movs	r2, #8
 8006120:	305c      	adds	r0, #92	; 0x5c
 8006122:	f7fd fc21 	bl	8003968 <memset>
 8006126:	4b05      	ldr	r3, [pc, #20]	; (800613c <std+0x38>)
 8006128:	6263      	str	r3, [r4, #36]	; 0x24
 800612a:	4b05      	ldr	r3, [pc, #20]	; (8006140 <std+0x3c>)
 800612c:	62a3      	str	r3, [r4, #40]	; 0x28
 800612e:	4b05      	ldr	r3, [pc, #20]	; (8006144 <std+0x40>)
 8006130:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006132:	4b05      	ldr	r3, [pc, #20]	; (8006148 <std+0x44>)
 8006134:	6224      	str	r4, [r4, #32]
 8006136:	6323      	str	r3, [r4, #48]	; 0x30
 8006138:	bd10      	pop	{r4, pc}
 800613a:	bf00      	nop
 800613c:	08007889 	.word	0x08007889
 8006140:	080078ab 	.word	0x080078ab
 8006144:	080078e3 	.word	0x080078e3
 8006148:	08007907 	.word	0x08007907

0800614c <_cleanup_r>:
 800614c:	4901      	ldr	r1, [pc, #4]	; (8006154 <_cleanup_r+0x8>)
 800614e:	f000 b8af 	b.w	80062b0 <_fwalk_reent>
 8006152:	bf00      	nop
 8006154:	08007c61 	.word	0x08007c61

08006158 <__sfmoreglue>:
 8006158:	b570      	push	{r4, r5, r6, lr}
 800615a:	2268      	movs	r2, #104	; 0x68
 800615c:	1e4d      	subs	r5, r1, #1
 800615e:	4355      	muls	r5, r2
 8006160:	460e      	mov	r6, r1
 8006162:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8006166:	f001 f9a5 	bl	80074b4 <_malloc_r>
 800616a:	4604      	mov	r4, r0
 800616c:	b140      	cbz	r0, 8006180 <__sfmoreglue+0x28>
 800616e:	2100      	movs	r1, #0
 8006170:	e9c0 1600 	strd	r1, r6, [r0]
 8006174:	300c      	adds	r0, #12
 8006176:	60a0      	str	r0, [r4, #8]
 8006178:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800617c:	f7fd fbf4 	bl	8003968 <memset>
 8006180:	4620      	mov	r0, r4
 8006182:	bd70      	pop	{r4, r5, r6, pc}

08006184 <__sfp_lock_acquire>:
 8006184:	4801      	ldr	r0, [pc, #4]	; (800618c <__sfp_lock_acquire+0x8>)
 8006186:	f000 bc26 	b.w	80069d6 <__retarget_lock_acquire_recursive>
 800618a:	bf00      	nop
 800618c:	2000034d 	.word	0x2000034d

08006190 <__sfp_lock_release>:
 8006190:	4801      	ldr	r0, [pc, #4]	; (8006198 <__sfp_lock_release+0x8>)
 8006192:	f000 bc21 	b.w	80069d8 <__retarget_lock_release_recursive>
 8006196:	bf00      	nop
 8006198:	2000034d 	.word	0x2000034d

0800619c <__sinit_lock_acquire>:
 800619c:	4801      	ldr	r0, [pc, #4]	; (80061a4 <__sinit_lock_acquire+0x8>)
 800619e:	f000 bc1a 	b.w	80069d6 <__retarget_lock_acquire_recursive>
 80061a2:	bf00      	nop
 80061a4:	2000034e 	.word	0x2000034e

080061a8 <__sinit_lock_release>:
 80061a8:	4801      	ldr	r0, [pc, #4]	; (80061b0 <__sinit_lock_release+0x8>)
 80061aa:	f000 bc15 	b.w	80069d8 <__retarget_lock_release_recursive>
 80061ae:	bf00      	nop
 80061b0:	2000034e 	.word	0x2000034e

080061b4 <__sinit>:
 80061b4:	b510      	push	{r4, lr}
 80061b6:	4604      	mov	r4, r0
 80061b8:	f7ff fff0 	bl	800619c <__sinit_lock_acquire>
 80061bc:	69a3      	ldr	r3, [r4, #24]
 80061be:	b11b      	cbz	r3, 80061c8 <__sinit+0x14>
 80061c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80061c4:	f7ff bff0 	b.w	80061a8 <__sinit_lock_release>
 80061c8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80061cc:	6523      	str	r3, [r4, #80]	; 0x50
 80061ce:	4b13      	ldr	r3, [pc, #76]	; (800621c <__sinit+0x68>)
 80061d0:	4a13      	ldr	r2, [pc, #76]	; (8006220 <__sinit+0x6c>)
 80061d2:	681b      	ldr	r3, [r3, #0]
 80061d4:	62a2      	str	r2, [r4, #40]	; 0x28
 80061d6:	42a3      	cmp	r3, r4
 80061d8:	bf04      	itt	eq
 80061da:	2301      	moveq	r3, #1
 80061dc:	61a3      	streq	r3, [r4, #24]
 80061de:	4620      	mov	r0, r4
 80061e0:	f000 f820 	bl	8006224 <__sfp>
 80061e4:	6060      	str	r0, [r4, #4]
 80061e6:	4620      	mov	r0, r4
 80061e8:	f000 f81c 	bl	8006224 <__sfp>
 80061ec:	60a0      	str	r0, [r4, #8]
 80061ee:	4620      	mov	r0, r4
 80061f0:	f000 f818 	bl	8006224 <__sfp>
 80061f4:	2200      	movs	r2, #0
 80061f6:	60e0      	str	r0, [r4, #12]
 80061f8:	2104      	movs	r1, #4
 80061fa:	6860      	ldr	r0, [r4, #4]
 80061fc:	f7ff ff82 	bl	8006104 <std>
 8006200:	68a0      	ldr	r0, [r4, #8]
 8006202:	2201      	movs	r2, #1
 8006204:	2109      	movs	r1, #9
 8006206:	f7ff ff7d 	bl	8006104 <std>
 800620a:	68e0      	ldr	r0, [r4, #12]
 800620c:	2202      	movs	r2, #2
 800620e:	2112      	movs	r1, #18
 8006210:	f7ff ff78 	bl	8006104 <std>
 8006214:	2301      	movs	r3, #1
 8006216:	61a3      	str	r3, [r4, #24]
 8006218:	e7d2      	b.n	80061c0 <__sinit+0xc>
 800621a:	bf00      	nop
 800621c:	080092c8 	.word	0x080092c8
 8006220:	0800614d 	.word	0x0800614d

08006224 <__sfp>:
 8006224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006226:	4607      	mov	r7, r0
 8006228:	f7ff ffac 	bl	8006184 <__sfp_lock_acquire>
 800622c:	4b1e      	ldr	r3, [pc, #120]	; (80062a8 <__sfp+0x84>)
 800622e:	681e      	ldr	r6, [r3, #0]
 8006230:	69b3      	ldr	r3, [r6, #24]
 8006232:	b913      	cbnz	r3, 800623a <__sfp+0x16>
 8006234:	4630      	mov	r0, r6
 8006236:	f7ff ffbd 	bl	80061b4 <__sinit>
 800623a:	3648      	adds	r6, #72	; 0x48
 800623c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8006240:	3b01      	subs	r3, #1
 8006242:	d503      	bpl.n	800624c <__sfp+0x28>
 8006244:	6833      	ldr	r3, [r6, #0]
 8006246:	b30b      	cbz	r3, 800628c <__sfp+0x68>
 8006248:	6836      	ldr	r6, [r6, #0]
 800624a:	e7f7      	b.n	800623c <__sfp+0x18>
 800624c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006250:	b9d5      	cbnz	r5, 8006288 <__sfp+0x64>
 8006252:	4b16      	ldr	r3, [pc, #88]	; (80062ac <__sfp+0x88>)
 8006254:	60e3      	str	r3, [r4, #12]
 8006256:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800625a:	6665      	str	r5, [r4, #100]	; 0x64
 800625c:	f000 fbba 	bl	80069d4 <__retarget_lock_init_recursive>
 8006260:	f7ff ff96 	bl	8006190 <__sfp_lock_release>
 8006264:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8006268:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800626c:	6025      	str	r5, [r4, #0]
 800626e:	61a5      	str	r5, [r4, #24]
 8006270:	2208      	movs	r2, #8
 8006272:	4629      	mov	r1, r5
 8006274:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8006278:	f7fd fb76 	bl	8003968 <memset>
 800627c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006280:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8006284:	4620      	mov	r0, r4
 8006286:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006288:	3468      	adds	r4, #104	; 0x68
 800628a:	e7d9      	b.n	8006240 <__sfp+0x1c>
 800628c:	2104      	movs	r1, #4
 800628e:	4638      	mov	r0, r7
 8006290:	f7ff ff62 	bl	8006158 <__sfmoreglue>
 8006294:	4604      	mov	r4, r0
 8006296:	6030      	str	r0, [r6, #0]
 8006298:	2800      	cmp	r0, #0
 800629a:	d1d5      	bne.n	8006248 <__sfp+0x24>
 800629c:	f7ff ff78 	bl	8006190 <__sfp_lock_release>
 80062a0:	230c      	movs	r3, #12
 80062a2:	603b      	str	r3, [r7, #0]
 80062a4:	e7ee      	b.n	8006284 <__sfp+0x60>
 80062a6:	bf00      	nop
 80062a8:	080092c8 	.word	0x080092c8
 80062ac:	ffff0001 	.word	0xffff0001

080062b0 <_fwalk_reent>:
 80062b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80062b4:	4606      	mov	r6, r0
 80062b6:	4688      	mov	r8, r1
 80062b8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80062bc:	2700      	movs	r7, #0
 80062be:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80062c2:	f1b9 0901 	subs.w	r9, r9, #1
 80062c6:	d505      	bpl.n	80062d4 <_fwalk_reent+0x24>
 80062c8:	6824      	ldr	r4, [r4, #0]
 80062ca:	2c00      	cmp	r4, #0
 80062cc:	d1f7      	bne.n	80062be <_fwalk_reent+0xe>
 80062ce:	4638      	mov	r0, r7
 80062d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80062d4:	89ab      	ldrh	r3, [r5, #12]
 80062d6:	2b01      	cmp	r3, #1
 80062d8:	d907      	bls.n	80062ea <_fwalk_reent+0x3a>
 80062da:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80062de:	3301      	adds	r3, #1
 80062e0:	d003      	beq.n	80062ea <_fwalk_reent+0x3a>
 80062e2:	4629      	mov	r1, r5
 80062e4:	4630      	mov	r0, r6
 80062e6:	47c0      	blx	r8
 80062e8:	4307      	orrs	r7, r0
 80062ea:	3568      	adds	r5, #104	; 0x68
 80062ec:	e7e9      	b.n	80062c2 <_fwalk_reent+0x12>

080062ee <rshift>:
 80062ee:	6903      	ldr	r3, [r0, #16]
 80062f0:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80062f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80062f8:	ea4f 1261 	mov.w	r2, r1, asr #5
 80062fc:	f100 0414 	add.w	r4, r0, #20
 8006300:	dd45      	ble.n	800638e <rshift+0xa0>
 8006302:	f011 011f 	ands.w	r1, r1, #31
 8006306:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800630a:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800630e:	d10c      	bne.n	800632a <rshift+0x3c>
 8006310:	f100 0710 	add.w	r7, r0, #16
 8006314:	4629      	mov	r1, r5
 8006316:	42b1      	cmp	r1, r6
 8006318:	d334      	bcc.n	8006384 <rshift+0x96>
 800631a:	1a9b      	subs	r3, r3, r2
 800631c:	009b      	lsls	r3, r3, #2
 800631e:	1eea      	subs	r2, r5, #3
 8006320:	4296      	cmp	r6, r2
 8006322:	bf38      	it	cc
 8006324:	2300      	movcc	r3, #0
 8006326:	4423      	add	r3, r4
 8006328:	e015      	b.n	8006356 <rshift+0x68>
 800632a:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800632e:	f1c1 0820 	rsb	r8, r1, #32
 8006332:	40cf      	lsrs	r7, r1
 8006334:	f105 0e04 	add.w	lr, r5, #4
 8006338:	46a1      	mov	r9, r4
 800633a:	4576      	cmp	r6, lr
 800633c:	46f4      	mov	ip, lr
 800633e:	d815      	bhi.n	800636c <rshift+0x7e>
 8006340:	1a9a      	subs	r2, r3, r2
 8006342:	0092      	lsls	r2, r2, #2
 8006344:	3a04      	subs	r2, #4
 8006346:	3501      	adds	r5, #1
 8006348:	42ae      	cmp	r6, r5
 800634a:	bf38      	it	cc
 800634c:	2200      	movcc	r2, #0
 800634e:	18a3      	adds	r3, r4, r2
 8006350:	50a7      	str	r7, [r4, r2]
 8006352:	b107      	cbz	r7, 8006356 <rshift+0x68>
 8006354:	3304      	adds	r3, #4
 8006356:	1b1a      	subs	r2, r3, r4
 8006358:	42a3      	cmp	r3, r4
 800635a:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800635e:	bf08      	it	eq
 8006360:	2300      	moveq	r3, #0
 8006362:	6102      	str	r2, [r0, #16]
 8006364:	bf08      	it	eq
 8006366:	6143      	streq	r3, [r0, #20]
 8006368:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800636c:	f8dc c000 	ldr.w	ip, [ip]
 8006370:	fa0c fc08 	lsl.w	ip, ip, r8
 8006374:	ea4c 0707 	orr.w	r7, ip, r7
 8006378:	f849 7b04 	str.w	r7, [r9], #4
 800637c:	f85e 7b04 	ldr.w	r7, [lr], #4
 8006380:	40cf      	lsrs	r7, r1
 8006382:	e7da      	b.n	800633a <rshift+0x4c>
 8006384:	f851 cb04 	ldr.w	ip, [r1], #4
 8006388:	f847 cf04 	str.w	ip, [r7, #4]!
 800638c:	e7c3      	b.n	8006316 <rshift+0x28>
 800638e:	4623      	mov	r3, r4
 8006390:	e7e1      	b.n	8006356 <rshift+0x68>

08006392 <__hexdig_fun>:
 8006392:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8006396:	2b09      	cmp	r3, #9
 8006398:	d802      	bhi.n	80063a0 <__hexdig_fun+0xe>
 800639a:	3820      	subs	r0, #32
 800639c:	b2c0      	uxtb	r0, r0
 800639e:	4770      	bx	lr
 80063a0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80063a4:	2b05      	cmp	r3, #5
 80063a6:	d801      	bhi.n	80063ac <__hexdig_fun+0x1a>
 80063a8:	3847      	subs	r0, #71	; 0x47
 80063aa:	e7f7      	b.n	800639c <__hexdig_fun+0xa>
 80063ac:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80063b0:	2b05      	cmp	r3, #5
 80063b2:	d801      	bhi.n	80063b8 <__hexdig_fun+0x26>
 80063b4:	3827      	subs	r0, #39	; 0x27
 80063b6:	e7f1      	b.n	800639c <__hexdig_fun+0xa>
 80063b8:	2000      	movs	r0, #0
 80063ba:	4770      	bx	lr

080063bc <__gethex>:
 80063bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063c0:	ed2d 8b02 	vpush	{d8}
 80063c4:	b089      	sub	sp, #36	; 0x24
 80063c6:	ee08 0a10 	vmov	s16, r0
 80063ca:	9304      	str	r3, [sp, #16]
 80063cc:	4bb4      	ldr	r3, [pc, #720]	; (80066a0 <__gethex+0x2e4>)
 80063ce:	681b      	ldr	r3, [r3, #0]
 80063d0:	9301      	str	r3, [sp, #4]
 80063d2:	4618      	mov	r0, r3
 80063d4:	468b      	mov	fp, r1
 80063d6:	4690      	mov	r8, r2
 80063d8:	f7f9 ff02 	bl	80001e0 <strlen>
 80063dc:	9b01      	ldr	r3, [sp, #4]
 80063de:	f8db 2000 	ldr.w	r2, [fp]
 80063e2:	4403      	add	r3, r0
 80063e4:	4682      	mov	sl, r0
 80063e6:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80063ea:	9305      	str	r3, [sp, #20]
 80063ec:	1c93      	adds	r3, r2, #2
 80063ee:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80063f2:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80063f6:	32fe      	adds	r2, #254	; 0xfe
 80063f8:	18d1      	adds	r1, r2, r3
 80063fa:	461f      	mov	r7, r3
 80063fc:	f813 0b01 	ldrb.w	r0, [r3], #1
 8006400:	9100      	str	r1, [sp, #0]
 8006402:	2830      	cmp	r0, #48	; 0x30
 8006404:	d0f8      	beq.n	80063f8 <__gethex+0x3c>
 8006406:	f7ff ffc4 	bl	8006392 <__hexdig_fun>
 800640a:	4604      	mov	r4, r0
 800640c:	2800      	cmp	r0, #0
 800640e:	d13a      	bne.n	8006486 <__gethex+0xca>
 8006410:	9901      	ldr	r1, [sp, #4]
 8006412:	4652      	mov	r2, sl
 8006414:	4638      	mov	r0, r7
 8006416:	f001 fa7a 	bl	800790e <strncmp>
 800641a:	4605      	mov	r5, r0
 800641c:	2800      	cmp	r0, #0
 800641e:	d168      	bne.n	80064f2 <__gethex+0x136>
 8006420:	f817 000a 	ldrb.w	r0, [r7, sl]
 8006424:	eb07 060a 	add.w	r6, r7, sl
 8006428:	f7ff ffb3 	bl	8006392 <__hexdig_fun>
 800642c:	2800      	cmp	r0, #0
 800642e:	d062      	beq.n	80064f6 <__gethex+0x13a>
 8006430:	4633      	mov	r3, r6
 8006432:	7818      	ldrb	r0, [r3, #0]
 8006434:	2830      	cmp	r0, #48	; 0x30
 8006436:	461f      	mov	r7, r3
 8006438:	f103 0301 	add.w	r3, r3, #1
 800643c:	d0f9      	beq.n	8006432 <__gethex+0x76>
 800643e:	f7ff ffa8 	bl	8006392 <__hexdig_fun>
 8006442:	2301      	movs	r3, #1
 8006444:	fab0 f480 	clz	r4, r0
 8006448:	0964      	lsrs	r4, r4, #5
 800644a:	4635      	mov	r5, r6
 800644c:	9300      	str	r3, [sp, #0]
 800644e:	463a      	mov	r2, r7
 8006450:	4616      	mov	r6, r2
 8006452:	3201      	adds	r2, #1
 8006454:	7830      	ldrb	r0, [r6, #0]
 8006456:	f7ff ff9c 	bl	8006392 <__hexdig_fun>
 800645a:	2800      	cmp	r0, #0
 800645c:	d1f8      	bne.n	8006450 <__gethex+0x94>
 800645e:	9901      	ldr	r1, [sp, #4]
 8006460:	4652      	mov	r2, sl
 8006462:	4630      	mov	r0, r6
 8006464:	f001 fa53 	bl	800790e <strncmp>
 8006468:	b980      	cbnz	r0, 800648c <__gethex+0xd0>
 800646a:	b94d      	cbnz	r5, 8006480 <__gethex+0xc4>
 800646c:	eb06 050a 	add.w	r5, r6, sl
 8006470:	462a      	mov	r2, r5
 8006472:	4616      	mov	r6, r2
 8006474:	3201      	adds	r2, #1
 8006476:	7830      	ldrb	r0, [r6, #0]
 8006478:	f7ff ff8b 	bl	8006392 <__hexdig_fun>
 800647c:	2800      	cmp	r0, #0
 800647e:	d1f8      	bne.n	8006472 <__gethex+0xb6>
 8006480:	1bad      	subs	r5, r5, r6
 8006482:	00ad      	lsls	r5, r5, #2
 8006484:	e004      	b.n	8006490 <__gethex+0xd4>
 8006486:	2400      	movs	r4, #0
 8006488:	4625      	mov	r5, r4
 800648a:	e7e0      	b.n	800644e <__gethex+0x92>
 800648c:	2d00      	cmp	r5, #0
 800648e:	d1f7      	bne.n	8006480 <__gethex+0xc4>
 8006490:	7833      	ldrb	r3, [r6, #0]
 8006492:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8006496:	2b50      	cmp	r3, #80	; 0x50
 8006498:	d13b      	bne.n	8006512 <__gethex+0x156>
 800649a:	7873      	ldrb	r3, [r6, #1]
 800649c:	2b2b      	cmp	r3, #43	; 0x2b
 800649e:	d02c      	beq.n	80064fa <__gethex+0x13e>
 80064a0:	2b2d      	cmp	r3, #45	; 0x2d
 80064a2:	d02e      	beq.n	8006502 <__gethex+0x146>
 80064a4:	1c71      	adds	r1, r6, #1
 80064a6:	f04f 0900 	mov.w	r9, #0
 80064aa:	7808      	ldrb	r0, [r1, #0]
 80064ac:	f7ff ff71 	bl	8006392 <__hexdig_fun>
 80064b0:	1e43      	subs	r3, r0, #1
 80064b2:	b2db      	uxtb	r3, r3
 80064b4:	2b18      	cmp	r3, #24
 80064b6:	d82c      	bhi.n	8006512 <__gethex+0x156>
 80064b8:	f1a0 0210 	sub.w	r2, r0, #16
 80064bc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80064c0:	f7ff ff67 	bl	8006392 <__hexdig_fun>
 80064c4:	1e43      	subs	r3, r0, #1
 80064c6:	b2db      	uxtb	r3, r3
 80064c8:	2b18      	cmp	r3, #24
 80064ca:	d91d      	bls.n	8006508 <__gethex+0x14c>
 80064cc:	f1b9 0f00 	cmp.w	r9, #0
 80064d0:	d000      	beq.n	80064d4 <__gethex+0x118>
 80064d2:	4252      	negs	r2, r2
 80064d4:	4415      	add	r5, r2
 80064d6:	f8cb 1000 	str.w	r1, [fp]
 80064da:	b1e4      	cbz	r4, 8006516 <__gethex+0x15a>
 80064dc:	9b00      	ldr	r3, [sp, #0]
 80064de:	2b00      	cmp	r3, #0
 80064e0:	bf14      	ite	ne
 80064e2:	2700      	movne	r7, #0
 80064e4:	2706      	moveq	r7, #6
 80064e6:	4638      	mov	r0, r7
 80064e8:	b009      	add	sp, #36	; 0x24
 80064ea:	ecbd 8b02 	vpop	{d8}
 80064ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064f2:	463e      	mov	r6, r7
 80064f4:	4625      	mov	r5, r4
 80064f6:	2401      	movs	r4, #1
 80064f8:	e7ca      	b.n	8006490 <__gethex+0xd4>
 80064fa:	f04f 0900 	mov.w	r9, #0
 80064fe:	1cb1      	adds	r1, r6, #2
 8006500:	e7d3      	b.n	80064aa <__gethex+0xee>
 8006502:	f04f 0901 	mov.w	r9, #1
 8006506:	e7fa      	b.n	80064fe <__gethex+0x142>
 8006508:	230a      	movs	r3, #10
 800650a:	fb03 0202 	mla	r2, r3, r2, r0
 800650e:	3a10      	subs	r2, #16
 8006510:	e7d4      	b.n	80064bc <__gethex+0x100>
 8006512:	4631      	mov	r1, r6
 8006514:	e7df      	b.n	80064d6 <__gethex+0x11a>
 8006516:	1bf3      	subs	r3, r6, r7
 8006518:	3b01      	subs	r3, #1
 800651a:	4621      	mov	r1, r4
 800651c:	2b07      	cmp	r3, #7
 800651e:	dc0b      	bgt.n	8006538 <__gethex+0x17c>
 8006520:	ee18 0a10 	vmov	r0, s16
 8006524:	f000 fa82 	bl	8006a2c <_Balloc>
 8006528:	4604      	mov	r4, r0
 800652a:	b940      	cbnz	r0, 800653e <__gethex+0x182>
 800652c:	4b5d      	ldr	r3, [pc, #372]	; (80066a4 <__gethex+0x2e8>)
 800652e:	4602      	mov	r2, r0
 8006530:	21de      	movs	r1, #222	; 0xde
 8006532:	485d      	ldr	r0, [pc, #372]	; (80066a8 <__gethex+0x2ec>)
 8006534:	f001 fae0 	bl	8007af8 <__assert_func>
 8006538:	3101      	adds	r1, #1
 800653a:	105b      	asrs	r3, r3, #1
 800653c:	e7ee      	b.n	800651c <__gethex+0x160>
 800653e:	f100 0914 	add.w	r9, r0, #20
 8006542:	f04f 0b00 	mov.w	fp, #0
 8006546:	f1ca 0301 	rsb	r3, sl, #1
 800654a:	f8cd 9008 	str.w	r9, [sp, #8]
 800654e:	f8cd b000 	str.w	fp, [sp]
 8006552:	9306      	str	r3, [sp, #24]
 8006554:	42b7      	cmp	r7, r6
 8006556:	d340      	bcc.n	80065da <__gethex+0x21e>
 8006558:	9802      	ldr	r0, [sp, #8]
 800655a:	9b00      	ldr	r3, [sp, #0]
 800655c:	f840 3b04 	str.w	r3, [r0], #4
 8006560:	eba0 0009 	sub.w	r0, r0, r9
 8006564:	1080      	asrs	r0, r0, #2
 8006566:	0146      	lsls	r6, r0, #5
 8006568:	6120      	str	r0, [r4, #16]
 800656a:	4618      	mov	r0, r3
 800656c:	f000 fb50 	bl	8006c10 <__hi0bits>
 8006570:	1a30      	subs	r0, r6, r0
 8006572:	f8d8 6000 	ldr.w	r6, [r8]
 8006576:	42b0      	cmp	r0, r6
 8006578:	dd63      	ble.n	8006642 <__gethex+0x286>
 800657a:	1b87      	subs	r7, r0, r6
 800657c:	4639      	mov	r1, r7
 800657e:	4620      	mov	r0, r4
 8006580:	f000 fef4 	bl	800736c <__any_on>
 8006584:	4682      	mov	sl, r0
 8006586:	b1a8      	cbz	r0, 80065b4 <__gethex+0x1f8>
 8006588:	1e7b      	subs	r3, r7, #1
 800658a:	1159      	asrs	r1, r3, #5
 800658c:	f003 021f 	and.w	r2, r3, #31
 8006590:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8006594:	f04f 0a01 	mov.w	sl, #1
 8006598:	fa0a f202 	lsl.w	r2, sl, r2
 800659c:	420a      	tst	r2, r1
 800659e:	d009      	beq.n	80065b4 <__gethex+0x1f8>
 80065a0:	4553      	cmp	r3, sl
 80065a2:	dd05      	ble.n	80065b0 <__gethex+0x1f4>
 80065a4:	1eb9      	subs	r1, r7, #2
 80065a6:	4620      	mov	r0, r4
 80065a8:	f000 fee0 	bl	800736c <__any_on>
 80065ac:	2800      	cmp	r0, #0
 80065ae:	d145      	bne.n	800663c <__gethex+0x280>
 80065b0:	f04f 0a02 	mov.w	sl, #2
 80065b4:	4639      	mov	r1, r7
 80065b6:	4620      	mov	r0, r4
 80065b8:	f7ff fe99 	bl	80062ee <rshift>
 80065bc:	443d      	add	r5, r7
 80065be:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80065c2:	42ab      	cmp	r3, r5
 80065c4:	da4c      	bge.n	8006660 <__gethex+0x2a4>
 80065c6:	ee18 0a10 	vmov	r0, s16
 80065ca:	4621      	mov	r1, r4
 80065cc:	f000 fa6e 	bl	8006aac <_Bfree>
 80065d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80065d2:	2300      	movs	r3, #0
 80065d4:	6013      	str	r3, [r2, #0]
 80065d6:	27a3      	movs	r7, #163	; 0xa3
 80065d8:	e785      	b.n	80064e6 <__gethex+0x12a>
 80065da:	1e73      	subs	r3, r6, #1
 80065dc:	9a05      	ldr	r2, [sp, #20]
 80065de:	9303      	str	r3, [sp, #12]
 80065e0:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80065e4:	4293      	cmp	r3, r2
 80065e6:	d019      	beq.n	800661c <__gethex+0x260>
 80065e8:	f1bb 0f20 	cmp.w	fp, #32
 80065ec:	d107      	bne.n	80065fe <__gethex+0x242>
 80065ee:	9b02      	ldr	r3, [sp, #8]
 80065f0:	9a00      	ldr	r2, [sp, #0]
 80065f2:	f843 2b04 	str.w	r2, [r3], #4
 80065f6:	9302      	str	r3, [sp, #8]
 80065f8:	2300      	movs	r3, #0
 80065fa:	9300      	str	r3, [sp, #0]
 80065fc:	469b      	mov	fp, r3
 80065fe:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8006602:	f7ff fec6 	bl	8006392 <__hexdig_fun>
 8006606:	9b00      	ldr	r3, [sp, #0]
 8006608:	f000 000f 	and.w	r0, r0, #15
 800660c:	fa00 f00b 	lsl.w	r0, r0, fp
 8006610:	4303      	orrs	r3, r0
 8006612:	9300      	str	r3, [sp, #0]
 8006614:	f10b 0b04 	add.w	fp, fp, #4
 8006618:	9b03      	ldr	r3, [sp, #12]
 800661a:	e00d      	b.n	8006638 <__gethex+0x27c>
 800661c:	9b03      	ldr	r3, [sp, #12]
 800661e:	9a06      	ldr	r2, [sp, #24]
 8006620:	4413      	add	r3, r2
 8006622:	42bb      	cmp	r3, r7
 8006624:	d3e0      	bcc.n	80065e8 <__gethex+0x22c>
 8006626:	4618      	mov	r0, r3
 8006628:	9901      	ldr	r1, [sp, #4]
 800662a:	9307      	str	r3, [sp, #28]
 800662c:	4652      	mov	r2, sl
 800662e:	f001 f96e 	bl	800790e <strncmp>
 8006632:	9b07      	ldr	r3, [sp, #28]
 8006634:	2800      	cmp	r0, #0
 8006636:	d1d7      	bne.n	80065e8 <__gethex+0x22c>
 8006638:	461e      	mov	r6, r3
 800663a:	e78b      	b.n	8006554 <__gethex+0x198>
 800663c:	f04f 0a03 	mov.w	sl, #3
 8006640:	e7b8      	b.n	80065b4 <__gethex+0x1f8>
 8006642:	da0a      	bge.n	800665a <__gethex+0x29e>
 8006644:	1a37      	subs	r7, r6, r0
 8006646:	4621      	mov	r1, r4
 8006648:	ee18 0a10 	vmov	r0, s16
 800664c:	463a      	mov	r2, r7
 800664e:	f000 fc49 	bl	8006ee4 <__lshift>
 8006652:	1bed      	subs	r5, r5, r7
 8006654:	4604      	mov	r4, r0
 8006656:	f100 0914 	add.w	r9, r0, #20
 800665a:	f04f 0a00 	mov.w	sl, #0
 800665e:	e7ae      	b.n	80065be <__gethex+0x202>
 8006660:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8006664:	42a8      	cmp	r0, r5
 8006666:	dd72      	ble.n	800674e <__gethex+0x392>
 8006668:	1b45      	subs	r5, r0, r5
 800666a:	42ae      	cmp	r6, r5
 800666c:	dc36      	bgt.n	80066dc <__gethex+0x320>
 800666e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006672:	2b02      	cmp	r3, #2
 8006674:	d02a      	beq.n	80066cc <__gethex+0x310>
 8006676:	2b03      	cmp	r3, #3
 8006678:	d02c      	beq.n	80066d4 <__gethex+0x318>
 800667a:	2b01      	cmp	r3, #1
 800667c:	d11c      	bne.n	80066b8 <__gethex+0x2fc>
 800667e:	42ae      	cmp	r6, r5
 8006680:	d11a      	bne.n	80066b8 <__gethex+0x2fc>
 8006682:	2e01      	cmp	r6, #1
 8006684:	d112      	bne.n	80066ac <__gethex+0x2f0>
 8006686:	9a04      	ldr	r2, [sp, #16]
 8006688:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800668c:	6013      	str	r3, [r2, #0]
 800668e:	2301      	movs	r3, #1
 8006690:	6123      	str	r3, [r4, #16]
 8006692:	f8c9 3000 	str.w	r3, [r9]
 8006696:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006698:	2762      	movs	r7, #98	; 0x62
 800669a:	601c      	str	r4, [r3, #0]
 800669c:	e723      	b.n	80064e6 <__gethex+0x12a>
 800669e:	bf00      	nop
 80066a0:	080095b4 	.word	0x080095b4
 80066a4:	080094d8 	.word	0x080094d8
 80066a8:	0800954c 	.word	0x0800954c
 80066ac:	1e71      	subs	r1, r6, #1
 80066ae:	4620      	mov	r0, r4
 80066b0:	f000 fe5c 	bl	800736c <__any_on>
 80066b4:	2800      	cmp	r0, #0
 80066b6:	d1e6      	bne.n	8006686 <__gethex+0x2ca>
 80066b8:	ee18 0a10 	vmov	r0, s16
 80066bc:	4621      	mov	r1, r4
 80066be:	f000 f9f5 	bl	8006aac <_Bfree>
 80066c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80066c4:	2300      	movs	r3, #0
 80066c6:	6013      	str	r3, [r2, #0]
 80066c8:	2750      	movs	r7, #80	; 0x50
 80066ca:	e70c      	b.n	80064e6 <__gethex+0x12a>
 80066cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80066ce:	2b00      	cmp	r3, #0
 80066d0:	d1f2      	bne.n	80066b8 <__gethex+0x2fc>
 80066d2:	e7d8      	b.n	8006686 <__gethex+0x2ca>
 80066d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80066d6:	2b00      	cmp	r3, #0
 80066d8:	d1d5      	bne.n	8006686 <__gethex+0x2ca>
 80066da:	e7ed      	b.n	80066b8 <__gethex+0x2fc>
 80066dc:	1e6f      	subs	r7, r5, #1
 80066de:	f1ba 0f00 	cmp.w	sl, #0
 80066e2:	d131      	bne.n	8006748 <__gethex+0x38c>
 80066e4:	b127      	cbz	r7, 80066f0 <__gethex+0x334>
 80066e6:	4639      	mov	r1, r7
 80066e8:	4620      	mov	r0, r4
 80066ea:	f000 fe3f 	bl	800736c <__any_on>
 80066ee:	4682      	mov	sl, r0
 80066f0:	117b      	asrs	r3, r7, #5
 80066f2:	2101      	movs	r1, #1
 80066f4:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80066f8:	f007 071f 	and.w	r7, r7, #31
 80066fc:	fa01 f707 	lsl.w	r7, r1, r7
 8006700:	421f      	tst	r7, r3
 8006702:	4629      	mov	r1, r5
 8006704:	4620      	mov	r0, r4
 8006706:	bf18      	it	ne
 8006708:	f04a 0a02 	orrne.w	sl, sl, #2
 800670c:	1b76      	subs	r6, r6, r5
 800670e:	f7ff fdee 	bl	80062ee <rshift>
 8006712:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8006716:	2702      	movs	r7, #2
 8006718:	f1ba 0f00 	cmp.w	sl, #0
 800671c:	d048      	beq.n	80067b0 <__gethex+0x3f4>
 800671e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8006722:	2b02      	cmp	r3, #2
 8006724:	d015      	beq.n	8006752 <__gethex+0x396>
 8006726:	2b03      	cmp	r3, #3
 8006728:	d017      	beq.n	800675a <__gethex+0x39e>
 800672a:	2b01      	cmp	r3, #1
 800672c:	d109      	bne.n	8006742 <__gethex+0x386>
 800672e:	f01a 0f02 	tst.w	sl, #2
 8006732:	d006      	beq.n	8006742 <__gethex+0x386>
 8006734:	f8d9 0000 	ldr.w	r0, [r9]
 8006738:	ea4a 0a00 	orr.w	sl, sl, r0
 800673c:	f01a 0f01 	tst.w	sl, #1
 8006740:	d10e      	bne.n	8006760 <__gethex+0x3a4>
 8006742:	f047 0710 	orr.w	r7, r7, #16
 8006746:	e033      	b.n	80067b0 <__gethex+0x3f4>
 8006748:	f04f 0a01 	mov.w	sl, #1
 800674c:	e7d0      	b.n	80066f0 <__gethex+0x334>
 800674e:	2701      	movs	r7, #1
 8006750:	e7e2      	b.n	8006718 <__gethex+0x35c>
 8006752:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006754:	f1c3 0301 	rsb	r3, r3, #1
 8006758:	9315      	str	r3, [sp, #84]	; 0x54
 800675a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800675c:	2b00      	cmp	r3, #0
 800675e:	d0f0      	beq.n	8006742 <__gethex+0x386>
 8006760:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8006764:	f104 0314 	add.w	r3, r4, #20
 8006768:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800676c:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8006770:	f04f 0c00 	mov.w	ip, #0
 8006774:	4618      	mov	r0, r3
 8006776:	f853 2b04 	ldr.w	r2, [r3], #4
 800677a:	f1b2 3fff 	cmp.w	r2, #4294967295
 800677e:	d01c      	beq.n	80067ba <__gethex+0x3fe>
 8006780:	3201      	adds	r2, #1
 8006782:	6002      	str	r2, [r0, #0]
 8006784:	2f02      	cmp	r7, #2
 8006786:	f104 0314 	add.w	r3, r4, #20
 800678a:	d13f      	bne.n	800680c <__gethex+0x450>
 800678c:	f8d8 2000 	ldr.w	r2, [r8]
 8006790:	3a01      	subs	r2, #1
 8006792:	42b2      	cmp	r2, r6
 8006794:	d10a      	bne.n	80067ac <__gethex+0x3f0>
 8006796:	1171      	asrs	r1, r6, #5
 8006798:	2201      	movs	r2, #1
 800679a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800679e:	f006 061f 	and.w	r6, r6, #31
 80067a2:	fa02 f606 	lsl.w	r6, r2, r6
 80067a6:	421e      	tst	r6, r3
 80067a8:	bf18      	it	ne
 80067aa:	4617      	movne	r7, r2
 80067ac:	f047 0720 	orr.w	r7, r7, #32
 80067b0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80067b2:	601c      	str	r4, [r3, #0]
 80067b4:	9b04      	ldr	r3, [sp, #16]
 80067b6:	601d      	str	r5, [r3, #0]
 80067b8:	e695      	b.n	80064e6 <__gethex+0x12a>
 80067ba:	4299      	cmp	r1, r3
 80067bc:	f843 cc04 	str.w	ip, [r3, #-4]
 80067c0:	d8d8      	bhi.n	8006774 <__gethex+0x3b8>
 80067c2:	68a3      	ldr	r3, [r4, #8]
 80067c4:	459b      	cmp	fp, r3
 80067c6:	db19      	blt.n	80067fc <__gethex+0x440>
 80067c8:	6861      	ldr	r1, [r4, #4]
 80067ca:	ee18 0a10 	vmov	r0, s16
 80067ce:	3101      	adds	r1, #1
 80067d0:	f000 f92c 	bl	8006a2c <_Balloc>
 80067d4:	4681      	mov	r9, r0
 80067d6:	b918      	cbnz	r0, 80067e0 <__gethex+0x424>
 80067d8:	4b1a      	ldr	r3, [pc, #104]	; (8006844 <__gethex+0x488>)
 80067da:	4602      	mov	r2, r0
 80067dc:	2184      	movs	r1, #132	; 0x84
 80067de:	e6a8      	b.n	8006532 <__gethex+0x176>
 80067e0:	6922      	ldr	r2, [r4, #16]
 80067e2:	3202      	adds	r2, #2
 80067e4:	f104 010c 	add.w	r1, r4, #12
 80067e8:	0092      	lsls	r2, r2, #2
 80067ea:	300c      	adds	r0, #12
 80067ec:	f000 f910 	bl	8006a10 <memcpy>
 80067f0:	4621      	mov	r1, r4
 80067f2:	ee18 0a10 	vmov	r0, s16
 80067f6:	f000 f959 	bl	8006aac <_Bfree>
 80067fa:	464c      	mov	r4, r9
 80067fc:	6923      	ldr	r3, [r4, #16]
 80067fe:	1c5a      	adds	r2, r3, #1
 8006800:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006804:	6122      	str	r2, [r4, #16]
 8006806:	2201      	movs	r2, #1
 8006808:	615a      	str	r2, [r3, #20]
 800680a:	e7bb      	b.n	8006784 <__gethex+0x3c8>
 800680c:	6922      	ldr	r2, [r4, #16]
 800680e:	455a      	cmp	r2, fp
 8006810:	dd0b      	ble.n	800682a <__gethex+0x46e>
 8006812:	2101      	movs	r1, #1
 8006814:	4620      	mov	r0, r4
 8006816:	f7ff fd6a 	bl	80062ee <rshift>
 800681a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800681e:	3501      	adds	r5, #1
 8006820:	42ab      	cmp	r3, r5
 8006822:	f6ff aed0 	blt.w	80065c6 <__gethex+0x20a>
 8006826:	2701      	movs	r7, #1
 8006828:	e7c0      	b.n	80067ac <__gethex+0x3f0>
 800682a:	f016 061f 	ands.w	r6, r6, #31
 800682e:	d0fa      	beq.n	8006826 <__gethex+0x46a>
 8006830:	4453      	add	r3, sl
 8006832:	f1c6 0620 	rsb	r6, r6, #32
 8006836:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800683a:	f000 f9e9 	bl	8006c10 <__hi0bits>
 800683e:	42b0      	cmp	r0, r6
 8006840:	dbe7      	blt.n	8006812 <__gethex+0x456>
 8006842:	e7f0      	b.n	8006826 <__gethex+0x46a>
 8006844:	080094d8 	.word	0x080094d8

08006848 <L_shift>:
 8006848:	f1c2 0208 	rsb	r2, r2, #8
 800684c:	0092      	lsls	r2, r2, #2
 800684e:	b570      	push	{r4, r5, r6, lr}
 8006850:	f1c2 0620 	rsb	r6, r2, #32
 8006854:	6843      	ldr	r3, [r0, #4]
 8006856:	6804      	ldr	r4, [r0, #0]
 8006858:	fa03 f506 	lsl.w	r5, r3, r6
 800685c:	432c      	orrs	r4, r5
 800685e:	40d3      	lsrs	r3, r2
 8006860:	6004      	str	r4, [r0, #0]
 8006862:	f840 3f04 	str.w	r3, [r0, #4]!
 8006866:	4288      	cmp	r0, r1
 8006868:	d3f4      	bcc.n	8006854 <L_shift+0xc>
 800686a:	bd70      	pop	{r4, r5, r6, pc}

0800686c <__match>:
 800686c:	b530      	push	{r4, r5, lr}
 800686e:	6803      	ldr	r3, [r0, #0]
 8006870:	3301      	adds	r3, #1
 8006872:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006876:	b914      	cbnz	r4, 800687e <__match+0x12>
 8006878:	6003      	str	r3, [r0, #0]
 800687a:	2001      	movs	r0, #1
 800687c:	bd30      	pop	{r4, r5, pc}
 800687e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006882:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8006886:	2d19      	cmp	r5, #25
 8006888:	bf98      	it	ls
 800688a:	3220      	addls	r2, #32
 800688c:	42a2      	cmp	r2, r4
 800688e:	d0f0      	beq.n	8006872 <__match+0x6>
 8006890:	2000      	movs	r0, #0
 8006892:	e7f3      	b.n	800687c <__match+0x10>

08006894 <__hexnan>:
 8006894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006898:	680b      	ldr	r3, [r1, #0]
 800689a:	115e      	asrs	r6, r3, #5
 800689c:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80068a0:	f013 031f 	ands.w	r3, r3, #31
 80068a4:	b087      	sub	sp, #28
 80068a6:	bf18      	it	ne
 80068a8:	3604      	addne	r6, #4
 80068aa:	2500      	movs	r5, #0
 80068ac:	1f37      	subs	r7, r6, #4
 80068ae:	4690      	mov	r8, r2
 80068b0:	6802      	ldr	r2, [r0, #0]
 80068b2:	9301      	str	r3, [sp, #4]
 80068b4:	4682      	mov	sl, r0
 80068b6:	f846 5c04 	str.w	r5, [r6, #-4]
 80068ba:	46b9      	mov	r9, r7
 80068bc:	463c      	mov	r4, r7
 80068be:	9502      	str	r5, [sp, #8]
 80068c0:	46ab      	mov	fp, r5
 80068c2:	7851      	ldrb	r1, [r2, #1]
 80068c4:	1c53      	adds	r3, r2, #1
 80068c6:	9303      	str	r3, [sp, #12]
 80068c8:	b341      	cbz	r1, 800691c <__hexnan+0x88>
 80068ca:	4608      	mov	r0, r1
 80068cc:	9205      	str	r2, [sp, #20]
 80068ce:	9104      	str	r1, [sp, #16]
 80068d0:	f7ff fd5f 	bl	8006392 <__hexdig_fun>
 80068d4:	2800      	cmp	r0, #0
 80068d6:	d14f      	bne.n	8006978 <__hexnan+0xe4>
 80068d8:	9904      	ldr	r1, [sp, #16]
 80068da:	9a05      	ldr	r2, [sp, #20]
 80068dc:	2920      	cmp	r1, #32
 80068de:	d818      	bhi.n	8006912 <__hexnan+0x7e>
 80068e0:	9b02      	ldr	r3, [sp, #8]
 80068e2:	459b      	cmp	fp, r3
 80068e4:	dd13      	ble.n	800690e <__hexnan+0x7a>
 80068e6:	454c      	cmp	r4, r9
 80068e8:	d206      	bcs.n	80068f8 <__hexnan+0x64>
 80068ea:	2d07      	cmp	r5, #7
 80068ec:	dc04      	bgt.n	80068f8 <__hexnan+0x64>
 80068ee:	462a      	mov	r2, r5
 80068f0:	4649      	mov	r1, r9
 80068f2:	4620      	mov	r0, r4
 80068f4:	f7ff ffa8 	bl	8006848 <L_shift>
 80068f8:	4544      	cmp	r4, r8
 80068fa:	d950      	bls.n	800699e <__hexnan+0x10a>
 80068fc:	2300      	movs	r3, #0
 80068fe:	f1a4 0904 	sub.w	r9, r4, #4
 8006902:	f844 3c04 	str.w	r3, [r4, #-4]
 8006906:	f8cd b008 	str.w	fp, [sp, #8]
 800690a:	464c      	mov	r4, r9
 800690c:	461d      	mov	r5, r3
 800690e:	9a03      	ldr	r2, [sp, #12]
 8006910:	e7d7      	b.n	80068c2 <__hexnan+0x2e>
 8006912:	2929      	cmp	r1, #41	; 0x29
 8006914:	d156      	bne.n	80069c4 <__hexnan+0x130>
 8006916:	3202      	adds	r2, #2
 8006918:	f8ca 2000 	str.w	r2, [sl]
 800691c:	f1bb 0f00 	cmp.w	fp, #0
 8006920:	d050      	beq.n	80069c4 <__hexnan+0x130>
 8006922:	454c      	cmp	r4, r9
 8006924:	d206      	bcs.n	8006934 <__hexnan+0xa0>
 8006926:	2d07      	cmp	r5, #7
 8006928:	dc04      	bgt.n	8006934 <__hexnan+0xa0>
 800692a:	462a      	mov	r2, r5
 800692c:	4649      	mov	r1, r9
 800692e:	4620      	mov	r0, r4
 8006930:	f7ff ff8a 	bl	8006848 <L_shift>
 8006934:	4544      	cmp	r4, r8
 8006936:	d934      	bls.n	80069a2 <__hexnan+0x10e>
 8006938:	f1a8 0204 	sub.w	r2, r8, #4
 800693c:	4623      	mov	r3, r4
 800693e:	f853 1b04 	ldr.w	r1, [r3], #4
 8006942:	f842 1f04 	str.w	r1, [r2, #4]!
 8006946:	429f      	cmp	r7, r3
 8006948:	d2f9      	bcs.n	800693e <__hexnan+0xaa>
 800694a:	1b3b      	subs	r3, r7, r4
 800694c:	f023 0303 	bic.w	r3, r3, #3
 8006950:	3304      	adds	r3, #4
 8006952:	3401      	adds	r4, #1
 8006954:	3e03      	subs	r6, #3
 8006956:	42b4      	cmp	r4, r6
 8006958:	bf88      	it	hi
 800695a:	2304      	movhi	r3, #4
 800695c:	4443      	add	r3, r8
 800695e:	2200      	movs	r2, #0
 8006960:	f843 2b04 	str.w	r2, [r3], #4
 8006964:	429f      	cmp	r7, r3
 8006966:	d2fb      	bcs.n	8006960 <__hexnan+0xcc>
 8006968:	683b      	ldr	r3, [r7, #0]
 800696a:	b91b      	cbnz	r3, 8006974 <__hexnan+0xe0>
 800696c:	4547      	cmp	r7, r8
 800696e:	d127      	bne.n	80069c0 <__hexnan+0x12c>
 8006970:	2301      	movs	r3, #1
 8006972:	603b      	str	r3, [r7, #0]
 8006974:	2005      	movs	r0, #5
 8006976:	e026      	b.n	80069c6 <__hexnan+0x132>
 8006978:	3501      	adds	r5, #1
 800697a:	2d08      	cmp	r5, #8
 800697c:	f10b 0b01 	add.w	fp, fp, #1
 8006980:	dd06      	ble.n	8006990 <__hexnan+0xfc>
 8006982:	4544      	cmp	r4, r8
 8006984:	d9c3      	bls.n	800690e <__hexnan+0x7a>
 8006986:	2300      	movs	r3, #0
 8006988:	f844 3c04 	str.w	r3, [r4, #-4]
 800698c:	2501      	movs	r5, #1
 800698e:	3c04      	subs	r4, #4
 8006990:	6822      	ldr	r2, [r4, #0]
 8006992:	f000 000f 	and.w	r0, r0, #15
 8006996:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800699a:	6022      	str	r2, [r4, #0]
 800699c:	e7b7      	b.n	800690e <__hexnan+0x7a>
 800699e:	2508      	movs	r5, #8
 80069a0:	e7b5      	b.n	800690e <__hexnan+0x7a>
 80069a2:	9b01      	ldr	r3, [sp, #4]
 80069a4:	2b00      	cmp	r3, #0
 80069a6:	d0df      	beq.n	8006968 <__hexnan+0xd4>
 80069a8:	f04f 32ff 	mov.w	r2, #4294967295
 80069ac:	f1c3 0320 	rsb	r3, r3, #32
 80069b0:	fa22 f303 	lsr.w	r3, r2, r3
 80069b4:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80069b8:	401a      	ands	r2, r3
 80069ba:	f846 2c04 	str.w	r2, [r6, #-4]
 80069be:	e7d3      	b.n	8006968 <__hexnan+0xd4>
 80069c0:	3f04      	subs	r7, #4
 80069c2:	e7d1      	b.n	8006968 <__hexnan+0xd4>
 80069c4:	2004      	movs	r0, #4
 80069c6:	b007      	add	sp, #28
 80069c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080069cc <_localeconv_r>:
 80069cc:	4800      	ldr	r0, [pc, #0]	; (80069d0 <_localeconv_r+0x4>)
 80069ce:	4770      	bx	lr
 80069d0:	20000184 	.word	0x20000184

080069d4 <__retarget_lock_init_recursive>:
 80069d4:	4770      	bx	lr

080069d6 <__retarget_lock_acquire_recursive>:
 80069d6:	4770      	bx	lr

080069d8 <__retarget_lock_release_recursive>:
 80069d8:	4770      	bx	lr
	...

080069dc <malloc>:
 80069dc:	4b02      	ldr	r3, [pc, #8]	; (80069e8 <malloc+0xc>)
 80069de:	4601      	mov	r1, r0
 80069e0:	6818      	ldr	r0, [r3, #0]
 80069e2:	f000 bd67 	b.w	80074b4 <_malloc_r>
 80069e6:	bf00      	nop
 80069e8:	2000002c 	.word	0x2000002c

080069ec <__ascii_mbtowc>:
 80069ec:	b082      	sub	sp, #8
 80069ee:	b901      	cbnz	r1, 80069f2 <__ascii_mbtowc+0x6>
 80069f0:	a901      	add	r1, sp, #4
 80069f2:	b142      	cbz	r2, 8006a06 <__ascii_mbtowc+0x1a>
 80069f4:	b14b      	cbz	r3, 8006a0a <__ascii_mbtowc+0x1e>
 80069f6:	7813      	ldrb	r3, [r2, #0]
 80069f8:	600b      	str	r3, [r1, #0]
 80069fa:	7812      	ldrb	r2, [r2, #0]
 80069fc:	1e10      	subs	r0, r2, #0
 80069fe:	bf18      	it	ne
 8006a00:	2001      	movne	r0, #1
 8006a02:	b002      	add	sp, #8
 8006a04:	4770      	bx	lr
 8006a06:	4610      	mov	r0, r2
 8006a08:	e7fb      	b.n	8006a02 <__ascii_mbtowc+0x16>
 8006a0a:	f06f 0001 	mvn.w	r0, #1
 8006a0e:	e7f8      	b.n	8006a02 <__ascii_mbtowc+0x16>

08006a10 <memcpy>:
 8006a10:	440a      	add	r2, r1
 8006a12:	4291      	cmp	r1, r2
 8006a14:	f100 33ff 	add.w	r3, r0, #4294967295
 8006a18:	d100      	bne.n	8006a1c <memcpy+0xc>
 8006a1a:	4770      	bx	lr
 8006a1c:	b510      	push	{r4, lr}
 8006a1e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006a22:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006a26:	4291      	cmp	r1, r2
 8006a28:	d1f9      	bne.n	8006a1e <memcpy+0xe>
 8006a2a:	bd10      	pop	{r4, pc}

08006a2c <_Balloc>:
 8006a2c:	b570      	push	{r4, r5, r6, lr}
 8006a2e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006a30:	4604      	mov	r4, r0
 8006a32:	460d      	mov	r5, r1
 8006a34:	b976      	cbnz	r6, 8006a54 <_Balloc+0x28>
 8006a36:	2010      	movs	r0, #16
 8006a38:	f7ff ffd0 	bl	80069dc <malloc>
 8006a3c:	4602      	mov	r2, r0
 8006a3e:	6260      	str	r0, [r4, #36]	; 0x24
 8006a40:	b920      	cbnz	r0, 8006a4c <_Balloc+0x20>
 8006a42:	4b18      	ldr	r3, [pc, #96]	; (8006aa4 <_Balloc+0x78>)
 8006a44:	4818      	ldr	r0, [pc, #96]	; (8006aa8 <_Balloc+0x7c>)
 8006a46:	2166      	movs	r1, #102	; 0x66
 8006a48:	f001 f856 	bl	8007af8 <__assert_func>
 8006a4c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006a50:	6006      	str	r6, [r0, #0]
 8006a52:	60c6      	str	r6, [r0, #12]
 8006a54:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006a56:	68f3      	ldr	r3, [r6, #12]
 8006a58:	b183      	cbz	r3, 8006a7c <_Balloc+0x50>
 8006a5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006a5c:	68db      	ldr	r3, [r3, #12]
 8006a5e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006a62:	b9b8      	cbnz	r0, 8006a94 <_Balloc+0x68>
 8006a64:	2101      	movs	r1, #1
 8006a66:	fa01 f605 	lsl.w	r6, r1, r5
 8006a6a:	1d72      	adds	r2, r6, #5
 8006a6c:	0092      	lsls	r2, r2, #2
 8006a6e:	4620      	mov	r0, r4
 8006a70:	f000 fc9d 	bl	80073ae <_calloc_r>
 8006a74:	b160      	cbz	r0, 8006a90 <_Balloc+0x64>
 8006a76:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006a7a:	e00e      	b.n	8006a9a <_Balloc+0x6e>
 8006a7c:	2221      	movs	r2, #33	; 0x21
 8006a7e:	2104      	movs	r1, #4
 8006a80:	4620      	mov	r0, r4
 8006a82:	f000 fc94 	bl	80073ae <_calloc_r>
 8006a86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006a88:	60f0      	str	r0, [r6, #12]
 8006a8a:	68db      	ldr	r3, [r3, #12]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	d1e4      	bne.n	8006a5a <_Balloc+0x2e>
 8006a90:	2000      	movs	r0, #0
 8006a92:	bd70      	pop	{r4, r5, r6, pc}
 8006a94:	6802      	ldr	r2, [r0, #0]
 8006a96:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006a9a:	2300      	movs	r3, #0
 8006a9c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006aa0:	e7f7      	b.n	8006a92 <_Balloc+0x66>
 8006aa2:	bf00      	nop
 8006aa4:	08009466 	.word	0x08009466
 8006aa8:	080095c8 	.word	0x080095c8

08006aac <_Bfree>:
 8006aac:	b570      	push	{r4, r5, r6, lr}
 8006aae:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006ab0:	4605      	mov	r5, r0
 8006ab2:	460c      	mov	r4, r1
 8006ab4:	b976      	cbnz	r6, 8006ad4 <_Bfree+0x28>
 8006ab6:	2010      	movs	r0, #16
 8006ab8:	f7ff ff90 	bl	80069dc <malloc>
 8006abc:	4602      	mov	r2, r0
 8006abe:	6268      	str	r0, [r5, #36]	; 0x24
 8006ac0:	b920      	cbnz	r0, 8006acc <_Bfree+0x20>
 8006ac2:	4b09      	ldr	r3, [pc, #36]	; (8006ae8 <_Bfree+0x3c>)
 8006ac4:	4809      	ldr	r0, [pc, #36]	; (8006aec <_Bfree+0x40>)
 8006ac6:	218a      	movs	r1, #138	; 0x8a
 8006ac8:	f001 f816 	bl	8007af8 <__assert_func>
 8006acc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006ad0:	6006      	str	r6, [r0, #0]
 8006ad2:	60c6      	str	r6, [r0, #12]
 8006ad4:	b13c      	cbz	r4, 8006ae6 <_Bfree+0x3a>
 8006ad6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006ad8:	6862      	ldr	r2, [r4, #4]
 8006ada:	68db      	ldr	r3, [r3, #12]
 8006adc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006ae0:	6021      	str	r1, [r4, #0]
 8006ae2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006ae6:	bd70      	pop	{r4, r5, r6, pc}
 8006ae8:	08009466 	.word	0x08009466
 8006aec:	080095c8 	.word	0x080095c8

08006af0 <__multadd>:
 8006af0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006af4:	690d      	ldr	r5, [r1, #16]
 8006af6:	4607      	mov	r7, r0
 8006af8:	460c      	mov	r4, r1
 8006afa:	461e      	mov	r6, r3
 8006afc:	f101 0c14 	add.w	ip, r1, #20
 8006b00:	2000      	movs	r0, #0
 8006b02:	f8dc 3000 	ldr.w	r3, [ip]
 8006b06:	b299      	uxth	r1, r3
 8006b08:	fb02 6101 	mla	r1, r2, r1, r6
 8006b0c:	0c1e      	lsrs	r6, r3, #16
 8006b0e:	0c0b      	lsrs	r3, r1, #16
 8006b10:	fb02 3306 	mla	r3, r2, r6, r3
 8006b14:	b289      	uxth	r1, r1
 8006b16:	3001      	adds	r0, #1
 8006b18:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006b1c:	4285      	cmp	r5, r0
 8006b1e:	f84c 1b04 	str.w	r1, [ip], #4
 8006b22:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8006b26:	dcec      	bgt.n	8006b02 <__multadd+0x12>
 8006b28:	b30e      	cbz	r6, 8006b6e <__multadd+0x7e>
 8006b2a:	68a3      	ldr	r3, [r4, #8]
 8006b2c:	42ab      	cmp	r3, r5
 8006b2e:	dc19      	bgt.n	8006b64 <__multadd+0x74>
 8006b30:	6861      	ldr	r1, [r4, #4]
 8006b32:	4638      	mov	r0, r7
 8006b34:	3101      	adds	r1, #1
 8006b36:	f7ff ff79 	bl	8006a2c <_Balloc>
 8006b3a:	4680      	mov	r8, r0
 8006b3c:	b928      	cbnz	r0, 8006b4a <__multadd+0x5a>
 8006b3e:	4602      	mov	r2, r0
 8006b40:	4b0c      	ldr	r3, [pc, #48]	; (8006b74 <__multadd+0x84>)
 8006b42:	480d      	ldr	r0, [pc, #52]	; (8006b78 <__multadd+0x88>)
 8006b44:	21b5      	movs	r1, #181	; 0xb5
 8006b46:	f000 ffd7 	bl	8007af8 <__assert_func>
 8006b4a:	6922      	ldr	r2, [r4, #16]
 8006b4c:	3202      	adds	r2, #2
 8006b4e:	f104 010c 	add.w	r1, r4, #12
 8006b52:	0092      	lsls	r2, r2, #2
 8006b54:	300c      	adds	r0, #12
 8006b56:	f7ff ff5b 	bl	8006a10 <memcpy>
 8006b5a:	4621      	mov	r1, r4
 8006b5c:	4638      	mov	r0, r7
 8006b5e:	f7ff ffa5 	bl	8006aac <_Bfree>
 8006b62:	4644      	mov	r4, r8
 8006b64:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006b68:	3501      	adds	r5, #1
 8006b6a:	615e      	str	r6, [r3, #20]
 8006b6c:	6125      	str	r5, [r4, #16]
 8006b6e:	4620      	mov	r0, r4
 8006b70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b74:	080094d8 	.word	0x080094d8
 8006b78:	080095c8 	.word	0x080095c8

08006b7c <__s2b>:
 8006b7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006b80:	460c      	mov	r4, r1
 8006b82:	4615      	mov	r5, r2
 8006b84:	461f      	mov	r7, r3
 8006b86:	2209      	movs	r2, #9
 8006b88:	3308      	adds	r3, #8
 8006b8a:	4606      	mov	r6, r0
 8006b8c:	fb93 f3f2 	sdiv	r3, r3, r2
 8006b90:	2100      	movs	r1, #0
 8006b92:	2201      	movs	r2, #1
 8006b94:	429a      	cmp	r2, r3
 8006b96:	db09      	blt.n	8006bac <__s2b+0x30>
 8006b98:	4630      	mov	r0, r6
 8006b9a:	f7ff ff47 	bl	8006a2c <_Balloc>
 8006b9e:	b940      	cbnz	r0, 8006bb2 <__s2b+0x36>
 8006ba0:	4602      	mov	r2, r0
 8006ba2:	4b19      	ldr	r3, [pc, #100]	; (8006c08 <__s2b+0x8c>)
 8006ba4:	4819      	ldr	r0, [pc, #100]	; (8006c0c <__s2b+0x90>)
 8006ba6:	21ce      	movs	r1, #206	; 0xce
 8006ba8:	f000 ffa6 	bl	8007af8 <__assert_func>
 8006bac:	0052      	lsls	r2, r2, #1
 8006bae:	3101      	adds	r1, #1
 8006bb0:	e7f0      	b.n	8006b94 <__s2b+0x18>
 8006bb2:	9b08      	ldr	r3, [sp, #32]
 8006bb4:	6143      	str	r3, [r0, #20]
 8006bb6:	2d09      	cmp	r5, #9
 8006bb8:	f04f 0301 	mov.w	r3, #1
 8006bbc:	6103      	str	r3, [r0, #16]
 8006bbe:	dd16      	ble.n	8006bee <__s2b+0x72>
 8006bc0:	f104 0909 	add.w	r9, r4, #9
 8006bc4:	46c8      	mov	r8, r9
 8006bc6:	442c      	add	r4, r5
 8006bc8:	f818 3b01 	ldrb.w	r3, [r8], #1
 8006bcc:	4601      	mov	r1, r0
 8006bce:	3b30      	subs	r3, #48	; 0x30
 8006bd0:	220a      	movs	r2, #10
 8006bd2:	4630      	mov	r0, r6
 8006bd4:	f7ff ff8c 	bl	8006af0 <__multadd>
 8006bd8:	45a0      	cmp	r8, r4
 8006bda:	d1f5      	bne.n	8006bc8 <__s2b+0x4c>
 8006bdc:	f1a5 0408 	sub.w	r4, r5, #8
 8006be0:	444c      	add	r4, r9
 8006be2:	1b2d      	subs	r5, r5, r4
 8006be4:	1963      	adds	r3, r4, r5
 8006be6:	42bb      	cmp	r3, r7
 8006be8:	db04      	blt.n	8006bf4 <__s2b+0x78>
 8006bea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006bee:	340a      	adds	r4, #10
 8006bf0:	2509      	movs	r5, #9
 8006bf2:	e7f6      	b.n	8006be2 <__s2b+0x66>
 8006bf4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006bf8:	4601      	mov	r1, r0
 8006bfa:	3b30      	subs	r3, #48	; 0x30
 8006bfc:	220a      	movs	r2, #10
 8006bfe:	4630      	mov	r0, r6
 8006c00:	f7ff ff76 	bl	8006af0 <__multadd>
 8006c04:	e7ee      	b.n	8006be4 <__s2b+0x68>
 8006c06:	bf00      	nop
 8006c08:	080094d8 	.word	0x080094d8
 8006c0c:	080095c8 	.word	0x080095c8

08006c10 <__hi0bits>:
 8006c10:	0c03      	lsrs	r3, r0, #16
 8006c12:	041b      	lsls	r3, r3, #16
 8006c14:	b9d3      	cbnz	r3, 8006c4c <__hi0bits+0x3c>
 8006c16:	0400      	lsls	r0, r0, #16
 8006c18:	2310      	movs	r3, #16
 8006c1a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8006c1e:	bf04      	itt	eq
 8006c20:	0200      	lsleq	r0, r0, #8
 8006c22:	3308      	addeq	r3, #8
 8006c24:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8006c28:	bf04      	itt	eq
 8006c2a:	0100      	lsleq	r0, r0, #4
 8006c2c:	3304      	addeq	r3, #4
 8006c2e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8006c32:	bf04      	itt	eq
 8006c34:	0080      	lsleq	r0, r0, #2
 8006c36:	3302      	addeq	r3, #2
 8006c38:	2800      	cmp	r0, #0
 8006c3a:	db05      	blt.n	8006c48 <__hi0bits+0x38>
 8006c3c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8006c40:	f103 0301 	add.w	r3, r3, #1
 8006c44:	bf08      	it	eq
 8006c46:	2320      	moveq	r3, #32
 8006c48:	4618      	mov	r0, r3
 8006c4a:	4770      	bx	lr
 8006c4c:	2300      	movs	r3, #0
 8006c4e:	e7e4      	b.n	8006c1a <__hi0bits+0xa>

08006c50 <__lo0bits>:
 8006c50:	6803      	ldr	r3, [r0, #0]
 8006c52:	f013 0207 	ands.w	r2, r3, #7
 8006c56:	4601      	mov	r1, r0
 8006c58:	d00b      	beq.n	8006c72 <__lo0bits+0x22>
 8006c5a:	07da      	lsls	r2, r3, #31
 8006c5c:	d423      	bmi.n	8006ca6 <__lo0bits+0x56>
 8006c5e:	0798      	lsls	r0, r3, #30
 8006c60:	bf49      	itett	mi
 8006c62:	085b      	lsrmi	r3, r3, #1
 8006c64:	089b      	lsrpl	r3, r3, #2
 8006c66:	2001      	movmi	r0, #1
 8006c68:	600b      	strmi	r3, [r1, #0]
 8006c6a:	bf5c      	itt	pl
 8006c6c:	600b      	strpl	r3, [r1, #0]
 8006c6e:	2002      	movpl	r0, #2
 8006c70:	4770      	bx	lr
 8006c72:	b298      	uxth	r0, r3
 8006c74:	b9a8      	cbnz	r0, 8006ca2 <__lo0bits+0x52>
 8006c76:	0c1b      	lsrs	r3, r3, #16
 8006c78:	2010      	movs	r0, #16
 8006c7a:	b2da      	uxtb	r2, r3
 8006c7c:	b90a      	cbnz	r2, 8006c82 <__lo0bits+0x32>
 8006c7e:	3008      	adds	r0, #8
 8006c80:	0a1b      	lsrs	r3, r3, #8
 8006c82:	071a      	lsls	r2, r3, #28
 8006c84:	bf04      	itt	eq
 8006c86:	091b      	lsreq	r3, r3, #4
 8006c88:	3004      	addeq	r0, #4
 8006c8a:	079a      	lsls	r2, r3, #30
 8006c8c:	bf04      	itt	eq
 8006c8e:	089b      	lsreq	r3, r3, #2
 8006c90:	3002      	addeq	r0, #2
 8006c92:	07da      	lsls	r2, r3, #31
 8006c94:	d403      	bmi.n	8006c9e <__lo0bits+0x4e>
 8006c96:	085b      	lsrs	r3, r3, #1
 8006c98:	f100 0001 	add.w	r0, r0, #1
 8006c9c:	d005      	beq.n	8006caa <__lo0bits+0x5a>
 8006c9e:	600b      	str	r3, [r1, #0]
 8006ca0:	4770      	bx	lr
 8006ca2:	4610      	mov	r0, r2
 8006ca4:	e7e9      	b.n	8006c7a <__lo0bits+0x2a>
 8006ca6:	2000      	movs	r0, #0
 8006ca8:	4770      	bx	lr
 8006caa:	2020      	movs	r0, #32
 8006cac:	4770      	bx	lr
	...

08006cb0 <__i2b>:
 8006cb0:	b510      	push	{r4, lr}
 8006cb2:	460c      	mov	r4, r1
 8006cb4:	2101      	movs	r1, #1
 8006cb6:	f7ff feb9 	bl	8006a2c <_Balloc>
 8006cba:	4602      	mov	r2, r0
 8006cbc:	b928      	cbnz	r0, 8006cca <__i2b+0x1a>
 8006cbe:	4b05      	ldr	r3, [pc, #20]	; (8006cd4 <__i2b+0x24>)
 8006cc0:	4805      	ldr	r0, [pc, #20]	; (8006cd8 <__i2b+0x28>)
 8006cc2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006cc6:	f000 ff17 	bl	8007af8 <__assert_func>
 8006cca:	2301      	movs	r3, #1
 8006ccc:	6144      	str	r4, [r0, #20]
 8006cce:	6103      	str	r3, [r0, #16]
 8006cd0:	bd10      	pop	{r4, pc}
 8006cd2:	bf00      	nop
 8006cd4:	080094d8 	.word	0x080094d8
 8006cd8:	080095c8 	.word	0x080095c8

08006cdc <__multiply>:
 8006cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ce0:	4691      	mov	r9, r2
 8006ce2:	690a      	ldr	r2, [r1, #16]
 8006ce4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006ce8:	429a      	cmp	r2, r3
 8006cea:	bfb8      	it	lt
 8006cec:	460b      	movlt	r3, r1
 8006cee:	460c      	mov	r4, r1
 8006cf0:	bfbc      	itt	lt
 8006cf2:	464c      	movlt	r4, r9
 8006cf4:	4699      	movlt	r9, r3
 8006cf6:	6927      	ldr	r7, [r4, #16]
 8006cf8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8006cfc:	68a3      	ldr	r3, [r4, #8]
 8006cfe:	6861      	ldr	r1, [r4, #4]
 8006d00:	eb07 060a 	add.w	r6, r7, sl
 8006d04:	42b3      	cmp	r3, r6
 8006d06:	b085      	sub	sp, #20
 8006d08:	bfb8      	it	lt
 8006d0a:	3101      	addlt	r1, #1
 8006d0c:	f7ff fe8e 	bl	8006a2c <_Balloc>
 8006d10:	b930      	cbnz	r0, 8006d20 <__multiply+0x44>
 8006d12:	4602      	mov	r2, r0
 8006d14:	4b44      	ldr	r3, [pc, #272]	; (8006e28 <__multiply+0x14c>)
 8006d16:	4845      	ldr	r0, [pc, #276]	; (8006e2c <__multiply+0x150>)
 8006d18:	f240 115d 	movw	r1, #349	; 0x15d
 8006d1c:	f000 feec 	bl	8007af8 <__assert_func>
 8006d20:	f100 0514 	add.w	r5, r0, #20
 8006d24:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006d28:	462b      	mov	r3, r5
 8006d2a:	2200      	movs	r2, #0
 8006d2c:	4543      	cmp	r3, r8
 8006d2e:	d321      	bcc.n	8006d74 <__multiply+0x98>
 8006d30:	f104 0314 	add.w	r3, r4, #20
 8006d34:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006d38:	f109 0314 	add.w	r3, r9, #20
 8006d3c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8006d40:	9202      	str	r2, [sp, #8]
 8006d42:	1b3a      	subs	r2, r7, r4
 8006d44:	3a15      	subs	r2, #21
 8006d46:	f022 0203 	bic.w	r2, r2, #3
 8006d4a:	3204      	adds	r2, #4
 8006d4c:	f104 0115 	add.w	r1, r4, #21
 8006d50:	428f      	cmp	r7, r1
 8006d52:	bf38      	it	cc
 8006d54:	2204      	movcc	r2, #4
 8006d56:	9201      	str	r2, [sp, #4]
 8006d58:	9a02      	ldr	r2, [sp, #8]
 8006d5a:	9303      	str	r3, [sp, #12]
 8006d5c:	429a      	cmp	r2, r3
 8006d5e:	d80c      	bhi.n	8006d7a <__multiply+0x9e>
 8006d60:	2e00      	cmp	r6, #0
 8006d62:	dd03      	ble.n	8006d6c <__multiply+0x90>
 8006d64:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006d68:	2b00      	cmp	r3, #0
 8006d6a:	d05a      	beq.n	8006e22 <__multiply+0x146>
 8006d6c:	6106      	str	r6, [r0, #16]
 8006d6e:	b005      	add	sp, #20
 8006d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d74:	f843 2b04 	str.w	r2, [r3], #4
 8006d78:	e7d8      	b.n	8006d2c <__multiply+0x50>
 8006d7a:	f8b3 a000 	ldrh.w	sl, [r3]
 8006d7e:	f1ba 0f00 	cmp.w	sl, #0
 8006d82:	d024      	beq.n	8006dce <__multiply+0xf2>
 8006d84:	f104 0e14 	add.w	lr, r4, #20
 8006d88:	46a9      	mov	r9, r5
 8006d8a:	f04f 0c00 	mov.w	ip, #0
 8006d8e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8006d92:	f8d9 1000 	ldr.w	r1, [r9]
 8006d96:	fa1f fb82 	uxth.w	fp, r2
 8006d9a:	b289      	uxth	r1, r1
 8006d9c:	fb0a 110b 	mla	r1, sl, fp, r1
 8006da0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8006da4:	f8d9 2000 	ldr.w	r2, [r9]
 8006da8:	4461      	add	r1, ip
 8006daa:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8006dae:	fb0a c20b 	mla	r2, sl, fp, ip
 8006db2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8006db6:	b289      	uxth	r1, r1
 8006db8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8006dbc:	4577      	cmp	r7, lr
 8006dbe:	f849 1b04 	str.w	r1, [r9], #4
 8006dc2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8006dc6:	d8e2      	bhi.n	8006d8e <__multiply+0xb2>
 8006dc8:	9a01      	ldr	r2, [sp, #4]
 8006dca:	f845 c002 	str.w	ip, [r5, r2]
 8006dce:	9a03      	ldr	r2, [sp, #12]
 8006dd0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8006dd4:	3304      	adds	r3, #4
 8006dd6:	f1b9 0f00 	cmp.w	r9, #0
 8006dda:	d020      	beq.n	8006e1e <__multiply+0x142>
 8006ddc:	6829      	ldr	r1, [r5, #0]
 8006dde:	f104 0c14 	add.w	ip, r4, #20
 8006de2:	46ae      	mov	lr, r5
 8006de4:	f04f 0a00 	mov.w	sl, #0
 8006de8:	f8bc b000 	ldrh.w	fp, [ip]
 8006dec:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8006df0:	fb09 220b 	mla	r2, r9, fp, r2
 8006df4:	4492      	add	sl, r2
 8006df6:	b289      	uxth	r1, r1
 8006df8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8006dfc:	f84e 1b04 	str.w	r1, [lr], #4
 8006e00:	f85c 2b04 	ldr.w	r2, [ip], #4
 8006e04:	f8be 1000 	ldrh.w	r1, [lr]
 8006e08:	0c12      	lsrs	r2, r2, #16
 8006e0a:	fb09 1102 	mla	r1, r9, r2, r1
 8006e0e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8006e12:	4567      	cmp	r7, ip
 8006e14:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006e18:	d8e6      	bhi.n	8006de8 <__multiply+0x10c>
 8006e1a:	9a01      	ldr	r2, [sp, #4]
 8006e1c:	50a9      	str	r1, [r5, r2]
 8006e1e:	3504      	adds	r5, #4
 8006e20:	e79a      	b.n	8006d58 <__multiply+0x7c>
 8006e22:	3e01      	subs	r6, #1
 8006e24:	e79c      	b.n	8006d60 <__multiply+0x84>
 8006e26:	bf00      	nop
 8006e28:	080094d8 	.word	0x080094d8
 8006e2c:	080095c8 	.word	0x080095c8

08006e30 <__pow5mult>:
 8006e30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006e34:	4615      	mov	r5, r2
 8006e36:	f012 0203 	ands.w	r2, r2, #3
 8006e3a:	4606      	mov	r6, r0
 8006e3c:	460f      	mov	r7, r1
 8006e3e:	d007      	beq.n	8006e50 <__pow5mult+0x20>
 8006e40:	4c25      	ldr	r4, [pc, #148]	; (8006ed8 <__pow5mult+0xa8>)
 8006e42:	3a01      	subs	r2, #1
 8006e44:	2300      	movs	r3, #0
 8006e46:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006e4a:	f7ff fe51 	bl	8006af0 <__multadd>
 8006e4e:	4607      	mov	r7, r0
 8006e50:	10ad      	asrs	r5, r5, #2
 8006e52:	d03d      	beq.n	8006ed0 <__pow5mult+0xa0>
 8006e54:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8006e56:	b97c      	cbnz	r4, 8006e78 <__pow5mult+0x48>
 8006e58:	2010      	movs	r0, #16
 8006e5a:	f7ff fdbf 	bl	80069dc <malloc>
 8006e5e:	4602      	mov	r2, r0
 8006e60:	6270      	str	r0, [r6, #36]	; 0x24
 8006e62:	b928      	cbnz	r0, 8006e70 <__pow5mult+0x40>
 8006e64:	4b1d      	ldr	r3, [pc, #116]	; (8006edc <__pow5mult+0xac>)
 8006e66:	481e      	ldr	r0, [pc, #120]	; (8006ee0 <__pow5mult+0xb0>)
 8006e68:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8006e6c:	f000 fe44 	bl	8007af8 <__assert_func>
 8006e70:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8006e74:	6004      	str	r4, [r0, #0]
 8006e76:	60c4      	str	r4, [r0, #12]
 8006e78:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8006e7c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006e80:	b94c      	cbnz	r4, 8006e96 <__pow5mult+0x66>
 8006e82:	f240 2171 	movw	r1, #625	; 0x271
 8006e86:	4630      	mov	r0, r6
 8006e88:	f7ff ff12 	bl	8006cb0 <__i2b>
 8006e8c:	2300      	movs	r3, #0
 8006e8e:	f8c8 0008 	str.w	r0, [r8, #8]
 8006e92:	4604      	mov	r4, r0
 8006e94:	6003      	str	r3, [r0, #0]
 8006e96:	f04f 0900 	mov.w	r9, #0
 8006e9a:	07eb      	lsls	r3, r5, #31
 8006e9c:	d50a      	bpl.n	8006eb4 <__pow5mult+0x84>
 8006e9e:	4639      	mov	r1, r7
 8006ea0:	4622      	mov	r2, r4
 8006ea2:	4630      	mov	r0, r6
 8006ea4:	f7ff ff1a 	bl	8006cdc <__multiply>
 8006ea8:	4639      	mov	r1, r7
 8006eaa:	4680      	mov	r8, r0
 8006eac:	4630      	mov	r0, r6
 8006eae:	f7ff fdfd 	bl	8006aac <_Bfree>
 8006eb2:	4647      	mov	r7, r8
 8006eb4:	106d      	asrs	r5, r5, #1
 8006eb6:	d00b      	beq.n	8006ed0 <__pow5mult+0xa0>
 8006eb8:	6820      	ldr	r0, [r4, #0]
 8006eba:	b938      	cbnz	r0, 8006ecc <__pow5mult+0x9c>
 8006ebc:	4622      	mov	r2, r4
 8006ebe:	4621      	mov	r1, r4
 8006ec0:	4630      	mov	r0, r6
 8006ec2:	f7ff ff0b 	bl	8006cdc <__multiply>
 8006ec6:	6020      	str	r0, [r4, #0]
 8006ec8:	f8c0 9000 	str.w	r9, [r0]
 8006ecc:	4604      	mov	r4, r0
 8006ece:	e7e4      	b.n	8006e9a <__pow5mult+0x6a>
 8006ed0:	4638      	mov	r0, r7
 8006ed2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006ed6:	bf00      	nop
 8006ed8:	08009718 	.word	0x08009718
 8006edc:	08009466 	.word	0x08009466
 8006ee0:	080095c8 	.word	0x080095c8

08006ee4 <__lshift>:
 8006ee4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006ee8:	460c      	mov	r4, r1
 8006eea:	6849      	ldr	r1, [r1, #4]
 8006eec:	6923      	ldr	r3, [r4, #16]
 8006eee:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8006ef2:	68a3      	ldr	r3, [r4, #8]
 8006ef4:	4607      	mov	r7, r0
 8006ef6:	4691      	mov	r9, r2
 8006ef8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006efc:	f108 0601 	add.w	r6, r8, #1
 8006f00:	42b3      	cmp	r3, r6
 8006f02:	db0b      	blt.n	8006f1c <__lshift+0x38>
 8006f04:	4638      	mov	r0, r7
 8006f06:	f7ff fd91 	bl	8006a2c <_Balloc>
 8006f0a:	4605      	mov	r5, r0
 8006f0c:	b948      	cbnz	r0, 8006f22 <__lshift+0x3e>
 8006f0e:	4602      	mov	r2, r0
 8006f10:	4b2a      	ldr	r3, [pc, #168]	; (8006fbc <__lshift+0xd8>)
 8006f12:	482b      	ldr	r0, [pc, #172]	; (8006fc0 <__lshift+0xdc>)
 8006f14:	f240 11d9 	movw	r1, #473	; 0x1d9
 8006f18:	f000 fdee 	bl	8007af8 <__assert_func>
 8006f1c:	3101      	adds	r1, #1
 8006f1e:	005b      	lsls	r3, r3, #1
 8006f20:	e7ee      	b.n	8006f00 <__lshift+0x1c>
 8006f22:	2300      	movs	r3, #0
 8006f24:	f100 0114 	add.w	r1, r0, #20
 8006f28:	f100 0210 	add.w	r2, r0, #16
 8006f2c:	4618      	mov	r0, r3
 8006f2e:	4553      	cmp	r3, sl
 8006f30:	db37      	blt.n	8006fa2 <__lshift+0xbe>
 8006f32:	6920      	ldr	r0, [r4, #16]
 8006f34:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006f38:	f104 0314 	add.w	r3, r4, #20
 8006f3c:	f019 091f 	ands.w	r9, r9, #31
 8006f40:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8006f44:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8006f48:	d02f      	beq.n	8006faa <__lshift+0xc6>
 8006f4a:	f1c9 0e20 	rsb	lr, r9, #32
 8006f4e:	468a      	mov	sl, r1
 8006f50:	f04f 0c00 	mov.w	ip, #0
 8006f54:	681a      	ldr	r2, [r3, #0]
 8006f56:	fa02 f209 	lsl.w	r2, r2, r9
 8006f5a:	ea42 020c 	orr.w	r2, r2, ip
 8006f5e:	f84a 2b04 	str.w	r2, [sl], #4
 8006f62:	f853 2b04 	ldr.w	r2, [r3], #4
 8006f66:	4298      	cmp	r0, r3
 8006f68:	fa22 fc0e 	lsr.w	ip, r2, lr
 8006f6c:	d8f2      	bhi.n	8006f54 <__lshift+0x70>
 8006f6e:	1b03      	subs	r3, r0, r4
 8006f70:	3b15      	subs	r3, #21
 8006f72:	f023 0303 	bic.w	r3, r3, #3
 8006f76:	3304      	adds	r3, #4
 8006f78:	f104 0215 	add.w	r2, r4, #21
 8006f7c:	4290      	cmp	r0, r2
 8006f7e:	bf38      	it	cc
 8006f80:	2304      	movcc	r3, #4
 8006f82:	f841 c003 	str.w	ip, [r1, r3]
 8006f86:	f1bc 0f00 	cmp.w	ip, #0
 8006f8a:	d001      	beq.n	8006f90 <__lshift+0xac>
 8006f8c:	f108 0602 	add.w	r6, r8, #2
 8006f90:	3e01      	subs	r6, #1
 8006f92:	4638      	mov	r0, r7
 8006f94:	612e      	str	r6, [r5, #16]
 8006f96:	4621      	mov	r1, r4
 8006f98:	f7ff fd88 	bl	8006aac <_Bfree>
 8006f9c:	4628      	mov	r0, r5
 8006f9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006fa2:	f842 0f04 	str.w	r0, [r2, #4]!
 8006fa6:	3301      	adds	r3, #1
 8006fa8:	e7c1      	b.n	8006f2e <__lshift+0x4a>
 8006faa:	3904      	subs	r1, #4
 8006fac:	f853 2b04 	ldr.w	r2, [r3], #4
 8006fb0:	f841 2f04 	str.w	r2, [r1, #4]!
 8006fb4:	4298      	cmp	r0, r3
 8006fb6:	d8f9      	bhi.n	8006fac <__lshift+0xc8>
 8006fb8:	e7ea      	b.n	8006f90 <__lshift+0xac>
 8006fba:	bf00      	nop
 8006fbc:	080094d8 	.word	0x080094d8
 8006fc0:	080095c8 	.word	0x080095c8

08006fc4 <__mcmp>:
 8006fc4:	b530      	push	{r4, r5, lr}
 8006fc6:	6902      	ldr	r2, [r0, #16]
 8006fc8:	690c      	ldr	r4, [r1, #16]
 8006fca:	1b12      	subs	r2, r2, r4
 8006fcc:	d10e      	bne.n	8006fec <__mcmp+0x28>
 8006fce:	f100 0314 	add.w	r3, r0, #20
 8006fd2:	3114      	adds	r1, #20
 8006fd4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8006fd8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8006fdc:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8006fe0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8006fe4:	42a5      	cmp	r5, r4
 8006fe6:	d003      	beq.n	8006ff0 <__mcmp+0x2c>
 8006fe8:	d305      	bcc.n	8006ff6 <__mcmp+0x32>
 8006fea:	2201      	movs	r2, #1
 8006fec:	4610      	mov	r0, r2
 8006fee:	bd30      	pop	{r4, r5, pc}
 8006ff0:	4283      	cmp	r3, r0
 8006ff2:	d3f3      	bcc.n	8006fdc <__mcmp+0x18>
 8006ff4:	e7fa      	b.n	8006fec <__mcmp+0x28>
 8006ff6:	f04f 32ff 	mov.w	r2, #4294967295
 8006ffa:	e7f7      	b.n	8006fec <__mcmp+0x28>

08006ffc <__mdiff>:
 8006ffc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007000:	460c      	mov	r4, r1
 8007002:	4606      	mov	r6, r0
 8007004:	4611      	mov	r1, r2
 8007006:	4620      	mov	r0, r4
 8007008:	4690      	mov	r8, r2
 800700a:	f7ff ffdb 	bl	8006fc4 <__mcmp>
 800700e:	1e05      	subs	r5, r0, #0
 8007010:	d110      	bne.n	8007034 <__mdiff+0x38>
 8007012:	4629      	mov	r1, r5
 8007014:	4630      	mov	r0, r6
 8007016:	f7ff fd09 	bl	8006a2c <_Balloc>
 800701a:	b930      	cbnz	r0, 800702a <__mdiff+0x2e>
 800701c:	4b3a      	ldr	r3, [pc, #232]	; (8007108 <__mdiff+0x10c>)
 800701e:	4602      	mov	r2, r0
 8007020:	f240 2132 	movw	r1, #562	; 0x232
 8007024:	4839      	ldr	r0, [pc, #228]	; (800710c <__mdiff+0x110>)
 8007026:	f000 fd67 	bl	8007af8 <__assert_func>
 800702a:	2301      	movs	r3, #1
 800702c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007030:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007034:	bfa4      	itt	ge
 8007036:	4643      	movge	r3, r8
 8007038:	46a0      	movge	r8, r4
 800703a:	4630      	mov	r0, r6
 800703c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8007040:	bfa6      	itte	ge
 8007042:	461c      	movge	r4, r3
 8007044:	2500      	movge	r5, #0
 8007046:	2501      	movlt	r5, #1
 8007048:	f7ff fcf0 	bl	8006a2c <_Balloc>
 800704c:	b920      	cbnz	r0, 8007058 <__mdiff+0x5c>
 800704e:	4b2e      	ldr	r3, [pc, #184]	; (8007108 <__mdiff+0x10c>)
 8007050:	4602      	mov	r2, r0
 8007052:	f44f 7110 	mov.w	r1, #576	; 0x240
 8007056:	e7e5      	b.n	8007024 <__mdiff+0x28>
 8007058:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800705c:	6926      	ldr	r6, [r4, #16]
 800705e:	60c5      	str	r5, [r0, #12]
 8007060:	f104 0914 	add.w	r9, r4, #20
 8007064:	f108 0514 	add.w	r5, r8, #20
 8007068:	f100 0e14 	add.w	lr, r0, #20
 800706c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8007070:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8007074:	f108 0210 	add.w	r2, r8, #16
 8007078:	46f2      	mov	sl, lr
 800707a:	2100      	movs	r1, #0
 800707c:	f859 3b04 	ldr.w	r3, [r9], #4
 8007080:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8007084:	fa1f f883 	uxth.w	r8, r3
 8007088:	fa11 f18b 	uxtah	r1, r1, fp
 800708c:	0c1b      	lsrs	r3, r3, #16
 800708e:	eba1 0808 	sub.w	r8, r1, r8
 8007092:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8007096:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800709a:	fa1f f888 	uxth.w	r8, r8
 800709e:	1419      	asrs	r1, r3, #16
 80070a0:	454e      	cmp	r6, r9
 80070a2:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80070a6:	f84a 3b04 	str.w	r3, [sl], #4
 80070aa:	d8e7      	bhi.n	800707c <__mdiff+0x80>
 80070ac:	1b33      	subs	r3, r6, r4
 80070ae:	3b15      	subs	r3, #21
 80070b0:	f023 0303 	bic.w	r3, r3, #3
 80070b4:	3304      	adds	r3, #4
 80070b6:	3415      	adds	r4, #21
 80070b8:	42a6      	cmp	r6, r4
 80070ba:	bf38      	it	cc
 80070bc:	2304      	movcc	r3, #4
 80070be:	441d      	add	r5, r3
 80070c0:	4473      	add	r3, lr
 80070c2:	469e      	mov	lr, r3
 80070c4:	462e      	mov	r6, r5
 80070c6:	4566      	cmp	r6, ip
 80070c8:	d30e      	bcc.n	80070e8 <__mdiff+0xec>
 80070ca:	f10c 0203 	add.w	r2, ip, #3
 80070ce:	1b52      	subs	r2, r2, r5
 80070d0:	f022 0203 	bic.w	r2, r2, #3
 80070d4:	3d03      	subs	r5, #3
 80070d6:	45ac      	cmp	ip, r5
 80070d8:	bf38      	it	cc
 80070da:	2200      	movcc	r2, #0
 80070dc:	441a      	add	r2, r3
 80070de:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 80070e2:	b17b      	cbz	r3, 8007104 <__mdiff+0x108>
 80070e4:	6107      	str	r7, [r0, #16]
 80070e6:	e7a3      	b.n	8007030 <__mdiff+0x34>
 80070e8:	f856 8b04 	ldr.w	r8, [r6], #4
 80070ec:	fa11 f288 	uxtah	r2, r1, r8
 80070f0:	1414      	asrs	r4, r2, #16
 80070f2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80070f6:	b292      	uxth	r2, r2
 80070f8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80070fc:	f84e 2b04 	str.w	r2, [lr], #4
 8007100:	1421      	asrs	r1, r4, #16
 8007102:	e7e0      	b.n	80070c6 <__mdiff+0xca>
 8007104:	3f01      	subs	r7, #1
 8007106:	e7ea      	b.n	80070de <__mdiff+0xe2>
 8007108:	080094d8 	.word	0x080094d8
 800710c:	080095c8 	.word	0x080095c8

08007110 <__ulp>:
 8007110:	b082      	sub	sp, #8
 8007112:	ed8d 0b00 	vstr	d0, [sp]
 8007116:	9b01      	ldr	r3, [sp, #4]
 8007118:	4912      	ldr	r1, [pc, #72]	; (8007164 <__ulp+0x54>)
 800711a:	4019      	ands	r1, r3
 800711c:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8007120:	2900      	cmp	r1, #0
 8007122:	dd05      	ble.n	8007130 <__ulp+0x20>
 8007124:	2200      	movs	r2, #0
 8007126:	460b      	mov	r3, r1
 8007128:	ec43 2b10 	vmov	d0, r2, r3
 800712c:	b002      	add	sp, #8
 800712e:	4770      	bx	lr
 8007130:	4249      	negs	r1, r1
 8007132:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8007136:	ea4f 5021 	mov.w	r0, r1, asr #20
 800713a:	f04f 0200 	mov.w	r2, #0
 800713e:	f04f 0300 	mov.w	r3, #0
 8007142:	da04      	bge.n	800714e <__ulp+0x3e>
 8007144:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8007148:	fa41 f300 	asr.w	r3, r1, r0
 800714c:	e7ec      	b.n	8007128 <__ulp+0x18>
 800714e:	f1a0 0114 	sub.w	r1, r0, #20
 8007152:	291e      	cmp	r1, #30
 8007154:	bfda      	itte	le
 8007156:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800715a:	fa20 f101 	lsrle.w	r1, r0, r1
 800715e:	2101      	movgt	r1, #1
 8007160:	460a      	mov	r2, r1
 8007162:	e7e1      	b.n	8007128 <__ulp+0x18>
 8007164:	7ff00000 	.word	0x7ff00000

08007168 <__b2d>:
 8007168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800716a:	6905      	ldr	r5, [r0, #16]
 800716c:	f100 0714 	add.w	r7, r0, #20
 8007170:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8007174:	1f2e      	subs	r6, r5, #4
 8007176:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800717a:	4620      	mov	r0, r4
 800717c:	f7ff fd48 	bl	8006c10 <__hi0bits>
 8007180:	f1c0 0320 	rsb	r3, r0, #32
 8007184:	280a      	cmp	r0, #10
 8007186:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8007204 <__b2d+0x9c>
 800718a:	600b      	str	r3, [r1, #0]
 800718c:	dc14      	bgt.n	80071b8 <__b2d+0x50>
 800718e:	f1c0 0e0b 	rsb	lr, r0, #11
 8007192:	fa24 f10e 	lsr.w	r1, r4, lr
 8007196:	42b7      	cmp	r7, r6
 8007198:	ea41 030c 	orr.w	r3, r1, ip
 800719c:	bf34      	ite	cc
 800719e:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 80071a2:	2100      	movcs	r1, #0
 80071a4:	3015      	adds	r0, #21
 80071a6:	fa04 f000 	lsl.w	r0, r4, r0
 80071aa:	fa21 f10e 	lsr.w	r1, r1, lr
 80071ae:	ea40 0201 	orr.w	r2, r0, r1
 80071b2:	ec43 2b10 	vmov	d0, r2, r3
 80071b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80071b8:	42b7      	cmp	r7, r6
 80071ba:	bf3a      	itte	cc
 80071bc:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 80071c0:	f1a5 0608 	subcc.w	r6, r5, #8
 80071c4:	2100      	movcs	r1, #0
 80071c6:	380b      	subs	r0, #11
 80071c8:	d017      	beq.n	80071fa <__b2d+0x92>
 80071ca:	f1c0 0c20 	rsb	ip, r0, #32
 80071ce:	fa04 f500 	lsl.w	r5, r4, r0
 80071d2:	42be      	cmp	r6, r7
 80071d4:	fa21 f40c 	lsr.w	r4, r1, ip
 80071d8:	ea45 0504 	orr.w	r5, r5, r4
 80071dc:	bf8c      	ite	hi
 80071de:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 80071e2:	2400      	movls	r4, #0
 80071e4:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 80071e8:	fa01 f000 	lsl.w	r0, r1, r0
 80071ec:	fa24 f40c 	lsr.w	r4, r4, ip
 80071f0:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80071f4:	ea40 0204 	orr.w	r2, r0, r4
 80071f8:	e7db      	b.n	80071b2 <__b2d+0x4a>
 80071fa:	ea44 030c 	orr.w	r3, r4, ip
 80071fe:	460a      	mov	r2, r1
 8007200:	e7d7      	b.n	80071b2 <__b2d+0x4a>
 8007202:	bf00      	nop
 8007204:	3ff00000 	.word	0x3ff00000

08007208 <__d2b>:
 8007208:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800720c:	4689      	mov	r9, r1
 800720e:	2101      	movs	r1, #1
 8007210:	ec57 6b10 	vmov	r6, r7, d0
 8007214:	4690      	mov	r8, r2
 8007216:	f7ff fc09 	bl	8006a2c <_Balloc>
 800721a:	4604      	mov	r4, r0
 800721c:	b930      	cbnz	r0, 800722c <__d2b+0x24>
 800721e:	4602      	mov	r2, r0
 8007220:	4b25      	ldr	r3, [pc, #148]	; (80072b8 <__d2b+0xb0>)
 8007222:	4826      	ldr	r0, [pc, #152]	; (80072bc <__d2b+0xb4>)
 8007224:	f240 310a 	movw	r1, #778	; 0x30a
 8007228:	f000 fc66 	bl	8007af8 <__assert_func>
 800722c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8007230:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8007234:	bb35      	cbnz	r5, 8007284 <__d2b+0x7c>
 8007236:	2e00      	cmp	r6, #0
 8007238:	9301      	str	r3, [sp, #4]
 800723a:	d028      	beq.n	800728e <__d2b+0x86>
 800723c:	4668      	mov	r0, sp
 800723e:	9600      	str	r6, [sp, #0]
 8007240:	f7ff fd06 	bl	8006c50 <__lo0bits>
 8007244:	9900      	ldr	r1, [sp, #0]
 8007246:	b300      	cbz	r0, 800728a <__d2b+0x82>
 8007248:	9a01      	ldr	r2, [sp, #4]
 800724a:	f1c0 0320 	rsb	r3, r0, #32
 800724e:	fa02 f303 	lsl.w	r3, r2, r3
 8007252:	430b      	orrs	r3, r1
 8007254:	40c2      	lsrs	r2, r0
 8007256:	6163      	str	r3, [r4, #20]
 8007258:	9201      	str	r2, [sp, #4]
 800725a:	9b01      	ldr	r3, [sp, #4]
 800725c:	61a3      	str	r3, [r4, #24]
 800725e:	2b00      	cmp	r3, #0
 8007260:	bf14      	ite	ne
 8007262:	2202      	movne	r2, #2
 8007264:	2201      	moveq	r2, #1
 8007266:	6122      	str	r2, [r4, #16]
 8007268:	b1d5      	cbz	r5, 80072a0 <__d2b+0x98>
 800726a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800726e:	4405      	add	r5, r0
 8007270:	f8c9 5000 	str.w	r5, [r9]
 8007274:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8007278:	f8c8 0000 	str.w	r0, [r8]
 800727c:	4620      	mov	r0, r4
 800727e:	b003      	add	sp, #12
 8007280:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007284:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007288:	e7d5      	b.n	8007236 <__d2b+0x2e>
 800728a:	6161      	str	r1, [r4, #20]
 800728c:	e7e5      	b.n	800725a <__d2b+0x52>
 800728e:	a801      	add	r0, sp, #4
 8007290:	f7ff fcde 	bl	8006c50 <__lo0bits>
 8007294:	9b01      	ldr	r3, [sp, #4]
 8007296:	6163      	str	r3, [r4, #20]
 8007298:	2201      	movs	r2, #1
 800729a:	6122      	str	r2, [r4, #16]
 800729c:	3020      	adds	r0, #32
 800729e:	e7e3      	b.n	8007268 <__d2b+0x60>
 80072a0:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80072a4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80072a8:	f8c9 0000 	str.w	r0, [r9]
 80072ac:	6918      	ldr	r0, [r3, #16]
 80072ae:	f7ff fcaf 	bl	8006c10 <__hi0bits>
 80072b2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80072b6:	e7df      	b.n	8007278 <__d2b+0x70>
 80072b8:	080094d8 	.word	0x080094d8
 80072bc:	080095c8 	.word	0x080095c8

080072c0 <__ratio>:
 80072c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072c4:	4688      	mov	r8, r1
 80072c6:	4669      	mov	r1, sp
 80072c8:	4681      	mov	r9, r0
 80072ca:	f7ff ff4d 	bl	8007168 <__b2d>
 80072ce:	a901      	add	r1, sp, #4
 80072d0:	4640      	mov	r0, r8
 80072d2:	ec55 4b10 	vmov	r4, r5, d0
 80072d6:	f7ff ff47 	bl	8007168 <__b2d>
 80072da:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80072de:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80072e2:	eba3 0c02 	sub.w	ip, r3, r2
 80072e6:	e9dd 3200 	ldrd	r3, r2, [sp]
 80072ea:	1a9b      	subs	r3, r3, r2
 80072ec:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80072f0:	ec51 0b10 	vmov	r0, r1, d0
 80072f4:	2b00      	cmp	r3, #0
 80072f6:	bfd6      	itet	le
 80072f8:	460a      	movle	r2, r1
 80072fa:	462a      	movgt	r2, r5
 80072fc:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8007300:	468b      	mov	fp, r1
 8007302:	462f      	mov	r7, r5
 8007304:	bfd4      	ite	le
 8007306:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800730a:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800730e:	4620      	mov	r0, r4
 8007310:	ee10 2a10 	vmov	r2, s0
 8007314:	465b      	mov	r3, fp
 8007316:	4639      	mov	r1, r7
 8007318:	f7f9 faa0 	bl	800085c <__aeabi_ddiv>
 800731c:	ec41 0b10 	vmov	d0, r0, r1
 8007320:	b003      	add	sp, #12
 8007322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007326 <__copybits>:
 8007326:	3901      	subs	r1, #1
 8007328:	b570      	push	{r4, r5, r6, lr}
 800732a:	1149      	asrs	r1, r1, #5
 800732c:	6914      	ldr	r4, [r2, #16]
 800732e:	3101      	adds	r1, #1
 8007330:	f102 0314 	add.w	r3, r2, #20
 8007334:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8007338:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800733c:	1f05      	subs	r5, r0, #4
 800733e:	42a3      	cmp	r3, r4
 8007340:	d30c      	bcc.n	800735c <__copybits+0x36>
 8007342:	1aa3      	subs	r3, r4, r2
 8007344:	3b11      	subs	r3, #17
 8007346:	f023 0303 	bic.w	r3, r3, #3
 800734a:	3211      	adds	r2, #17
 800734c:	42a2      	cmp	r2, r4
 800734e:	bf88      	it	hi
 8007350:	2300      	movhi	r3, #0
 8007352:	4418      	add	r0, r3
 8007354:	2300      	movs	r3, #0
 8007356:	4288      	cmp	r0, r1
 8007358:	d305      	bcc.n	8007366 <__copybits+0x40>
 800735a:	bd70      	pop	{r4, r5, r6, pc}
 800735c:	f853 6b04 	ldr.w	r6, [r3], #4
 8007360:	f845 6f04 	str.w	r6, [r5, #4]!
 8007364:	e7eb      	b.n	800733e <__copybits+0x18>
 8007366:	f840 3b04 	str.w	r3, [r0], #4
 800736a:	e7f4      	b.n	8007356 <__copybits+0x30>

0800736c <__any_on>:
 800736c:	f100 0214 	add.w	r2, r0, #20
 8007370:	6900      	ldr	r0, [r0, #16]
 8007372:	114b      	asrs	r3, r1, #5
 8007374:	4298      	cmp	r0, r3
 8007376:	b510      	push	{r4, lr}
 8007378:	db11      	blt.n	800739e <__any_on+0x32>
 800737a:	dd0a      	ble.n	8007392 <__any_on+0x26>
 800737c:	f011 011f 	ands.w	r1, r1, #31
 8007380:	d007      	beq.n	8007392 <__any_on+0x26>
 8007382:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8007386:	fa24 f001 	lsr.w	r0, r4, r1
 800738a:	fa00 f101 	lsl.w	r1, r0, r1
 800738e:	428c      	cmp	r4, r1
 8007390:	d10b      	bne.n	80073aa <__any_on+0x3e>
 8007392:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8007396:	4293      	cmp	r3, r2
 8007398:	d803      	bhi.n	80073a2 <__any_on+0x36>
 800739a:	2000      	movs	r0, #0
 800739c:	bd10      	pop	{r4, pc}
 800739e:	4603      	mov	r3, r0
 80073a0:	e7f7      	b.n	8007392 <__any_on+0x26>
 80073a2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80073a6:	2900      	cmp	r1, #0
 80073a8:	d0f5      	beq.n	8007396 <__any_on+0x2a>
 80073aa:	2001      	movs	r0, #1
 80073ac:	e7f6      	b.n	800739c <__any_on+0x30>

080073ae <_calloc_r>:
 80073ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80073b0:	fba1 2402 	umull	r2, r4, r1, r2
 80073b4:	b94c      	cbnz	r4, 80073ca <_calloc_r+0x1c>
 80073b6:	4611      	mov	r1, r2
 80073b8:	9201      	str	r2, [sp, #4]
 80073ba:	f000 f87b 	bl	80074b4 <_malloc_r>
 80073be:	9a01      	ldr	r2, [sp, #4]
 80073c0:	4605      	mov	r5, r0
 80073c2:	b930      	cbnz	r0, 80073d2 <_calloc_r+0x24>
 80073c4:	4628      	mov	r0, r5
 80073c6:	b003      	add	sp, #12
 80073c8:	bd30      	pop	{r4, r5, pc}
 80073ca:	220c      	movs	r2, #12
 80073cc:	6002      	str	r2, [r0, #0]
 80073ce:	2500      	movs	r5, #0
 80073d0:	e7f8      	b.n	80073c4 <_calloc_r+0x16>
 80073d2:	4621      	mov	r1, r4
 80073d4:	f7fc fac8 	bl	8003968 <memset>
 80073d8:	e7f4      	b.n	80073c4 <_calloc_r+0x16>
	...

080073dc <_free_r>:
 80073dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80073de:	2900      	cmp	r1, #0
 80073e0:	d044      	beq.n	800746c <_free_r+0x90>
 80073e2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80073e6:	9001      	str	r0, [sp, #4]
 80073e8:	2b00      	cmp	r3, #0
 80073ea:	f1a1 0404 	sub.w	r4, r1, #4
 80073ee:	bfb8      	it	lt
 80073f0:	18e4      	addlt	r4, r4, r3
 80073f2:	f000 fd15 	bl	8007e20 <__malloc_lock>
 80073f6:	4a1e      	ldr	r2, [pc, #120]	; (8007470 <_free_r+0x94>)
 80073f8:	9801      	ldr	r0, [sp, #4]
 80073fa:	6813      	ldr	r3, [r2, #0]
 80073fc:	b933      	cbnz	r3, 800740c <_free_r+0x30>
 80073fe:	6063      	str	r3, [r4, #4]
 8007400:	6014      	str	r4, [r2, #0]
 8007402:	b003      	add	sp, #12
 8007404:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8007408:	f000 bd10 	b.w	8007e2c <__malloc_unlock>
 800740c:	42a3      	cmp	r3, r4
 800740e:	d908      	bls.n	8007422 <_free_r+0x46>
 8007410:	6825      	ldr	r5, [r4, #0]
 8007412:	1961      	adds	r1, r4, r5
 8007414:	428b      	cmp	r3, r1
 8007416:	bf01      	itttt	eq
 8007418:	6819      	ldreq	r1, [r3, #0]
 800741a:	685b      	ldreq	r3, [r3, #4]
 800741c:	1949      	addeq	r1, r1, r5
 800741e:	6021      	streq	r1, [r4, #0]
 8007420:	e7ed      	b.n	80073fe <_free_r+0x22>
 8007422:	461a      	mov	r2, r3
 8007424:	685b      	ldr	r3, [r3, #4]
 8007426:	b10b      	cbz	r3, 800742c <_free_r+0x50>
 8007428:	42a3      	cmp	r3, r4
 800742a:	d9fa      	bls.n	8007422 <_free_r+0x46>
 800742c:	6811      	ldr	r1, [r2, #0]
 800742e:	1855      	adds	r5, r2, r1
 8007430:	42a5      	cmp	r5, r4
 8007432:	d10b      	bne.n	800744c <_free_r+0x70>
 8007434:	6824      	ldr	r4, [r4, #0]
 8007436:	4421      	add	r1, r4
 8007438:	1854      	adds	r4, r2, r1
 800743a:	42a3      	cmp	r3, r4
 800743c:	6011      	str	r1, [r2, #0]
 800743e:	d1e0      	bne.n	8007402 <_free_r+0x26>
 8007440:	681c      	ldr	r4, [r3, #0]
 8007442:	685b      	ldr	r3, [r3, #4]
 8007444:	6053      	str	r3, [r2, #4]
 8007446:	4421      	add	r1, r4
 8007448:	6011      	str	r1, [r2, #0]
 800744a:	e7da      	b.n	8007402 <_free_r+0x26>
 800744c:	d902      	bls.n	8007454 <_free_r+0x78>
 800744e:	230c      	movs	r3, #12
 8007450:	6003      	str	r3, [r0, #0]
 8007452:	e7d6      	b.n	8007402 <_free_r+0x26>
 8007454:	6825      	ldr	r5, [r4, #0]
 8007456:	1961      	adds	r1, r4, r5
 8007458:	428b      	cmp	r3, r1
 800745a:	bf04      	itt	eq
 800745c:	6819      	ldreq	r1, [r3, #0]
 800745e:	685b      	ldreq	r3, [r3, #4]
 8007460:	6063      	str	r3, [r4, #4]
 8007462:	bf04      	itt	eq
 8007464:	1949      	addeq	r1, r1, r5
 8007466:	6021      	streq	r1, [r4, #0]
 8007468:	6054      	str	r4, [r2, #4]
 800746a:	e7ca      	b.n	8007402 <_free_r+0x26>
 800746c:	b003      	add	sp, #12
 800746e:	bd30      	pop	{r4, r5, pc}
 8007470:	20000350 	.word	0x20000350

08007474 <sbrk_aligned>:
 8007474:	b570      	push	{r4, r5, r6, lr}
 8007476:	4e0e      	ldr	r6, [pc, #56]	; (80074b0 <sbrk_aligned+0x3c>)
 8007478:	460c      	mov	r4, r1
 800747a:	6831      	ldr	r1, [r6, #0]
 800747c:	4605      	mov	r5, r0
 800747e:	b911      	cbnz	r1, 8007486 <sbrk_aligned+0x12>
 8007480:	f000 f9f2 	bl	8007868 <_sbrk_r>
 8007484:	6030      	str	r0, [r6, #0]
 8007486:	4621      	mov	r1, r4
 8007488:	4628      	mov	r0, r5
 800748a:	f000 f9ed 	bl	8007868 <_sbrk_r>
 800748e:	1c43      	adds	r3, r0, #1
 8007490:	d00a      	beq.n	80074a8 <sbrk_aligned+0x34>
 8007492:	1cc4      	adds	r4, r0, #3
 8007494:	f024 0403 	bic.w	r4, r4, #3
 8007498:	42a0      	cmp	r0, r4
 800749a:	d007      	beq.n	80074ac <sbrk_aligned+0x38>
 800749c:	1a21      	subs	r1, r4, r0
 800749e:	4628      	mov	r0, r5
 80074a0:	f000 f9e2 	bl	8007868 <_sbrk_r>
 80074a4:	3001      	adds	r0, #1
 80074a6:	d101      	bne.n	80074ac <sbrk_aligned+0x38>
 80074a8:	f04f 34ff 	mov.w	r4, #4294967295
 80074ac:	4620      	mov	r0, r4
 80074ae:	bd70      	pop	{r4, r5, r6, pc}
 80074b0:	20000354 	.word	0x20000354

080074b4 <_malloc_r>:
 80074b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80074b8:	1ccd      	adds	r5, r1, #3
 80074ba:	f025 0503 	bic.w	r5, r5, #3
 80074be:	3508      	adds	r5, #8
 80074c0:	2d0c      	cmp	r5, #12
 80074c2:	bf38      	it	cc
 80074c4:	250c      	movcc	r5, #12
 80074c6:	2d00      	cmp	r5, #0
 80074c8:	4607      	mov	r7, r0
 80074ca:	db01      	blt.n	80074d0 <_malloc_r+0x1c>
 80074cc:	42a9      	cmp	r1, r5
 80074ce:	d905      	bls.n	80074dc <_malloc_r+0x28>
 80074d0:	230c      	movs	r3, #12
 80074d2:	603b      	str	r3, [r7, #0]
 80074d4:	2600      	movs	r6, #0
 80074d6:	4630      	mov	r0, r6
 80074d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80074dc:	4e2e      	ldr	r6, [pc, #184]	; (8007598 <_malloc_r+0xe4>)
 80074de:	f000 fc9f 	bl	8007e20 <__malloc_lock>
 80074e2:	6833      	ldr	r3, [r6, #0]
 80074e4:	461c      	mov	r4, r3
 80074e6:	bb34      	cbnz	r4, 8007536 <_malloc_r+0x82>
 80074e8:	4629      	mov	r1, r5
 80074ea:	4638      	mov	r0, r7
 80074ec:	f7ff ffc2 	bl	8007474 <sbrk_aligned>
 80074f0:	1c43      	adds	r3, r0, #1
 80074f2:	4604      	mov	r4, r0
 80074f4:	d14d      	bne.n	8007592 <_malloc_r+0xde>
 80074f6:	6834      	ldr	r4, [r6, #0]
 80074f8:	4626      	mov	r6, r4
 80074fa:	2e00      	cmp	r6, #0
 80074fc:	d140      	bne.n	8007580 <_malloc_r+0xcc>
 80074fe:	6823      	ldr	r3, [r4, #0]
 8007500:	4631      	mov	r1, r6
 8007502:	4638      	mov	r0, r7
 8007504:	eb04 0803 	add.w	r8, r4, r3
 8007508:	f000 f9ae 	bl	8007868 <_sbrk_r>
 800750c:	4580      	cmp	r8, r0
 800750e:	d13a      	bne.n	8007586 <_malloc_r+0xd2>
 8007510:	6821      	ldr	r1, [r4, #0]
 8007512:	3503      	adds	r5, #3
 8007514:	1a6d      	subs	r5, r5, r1
 8007516:	f025 0503 	bic.w	r5, r5, #3
 800751a:	3508      	adds	r5, #8
 800751c:	2d0c      	cmp	r5, #12
 800751e:	bf38      	it	cc
 8007520:	250c      	movcc	r5, #12
 8007522:	4629      	mov	r1, r5
 8007524:	4638      	mov	r0, r7
 8007526:	f7ff ffa5 	bl	8007474 <sbrk_aligned>
 800752a:	3001      	adds	r0, #1
 800752c:	d02b      	beq.n	8007586 <_malloc_r+0xd2>
 800752e:	6823      	ldr	r3, [r4, #0]
 8007530:	442b      	add	r3, r5
 8007532:	6023      	str	r3, [r4, #0]
 8007534:	e00e      	b.n	8007554 <_malloc_r+0xa0>
 8007536:	6822      	ldr	r2, [r4, #0]
 8007538:	1b52      	subs	r2, r2, r5
 800753a:	d41e      	bmi.n	800757a <_malloc_r+0xc6>
 800753c:	2a0b      	cmp	r2, #11
 800753e:	d916      	bls.n	800756e <_malloc_r+0xba>
 8007540:	1961      	adds	r1, r4, r5
 8007542:	42a3      	cmp	r3, r4
 8007544:	6025      	str	r5, [r4, #0]
 8007546:	bf18      	it	ne
 8007548:	6059      	strne	r1, [r3, #4]
 800754a:	6863      	ldr	r3, [r4, #4]
 800754c:	bf08      	it	eq
 800754e:	6031      	streq	r1, [r6, #0]
 8007550:	5162      	str	r2, [r4, r5]
 8007552:	604b      	str	r3, [r1, #4]
 8007554:	4638      	mov	r0, r7
 8007556:	f104 060b 	add.w	r6, r4, #11
 800755a:	f000 fc67 	bl	8007e2c <__malloc_unlock>
 800755e:	f026 0607 	bic.w	r6, r6, #7
 8007562:	1d23      	adds	r3, r4, #4
 8007564:	1af2      	subs	r2, r6, r3
 8007566:	d0b6      	beq.n	80074d6 <_malloc_r+0x22>
 8007568:	1b9b      	subs	r3, r3, r6
 800756a:	50a3      	str	r3, [r4, r2]
 800756c:	e7b3      	b.n	80074d6 <_malloc_r+0x22>
 800756e:	6862      	ldr	r2, [r4, #4]
 8007570:	42a3      	cmp	r3, r4
 8007572:	bf0c      	ite	eq
 8007574:	6032      	streq	r2, [r6, #0]
 8007576:	605a      	strne	r2, [r3, #4]
 8007578:	e7ec      	b.n	8007554 <_malloc_r+0xa0>
 800757a:	4623      	mov	r3, r4
 800757c:	6864      	ldr	r4, [r4, #4]
 800757e:	e7b2      	b.n	80074e6 <_malloc_r+0x32>
 8007580:	4634      	mov	r4, r6
 8007582:	6876      	ldr	r6, [r6, #4]
 8007584:	e7b9      	b.n	80074fa <_malloc_r+0x46>
 8007586:	230c      	movs	r3, #12
 8007588:	603b      	str	r3, [r7, #0]
 800758a:	4638      	mov	r0, r7
 800758c:	f000 fc4e 	bl	8007e2c <__malloc_unlock>
 8007590:	e7a1      	b.n	80074d6 <_malloc_r+0x22>
 8007592:	6025      	str	r5, [r4, #0]
 8007594:	e7de      	b.n	8007554 <_malloc_r+0xa0>
 8007596:	bf00      	nop
 8007598:	20000350 	.word	0x20000350

0800759c <__ssputs_r>:
 800759c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80075a0:	688e      	ldr	r6, [r1, #8]
 80075a2:	429e      	cmp	r6, r3
 80075a4:	4682      	mov	sl, r0
 80075a6:	460c      	mov	r4, r1
 80075a8:	4690      	mov	r8, r2
 80075aa:	461f      	mov	r7, r3
 80075ac:	d838      	bhi.n	8007620 <__ssputs_r+0x84>
 80075ae:	898a      	ldrh	r2, [r1, #12]
 80075b0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80075b4:	d032      	beq.n	800761c <__ssputs_r+0x80>
 80075b6:	6825      	ldr	r5, [r4, #0]
 80075b8:	6909      	ldr	r1, [r1, #16]
 80075ba:	eba5 0901 	sub.w	r9, r5, r1
 80075be:	6965      	ldr	r5, [r4, #20]
 80075c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80075c4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80075c8:	3301      	adds	r3, #1
 80075ca:	444b      	add	r3, r9
 80075cc:	106d      	asrs	r5, r5, #1
 80075ce:	429d      	cmp	r5, r3
 80075d0:	bf38      	it	cc
 80075d2:	461d      	movcc	r5, r3
 80075d4:	0553      	lsls	r3, r2, #21
 80075d6:	d531      	bpl.n	800763c <__ssputs_r+0xa0>
 80075d8:	4629      	mov	r1, r5
 80075da:	f7ff ff6b 	bl	80074b4 <_malloc_r>
 80075de:	4606      	mov	r6, r0
 80075e0:	b950      	cbnz	r0, 80075f8 <__ssputs_r+0x5c>
 80075e2:	230c      	movs	r3, #12
 80075e4:	f8ca 3000 	str.w	r3, [sl]
 80075e8:	89a3      	ldrh	r3, [r4, #12]
 80075ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80075ee:	81a3      	strh	r3, [r4, #12]
 80075f0:	f04f 30ff 	mov.w	r0, #4294967295
 80075f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80075f8:	6921      	ldr	r1, [r4, #16]
 80075fa:	464a      	mov	r2, r9
 80075fc:	f7ff fa08 	bl	8006a10 <memcpy>
 8007600:	89a3      	ldrh	r3, [r4, #12]
 8007602:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8007606:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800760a:	81a3      	strh	r3, [r4, #12]
 800760c:	6126      	str	r6, [r4, #16]
 800760e:	6165      	str	r5, [r4, #20]
 8007610:	444e      	add	r6, r9
 8007612:	eba5 0509 	sub.w	r5, r5, r9
 8007616:	6026      	str	r6, [r4, #0]
 8007618:	60a5      	str	r5, [r4, #8]
 800761a:	463e      	mov	r6, r7
 800761c:	42be      	cmp	r6, r7
 800761e:	d900      	bls.n	8007622 <__ssputs_r+0x86>
 8007620:	463e      	mov	r6, r7
 8007622:	6820      	ldr	r0, [r4, #0]
 8007624:	4632      	mov	r2, r6
 8007626:	4641      	mov	r1, r8
 8007628:	f000 fbe0 	bl	8007dec <memmove>
 800762c:	68a3      	ldr	r3, [r4, #8]
 800762e:	1b9b      	subs	r3, r3, r6
 8007630:	60a3      	str	r3, [r4, #8]
 8007632:	6823      	ldr	r3, [r4, #0]
 8007634:	4433      	add	r3, r6
 8007636:	6023      	str	r3, [r4, #0]
 8007638:	2000      	movs	r0, #0
 800763a:	e7db      	b.n	80075f4 <__ssputs_r+0x58>
 800763c:	462a      	mov	r2, r5
 800763e:	f000 fbfb 	bl	8007e38 <_realloc_r>
 8007642:	4606      	mov	r6, r0
 8007644:	2800      	cmp	r0, #0
 8007646:	d1e1      	bne.n	800760c <__ssputs_r+0x70>
 8007648:	6921      	ldr	r1, [r4, #16]
 800764a:	4650      	mov	r0, sl
 800764c:	f7ff fec6 	bl	80073dc <_free_r>
 8007650:	e7c7      	b.n	80075e2 <__ssputs_r+0x46>
	...

08007654 <_svfiprintf_r>:
 8007654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007658:	4698      	mov	r8, r3
 800765a:	898b      	ldrh	r3, [r1, #12]
 800765c:	061b      	lsls	r3, r3, #24
 800765e:	b09d      	sub	sp, #116	; 0x74
 8007660:	4607      	mov	r7, r0
 8007662:	460d      	mov	r5, r1
 8007664:	4614      	mov	r4, r2
 8007666:	d50e      	bpl.n	8007686 <_svfiprintf_r+0x32>
 8007668:	690b      	ldr	r3, [r1, #16]
 800766a:	b963      	cbnz	r3, 8007686 <_svfiprintf_r+0x32>
 800766c:	2140      	movs	r1, #64	; 0x40
 800766e:	f7ff ff21 	bl	80074b4 <_malloc_r>
 8007672:	6028      	str	r0, [r5, #0]
 8007674:	6128      	str	r0, [r5, #16]
 8007676:	b920      	cbnz	r0, 8007682 <_svfiprintf_r+0x2e>
 8007678:	230c      	movs	r3, #12
 800767a:	603b      	str	r3, [r7, #0]
 800767c:	f04f 30ff 	mov.w	r0, #4294967295
 8007680:	e0d1      	b.n	8007826 <_svfiprintf_r+0x1d2>
 8007682:	2340      	movs	r3, #64	; 0x40
 8007684:	616b      	str	r3, [r5, #20]
 8007686:	2300      	movs	r3, #0
 8007688:	9309      	str	r3, [sp, #36]	; 0x24
 800768a:	2320      	movs	r3, #32
 800768c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007690:	f8cd 800c 	str.w	r8, [sp, #12]
 8007694:	2330      	movs	r3, #48	; 0x30
 8007696:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8007840 <_svfiprintf_r+0x1ec>
 800769a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800769e:	f04f 0901 	mov.w	r9, #1
 80076a2:	4623      	mov	r3, r4
 80076a4:	469a      	mov	sl, r3
 80076a6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80076aa:	b10a      	cbz	r2, 80076b0 <_svfiprintf_r+0x5c>
 80076ac:	2a25      	cmp	r2, #37	; 0x25
 80076ae:	d1f9      	bne.n	80076a4 <_svfiprintf_r+0x50>
 80076b0:	ebba 0b04 	subs.w	fp, sl, r4
 80076b4:	d00b      	beq.n	80076ce <_svfiprintf_r+0x7a>
 80076b6:	465b      	mov	r3, fp
 80076b8:	4622      	mov	r2, r4
 80076ba:	4629      	mov	r1, r5
 80076bc:	4638      	mov	r0, r7
 80076be:	f7ff ff6d 	bl	800759c <__ssputs_r>
 80076c2:	3001      	adds	r0, #1
 80076c4:	f000 80aa 	beq.w	800781c <_svfiprintf_r+0x1c8>
 80076c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80076ca:	445a      	add	r2, fp
 80076cc:	9209      	str	r2, [sp, #36]	; 0x24
 80076ce:	f89a 3000 	ldrb.w	r3, [sl]
 80076d2:	2b00      	cmp	r3, #0
 80076d4:	f000 80a2 	beq.w	800781c <_svfiprintf_r+0x1c8>
 80076d8:	2300      	movs	r3, #0
 80076da:	f04f 32ff 	mov.w	r2, #4294967295
 80076de:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80076e2:	f10a 0a01 	add.w	sl, sl, #1
 80076e6:	9304      	str	r3, [sp, #16]
 80076e8:	9307      	str	r3, [sp, #28]
 80076ea:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80076ee:	931a      	str	r3, [sp, #104]	; 0x68
 80076f0:	4654      	mov	r4, sl
 80076f2:	2205      	movs	r2, #5
 80076f4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80076f8:	4851      	ldr	r0, [pc, #324]	; (8007840 <_svfiprintf_r+0x1ec>)
 80076fa:	f7f8 fd79 	bl	80001f0 <memchr>
 80076fe:	9a04      	ldr	r2, [sp, #16]
 8007700:	b9d8      	cbnz	r0, 800773a <_svfiprintf_r+0xe6>
 8007702:	06d0      	lsls	r0, r2, #27
 8007704:	bf44      	itt	mi
 8007706:	2320      	movmi	r3, #32
 8007708:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800770c:	0711      	lsls	r1, r2, #28
 800770e:	bf44      	itt	mi
 8007710:	232b      	movmi	r3, #43	; 0x2b
 8007712:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007716:	f89a 3000 	ldrb.w	r3, [sl]
 800771a:	2b2a      	cmp	r3, #42	; 0x2a
 800771c:	d015      	beq.n	800774a <_svfiprintf_r+0xf6>
 800771e:	9a07      	ldr	r2, [sp, #28]
 8007720:	4654      	mov	r4, sl
 8007722:	2000      	movs	r0, #0
 8007724:	f04f 0c0a 	mov.w	ip, #10
 8007728:	4621      	mov	r1, r4
 800772a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800772e:	3b30      	subs	r3, #48	; 0x30
 8007730:	2b09      	cmp	r3, #9
 8007732:	d94e      	bls.n	80077d2 <_svfiprintf_r+0x17e>
 8007734:	b1b0      	cbz	r0, 8007764 <_svfiprintf_r+0x110>
 8007736:	9207      	str	r2, [sp, #28]
 8007738:	e014      	b.n	8007764 <_svfiprintf_r+0x110>
 800773a:	eba0 0308 	sub.w	r3, r0, r8
 800773e:	fa09 f303 	lsl.w	r3, r9, r3
 8007742:	4313      	orrs	r3, r2
 8007744:	9304      	str	r3, [sp, #16]
 8007746:	46a2      	mov	sl, r4
 8007748:	e7d2      	b.n	80076f0 <_svfiprintf_r+0x9c>
 800774a:	9b03      	ldr	r3, [sp, #12]
 800774c:	1d19      	adds	r1, r3, #4
 800774e:	681b      	ldr	r3, [r3, #0]
 8007750:	9103      	str	r1, [sp, #12]
 8007752:	2b00      	cmp	r3, #0
 8007754:	bfbb      	ittet	lt
 8007756:	425b      	neglt	r3, r3
 8007758:	f042 0202 	orrlt.w	r2, r2, #2
 800775c:	9307      	strge	r3, [sp, #28]
 800775e:	9307      	strlt	r3, [sp, #28]
 8007760:	bfb8      	it	lt
 8007762:	9204      	strlt	r2, [sp, #16]
 8007764:	7823      	ldrb	r3, [r4, #0]
 8007766:	2b2e      	cmp	r3, #46	; 0x2e
 8007768:	d10c      	bne.n	8007784 <_svfiprintf_r+0x130>
 800776a:	7863      	ldrb	r3, [r4, #1]
 800776c:	2b2a      	cmp	r3, #42	; 0x2a
 800776e:	d135      	bne.n	80077dc <_svfiprintf_r+0x188>
 8007770:	9b03      	ldr	r3, [sp, #12]
 8007772:	1d1a      	adds	r2, r3, #4
 8007774:	681b      	ldr	r3, [r3, #0]
 8007776:	9203      	str	r2, [sp, #12]
 8007778:	2b00      	cmp	r3, #0
 800777a:	bfb8      	it	lt
 800777c:	f04f 33ff 	movlt.w	r3, #4294967295
 8007780:	3402      	adds	r4, #2
 8007782:	9305      	str	r3, [sp, #20]
 8007784:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007850 <_svfiprintf_r+0x1fc>
 8007788:	7821      	ldrb	r1, [r4, #0]
 800778a:	2203      	movs	r2, #3
 800778c:	4650      	mov	r0, sl
 800778e:	f7f8 fd2f 	bl	80001f0 <memchr>
 8007792:	b140      	cbz	r0, 80077a6 <_svfiprintf_r+0x152>
 8007794:	2340      	movs	r3, #64	; 0x40
 8007796:	eba0 000a 	sub.w	r0, r0, sl
 800779a:	fa03 f000 	lsl.w	r0, r3, r0
 800779e:	9b04      	ldr	r3, [sp, #16]
 80077a0:	4303      	orrs	r3, r0
 80077a2:	3401      	adds	r4, #1
 80077a4:	9304      	str	r3, [sp, #16]
 80077a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80077aa:	4826      	ldr	r0, [pc, #152]	; (8007844 <_svfiprintf_r+0x1f0>)
 80077ac:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80077b0:	2206      	movs	r2, #6
 80077b2:	f7f8 fd1d 	bl	80001f0 <memchr>
 80077b6:	2800      	cmp	r0, #0
 80077b8:	d038      	beq.n	800782c <_svfiprintf_r+0x1d8>
 80077ba:	4b23      	ldr	r3, [pc, #140]	; (8007848 <_svfiprintf_r+0x1f4>)
 80077bc:	bb1b      	cbnz	r3, 8007806 <_svfiprintf_r+0x1b2>
 80077be:	9b03      	ldr	r3, [sp, #12]
 80077c0:	3307      	adds	r3, #7
 80077c2:	f023 0307 	bic.w	r3, r3, #7
 80077c6:	3308      	adds	r3, #8
 80077c8:	9303      	str	r3, [sp, #12]
 80077ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80077cc:	4433      	add	r3, r6
 80077ce:	9309      	str	r3, [sp, #36]	; 0x24
 80077d0:	e767      	b.n	80076a2 <_svfiprintf_r+0x4e>
 80077d2:	fb0c 3202 	mla	r2, ip, r2, r3
 80077d6:	460c      	mov	r4, r1
 80077d8:	2001      	movs	r0, #1
 80077da:	e7a5      	b.n	8007728 <_svfiprintf_r+0xd4>
 80077dc:	2300      	movs	r3, #0
 80077de:	3401      	adds	r4, #1
 80077e0:	9305      	str	r3, [sp, #20]
 80077e2:	4619      	mov	r1, r3
 80077e4:	f04f 0c0a 	mov.w	ip, #10
 80077e8:	4620      	mov	r0, r4
 80077ea:	f810 2b01 	ldrb.w	r2, [r0], #1
 80077ee:	3a30      	subs	r2, #48	; 0x30
 80077f0:	2a09      	cmp	r2, #9
 80077f2:	d903      	bls.n	80077fc <_svfiprintf_r+0x1a8>
 80077f4:	2b00      	cmp	r3, #0
 80077f6:	d0c5      	beq.n	8007784 <_svfiprintf_r+0x130>
 80077f8:	9105      	str	r1, [sp, #20]
 80077fa:	e7c3      	b.n	8007784 <_svfiprintf_r+0x130>
 80077fc:	fb0c 2101 	mla	r1, ip, r1, r2
 8007800:	4604      	mov	r4, r0
 8007802:	2301      	movs	r3, #1
 8007804:	e7f0      	b.n	80077e8 <_svfiprintf_r+0x194>
 8007806:	ab03      	add	r3, sp, #12
 8007808:	9300      	str	r3, [sp, #0]
 800780a:	462a      	mov	r2, r5
 800780c:	4b0f      	ldr	r3, [pc, #60]	; (800784c <_svfiprintf_r+0x1f8>)
 800780e:	a904      	add	r1, sp, #16
 8007810:	4638      	mov	r0, r7
 8007812:	f7fc f951 	bl	8003ab8 <_printf_float>
 8007816:	1c42      	adds	r2, r0, #1
 8007818:	4606      	mov	r6, r0
 800781a:	d1d6      	bne.n	80077ca <_svfiprintf_r+0x176>
 800781c:	89ab      	ldrh	r3, [r5, #12]
 800781e:	065b      	lsls	r3, r3, #25
 8007820:	f53f af2c 	bmi.w	800767c <_svfiprintf_r+0x28>
 8007824:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007826:	b01d      	add	sp, #116	; 0x74
 8007828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800782c:	ab03      	add	r3, sp, #12
 800782e:	9300      	str	r3, [sp, #0]
 8007830:	462a      	mov	r2, r5
 8007832:	4b06      	ldr	r3, [pc, #24]	; (800784c <_svfiprintf_r+0x1f8>)
 8007834:	a904      	add	r1, sp, #16
 8007836:	4638      	mov	r0, r7
 8007838:	f7fc fbe2 	bl	8004000 <_printf_i>
 800783c:	e7eb      	b.n	8007816 <_svfiprintf_r+0x1c2>
 800783e:	bf00      	nop
 8007840:	08009724 	.word	0x08009724
 8007844:	0800972e 	.word	0x0800972e
 8007848:	08003ab9 	.word	0x08003ab9
 800784c:	0800759d 	.word	0x0800759d
 8007850:	0800972a 	.word	0x0800972a
 8007854:	00000000 	.word	0x00000000

08007858 <nan>:
 8007858:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8007860 <nan+0x8>
 800785c:	4770      	bx	lr
 800785e:	bf00      	nop
 8007860:	00000000 	.word	0x00000000
 8007864:	7ff80000 	.word	0x7ff80000

08007868 <_sbrk_r>:
 8007868:	b538      	push	{r3, r4, r5, lr}
 800786a:	4d06      	ldr	r5, [pc, #24]	; (8007884 <_sbrk_r+0x1c>)
 800786c:	2300      	movs	r3, #0
 800786e:	4604      	mov	r4, r0
 8007870:	4608      	mov	r0, r1
 8007872:	602b      	str	r3, [r5, #0]
 8007874:	f7fb fed6 	bl	8003624 <_sbrk>
 8007878:	1c43      	adds	r3, r0, #1
 800787a:	d102      	bne.n	8007882 <_sbrk_r+0x1a>
 800787c:	682b      	ldr	r3, [r5, #0]
 800787e:	b103      	cbz	r3, 8007882 <_sbrk_r+0x1a>
 8007880:	6023      	str	r3, [r4, #0]
 8007882:	bd38      	pop	{r3, r4, r5, pc}
 8007884:	20000358 	.word	0x20000358

08007888 <__sread>:
 8007888:	b510      	push	{r4, lr}
 800788a:	460c      	mov	r4, r1
 800788c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007890:	f000 fc5a 	bl	8008148 <_read_r>
 8007894:	2800      	cmp	r0, #0
 8007896:	bfab      	itete	ge
 8007898:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800789a:	89a3      	ldrhlt	r3, [r4, #12]
 800789c:	181b      	addge	r3, r3, r0
 800789e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80078a2:	bfac      	ite	ge
 80078a4:	6563      	strge	r3, [r4, #84]	; 0x54
 80078a6:	81a3      	strhlt	r3, [r4, #12]
 80078a8:	bd10      	pop	{r4, pc}

080078aa <__swrite>:
 80078aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80078ae:	461f      	mov	r7, r3
 80078b0:	898b      	ldrh	r3, [r1, #12]
 80078b2:	05db      	lsls	r3, r3, #23
 80078b4:	4605      	mov	r5, r0
 80078b6:	460c      	mov	r4, r1
 80078b8:	4616      	mov	r6, r2
 80078ba:	d505      	bpl.n	80078c8 <__swrite+0x1e>
 80078bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80078c0:	2302      	movs	r3, #2
 80078c2:	2200      	movs	r2, #0
 80078c4:	f000 fa1a 	bl	8007cfc <_lseek_r>
 80078c8:	89a3      	ldrh	r3, [r4, #12]
 80078ca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80078ce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80078d2:	81a3      	strh	r3, [r4, #12]
 80078d4:	4632      	mov	r2, r6
 80078d6:	463b      	mov	r3, r7
 80078d8:	4628      	mov	r0, r5
 80078da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80078de:	f000 b88b 	b.w	80079f8 <_write_r>

080078e2 <__sseek>:
 80078e2:	b510      	push	{r4, lr}
 80078e4:	460c      	mov	r4, r1
 80078e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80078ea:	f000 fa07 	bl	8007cfc <_lseek_r>
 80078ee:	1c43      	adds	r3, r0, #1
 80078f0:	89a3      	ldrh	r3, [r4, #12]
 80078f2:	bf15      	itete	ne
 80078f4:	6560      	strne	r0, [r4, #84]	; 0x54
 80078f6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80078fa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80078fe:	81a3      	strheq	r3, [r4, #12]
 8007900:	bf18      	it	ne
 8007902:	81a3      	strhne	r3, [r4, #12]
 8007904:	bd10      	pop	{r4, pc}

08007906 <__sclose>:
 8007906:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800790a:	f000 b913 	b.w	8007b34 <_close_r>

0800790e <strncmp>:
 800790e:	b510      	push	{r4, lr}
 8007910:	b17a      	cbz	r2, 8007932 <strncmp+0x24>
 8007912:	4603      	mov	r3, r0
 8007914:	3901      	subs	r1, #1
 8007916:	1884      	adds	r4, r0, r2
 8007918:	f813 0b01 	ldrb.w	r0, [r3], #1
 800791c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8007920:	4290      	cmp	r0, r2
 8007922:	d101      	bne.n	8007928 <strncmp+0x1a>
 8007924:	42a3      	cmp	r3, r4
 8007926:	d101      	bne.n	800792c <strncmp+0x1e>
 8007928:	1a80      	subs	r0, r0, r2
 800792a:	bd10      	pop	{r4, pc}
 800792c:	2800      	cmp	r0, #0
 800792e:	d1f3      	bne.n	8007918 <strncmp+0xa>
 8007930:	e7fa      	b.n	8007928 <strncmp+0x1a>
 8007932:	4610      	mov	r0, r2
 8007934:	e7f9      	b.n	800792a <strncmp+0x1c>
	...

08007938 <__swbuf_r>:
 8007938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800793a:	460e      	mov	r6, r1
 800793c:	4614      	mov	r4, r2
 800793e:	4605      	mov	r5, r0
 8007940:	b118      	cbz	r0, 800794a <__swbuf_r+0x12>
 8007942:	6983      	ldr	r3, [r0, #24]
 8007944:	b90b      	cbnz	r3, 800794a <__swbuf_r+0x12>
 8007946:	f7fe fc35 	bl	80061b4 <__sinit>
 800794a:	4b21      	ldr	r3, [pc, #132]	; (80079d0 <__swbuf_r+0x98>)
 800794c:	429c      	cmp	r4, r3
 800794e:	d12b      	bne.n	80079a8 <__swbuf_r+0x70>
 8007950:	686c      	ldr	r4, [r5, #4]
 8007952:	69a3      	ldr	r3, [r4, #24]
 8007954:	60a3      	str	r3, [r4, #8]
 8007956:	89a3      	ldrh	r3, [r4, #12]
 8007958:	071a      	lsls	r2, r3, #28
 800795a:	d52f      	bpl.n	80079bc <__swbuf_r+0x84>
 800795c:	6923      	ldr	r3, [r4, #16]
 800795e:	b36b      	cbz	r3, 80079bc <__swbuf_r+0x84>
 8007960:	6923      	ldr	r3, [r4, #16]
 8007962:	6820      	ldr	r0, [r4, #0]
 8007964:	1ac0      	subs	r0, r0, r3
 8007966:	6963      	ldr	r3, [r4, #20]
 8007968:	b2f6      	uxtb	r6, r6
 800796a:	4283      	cmp	r3, r0
 800796c:	4637      	mov	r7, r6
 800796e:	dc04      	bgt.n	800797a <__swbuf_r+0x42>
 8007970:	4621      	mov	r1, r4
 8007972:	4628      	mov	r0, r5
 8007974:	f000 f974 	bl	8007c60 <_fflush_r>
 8007978:	bb30      	cbnz	r0, 80079c8 <__swbuf_r+0x90>
 800797a:	68a3      	ldr	r3, [r4, #8]
 800797c:	3b01      	subs	r3, #1
 800797e:	60a3      	str	r3, [r4, #8]
 8007980:	6823      	ldr	r3, [r4, #0]
 8007982:	1c5a      	adds	r2, r3, #1
 8007984:	6022      	str	r2, [r4, #0]
 8007986:	701e      	strb	r6, [r3, #0]
 8007988:	6963      	ldr	r3, [r4, #20]
 800798a:	3001      	adds	r0, #1
 800798c:	4283      	cmp	r3, r0
 800798e:	d004      	beq.n	800799a <__swbuf_r+0x62>
 8007990:	89a3      	ldrh	r3, [r4, #12]
 8007992:	07db      	lsls	r3, r3, #31
 8007994:	d506      	bpl.n	80079a4 <__swbuf_r+0x6c>
 8007996:	2e0a      	cmp	r6, #10
 8007998:	d104      	bne.n	80079a4 <__swbuf_r+0x6c>
 800799a:	4621      	mov	r1, r4
 800799c:	4628      	mov	r0, r5
 800799e:	f000 f95f 	bl	8007c60 <_fflush_r>
 80079a2:	b988      	cbnz	r0, 80079c8 <__swbuf_r+0x90>
 80079a4:	4638      	mov	r0, r7
 80079a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80079a8:	4b0a      	ldr	r3, [pc, #40]	; (80079d4 <__swbuf_r+0x9c>)
 80079aa:	429c      	cmp	r4, r3
 80079ac:	d101      	bne.n	80079b2 <__swbuf_r+0x7a>
 80079ae:	68ac      	ldr	r4, [r5, #8]
 80079b0:	e7cf      	b.n	8007952 <__swbuf_r+0x1a>
 80079b2:	4b09      	ldr	r3, [pc, #36]	; (80079d8 <__swbuf_r+0xa0>)
 80079b4:	429c      	cmp	r4, r3
 80079b6:	bf08      	it	eq
 80079b8:	68ec      	ldreq	r4, [r5, #12]
 80079ba:	e7ca      	b.n	8007952 <__swbuf_r+0x1a>
 80079bc:	4621      	mov	r1, r4
 80079be:	4628      	mov	r0, r5
 80079c0:	f000 f82c 	bl	8007a1c <__swsetup_r>
 80079c4:	2800      	cmp	r0, #0
 80079c6:	d0cb      	beq.n	8007960 <__swbuf_r+0x28>
 80079c8:	f04f 37ff 	mov.w	r7, #4294967295
 80079cc:	e7ea      	b.n	80079a4 <__swbuf_r+0x6c>
 80079ce:	bf00      	nop
 80079d0:	0800950c 	.word	0x0800950c
 80079d4:	0800952c 	.word	0x0800952c
 80079d8:	080094ec 	.word	0x080094ec

080079dc <__ascii_wctomb>:
 80079dc:	b149      	cbz	r1, 80079f2 <__ascii_wctomb+0x16>
 80079de:	2aff      	cmp	r2, #255	; 0xff
 80079e0:	bf85      	ittet	hi
 80079e2:	238a      	movhi	r3, #138	; 0x8a
 80079e4:	6003      	strhi	r3, [r0, #0]
 80079e6:	700a      	strbls	r2, [r1, #0]
 80079e8:	f04f 30ff 	movhi.w	r0, #4294967295
 80079ec:	bf98      	it	ls
 80079ee:	2001      	movls	r0, #1
 80079f0:	4770      	bx	lr
 80079f2:	4608      	mov	r0, r1
 80079f4:	4770      	bx	lr
	...

080079f8 <_write_r>:
 80079f8:	b538      	push	{r3, r4, r5, lr}
 80079fa:	4d07      	ldr	r5, [pc, #28]	; (8007a18 <_write_r+0x20>)
 80079fc:	4604      	mov	r4, r0
 80079fe:	4608      	mov	r0, r1
 8007a00:	4611      	mov	r1, r2
 8007a02:	2200      	movs	r2, #0
 8007a04:	602a      	str	r2, [r5, #0]
 8007a06:	461a      	mov	r2, r3
 8007a08:	f7fb fdbb 	bl	8003582 <_write>
 8007a0c:	1c43      	adds	r3, r0, #1
 8007a0e:	d102      	bne.n	8007a16 <_write_r+0x1e>
 8007a10:	682b      	ldr	r3, [r5, #0]
 8007a12:	b103      	cbz	r3, 8007a16 <_write_r+0x1e>
 8007a14:	6023      	str	r3, [r4, #0]
 8007a16:	bd38      	pop	{r3, r4, r5, pc}
 8007a18:	20000358 	.word	0x20000358

08007a1c <__swsetup_r>:
 8007a1c:	4b32      	ldr	r3, [pc, #200]	; (8007ae8 <__swsetup_r+0xcc>)
 8007a1e:	b570      	push	{r4, r5, r6, lr}
 8007a20:	681d      	ldr	r5, [r3, #0]
 8007a22:	4606      	mov	r6, r0
 8007a24:	460c      	mov	r4, r1
 8007a26:	b125      	cbz	r5, 8007a32 <__swsetup_r+0x16>
 8007a28:	69ab      	ldr	r3, [r5, #24]
 8007a2a:	b913      	cbnz	r3, 8007a32 <__swsetup_r+0x16>
 8007a2c:	4628      	mov	r0, r5
 8007a2e:	f7fe fbc1 	bl	80061b4 <__sinit>
 8007a32:	4b2e      	ldr	r3, [pc, #184]	; (8007aec <__swsetup_r+0xd0>)
 8007a34:	429c      	cmp	r4, r3
 8007a36:	d10f      	bne.n	8007a58 <__swsetup_r+0x3c>
 8007a38:	686c      	ldr	r4, [r5, #4]
 8007a3a:	89a3      	ldrh	r3, [r4, #12]
 8007a3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007a40:	0719      	lsls	r1, r3, #28
 8007a42:	d42c      	bmi.n	8007a9e <__swsetup_r+0x82>
 8007a44:	06dd      	lsls	r5, r3, #27
 8007a46:	d411      	bmi.n	8007a6c <__swsetup_r+0x50>
 8007a48:	2309      	movs	r3, #9
 8007a4a:	6033      	str	r3, [r6, #0]
 8007a4c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007a50:	81a3      	strh	r3, [r4, #12]
 8007a52:	f04f 30ff 	mov.w	r0, #4294967295
 8007a56:	e03e      	b.n	8007ad6 <__swsetup_r+0xba>
 8007a58:	4b25      	ldr	r3, [pc, #148]	; (8007af0 <__swsetup_r+0xd4>)
 8007a5a:	429c      	cmp	r4, r3
 8007a5c:	d101      	bne.n	8007a62 <__swsetup_r+0x46>
 8007a5e:	68ac      	ldr	r4, [r5, #8]
 8007a60:	e7eb      	b.n	8007a3a <__swsetup_r+0x1e>
 8007a62:	4b24      	ldr	r3, [pc, #144]	; (8007af4 <__swsetup_r+0xd8>)
 8007a64:	429c      	cmp	r4, r3
 8007a66:	bf08      	it	eq
 8007a68:	68ec      	ldreq	r4, [r5, #12]
 8007a6a:	e7e6      	b.n	8007a3a <__swsetup_r+0x1e>
 8007a6c:	0758      	lsls	r0, r3, #29
 8007a6e:	d512      	bpl.n	8007a96 <__swsetup_r+0x7a>
 8007a70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007a72:	b141      	cbz	r1, 8007a86 <__swsetup_r+0x6a>
 8007a74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007a78:	4299      	cmp	r1, r3
 8007a7a:	d002      	beq.n	8007a82 <__swsetup_r+0x66>
 8007a7c:	4630      	mov	r0, r6
 8007a7e:	f7ff fcad 	bl	80073dc <_free_r>
 8007a82:	2300      	movs	r3, #0
 8007a84:	6363      	str	r3, [r4, #52]	; 0x34
 8007a86:	89a3      	ldrh	r3, [r4, #12]
 8007a88:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8007a8c:	81a3      	strh	r3, [r4, #12]
 8007a8e:	2300      	movs	r3, #0
 8007a90:	6063      	str	r3, [r4, #4]
 8007a92:	6923      	ldr	r3, [r4, #16]
 8007a94:	6023      	str	r3, [r4, #0]
 8007a96:	89a3      	ldrh	r3, [r4, #12]
 8007a98:	f043 0308 	orr.w	r3, r3, #8
 8007a9c:	81a3      	strh	r3, [r4, #12]
 8007a9e:	6923      	ldr	r3, [r4, #16]
 8007aa0:	b94b      	cbnz	r3, 8007ab6 <__swsetup_r+0x9a>
 8007aa2:	89a3      	ldrh	r3, [r4, #12]
 8007aa4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8007aa8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007aac:	d003      	beq.n	8007ab6 <__swsetup_r+0x9a>
 8007aae:	4621      	mov	r1, r4
 8007ab0:	4630      	mov	r0, r6
 8007ab2:	f000 f95b 	bl	8007d6c <__smakebuf_r>
 8007ab6:	89a0      	ldrh	r0, [r4, #12]
 8007ab8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007abc:	f010 0301 	ands.w	r3, r0, #1
 8007ac0:	d00a      	beq.n	8007ad8 <__swsetup_r+0xbc>
 8007ac2:	2300      	movs	r3, #0
 8007ac4:	60a3      	str	r3, [r4, #8]
 8007ac6:	6963      	ldr	r3, [r4, #20]
 8007ac8:	425b      	negs	r3, r3
 8007aca:	61a3      	str	r3, [r4, #24]
 8007acc:	6923      	ldr	r3, [r4, #16]
 8007ace:	b943      	cbnz	r3, 8007ae2 <__swsetup_r+0xc6>
 8007ad0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8007ad4:	d1ba      	bne.n	8007a4c <__swsetup_r+0x30>
 8007ad6:	bd70      	pop	{r4, r5, r6, pc}
 8007ad8:	0781      	lsls	r1, r0, #30
 8007ada:	bf58      	it	pl
 8007adc:	6963      	ldrpl	r3, [r4, #20]
 8007ade:	60a3      	str	r3, [r4, #8]
 8007ae0:	e7f4      	b.n	8007acc <__swsetup_r+0xb0>
 8007ae2:	2000      	movs	r0, #0
 8007ae4:	e7f7      	b.n	8007ad6 <__swsetup_r+0xba>
 8007ae6:	bf00      	nop
 8007ae8:	2000002c 	.word	0x2000002c
 8007aec:	0800950c 	.word	0x0800950c
 8007af0:	0800952c 	.word	0x0800952c
 8007af4:	080094ec 	.word	0x080094ec

08007af8 <__assert_func>:
 8007af8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007afa:	4614      	mov	r4, r2
 8007afc:	461a      	mov	r2, r3
 8007afe:	4b09      	ldr	r3, [pc, #36]	; (8007b24 <__assert_func+0x2c>)
 8007b00:	681b      	ldr	r3, [r3, #0]
 8007b02:	4605      	mov	r5, r0
 8007b04:	68d8      	ldr	r0, [r3, #12]
 8007b06:	b14c      	cbz	r4, 8007b1c <__assert_func+0x24>
 8007b08:	4b07      	ldr	r3, [pc, #28]	; (8007b28 <__assert_func+0x30>)
 8007b0a:	9100      	str	r1, [sp, #0]
 8007b0c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8007b10:	4906      	ldr	r1, [pc, #24]	; (8007b2c <__assert_func+0x34>)
 8007b12:	462b      	mov	r3, r5
 8007b14:	f000 f8e0 	bl	8007cd8 <fiprintf>
 8007b18:	f000 fb28 	bl	800816c <abort>
 8007b1c:	4b04      	ldr	r3, [pc, #16]	; (8007b30 <__assert_func+0x38>)
 8007b1e:	461c      	mov	r4, r3
 8007b20:	e7f3      	b.n	8007b0a <__assert_func+0x12>
 8007b22:	bf00      	nop
 8007b24:	2000002c 	.word	0x2000002c
 8007b28:	08009735 	.word	0x08009735
 8007b2c:	08009742 	.word	0x08009742
 8007b30:	08009770 	.word	0x08009770

08007b34 <_close_r>:
 8007b34:	b538      	push	{r3, r4, r5, lr}
 8007b36:	4d06      	ldr	r5, [pc, #24]	; (8007b50 <_close_r+0x1c>)
 8007b38:	2300      	movs	r3, #0
 8007b3a:	4604      	mov	r4, r0
 8007b3c:	4608      	mov	r0, r1
 8007b3e:	602b      	str	r3, [r5, #0]
 8007b40:	f7fb fd3b 	bl	80035ba <_close>
 8007b44:	1c43      	adds	r3, r0, #1
 8007b46:	d102      	bne.n	8007b4e <_close_r+0x1a>
 8007b48:	682b      	ldr	r3, [r5, #0]
 8007b4a:	b103      	cbz	r3, 8007b4e <_close_r+0x1a>
 8007b4c:	6023      	str	r3, [r4, #0]
 8007b4e:	bd38      	pop	{r3, r4, r5, pc}
 8007b50:	20000358 	.word	0x20000358

08007b54 <__sflush_r>:
 8007b54:	898a      	ldrh	r2, [r1, #12]
 8007b56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007b5a:	4605      	mov	r5, r0
 8007b5c:	0710      	lsls	r0, r2, #28
 8007b5e:	460c      	mov	r4, r1
 8007b60:	d458      	bmi.n	8007c14 <__sflush_r+0xc0>
 8007b62:	684b      	ldr	r3, [r1, #4]
 8007b64:	2b00      	cmp	r3, #0
 8007b66:	dc05      	bgt.n	8007b74 <__sflush_r+0x20>
 8007b68:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8007b6a:	2b00      	cmp	r3, #0
 8007b6c:	dc02      	bgt.n	8007b74 <__sflush_r+0x20>
 8007b6e:	2000      	movs	r0, #0
 8007b70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007b74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007b76:	2e00      	cmp	r6, #0
 8007b78:	d0f9      	beq.n	8007b6e <__sflush_r+0x1a>
 8007b7a:	2300      	movs	r3, #0
 8007b7c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8007b80:	682f      	ldr	r7, [r5, #0]
 8007b82:	602b      	str	r3, [r5, #0]
 8007b84:	d032      	beq.n	8007bec <__sflush_r+0x98>
 8007b86:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007b88:	89a3      	ldrh	r3, [r4, #12]
 8007b8a:	075a      	lsls	r2, r3, #29
 8007b8c:	d505      	bpl.n	8007b9a <__sflush_r+0x46>
 8007b8e:	6863      	ldr	r3, [r4, #4]
 8007b90:	1ac0      	subs	r0, r0, r3
 8007b92:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007b94:	b10b      	cbz	r3, 8007b9a <__sflush_r+0x46>
 8007b96:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007b98:	1ac0      	subs	r0, r0, r3
 8007b9a:	2300      	movs	r3, #0
 8007b9c:	4602      	mov	r2, r0
 8007b9e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007ba0:	6a21      	ldr	r1, [r4, #32]
 8007ba2:	4628      	mov	r0, r5
 8007ba4:	47b0      	blx	r6
 8007ba6:	1c43      	adds	r3, r0, #1
 8007ba8:	89a3      	ldrh	r3, [r4, #12]
 8007baa:	d106      	bne.n	8007bba <__sflush_r+0x66>
 8007bac:	6829      	ldr	r1, [r5, #0]
 8007bae:	291d      	cmp	r1, #29
 8007bb0:	d82c      	bhi.n	8007c0c <__sflush_r+0xb8>
 8007bb2:	4a2a      	ldr	r2, [pc, #168]	; (8007c5c <__sflush_r+0x108>)
 8007bb4:	40ca      	lsrs	r2, r1
 8007bb6:	07d6      	lsls	r6, r2, #31
 8007bb8:	d528      	bpl.n	8007c0c <__sflush_r+0xb8>
 8007bba:	2200      	movs	r2, #0
 8007bbc:	6062      	str	r2, [r4, #4]
 8007bbe:	04d9      	lsls	r1, r3, #19
 8007bc0:	6922      	ldr	r2, [r4, #16]
 8007bc2:	6022      	str	r2, [r4, #0]
 8007bc4:	d504      	bpl.n	8007bd0 <__sflush_r+0x7c>
 8007bc6:	1c42      	adds	r2, r0, #1
 8007bc8:	d101      	bne.n	8007bce <__sflush_r+0x7a>
 8007bca:	682b      	ldr	r3, [r5, #0]
 8007bcc:	b903      	cbnz	r3, 8007bd0 <__sflush_r+0x7c>
 8007bce:	6560      	str	r0, [r4, #84]	; 0x54
 8007bd0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007bd2:	602f      	str	r7, [r5, #0]
 8007bd4:	2900      	cmp	r1, #0
 8007bd6:	d0ca      	beq.n	8007b6e <__sflush_r+0x1a>
 8007bd8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007bdc:	4299      	cmp	r1, r3
 8007bde:	d002      	beq.n	8007be6 <__sflush_r+0x92>
 8007be0:	4628      	mov	r0, r5
 8007be2:	f7ff fbfb 	bl	80073dc <_free_r>
 8007be6:	2000      	movs	r0, #0
 8007be8:	6360      	str	r0, [r4, #52]	; 0x34
 8007bea:	e7c1      	b.n	8007b70 <__sflush_r+0x1c>
 8007bec:	6a21      	ldr	r1, [r4, #32]
 8007bee:	2301      	movs	r3, #1
 8007bf0:	4628      	mov	r0, r5
 8007bf2:	47b0      	blx	r6
 8007bf4:	1c41      	adds	r1, r0, #1
 8007bf6:	d1c7      	bne.n	8007b88 <__sflush_r+0x34>
 8007bf8:	682b      	ldr	r3, [r5, #0]
 8007bfa:	2b00      	cmp	r3, #0
 8007bfc:	d0c4      	beq.n	8007b88 <__sflush_r+0x34>
 8007bfe:	2b1d      	cmp	r3, #29
 8007c00:	d001      	beq.n	8007c06 <__sflush_r+0xb2>
 8007c02:	2b16      	cmp	r3, #22
 8007c04:	d101      	bne.n	8007c0a <__sflush_r+0xb6>
 8007c06:	602f      	str	r7, [r5, #0]
 8007c08:	e7b1      	b.n	8007b6e <__sflush_r+0x1a>
 8007c0a:	89a3      	ldrh	r3, [r4, #12]
 8007c0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007c10:	81a3      	strh	r3, [r4, #12]
 8007c12:	e7ad      	b.n	8007b70 <__sflush_r+0x1c>
 8007c14:	690f      	ldr	r7, [r1, #16]
 8007c16:	2f00      	cmp	r7, #0
 8007c18:	d0a9      	beq.n	8007b6e <__sflush_r+0x1a>
 8007c1a:	0793      	lsls	r3, r2, #30
 8007c1c:	680e      	ldr	r6, [r1, #0]
 8007c1e:	bf08      	it	eq
 8007c20:	694b      	ldreq	r3, [r1, #20]
 8007c22:	600f      	str	r7, [r1, #0]
 8007c24:	bf18      	it	ne
 8007c26:	2300      	movne	r3, #0
 8007c28:	eba6 0807 	sub.w	r8, r6, r7
 8007c2c:	608b      	str	r3, [r1, #8]
 8007c2e:	f1b8 0f00 	cmp.w	r8, #0
 8007c32:	dd9c      	ble.n	8007b6e <__sflush_r+0x1a>
 8007c34:	6a21      	ldr	r1, [r4, #32]
 8007c36:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8007c38:	4643      	mov	r3, r8
 8007c3a:	463a      	mov	r2, r7
 8007c3c:	4628      	mov	r0, r5
 8007c3e:	47b0      	blx	r6
 8007c40:	2800      	cmp	r0, #0
 8007c42:	dc06      	bgt.n	8007c52 <__sflush_r+0xfe>
 8007c44:	89a3      	ldrh	r3, [r4, #12]
 8007c46:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007c4a:	81a3      	strh	r3, [r4, #12]
 8007c4c:	f04f 30ff 	mov.w	r0, #4294967295
 8007c50:	e78e      	b.n	8007b70 <__sflush_r+0x1c>
 8007c52:	4407      	add	r7, r0
 8007c54:	eba8 0800 	sub.w	r8, r8, r0
 8007c58:	e7e9      	b.n	8007c2e <__sflush_r+0xda>
 8007c5a:	bf00      	nop
 8007c5c:	20400001 	.word	0x20400001

08007c60 <_fflush_r>:
 8007c60:	b538      	push	{r3, r4, r5, lr}
 8007c62:	690b      	ldr	r3, [r1, #16]
 8007c64:	4605      	mov	r5, r0
 8007c66:	460c      	mov	r4, r1
 8007c68:	b913      	cbnz	r3, 8007c70 <_fflush_r+0x10>
 8007c6a:	2500      	movs	r5, #0
 8007c6c:	4628      	mov	r0, r5
 8007c6e:	bd38      	pop	{r3, r4, r5, pc}
 8007c70:	b118      	cbz	r0, 8007c7a <_fflush_r+0x1a>
 8007c72:	6983      	ldr	r3, [r0, #24]
 8007c74:	b90b      	cbnz	r3, 8007c7a <_fflush_r+0x1a>
 8007c76:	f7fe fa9d 	bl	80061b4 <__sinit>
 8007c7a:	4b14      	ldr	r3, [pc, #80]	; (8007ccc <_fflush_r+0x6c>)
 8007c7c:	429c      	cmp	r4, r3
 8007c7e:	d11b      	bne.n	8007cb8 <_fflush_r+0x58>
 8007c80:	686c      	ldr	r4, [r5, #4]
 8007c82:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007c86:	2b00      	cmp	r3, #0
 8007c88:	d0ef      	beq.n	8007c6a <_fflush_r+0xa>
 8007c8a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8007c8c:	07d0      	lsls	r0, r2, #31
 8007c8e:	d404      	bmi.n	8007c9a <_fflush_r+0x3a>
 8007c90:	0599      	lsls	r1, r3, #22
 8007c92:	d402      	bmi.n	8007c9a <_fflush_r+0x3a>
 8007c94:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007c96:	f7fe fe9e 	bl	80069d6 <__retarget_lock_acquire_recursive>
 8007c9a:	4628      	mov	r0, r5
 8007c9c:	4621      	mov	r1, r4
 8007c9e:	f7ff ff59 	bl	8007b54 <__sflush_r>
 8007ca2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007ca4:	07da      	lsls	r2, r3, #31
 8007ca6:	4605      	mov	r5, r0
 8007ca8:	d4e0      	bmi.n	8007c6c <_fflush_r+0xc>
 8007caa:	89a3      	ldrh	r3, [r4, #12]
 8007cac:	059b      	lsls	r3, r3, #22
 8007cae:	d4dd      	bmi.n	8007c6c <_fflush_r+0xc>
 8007cb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007cb2:	f7fe fe91 	bl	80069d8 <__retarget_lock_release_recursive>
 8007cb6:	e7d9      	b.n	8007c6c <_fflush_r+0xc>
 8007cb8:	4b05      	ldr	r3, [pc, #20]	; (8007cd0 <_fflush_r+0x70>)
 8007cba:	429c      	cmp	r4, r3
 8007cbc:	d101      	bne.n	8007cc2 <_fflush_r+0x62>
 8007cbe:	68ac      	ldr	r4, [r5, #8]
 8007cc0:	e7df      	b.n	8007c82 <_fflush_r+0x22>
 8007cc2:	4b04      	ldr	r3, [pc, #16]	; (8007cd4 <_fflush_r+0x74>)
 8007cc4:	429c      	cmp	r4, r3
 8007cc6:	bf08      	it	eq
 8007cc8:	68ec      	ldreq	r4, [r5, #12]
 8007cca:	e7da      	b.n	8007c82 <_fflush_r+0x22>
 8007ccc:	0800950c 	.word	0x0800950c
 8007cd0:	0800952c 	.word	0x0800952c
 8007cd4:	080094ec 	.word	0x080094ec

08007cd8 <fiprintf>:
 8007cd8:	b40e      	push	{r1, r2, r3}
 8007cda:	b503      	push	{r0, r1, lr}
 8007cdc:	4601      	mov	r1, r0
 8007cde:	ab03      	add	r3, sp, #12
 8007ce0:	4805      	ldr	r0, [pc, #20]	; (8007cf8 <fiprintf+0x20>)
 8007ce2:	f853 2b04 	ldr.w	r2, [r3], #4
 8007ce6:	6800      	ldr	r0, [r0, #0]
 8007ce8:	9301      	str	r3, [sp, #4]
 8007cea:	f000 f8fd 	bl	8007ee8 <_vfiprintf_r>
 8007cee:	b002      	add	sp, #8
 8007cf0:	f85d eb04 	ldr.w	lr, [sp], #4
 8007cf4:	b003      	add	sp, #12
 8007cf6:	4770      	bx	lr
 8007cf8:	2000002c 	.word	0x2000002c

08007cfc <_lseek_r>:
 8007cfc:	b538      	push	{r3, r4, r5, lr}
 8007cfe:	4d07      	ldr	r5, [pc, #28]	; (8007d1c <_lseek_r+0x20>)
 8007d00:	4604      	mov	r4, r0
 8007d02:	4608      	mov	r0, r1
 8007d04:	4611      	mov	r1, r2
 8007d06:	2200      	movs	r2, #0
 8007d08:	602a      	str	r2, [r5, #0]
 8007d0a:	461a      	mov	r2, r3
 8007d0c:	f7fb fc7c 	bl	8003608 <_lseek>
 8007d10:	1c43      	adds	r3, r0, #1
 8007d12:	d102      	bne.n	8007d1a <_lseek_r+0x1e>
 8007d14:	682b      	ldr	r3, [r5, #0]
 8007d16:	b103      	cbz	r3, 8007d1a <_lseek_r+0x1e>
 8007d18:	6023      	str	r3, [r4, #0]
 8007d1a:	bd38      	pop	{r3, r4, r5, pc}
 8007d1c:	20000358 	.word	0x20000358

08007d20 <__swhatbuf_r>:
 8007d20:	b570      	push	{r4, r5, r6, lr}
 8007d22:	460e      	mov	r6, r1
 8007d24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007d28:	2900      	cmp	r1, #0
 8007d2a:	b096      	sub	sp, #88	; 0x58
 8007d2c:	4614      	mov	r4, r2
 8007d2e:	461d      	mov	r5, r3
 8007d30:	da08      	bge.n	8007d44 <__swhatbuf_r+0x24>
 8007d32:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8007d36:	2200      	movs	r2, #0
 8007d38:	602a      	str	r2, [r5, #0]
 8007d3a:	061a      	lsls	r2, r3, #24
 8007d3c:	d410      	bmi.n	8007d60 <__swhatbuf_r+0x40>
 8007d3e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8007d42:	e00e      	b.n	8007d62 <__swhatbuf_r+0x42>
 8007d44:	466a      	mov	r2, sp
 8007d46:	f000 fa19 	bl	800817c <_fstat_r>
 8007d4a:	2800      	cmp	r0, #0
 8007d4c:	dbf1      	blt.n	8007d32 <__swhatbuf_r+0x12>
 8007d4e:	9a01      	ldr	r2, [sp, #4]
 8007d50:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8007d54:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8007d58:	425a      	negs	r2, r3
 8007d5a:	415a      	adcs	r2, r3
 8007d5c:	602a      	str	r2, [r5, #0]
 8007d5e:	e7ee      	b.n	8007d3e <__swhatbuf_r+0x1e>
 8007d60:	2340      	movs	r3, #64	; 0x40
 8007d62:	2000      	movs	r0, #0
 8007d64:	6023      	str	r3, [r4, #0]
 8007d66:	b016      	add	sp, #88	; 0x58
 8007d68:	bd70      	pop	{r4, r5, r6, pc}
	...

08007d6c <__smakebuf_r>:
 8007d6c:	898b      	ldrh	r3, [r1, #12]
 8007d6e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007d70:	079d      	lsls	r5, r3, #30
 8007d72:	4606      	mov	r6, r0
 8007d74:	460c      	mov	r4, r1
 8007d76:	d507      	bpl.n	8007d88 <__smakebuf_r+0x1c>
 8007d78:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8007d7c:	6023      	str	r3, [r4, #0]
 8007d7e:	6123      	str	r3, [r4, #16]
 8007d80:	2301      	movs	r3, #1
 8007d82:	6163      	str	r3, [r4, #20]
 8007d84:	b002      	add	sp, #8
 8007d86:	bd70      	pop	{r4, r5, r6, pc}
 8007d88:	ab01      	add	r3, sp, #4
 8007d8a:	466a      	mov	r2, sp
 8007d8c:	f7ff ffc8 	bl	8007d20 <__swhatbuf_r>
 8007d90:	9900      	ldr	r1, [sp, #0]
 8007d92:	4605      	mov	r5, r0
 8007d94:	4630      	mov	r0, r6
 8007d96:	f7ff fb8d 	bl	80074b4 <_malloc_r>
 8007d9a:	b948      	cbnz	r0, 8007db0 <__smakebuf_r+0x44>
 8007d9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007da0:	059a      	lsls	r2, r3, #22
 8007da2:	d4ef      	bmi.n	8007d84 <__smakebuf_r+0x18>
 8007da4:	f023 0303 	bic.w	r3, r3, #3
 8007da8:	f043 0302 	orr.w	r3, r3, #2
 8007dac:	81a3      	strh	r3, [r4, #12]
 8007dae:	e7e3      	b.n	8007d78 <__smakebuf_r+0xc>
 8007db0:	4b0d      	ldr	r3, [pc, #52]	; (8007de8 <__smakebuf_r+0x7c>)
 8007db2:	62b3      	str	r3, [r6, #40]	; 0x28
 8007db4:	89a3      	ldrh	r3, [r4, #12]
 8007db6:	6020      	str	r0, [r4, #0]
 8007db8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007dbc:	81a3      	strh	r3, [r4, #12]
 8007dbe:	9b00      	ldr	r3, [sp, #0]
 8007dc0:	6163      	str	r3, [r4, #20]
 8007dc2:	9b01      	ldr	r3, [sp, #4]
 8007dc4:	6120      	str	r0, [r4, #16]
 8007dc6:	b15b      	cbz	r3, 8007de0 <__smakebuf_r+0x74>
 8007dc8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007dcc:	4630      	mov	r0, r6
 8007dce:	f000 f9e7 	bl	80081a0 <_isatty_r>
 8007dd2:	b128      	cbz	r0, 8007de0 <__smakebuf_r+0x74>
 8007dd4:	89a3      	ldrh	r3, [r4, #12]
 8007dd6:	f023 0303 	bic.w	r3, r3, #3
 8007dda:	f043 0301 	orr.w	r3, r3, #1
 8007dde:	81a3      	strh	r3, [r4, #12]
 8007de0:	89a0      	ldrh	r0, [r4, #12]
 8007de2:	4305      	orrs	r5, r0
 8007de4:	81a5      	strh	r5, [r4, #12]
 8007de6:	e7cd      	b.n	8007d84 <__smakebuf_r+0x18>
 8007de8:	0800614d 	.word	0x0800614d

08007dec <memmove>:
 8007dec:	4288      	cmp	r0, r1
 8007dee:	b510      	push	{r4, lr}
 8007df0:	eb01 0402 	add.w	r4, r1, r2
 8007df4:	d902      	bls.n	8007dfc <memmove+0x10>
 8007df6:	4284      	cmp	r4, r0
 8007df8:	4623      	mov	r3, r4
 8007dfa:	d807      	bhi.n	8007e0c <memmove+0x20>
 8007dfc:	1e43      	subs	r3, r0, #1
 8007dfe:	42a1      	cmp	r1, r4
 8007e00:	d008      	beq.n	8007e14 <memmove+0x28>
 8007e02:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007e06:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007e0a:	e7f8      	b.n	8007dfe <memmove+0x12>
 8007e0c:	4402      	add	r2, r0
 8007e0e:	4601      	mov	r1, r0
 8007e10:	428a      	cmp	r2, r1
 8007e12:	d100      	bne.n	8007e16 <memmove+0x2a>
 8007e14:	bd10      	pop	{r4, pc}
 8007e16:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007e1a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007e1e:	e7f7      	b.n	8007e10 <memmove+0x24>

08007e20 <__malloc_lock>:
 8007e20:	4801      	ldr	r0, [pc, #4]	; (8007e28 <__malloc_lock+0x8>)
 8007e22:	f7fe bdd8 	b.w	80069d6 <__retarget_lock_acquire_recursive>
 8007e26:	bf00      	nop
 8007e28:	2000034c 	.word	0x2000034c

08007e2c <__malloc_unlock>:
 8007e2c:	4801      	ldr	r0, [pc, #4]	; (8007e34 <__malloc_unlock+0x8>)
 8007e2e:	f7fe bdd3 	b.w	80069d8 <__retarget_lock_release_recursive>
 8007e32:	bf00      	nop
 8007e34:	2000034c 	.word	0x2000034c

08007e38 <_realloc_r>:
 8007e38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e3c:	4680      	mov	r8, r0
 8007e3e:	4614      	mov	r4, r2
 8007e40:	460e      	mov	r6, r1
 8007e42:	b921      	cbnz	r1, 8007e4e <_realloc_r+0x16>
 8007e44:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007e48:	4611      	mov	r1, r2
 8007e4a:	f7ff bb33 	b.w	80074b4 <_malloc_r>
 8007e4e:	b92a      	cbnz	r2, 8007e5c <_realloc_r+0x24>
 8007e50:	f7ff fac4 	bl	80073dc <_free_r>
 8007e54:	4625      	mov	r5, r4
 8007e56:	4628      	mov	r0, r5
 8007e58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e5c:	f000 f9b0 	bl	80081c0 <_malloc_usable_size_r>
 8007e60:	4284      	cmp	r4, r0
 8007e62:	4607      	mov	r7, r0
 8007e64:	d802      	bhi.n	8007e6c <_realloc_r+0x34>
 8007e66:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8007e6a:	d812      	bhi.n	8007e92 <_realloc_r+0x5a>
 8007e6c:	4621      	mov	r1, r4
 8007e6e:	4640      	mov	r0, r8
 8007e70:	f7ff fb20 	bl	80074b4 <_malloc_r>
 8007e74:	4605      	mov	r5, r0
 8007e76:	2800      	cmp	r0, #0
 8007e78:	d0ed      	beq.n	8007e56 <_realloc_r+0x1e>
 8007e7a:	42bc      	cmp	r4, r7
 8007e7c:	4622      	mov	r2, r4
 8007e7e:	4631      	mov	r1, r6
 8007e80:	bf28      	it	cs
 8007e82:	463a      	movcs	r2, r7
 8007e84:	f7fe fdc4 	bl	8006a10 <memcpy>
 8007e88:	4631      	mov	r1, r6
 8007e8a:	4640      	mov	r0, r8
 8007e8c:	f7ff faa6 	bl	80073dc <_free_r>
 8007e90:	e7e1      	b.n	8007e56 <_realloc_r+0x1e>
 8007e92:	4635      	mov	r5, r6
 8007e94:	e7df      	b.n	8007e56 <_realloc_r+0x1e>

08007e96 <__sfputc_r>:
 8007e96:	6893      	ldr	r3, [r2, #8]
 8007e98:	3b01      	subs	r3, #1
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	b410      	push	{r4}
 8007e9e:	6093      	str	r3, [r2, #8]
 8007ea0:	da08      	bge.n	8007eb4 <__sfputc_r+0x1e>
 8007ea2:	6994      	ldr	r4, [r2, #24]
 8007ea4:	42a3      	cmp	r3, r4
 8007ea6:	db01      	blt.n	8007eac <__sfputc_r+0x16>
 8007ea8:	290a      	cmp	r1, #10
 8007eaa:	d103      	bne.n	8007eb4 <__sfputc_r+0x1e>
 8007eac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007eb0:	f7ff bd42 	b.w	8007938 <__swbuf_r>
 8007eb4:	6813      	ldr	r3, [r2, #0]
 8007eb6:	1c58      	adds	r0, r3, #1
 8007eb8:	6010      	str	r0, [r2, #0]
 8007eba:	7019      	strb	r1, [r3, #0]
 8007ebc:	4608      	mov	r0, r1
 8007ebe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007ec2:	4770      	bx	lr

08007ec4 <__sfputs_r>:
 8007ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ec6:	4606      	mov	r6, r0
 8007ec8:	460f      	mov	r7, r1
 8007eca:	4614      	mov	r4, r2
 8007ecc:	18d5      	adds	r5, r2, r3
 8007ece:	42ac      	cmp	r4, r5
 8007ed0:	d101      	bne.n	8007ed6 <__sfputs_r+0x12>
 8007ed2:	2000      	movs	r0, #0
 8007ed4:	e007      	b.n	8007ee6 <__sfputs_r+0x22>
 8007ed6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007eda:	463a      	mov	r2, r7
 8007edc:	4630      	mov	r0, r6
 8007ede:	f7ff ffda 	bl	8007e96 <__sfputc_r>
 8007ee2:	1c43      	adds	r3, r0, #1
 8007ee4:	d1f3      	bne.n	8007ece <__sfputs_r+0xa>
 8007ee6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007ee8 <_vfiprintf_r>:
 8007ee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007eec:	460d      	mov	r5, r1
 8007eee:	b09d      	sub	sp, #116	; 0x74
 8007ef0:	4614      	mov	r4, r2
 8007ef2:	4698      	mov	r8, r3
 8007ef4:	4606      	mov	r6, r0
 8007ef6:	b118      	cbz	r0, 8007f00 <_vfiprintf_r+0x18>
 8007ef8:	6983      	ldr	r3, [r0, #24]
 8007efa:	b90b      	cbnz	r3, 8007f00 <_vfiprintf_r+0x18>
 8007efc:	f7fe f95a 	bl	80061b4 <__sinit>
 8007f00:	4b89      	ldr	r3, [pc, #548]	; (8008128 <_vfiprintf_r+0x240>)
 8007f02:	429d      	cmp	r5, r3
 8007f04:	d11b      	bne.n	8007f3e <_vfiprintf_r+0x56>
 8007f06:	6875      	ldr	r5, [r6, #4]
 8007f08:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007f0a:	07d9      	lsls	r1, r3, #31
 8007f0c:	d405      	bmi.n	8007f1a <_vfiprintf_r+0x32>
 8007f0e:	89ab      	ldrh	r3, [r5, #12]
 8007f10:	059a      	lsls	r2, r3, #22
 8007f12:	d402      	bmi.n	8007f1a <_vfiprintf_r+0x32>
 8007f14:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007f16:	f7fe fd5e 	bl	80069d6 <__retarget_lock_acquire_recursive>
 8007f1a:	89ab      	ldrh	r3, [r5, #12]
 8007f1c:	071b      	lsls	r3, r3, #28
 8007f1e:	d501      	bpl.n	8007f24 <_vfiprintf_r+0x3c>
 8007f20:	692b      	ldr	r3, [r5, #16]
 8007f22:	b9eb      	cbnz	r3, 8007f60 <_vfiprintf_r+0x78>
 8007f24:	4629      	mov	r1, r5
 8007f26:	4630      	mov	r0, r6
 8007f28:	f7ff fd78 	bl	8007a1c <__swsetup_r>
 8007f2c:	b1c0      	cbz	r0, 8007f60 <_vfiprintf_r+0x78>
 8007f2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007f30:	07dc      	lsls	r4, r3, #31
 8007f32:	d50e      	bpl.n	8007f52 <_vfiprintf_r+0x6a>
 8007f34:	f04f 30ff 	mov.w	r0, #4294967295
 8007f38:	b01d      	add	sp, #116	; 0x74
 8007f3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f3e:	4b7b      	ldr	r3, [pc, #492]	; (800812c <_vfiprintf_r+0x244>)
 8007f40:	429d      	cmp	r5, r3
 8007f42:	d101      	bne.n	8007f48 <_vfiprintf_r+0x60>
 8007f44:	68b5      	ldr	r5, [r6, #8]
 8007f46:	e7df      	b.n	8007f08 <_vfiprintf_r+0x20>
 8007f48:	4b79      	ldr	r3, [pc, #484]	; (8008130 <_vfiprintf_r+0x248>)
 8007f4a:	429d      	cmp	r5, r3
 8007f4c:	bf08      	it	eq
 8007f4e:	68f5      	ldreq	r5, [r6, #12]
 8007f50:	e7da      	b.n	8007f08 <_vfiprintf_r+0x20>
 8007f52:	89ab      	ldrh	r3, [r5, #12]
 8007f54:	0598      	lsls	r0, r3, #22
 8007f56:	d4ed      	bmi.n	8007f34 <_vfiprintf_r+0x4c>
 8007f58:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007f5a:	f7fe fd3d 	bl	80069d8 <__retarget_lock_release_recursive>
 8007f5e:	e7e9      	b.n	8007f34 <_vfiprintf_r+0x4c>
 8007f60:	2300      	movs	r3, #0
 8007f62:	9309      	str	r3, [sp, #36]	; 0x24
 8007f64:	2320      	movs	r3, #32
 8007f66:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007f6a:	f8cd 800c 	str.w	r8, [sp, #12]
 8007f6e:	2330      	movs	r3, #48	; 0x30
 8007f70:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8008134 <_vfiprintf_r+0x24c>
 8007f74:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007f78:	f04f 0901 	mov.w	r9, #1
 8007f7c:	4623      	mov	r3, r4
 8007f7e:	469a      	mov	sl, r3
 8007f80:	f813 2b01 	ldrb.w	r2, [r3], #1
 8007f84:	b10a      	cbz	r2, 8007f8a <_vfiprintf_r+0xa2>
 8007f86:	2a25      	cmp	r2, #37	; 0x25
 8007f88:	d1f9      	bne.n	8007f7e <_vfiprintf_r+0x96>
 8007f8a:	ebba 0b04 	subs.w	fp, sl, r4
 8007f8e:	d00b      	beq.n	8007fa8 <_vfiprintf_r+0xc0>
 8007f90:	465b      	mov	r3, fp
 8007f92:	4622      	mov	r2, r4
 8007f94:	4629      	mov	r1, r5
 8007f96:	4630      	mov	r0, r6
 8007f98:	f7ff ff94 	bl	8007ec4 <__sfputs_r>
 8007f9c:	3001      	adds	r0, #1
 8007f9e:	f000 80aa 	beq.w	80080f6 <_vfiprintf_r+0x20e>
 8007fa2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007fa4:	445a      	add	r2, fp
 8007fa6:	9209      	str	r2, [sp, #36]	; 0x24
 8007fa8:	f89a 3000 	ldrb.w	r3, [sl]
 8007fac:	2b00      	cmp	r3, #0
 8007fae:	f000 80a2 	beq.w	80080f6 <_vfiprintf_r+0x20e>
 8007fb2:	2300      	movs	r3, #0
 8007fb4:	f04f 32ff 	mov.w	r2, #4294967295
 8007fb8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007fbc:	f10a 0a01 	add.w	sl, sl, #1
 8007fc0:	9304      	str	r3, [sp, #16]
 8007fc2:	9307      	str	r3, [sp, #28]
 8007fc4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007fc8:	931a      	str	r3, [sp, #104]	; 0x68
 8007fca:	4654      	mov	r4, sl
 8007fcc:	2205      	movs	r2, #5
 8007fce:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007fd2:	4858      	ldr	r0, [pc, #352]	; (8008134 <_vfiprintf_r+0x24c>)
 8007fd4:	f7f8 f90c 	bl	80001f0 <memchr>
 8007fd8:	9a04      	ldr	r2, [sp, #16]
 8007fda:	b9d8      	cbnz	r0, 8008014 <_vfiprintf_r+0x12c>
 8007fdc:	06d1      	lsls	r1, r2, #27
 8007fde:	bf44      	itt	mi
 8007fe0:	2320      	movmi	r3, #32
 8007fe2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007fe6:	0713      	lsls	r3, r2, #28
 8007fe8:	bf44      	itt	mi
 8007fea:	232b      	movmi	r3, #43	; 0x2b
 8007fec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007ff0:	f89a 3000 	ldrb.w	r3, [sl]
 8007ff4:	2b2a      	cmp	r3, #42	; 0x2a
 8007ff6:	d015      	beq.n	8008024 <_vfiprintf_r+0x13c>
 8007ff8:	9a07      	ldr	r2, [sp, #28]
 8007ffa:	4654      	mov	r4, sl
 8007ffc:	2000      	movs	r0, #0
 8007ffe:	f04f 0c0a 	mov.w	ip, #10
 8008002:	4621      	mov	r1, r4
 8008004:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008008:	3b30      	subs	r3, #48	; 0x30
 800800a:	2b09      	cmp	r3, #9
 800800c:	d94e      	bls.n	80080ac <_vfiprintf_r+0x1c4>
 800800e:	b1b0      	cbz	r0, 800803e <_vfiprintf_r+0x156>
 8008010:	9207      	str	r2, [sp, #28]
 8008012:	e014      	b.n	800803e <_vfiprintf_r+0x156>
 8008014:	eba0 0308 	sub.w	r3, r0, r8
 8008018:	fa09 f303 	lsl.w	r3, r9, r3
 800801c:	4313      	orrs	r3, r2
 800801e:	9304      	str	r3, [sp, #16]
 8008020:	46a2      	mov	sl, r4
 8008022:	e7d2      	b.n	8007fca <_vfiprintf_r+0xe2>
 8008024:	9b03      	ldr	r3, [sp, #12]
 8008026:	1d19      	adds	r1, r3, #4
 8008028:	681b      	ldr	r3, [r3, #0]
 800802a:	9103      	str	r1, [sp, #12]
 800802c:	2b00      	cmp	r3, #0
 800802e:	bfbb      	ittet	lt
 8008030:	425b      	neglt	r3, r3
 8008032:	f042 0202 	orrlt.w	r2, r2, #2
 8008036:	9307      	strge	r3, [sp, #28]
 8008038:	9307      	strlt	r3, [sp, #28]
 800803a:	bfb8      	it	lt
 800803c:	9204      	strlt	r2, [sp, #16]
 800803e:	7823      	ldrb	r3, [r4, #0]
 8008040:	2b2e      	cmp	r3, #46	; 0x2e
 8008042:	d10c      	bne.n	800805e <_vfiprintf_r+0x176>
 8008044:	7863      	ldrb	r3, [r4, #1]
 8008046:	2b2a      	cmp	r3, #42	; 0x2a
 8008048:	d135      	bne.n	80080b6 <_vfiprintf_r+0x1ce>
 800804a:	9b03      	ldr	r3, [sp, #12]
 800804c:	1d1a      	adds	r2, r3, #4
 800804e:	681b      	ldr	r3, [r3, #0]
 8008050:	9203      	str	r2, [sp, #12]
 8008052:	2b00      	cmp	r3, #0
 8008054:	bfb8      	it	lt
 8008056:	f04f 33ff 	movlt.w	r3, #4294967295
 800805a:	3402      	adds	r4, #2
 800805c:	9305      	str	r3, [sp, #20]
 800805e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8008144 <_vfiprintf_r+0x25c>
 8008062:	7821      	ldrb	r1, [r4, #0]
 8008064:	2203      	movs	r2, #3
 8008066:	4650      	mov	r0, sl
 8008068:	f7f8 f8c2 	bl	80001f0 <memchr>
 800806c:	b140      	cbz	r0, 8008080 <_vfiprintf_r+0x198>
 800806e:	2340      	movs	r3, #64	; 0x40
 8008070:	eba0 000a 	sub.w	r0, r0, sl
 8008074:	fa03 f000 	lsl.w	r0, r3, r0
 8008078:	9b04      	ldr	r3, [sp, #16]
 800807a:	4303      	orrs	r3, r0
 800807c:	3401      	adds	r4, #1
 800807e:	9304      	str	r3, [sp, #16]
 8008080:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008084:	482c      	ldr	r0, [pc, #176]	; (8008138 <_vfiprintf_r+0x250>)
 8008086:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800808a:	2206      	movs	r2, #6
 800808c:	f7f8 f8b0 	bl	80001f0 <memchr>
 8008090:	2800      	cmp	r0, #0
 8008092:	d03f      	beq.n	8008114 <_vfiprintf_r+0x22c>
 8008094:	4b29      	ldr	r3, [pc, #164]	; (800813c <_vfiprintf_r+0x254>)
 8008096:	bb1b      	cbnz	r3, 80080e0 <_vfiprintf_r+0x1f8>
 8008098:	9b03      	ldr	r3, [sp, #12]
 800809a:	3307      	adds	r3, #7
 800809c:	f023 0307 	bic.w	r3, r3, #7
 80080a0:	3308      	adds	r3, #8
 80080a2:	9303      	str	r3, [sp, #12]
 80080a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80080a6:	443b      	add	r3, r7
 80080a8:	9309      	str	r3, [sp, #36]	; 0x24
 80080aa:	e767      	b.n	8007f7c <_vfiprintf_r+0x94>
 80080ac:	fb0c 3202 	mla	r2, ip, r2, r3
 80080b0:	460c      	mov	r4, r1
 80080b2:	2001      	movs	r0, #1
 80080b4:	e7a5      	b.n	8008002 <_vfiprintf_r+0x11a>
 80080b6:	2300      	movs	r3, #0
 80080b8:	3401      	adds	r4, #1
 80080ba:	9305      	str	r3, [sp, #20]
 80080bc:	4619      	mov	r1, r3
 80080be:	f04f 0c0a 	mov.w	ip, #10
 80080c2:	4620      	mov	r0, r4
 80080c4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80080c8:	3a30      	subs	r2, #48	; 0x30
 80080ca:	2a09      	cmp	r2, #9
 80080cc:	d903      	bls.n	80080d6 <_vfiprintf_r+0x1ee>
 80080ce:	2b00      	cmp	r3, #0
 80080d0:	d0c5      	beq.n	800805e <_vfiprintf_r+0x176>
 80080d2:	9105      	str	r1, [sp, #20]
 80080d4:	e7c3      	b.n	800805e <_vfiprintf_r+0x176>
 80080d6:	fb0c 2101 	mla	r1, ip, r1, r2
 80080da:	4604      	mov	r4, r0
 80080dc:	2301      	movs	r3, #1
 80080de:	e7f0      	b.n	80080c2 <_vfiprintf_r+0x1da>
 80080e0:	ab03      	add	r3, sp, #12
 80080e2:	9300      	str	r3, [sp, #0]
 80080e4:	462a      	mov	r2, r5
 80080e6:	4b16      	ldr	r3, [pc, #88]	; (8008140 <_vfiprintf_r+0x258>)
 80080e8:	a904      	add	r1, sp, #16
 80080ea:	4630      	mov	r0, r6
 80080ec:	f7fb fce4 	bl	8003ab8 <_printf_float>
 80080f0:	4607      	mov	r7, r0
 80080f2:	1c78      	adds	r0, r7, #1
 80080f4:	d1d6      	bne.n	80080a4 <_vfiprintf_r+0x1bc>
 80080f6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80080f8:	07d9      	lsls	r1, r3, #31
 80080fa:	d405      	bmi.n	8008108 <_vfiprintf_r+0x220>
 80080fc:	89ab      	ldrh	r3, [r5, #12]
 80080fe:	059a      	lsls	r2, r3, #22
 8008100:	d402      	bmi.n	8008108 <_vfiprintf_r+0x220>
 8008102:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8008104:	f7fe fc68 	bl	80069d8 <__retarget_lock_release_recursive>
 8008108:	89ab      	ldrh	r3, [r5, #12]
 800810a:	065b      	lsls	r3, r3, #25
 800810c:	f53f af12 	bmi.w	8007f34 <_vfiprintf_r+0x4c>
 8008110:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008112:	e711      	b.n	8007f38 <_vfiprintf_r+0x50>
 8008114:	ab03      	add	r3, sp, #12
 8008116:	9300      	str	r3, [sp, #0]
 8008118:	462a      	mov	r2, r5
 800811a:	4b09      	ldr	r3, [pc, #36]	; (8008140 <_vfiprintf_r+0x258>)
 800811c:	a904      	add	r1, sp, #16
 800811e:	4630      	mov	r0, r6
 8008120:	f7fb ff6e 	bl	8004000 <_printf_i>
 8008124:	e7e4      	b.n	80080f0 <_vfiprintf_r+0x208>
 8008126:	bf00      	nop
 8008128:	0800950c 	.word	0x0800950c
 800812c:	0800952c 	.word	0x0800952c
 8008130:	080094ec 	.word	0x080094ec
 8008134:	08009724 	.word	0x08009724
 8008138:	0800972e 	.word	0x0800972e
 800813c:	08003ab9 	.word	0x08003ab9
 8008140:	08007ec5 	.word	0x08007ec5
 8008144:	0800972a 	.word	0x0800972a

08008148 <_read_r>:
 8008148:	b538      	push	{r3, r4, r5, lr}
 800814a:	4d07      	ldr	r5, [pc, #28]	; (8008168 <_read_r+0x20>)
 800814c:	4604      	mov	r4, r0
 800814e:	4608      	mov	r0, r1
 8008150:	4611      	mov	r1, r2
 8008152:	2200      	movs	r2, #0
 8008154:	602a      	str	r2, [r5, #0]
 8008156:	461a      	mov	r2, r3
 8008158:	f7fb f9f6 	bl	8003548 <_read>
 800815c:	1c43      	adds	r3, r0, #1
 800815e:	d102      	bne.n	8008166 <_read_r+0x1e>
 8008160:	682b      	ldr	r3, [r5, #0]
 8008162:	b103      	cbz	r3, 8008166 <_read_r+0x1e>
 8008164:	6023      	str	r3, [r4, #0]
 8008166:	bd38      	pop	{r3, r4, r5, pc}
 8008168:	20000358 	.word	0x20000358

0800816c <abort>:
 800816c:	b508      	push	{r3, lr}
 800816e:	2006      	movs	r0, #6
 8008170:	f000 f856 	bl	8008220 <raise>
 8008174:	2001      	movs	r0, #1
 8008176:	f7fb f9dd 	bl	8003534 <_exit>
	...

0800817c <_fstat_r>:
 800817c:	b538      	push	{r3, r4, r5, lr}
 800817e:	4d07      	ldr	r5, [pc, #28]	; (800819c <_fstat_r+0x20>)
 8008180:	2300      	movs	r3, #0
 8008182:	4604      	mov	r4, r0
 8008184:	4608      	mov	r0, r1
 8008186:	4611      	mov	r1, r2
 8008188:	602b      	str	r3, [r5, #0]
 800818a:	f7fb fa22 	bl	80035d2 <_fstat>
 800818e:	1c43      	adds	r3, r0, #1
 8008190:	d102      	bne.n	8008198 <_fstat_r+0x1c>
 8008192:	682b      	ldr	r3, [r5, #0]
 8008194:	b103      	cbz	r3, 8008198 <_fstat_r+0x1c>
 8008196:	6023      	str	r3, [r4, #0]
 8008198:	bd38      	pop	{r3, r4, r5, pc}
 800819a:	bf00      	nop
 800819c:	20000358 	.word	0x20000358

080081a0 <_isatty_r>:
 80081a0:	b538      	push	{r3, r4, r5, lr}
 80081a2:	4d06      	ldr	r5, [pc, #24]	; (80081bc <_isatty_r+0x1c>)
 80081a4:	2300      	movs	r3, #0
 80081a6:	4604      	mov	r4, r0
 80081a8:	4608      	mov	r0, r1
 80081aa:	602b      	str	r3, [r5, #0]
 80081ac:	f7fb fa21 	bl	80035f2 <_isatty>
 80081b0:	1c43      	adds	r3, r0, #1
 80081b2:	d102      	bne.n	80081ba <_isatty_r+0x1a>
 80081b4:	682b      	ldr	r3, [r5, #0]
 80081b6:	b103      	cbz	r3, 80081ba <_isatty_r+0x1a>
 80081b8:	6023      	str	r3, [r4, #0]
 80081ba:	bd38      	pop	{r3, r4, r5, pc}
 80081bc:	20000358 	.word	0x20000358

080081c0 <_malloc_usable_size_r>:
 80081c0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80081c4:	1f18      	subs	r0, r3, #4
 80081c6:	2b00      	cmp	r3, #0
 80081c8:	bfbc      	itt	lt
 80081ca:	580b      	ldrlt	r3, [r1, r0]
 80081cc:	18c0      	addlt	r0, r0, r3
 80081ce:	4770      	bx	lr

080081d0 <_raise_r>:
 80081d0:	291f      	cmp	r1, #31
 80081d2:	b538      	push	{r3, r4, r5, lr}
 80081d4:	4604      	mov	r4, r0
 80081d6:	460d      	mov	r5, r1
 80081d8:	d904      	bls.n	80081e4 <_raise_r+0x14>
 80081da:	2316      	movs	r3, #22
 80081dc:	6003      	str	r3, [r0, #0]
 80081de:	f04f 30ff 	mov.w	r0, #4294967295
 80081e2:	bd38      	pop	{r3, r4, r5, pc}
 80081e4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80081e6:	b112      	cbz	r2, 80081ee <_raise_r+0x1e>
 80081e8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80081ec:	b94b      	cbnz	r3, 8008202 <_raise_r+0x32>
 80081ee:	4620      	mov	r0, r4
 80081f0:	f000 f830 	bl	8008254 <_getpid_r>
 80081f4:	462a      	mov	r2, r5
 80081f6:	4601      	mov	r1, r0
 80081f8:	4620      	mov	r0, r4
 80081fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80081fe:	f000 b817 	b.w	8008230 <_kill_r>
 8008202:	2b01      	cmp	r3, #1
 8008204:	d00a      	beq.n	800821c <_raise_r+0x4c>
 8008206:	1c59      	adds	r1, r3, #1
 8008208:	d103      	bne.n	8008212 <_raise_r+0x42>
 800820a:	2316      	movs	r3, #22
 800820c:	6003      	str	r3, [r0, #0]
 800820e:	2001      	movs	r0, #1
 8008210:	e7e7      	b.n	80081e2 <_raise_r+0x12>
 8008212:	2400      	movs	r4, #0
 8008214:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8008218:	4628      	mov	r0, r5
 800821a:	4798      	blx	r3
 800821c:	2000      	movs	r0, #0
 800821e:	e7e0      	b.n	80081e2 <_raise_r+0x12>

08008220 <raise>:
 8008220:	4b02      	ldr	r3, [pc, #8]	; (800822c <raise+0xc>)
 8008222:	4601      	mov	r1, r0
 8008224:	6818      	ldr	r0, [r3, #0]
 8008226:	f7ff bfd3 	b.w	80081d0 <_raise_r>
 800822a:	bf00      	nop
 800822c:	2000002c 	.word	0x2000002c

08008230 <_kill_r>:
 8008230:	b538      	push	{r3, r4, r5, lr}
 8008232:	4d07      	ldr	r5, [pc, #28]	; (8008250 <_kill_r+0x20>)
 8008234:	2300      	movs	r3, #0
 8008236:	4604      	mov	r4, r0
 8008238:	4608      	mov	r0, r1
 800823a:	4611      	mov	r1, r2
 800823c:	602b      	str	r3, [r5, #0]
 800823e:	f7fb f969 	bl	8003514 <_kill>
 8008242:	1c43      	adds	r3, r0, #1
 8008244:	d102      	bne.n	800824c <_kill_r+0x1c>
 8008246:	682b      	ldr	r3, [r5, #0]
 8008248:	b103      	cbz	r3, 800824c <_kill_r+0x1c>
 800824a:	6023      	str	r3, [r4, #0]
 800824c:	bd38      	pop	{r3, r4, r5, pc}
 800824e:	bf00      	nop
 8008250:	20000358 	.word	0x20000358

08008254 <_getpid_r>:
 8008254:	f7fb b956 	b.w	8003504 <_getpid>

08008258 <atanf>:
 8008258:	b538      	push	{r3, r4, r5, lr}
 800825a:	ee10 5a10 	vmov	r5, s0
 800825e:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8008262:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 8008266:	eef0 7a40 	vmov.f32	s15, s0
 800826a:	db10      	blt.n	800828e <atanf+0x36>
 800826c:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8008270:	dd04      	ble.n	800827c <atanf+0x24>
 8008272:	ee70 7a00 	vadd.f32	s15, s0, s0
 8008276:	eeb0 0a67 	vmov.f32	s0, s15
 800827a:	bd38      	pop	{r3, r4, r5, pc}
 800827c:	eddf 7a4d 	vldr	s15, [pc, #308]	; 80083b4 <atanf+0x15c>
 8008280:	ed9f 0a4d 	vldr	s0, [pc, #308]	; 80083b8 <atanf+0x160>
 8008284:	2d00      	cmp	r5, #0
 8008286:	bfd8      	it	le
 8008288:	eef0 7a40 	vmovle.f32	s15, s0
 800828c:	e7f3      	b.n	8008276 <atanf+0x1e>
 800828e:	4b4b      	ldr	r3, [pc, #300]	; (80083bc <atanf+0x164>)
 8008290:	429c      	cmp	r4, r3
 8008292:	dc10      	bgt.n	80082b6 <atanf+0x5e>
 8008294:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 8008298:	da0a      	bge.n	80082b0 <atanf+0x58>
 800829a:	ed9f 7a49 	vldr	s14, [pc, #292]	; 80083c0 <atanf+0x168>
 800829e:	ee30 7a07 	vadd.f32	s14, s0, s14
 80082a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80082a6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80082aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082ae:	dce2      	bgt.n	8008276 <atanf+0x1e>
 80082b0:	f04f 33ff 	mov.w	r3, #4294967295
 80082b4:	e013      	b.n	80082de <atanf+0x86>
 80082b6:	f000 f8e7 	bl	8008488 <fabsf>
 80082ba:	4b42      	ldr	r3, [pc, #264]	; (80083c4 <atanf+0x16c>)
 80082bc:	429c      	cmp	r4, r3
 80082be:	dc4f      	bgt.n	8008360 <atanf+0x108>
 80082c0:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 80082c4:	429c      	cmp	r4, r3
 80082c6:	dc41      	bgt.n	800834c <atanf+0xf4>
 80082c8:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 80082cc:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 80082d0:	eea0 7a27 	vfma.f32	s14, s0, s15
 80082d4:	2300      	movs	r3, #0
 80082d6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80082da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80082de:	1c5a      	adds	r2, r3, #1
 80082e0:	ee27 6aa7 	vmul.f32	s12, s15, s15
 80082e4:	ed9f 7a38 	vldr	s14, [pc, #224]	; 80083c8 <atanf+0x170>
 80082e8:	eddf 5a38 	vldr	s11, [pc, #224]	; 80083cc <atanf+0x174>
 80082ec:	ed9f 5a38 	vldr	s10, [pc, #224]	; 80083d0 <atanf+0x178>
 80082f0:	ee66 6a06 	vmul.f32	s13, s12, s12
 80082f4:	eee6 5a87 	vfma.f32	s11, s13, s14
 80082f8:	ed9f 7a36 	vldr	s14, [pc, #216]	; 80083d4 <atanf+0x17c>
 80082fc:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8008300:	eddf 5a35 	vldr	s11, [pc, #212]	; 80083d8 <atanf+0x180>
 8008304:	eee7 5a26 	vfma.f32	s11, s14, s13
 8008308:	ed9f 7a34 	vldr	s14, [pc, #208]	; 80083dc <atanf+0x184>
 800830c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8008310:	eddf 5a33 	vldr	s11, [pc, #204]	; 80083e0 <atanf+0x188>
 8008314:	eee7 5a26 	vfma.f32	s11, s14, s13
 8008318:	ed9f 7a32 	vldr	s14, [pc, #200]	; 80083e4 <atanf+0x18c>
 800831c:	eea6 5a87 	vfma.f32	s10, s13, s14
 8008320:	ed9f 7a31 	vldr	s14, [pc, #196]	; 80083e8 <atanf+0x190>
 8008324:	eea5 7a26 	vfma.f32	s14, s10, s13
 8008328:	ed9f 5a30 	vldr	s10, [pc, #192]	; 80083ec <atanf+0x194>
 800832c:	eea7 5a26 	vfma.f32	s10, s14, s13
 8008330:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 80083f0 <atanf+0x198>
 8008334:	eea5 7a26 	vfma.f32	s14, s10, s13
 8008338:	ee27 7a26 	vmul.f32	s14, s14, s13
 800833c:	eea5 7a86 	vfma.f32	s14, s11, s12
 8008340:	ee27 7a87 	vmul.f32	s14, s15, s14
 8008344:	d121      	bne.n	800838a <atanf+0x132>
 8008346:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800834a:	e794      	b.n	8008276 <atanf+0x1e>
 800834c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8008350:	ee30 7a67 	vsub.f32	s14, s0, s15
 8008354:	ee30 0a27 	vadd.f32	s0, s0, s15
 8008358:	2301      	movs	r3, #1
 800835a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800835e:	e7be      	b.n	80082de <atanf+0x86>
 8008360:	4b24      	ldr	r3, [pc, #144]	; (80083f4 <atanf+0x19c>)
 8008362:	429c      	cmp	r4, r3
 8008364:	dc0b      	bgt.n	800837e <atanf+0x126>
 8008366:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 800836a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800836e:	eea0 7a27 	vfma.f32	s14, s0, s15
 8008372:	2302      	movs	r3, #2
 8008374:	ee70 6a67 	vsub.f32	s13, s0, s15
 8008378:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800837c:	e7af      	b.n	80082de <atanf+0x86>
 800837e:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8008382:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8008386:	2303      	movs	r3, #3
 8008388:	e7a9      	b.n	80082de <atanf+0x86>
 800838a:	4a1b      	ldr	r2, [pc, #108]	; (80083f8 <atanf+0x1a0>)
 800838c:	491b      	ldr	r1, [pc, #108]	; (80083fc <atanf+0x1a4>)
 800838e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8008392:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8008396:	ed93 0a00 	vldr	s0, [r3]
 800839a:	ee37 7a40 	vsub.f32	s14, s14, s0
 800839e:	ed92 0a00 	vldr	s0, [r2]
 80083a2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80083a6:	2d00      	cmp	r5, #0
 80083a8:	ee70 7a67 	vsub.f32	s15, s0, s15
 80083ac:	bfb8      	it	lt
 80083ae:	eef1 7a67 	vneglt.f32	s15, s15
 80083b2:	e760      	b.n	8008276 <atanf+0x1e>
 80083b4:	3fc90fdb 	.word	0x3fc90fdb
 80083b8:	bfc90fdb 	.word	0xbfc90fdb
 80083bc:	3edfffff 	.word	0x3edfffff
 80083c0:	7149f2ca 	.word	0x7149f2ca
 80083c4:	3f97ffff 	.word	0x3f97ffff
 80083c8:	3c8569d7 	.word	0x3c8569d7
 80083cc:	3d4bda59 	.word	0x3d4bda59
 80083d0:	bd6ef16b 	.word	0xbd6ef16b
 80083d4:	3d886b35 	.word	0x3d886b35
 80083d8:	3dba2e6e 	.word	0x3dba2e6e
 80083dc:	3e124925 	.word	0x3e124925
 80083e0:	3eaaaaab 	.word	0x3eaaaaab
 80083e4:	bd15a221 	.word	0xbd15a221
 80083e8:	bd9d8795 	.word	0xbd9d8795
 80083ec:	bde38e38 	.word	0xbde38e38
 80083f0:	be4ccccd 	.word	0xbe4ccccd
 80083f4:	401bffff 	.word	0x401bffff
 80083f8:	08009774 	.word	0x08009774
 80083fc:	08009784 	.word	0x08009784

08008400 <cosf>:
 8008400:	ee10 3a10 	vmov	r3, s0
 8008404:	b507      	push	{r0, r1, r2, lr}
 8008406:	4a1e      	ldr	r2, [pc, #120]	; (8008480 <cosf+0x80>)
 8008408:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800840c:	4293      	cmp	r3, r2
 800840e:	dc06      	bgt.n	800841e <cosf+0x1e>
 8008410:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8008484 <cosf+0x84>
 8008414:	b003      	add	sp, #12
 8008416:	f85d eb04 	ldr.w	lr, [sp], #4
 800841a:	f000 ba8d 	b.w	8008938 <__kernel_cosf>
 800841e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008422:	db04      	blt.n	800842e <cosf+0x2e>
 8008424:	ee30 0a40 	vsub.f32	s0, s0, s0
 8008428:	b003      	add	sp, #12
 800842a:	f85d fb04 	ldr.w	pc, [sp], #4
 800842e:	4668      	mov	r0, sp
 8008430:	f000 f946 	bl	80086c0 <__ieee754_rem_pio2f>
 8008434:	f000 0003 	and.w	r0, r0, #3
 8008438:	2801      	cmp	r0, #1
 800843a:	d009      	beq.n	8008450 <cosf+0x50>
 800843c:	2802      	cmp	r0, #2
 800843e:	d010      	beq.n	8008462 <cosf+0x62>
 8008440:	b9b0      	cbnz	r0, 8008470 <cosf+0x70>
 8008442:	eddd 0a01 	vldr	s1, [sp, #4]
 8008446:	ed9d 0a00 	vldr	s0, [sp]
 800844a:	f000 fa75 	bl	8008938 <__kernel_cosf>
 800844e:	e7eb      	b.n	8008428 <cosf+0x28>
 8008450:	eddd 0a01 	vldr	s1, [sp, #4]
 8008454:	ed9d 0a00 	vldr	s0, [sp]
 8008458:	f000 fd44 	bl	8008ee4 <__kernel_sinf>
 800845c:	eeb1 0a40 	vneg.f32	s0, s0
 8008460:	e7e2      	b.n	8008428 <cosf+0x28>
 8008462:	eddd 0a01 	vldr	s1, [sp, #4]
 8008466:	ed9d 0a00 	vldr	s0, [sp]
 800846a:	f000 fa65 	bl	8008938 <__kernel_cosf>
 800846e:	e7f5      	b.n	800845c <cosf+0x5c>
 8008470:	eddd 0a01 	vldr	s1, [sp, #4]
 8008474:	ed9d 0a00 	vldr	s0, [sp]
 8008478:	2001      	movs	r0, #1
 800847a:	f000 fd33 	bl	8008ee4 <__kernel_sinf>
 800847e:	e7d3      	b.n	8008428 <cosf+0x28>
 8008480:	3f490fd8 	.word	0x3f490fd8
 8008484:	00000000 	.word	0x00000000

08008488 <fabsf>:
 8008488:	ee10 3a10 	vmov	r3, s0
 800848c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008490:	ee00 3a10 	vmov	s0, r3
 8008494:	4770      	bx	lr
	...

08008498 <sinf>:
 8008498:	ee10 3a10 	vmov	r3, s0
 800849c:	b507      	push	{r0, r1, r2, lr}
 800849e:	4a1f      	ldr	r2, [pc, #124]	; (800851c <sinf+0x84>)
 80084a0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80084a4:	4293      	cmp	r3, r2
 80084a6:	dc07      	bgt.n	80084b8 <sinf+0x20>
 80084a8:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8008520 <sinf+0x88>
 80084ac:	2000      	movs	r0, #0
 80084ae:	b003      	add	sp, #12
 80084b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80084b4:	f000 bd16 	b.w	8008ee4 <__kernel_sinf>
 80084b8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80084bc:	db04      	blt.n	80084c8 <sinf+0x30>
 80084be:	ee30 0a40 	vsub.f32	s0, s0, s0
 80084c2:	b003      	add	sp, #12
 80084c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80084c8:	4668      	mov	r0, sp
 80084ca:	f000 f8f9 	bl	80086c0 <__ieee754_rem_pio2f>
 80084ce:	f000 0003 	and.w	r0, r0, #3
 80084d2:	2801      	cmp	r0, #1
 80084d4:	d00a      	beq.n	80084ec <sinf+0x54>
 80084d6:	2802      	cmp	r0, #2
 80084d8:	d00f      	beq.n	80084fa <sinf+0x62>
 80084da:	b9c0      	cbnz	r0, 800850e <sinf+0x76>
 80084dc:	eddd 0a01 	vldr	s1, [sp, #4]
 80084e0:	ed9d 0a00 	vldr	s0, [sp]
 80084e4:	2001      	movs	r0, #1
 80084e6:	f000 fcfd 	bl	8008ee4 <__kernel_sinf>
 80084ea:	e7ea      	b.n	80084c2 <sinf+0x2a>
 80084ec:	eddd 0a01 	vldr	s1, [sp, #4]
 80084f0:	ed9d 0a00 	vldr	s0, [sp]
 80084f4:	f000 fa20 	bl	8008938 <__kernel_cosf>
 80084f8:	e7e3      	b.n	80084c2 <sinf+0x2a>
 80084fa:	eddd 0a01 	vldr	s1, [sp, #4]
 80084fe:	ed9d 0a00 	vldr	s0, [sp]
 8008502:	2001      	movs	r0, #1
 8008504:	f000 fcee 	bl	8008ee4 <__kernel_sinf>
 8008508:	eeb1 0a40 	vneg.f32	s0, s0
 800850c:	e7d9      	b.n	80084c2 <sinf+0x2a>
 800850e:	eddd 0a01 	vldr	s1, [sp, #4]
 8008512:	ed9d 0a00 	vldr	s0, [sp]
 8008516:	f000 fa0f 	bl	8008938 <__kernel_cosf>
 800851a:	e7f5      	b.n	8008508 <sinf+0x70>
 800851c:	3f490fd8 	.word	0x3f490fd8
 8008520:	00000000 	.word	0x00000000

08008524 <tanf>:
 8008524:	ee10 3a10 	vmov	r3, s0
 8008528:	b507      	push	{r0, r1, r2, lr}
 800852a:	4a12      	ldr	r2, [pc, #72]	; (8008574 <tanf+0x50>)
 800852c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008530:	4293      	cmp	r3, r2
 8008532:	dc07      	bgt.n	8008544 <tanf+0x20>
 8008534:	eddf 0a10 	vldr	s1, [pc, #64]	; 8008578 <tanf+0x54>
 8008538:	2001      	movs	r0, #1
 800853a:	b003      	add	sp, #12
 800853c:	f85d eb04 	ldr.w	lr, [sp], #4
 8008540:	f000 bd18 	b.w	8008f74 <__kernel_tanf>
 8008544:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008548:	db04      	blt.n	8008554 <tanf+0x30>
 800854a:	ee30 0a40 	vsub.f32	s0, s0, s0
 800854e:	b003      	add	sp, #12
 8008550:	f85d fb04 	ldr.w	pc, [sp], #4
 8008554:	4668      	mov	r0, sp
 8008556:	f000 f8b3 	bl	80086c0 <__ieee754_rem_pio2f>
 800855a:	0040      	lsls	r0, r0, #1
 800855c:	f000 0002 	and.w	r0, r0, #2
 8008560:	eddd 0a01 	vldr	s1, [sp, #4]
 8008564:	ed9d 0a00 	vldr	s0, [sp]
 8008568:	f1c0 0001 	rsb	r0, r0, #1
 800856c:	f000 fd02 	bl	8008f74 <__kernel_tanf>
 8008570:	e7ed      	b.n	800854e <tanf+0x2a>
 8008572:	bf00      	nop
 8008574:	3f490fda 	.word	0x3f490fda
 8008578:	00000000 	.word	0x00000000

0800857c <atan2f>:
 800857c:	f000 b800 	b.w	8008580 <__ieee754_atan2f>

08008580 <__ieee754_atan2f>:
 8008580:	ee10 2a90 	vmov	r2, s1
 8008584:	f022 4100 	bic.w	r1, r2, #2147483648	; 0x80000000
 8008588:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 800858c:	b510      	push	{r4, lr}
 800858e:	eef0 7a40 	vmov.f32	s15, s0
 8008592:	dc06      	bgt.n	80085a2 <__ieee754_atan2f+0x22>
 8008594:	ee10 0a10 	vmov	r0, s0
 8008598:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
 800859c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80085a0:	dd04      	ble.n	80085ac <__ieee754_atan2f+0x2c>
 80085a2:	ee77 7aa0 	vadd.f32	s15, s15, s1
 80085a6:	eeb0 0a67 	vmov.f32	s0, s15
 80085aa:	bd10      	pop	{r4, pc}
 80085ac:	f1b2 5f7e 	cmp.w	r2, #1065353216	; 0x3f800000
 80085b0:	d103      	bne.n	80085ba <__ieee754_atan2f+0x3a>
 80085b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80085b6:	f7ff be4f 	b.w	8008258 <atanf>
 80085ba:	1794      	asrs	r4, r2, #30
 80085bc:	f004 0402 	and.w	r4, r4, #2
 80085c0:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 80085c4:	b943      	cbnz	r3, 80085d8 <__ieee754_atan2f+0x58>
 80085c6:	2c02      	cmp	r4, #2
 80085c8:	d05e      	beq.n	8008688 <__ieee754_atan2f+0x108>
 80085ca:	ed9f 7a34 	vldr	s14, [pc, #208]	; 800869c <__ieee754_atan2f+0x11c>
 80085ce:	2c03      	cmp	r4, #3
 80085d0:	bf08      	it	eq
 80085d2:	eef0 7a47 	vmoveq.f32	s15, s14
 80085d6:	e7e6      	b.n	80085a6 <__ieee754_atan2f+0x26>
 80085d8:	b941      	cbnz	r1, 80085ec <__ieee754_atan2f+0x6c>
 80085da:	eddf 7a31 	vldr	s15, [pc, #196]	; 80086a0 <__ieee754_atan2f+0x120>
 80085de:	ed9f 0a31 	vldr	s0, [pc, #196]	; 80086a4 <__ieee754_atan2f+0x124>
 80085e2:	2800      	cmp	r0, #0
 80085e4:	bfb8      	it	lt
 80085e6:	eef0 7a40 	vmovlt.f32	s15, s0
 80085ea:	e7dc      	b.n	80085a6 <__ieee754_atan2f+0x26>
 80085ec:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80085f0:	d110      	bne.n	8008614 <__ieee754_atan2f+0x94>
 80085f2:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80085f6:	f104 34ff 	add.w	r4, r4, #4294967295
 80085fa:	d107      	bne.n	800860c <__ieee754_atan2f+0x8c>
 80085fc:	2c02      	cmp	r4, #2
 80085fe:	d846      	bhi.n	800868e <__ieee754_atan2f+0x10e>
 8008600:	4b29      	ldr	r3, [pc, #164]	; (80086a8 <__ieee754_atan2f+0x128>)
 8008602:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8008606:	edd4 7a00 	vldr	s15, [r4]
 800860a:	e7cc      	b.n	80085a6 <__ieee754_atan2f+0x26>
 800860c:	2c02      	cmp	r4, #2
 800860e:	d841      	bhi.n	8008694 <__ieee754_atan2f+0x114>
 8008610:	4b26      	ldr	r3, [pc, #152]	; (80086ac <__ieee754_atan2f+0x12c>)
 8008612:	e7f6      	b.n	8008602 <__ieee754_atan2f+0x82>
 8008614:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8008618:	d0df      	beq.n	80085da <__ieee754_atan2f+0x5a>
 800861a:	1a5b      	subs	r3, r3, r1
 800861c:	f1b3 5ff4 	cmp.w	r3, #511705088	; 0x1e800000
 8008620:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8008624:	da1a      	bge.n	800865c <__ieee754_atan2f+0xdc>
 8008626:	2a00      	cmp	r2, #0
 8008628:	da01      	bge.n	800862e <__ieee754_atan2f+0xae>
 800862a:	313c      	adds	r1, #60	; 0x3c
 800862c:	db19      	blt.n	8008662 <__ieee754_atan2f+0xe2>
 800862e:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8008632:	f7ff ff29 	bl	8008488 <fabsf>
 8008636:	f7ff fe0f 	bl	8008258 <atanf>
 800863a:	eef0 7a40 	vmov.f32	s15, s0
 800863e:	2c01      	cmp	r4, #1
 8008640:	d012      	beq.n	8008668 <__ieee754_atan2f+0xe8>
 8008642:	2c02      	cmp	r4, #2
 8008644:	d017      	beq.n	8008676 <__ieee754_atan2f+0xf6>
 8008646:	2c00      	cmp	r4, #0
 8008648:	d0ad      	beq.n	80085a6 <__ieee754_atan2f+0x26>
 800864a:	ed9f 0a19 	vldr	s0, [pc, #100]	; 80086b0 <__ieee754_atan2f+0x130>
 800864e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8008652:	ed9f 0a18 	vldr	s0, [pc, #96]	; 80086b4 <__ieee754_atan2f+0x134>
 8008656:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800865a:	e7a4      	b.n	80085a6 <__ieee754_atan2f+0x26>
 800865c:	eddf 7a10 	vldr	s15, [pc, #64]	; 80086a0 <__ieee754_atan2f+0x120>
 8008660:	e7ed      	b.n	800863e <__ieee754_atan2f+0xbe>
 8008662:	eddf 7a15 	vldr	s15, [pc, #84]	; 80086b8 <__ieee754_atan2f+0x138>
 8008666:	e7ea      	b.n	800863e <__ieee754_atan2f+0xbe>
 8008668:	ee17 3a90 	vmov	r3, s15
 800866c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8008670:	ee07 3a90 	vmov	s15, r3
 8008674:	e797      	b.n	80085a6 <__ieee754_atan2f+0x26>
 8008676:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 80086b0 <__ieee754_atan2f+0x130>
 800867a:	ee77 7a80 	vadd.f32	s15, s15, s0
 800867e:	ed9f 0a0d 	vldr	s0, [pc, #52]	; 80086b4 <__ieee754_atan2f+0x134>
 8008682:	ee70 7a67 	vsub.f32	s15, s0, s15
 8008686:	e78e      	b.n	80085a6 <__ieee754_atan2f+0x26>
 8008688:	eddf 7a0a 	vldr	s15, [pc, #40]	; 80086b4 <__ieee754_atan2f+0x134>
 800868c:	e78b      	b.n	80085a6 <__ieee754_atan2f+0x26>
 800868e:	eddf 7a0b 	vldr	s15, [pc, #44]	; 80086bc <__ieee754_atan2f+0x13c>
 8008692:	e788      	b.n	80085a6 <__ieee754_atan2f+0x26>
 8008694:	eddf 7a08 	vldr	s15, [pc, #32]	; 80086b8 <__ieee754_atan2f+0x138>
 8008698:	e785      	b.n	80085a6 <__ieee754_atan2f+0x26>
 800869a:	bf00      	nop
 800869c:	c0490fdb 	.word	0xc0490fdb
 80086a0:	3fc90fdb 	.word	0x3fc90fdb
 80086a4:	bfc90fdb 	.word	0xbfc90fdb
 80086a8:	08009794 	.word	0x08009794
 80086ac:	080097a0 	.word	0x080097a0
 80086b0:	33bbbd2e 	.word	0x33bbbd2e
 80086b4:	40490fdb 	.word	0x40490fdb
 80086b8:	00000000 	.word	0x00000000
 80086bc:	3f490fdb 	.word	0x3f490fdb

080086c0 <__ieee754_rem_pio2f>:
 80086c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80086c2:	ee10 6a10 	vmov	r6, s0
 80086c6:	4b8e      	ldr	r3, [pc, #568]	; (8008900 <__ieee754_rem_pio2f+0x240>)
 80086c8:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 80086cc:	429d      	cmp	r5, r3
 80086ce:	b087      	sub	sp, #28
 80086d0:	eef0 7a40 	vmov.f32	s15, s0
 80086d4:	4604      	mov	r4, r0
 80086d6:	dc05      	bgt.n	80086e4 <__ieee754_rem_pio2f+0x24>
 80086d8:	2300      	movs	r3, #0
 80086da:	ed80 0a00 	vstr	s0, [r0]
 80086de:	6043      	str	r3, [r0, #4]
 80086e0:	2000      	movs	r0, #0
 80086e2:	e01a      	b.n	800871a <__ieee754_rem_pio2f+0x5a>
 80086e4:	4b87      	ldr	r3, [pc, #540]	; (8008904 <__ieee754_rem_pio2f+0x244>)
 80086e6:	429d      	cmp	r5, r3
 80086e8:	dc46      	bgt.n	8008778 <__ieee754_rem_pio2f+0xb8>
 80086ea:	2e00      	cmp	r6, #0
 80086ec:	ed9f 0a86 	vldr	s0, [pc, #536]	; 8008908 <__ieee754_rem_pio2f+0x248>
 80086f0:	4b86      	ldr	r3, [pc, #536]	; (800890c <__ieee754_rem_pio2f+0x24c>)
 80086f2:	f025 050f 	bic.w	r5, r5, #15
 80086f6:	dd1f      	ble.n	8008738 <__ieee754_rem_pio2f+0x78>
 80086f8:	429d      	cmp	r5, r3
 80086fa:	ee77 7ac0 	vsub.f32	s15, s15, s0
 80086fe:	d00e      	beq.n	800871e <__ieee754_rem_pio2f+0x5e>
 8008700:	ed9f 7a83 	vldr	s14, [pc, #524]	; 8008910 <__ieee754_rem_pio2f+0x250>
 8008704:	ee37 0ac7 	vsub.f32	s0, s15, s14
 8008708:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800870c:	ed80 0a00 	vstr	s0, [r0]
 8008710:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008714:	2001      	movs	r0, #1
 8008716:	edc4 7a01 	vstr	s15, [r4, #4]
 800871a:	b007      	add	sp, #28
 800871c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800871e:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 8008914 <__ieee754_rem_pio2f+0x254>
 8008722:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 8008918 <__ieee754_rem_pio2f+0x258>
 8008726:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800872a:	ee77 6ac7 	vsub.f32	s13, s15, s14
 800872e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008732:	edc0 6a00 	vstr	s13, [r0]
 8008736:	e7eb      	b.n	8008710 <__ieee754_rem_pio2f+0x50>
 8008738:	429d      	cmp	r5, r3
 800873a:	ee77 7a80 	vadd.f32	s15, s15, s0
 800873e:	d00e      	beq.n	800875e <__ieee754_rem_pio2f+0x9e>
 8008740:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8008910 <__ieee754_rem_pio2f+0x250>
 8008744:	ee37 0a87 	vadd.f32	s0, s15, s14
 8008748:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800874c:	ed80 0a00 	vstr	s0, [r0]
 8008750:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008754:	f04f 30ff 	mov.w	r0, #4294967295
 8008758:	edc4 7a01 	vstr	s15, [r4, #4]
 800875c:	e7dd      	b.n	800871a <__ieee754_rem_pio2f+0x5a>
 800875e:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 8008914 <__ieee754_rem_pio2f+0x254>
 8008762:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 8008918 <__ieee754_rem_pio2f+0x258>
 8008766:	ee77 7a80 	vadd.f32	s15, s15, s0
 800876a:	ee77 6a87 	vadd.f32	s13, s15, s14
 800876e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8008772:	edc0 6a00 	vstr	s13, [r0]
 8008776:	e7eb      	b.n	8008750 <__ieee754_rem_pio2f+0x90>
 8008778:	4b68      	ldr	r3, [pc, #416]	; (800891c <__ieee754_rem_pio2f+0x25c>)
 800877a:	429d      	cmp	r5, r3
 800877c:	dc72      	bgt.n	8008864 <__ieee754_rem_pio2f+0x1a4>
 800877e:	f7ff fe83 	bl	8008488 <fabsf>
 8008782:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8008920 <__ieee754_rem_pio2f+0x260>
 8008786:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800878a:	eee0 7a07 	vfma.f32	s15, s0, s14
 800878e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008792:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8008796:	ee17 0a90 	vmov	r0, s15
 800879a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8008908 <__ieee754_rem_pio2f+0x248>
 800879e:	eea7 0a67 	vfms.f32	s0, s14, s15
 80087a2:	281f      	cmp	r0, #31
 80087a4:	eddf 7a5a 	vldr	s15, [pc, #360]	; 8008910 <__ieee754_rem_pio2f+0x250>
 80087a8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80087ac:	eeb1 6a47 	vneg.f32	s12, s14
 80087b0:	ee70 6a67 	vsub.f32	s13, s0, s15
 80087b4:	ee16 2a90 	vmov	r2, s13
 80087b8:	dc1c      	bgt.n	80087f4 <__ieee754_rem_pio2f+0x134>
 80087ba:	495a      	ldr	r1, [pc, #360]	; (8008924 <__ieee754_rem_pio2f+0x264>)
 80087bc:	1e47      	subs	r7, r0, #1
 80087be:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 80087c2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80087c6:	428b      	cmp	r3, r1
 80087c8:	d014      	beq.n	80087f4 <__ieee754_rem_pio2f+0x134>
 80087ca:	6022      	str	r2, [r4, #0]
 80087cc:	ed94 7a00 	vldr	s14, [r4]
 80087d0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80087d4:	2e00      	cmp	r6, #0
 80087d6:	ee30 0a67 	vsub.f32	s0, s0, s15
 80087da:	ed84 0a01 	vstr	s0, [r4, #4]
 80087de:	da9c      	bge.n	800871a <__ieee754_rem_pio2f+0x5a>
 80087e0:	eeb1 7a47 	vneg.f32	s14, s14
 80087e4:	eeb1 0a40 	vneg.f32	s0, s0
 80087e8:	ed84 7a00 	vstr	s14, [r4]
 80087ec:	ed84 0a01 	vstr	s0, [r4, #4]
 80087f0:	4240      	negs	r0, r0
 80087f2:	e792      	b.n	800871a <__ieee754_rem_pio2f+0x5a>
 80087f4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80087f8:	15eb      	asrs	r3, r5, #23
 80087fa:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 80087fe:	2d08      	cmp	r5, #8
 8008800:	dde3      	ble.n	80087ca <__ieee754_rem_pio2f+0x10a>
 8008802:	eddf 7a44 	vldr	s15, [pc, #272]	; 8008914 <__ieee754_rem_pio2f+0x254>
 8008806:	eddf 5a44 	vldr	s11, [pc, #272]	; 8008918 <__ieee754_rem_pio2f+0x258>
 800880a:	eef0 6a40 	vmov.f32	s13, s0
 800880e:	eee6 6a27 	vfma.f32	s13, s12, s15
 8008812:	ee30 0a66 	vsub.f32	s0, s0, s13
 8008816:	eea6 0a27 	vfma.f32	s0, s12, s15
 800881a:	eef0 7a40 	vmov.f32	s15, s0
 800881e:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8008822:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8008826:	ee15 2a90 	vmov	r2, s11
 800882a:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 800882e:	1a5b      	subs	r3, r3, r1
 8008830:	2b19      	cmp	r3, #25
 8008832:	dc04      	bgt.n	800883e <__ieee754_rem_pio2f+0x17e>
 8008834:	edc4 5a00 	vstr	s11, [r4]
 8008838:	eeb0 0a66 	vmov.f32	s0, s13
 800883c:	e7c6      	b.n	80087cc <__ieee754_rem_pio2f+0x10c>
 800883e:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8008928 <__ieee754_rem_pio2f+0x268>
 8008842:	eeb0 0a66 	vmov.f32	s0, s13
 8008846:	eea6 0a25 	vfma.f32	s0, s12, s11
 800884a:	ee76 7ac0 	vsub.f32	s15, s13, s0
 800884e:	eddf 6a37 	vldr	s13, [pc, #220]	; 800892c <__ieee754_rem_pio2f+0x26c>
 8008852:	eee6 7a25 	vfma.f32	s15, s12, s11
 8008856:	eed7 7a26 	vfnms.f32	s15, s14, s13
 800885a:	ee30 7a67 	vsub.f32	s14, s0, s15
 800885e:	ed84 7a00 	vstr	s14, [r4]
 8008862:	e7b3      	b.n	80087cc <__ieee754_rem_pio2f+0x10c>
 8008864:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8008868:	db06      	blt.n	8008878 <__ieee754_rem_pio2f+0x1b8>
 800886a:	ee70 7a40 	vsub.f32	s15, s0, s0
 800886e:	edc0 7a01 	vstr	s15, [r0, #4]
 8008872:	edc0 7a00 	vstr	s15, [r0]
 8008876:	e733      	b.n	80086e0 <__ieee754_rem_pio2f+0x20>
 8008878:	15ea      	asrs	r2, r5, #23
 800887a:	3a86      	subs	r2, #134	; 0x86
 800887c:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8008880:	ee07 3a90 	vmov	s15, r3
 8008884:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8008888:	eddf 6a29 	vldr	s13, [pc, #164]	; 8008930 <__ieee754_rem_pio2f+0x270>
 800888c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8008890:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008894:	ed8d 7a03 	vstr	s14, [sp, #12]
 8008898:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800889c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80088a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80088a4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80088a8:	ed8d 7a04 	vstr	s14, [sp, #16]
 80088ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80088b0:	eef5 7a40 	vcmp.f32	s15, #0.0
 80088b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80088b8:	edcd 7a05 	vstr	s15, [sp, #20]
 80088bc:	d11e      	bne.n	80088fc <__ieee754_rem_pio2f+0x23c>
 80088be:	eeb5 7a40 	vcmp.f32	s14, #0.0
 80088c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80088c6:	bf14      	ite	ne
 80088c8:	2302      	movne	r3, #2
 80088ca:	2301      	moveq	r3, #1
 80088cc:	4919      	ldr	r1, [pc, #100]	; (8008934 <__ieee754_rem_pio2f+0x274>)
 80088ce:	9101      	str	r1, [sp, #4]
 80088d0:	2102      	movs	r1, #2
 80088d2:	9100      	str	r1, [sp, #0]
 80088d4:	a803      	add	r0, sp, #12
 80088d6:	4621      	mov	r1, r4
 80088d8:	f000 f88e 	bl	80089f8 <__kernel_rem_pio2f>
 80088dc:	2e00      	cmp	r6, #0
 80088de:	f6bf af1c 	bge.w	800871a <__ieee754_rem_pio2f+0x5a>
 80088e2:	edd4 7a00 	vldr	s15, [r4]
 80088e6:	eef1 7a67 	vneg.f32	s15, s15
 80088ea:	edc4 7a00 	vstr	s15, [r4]
 80088ee:	edd4 7a01 	vldr	s15, [r4, #4]
 80088f2:	eef1 7a67 	vneg.f32	s15, s15
 80088f6:	edc4 7a01 	vstr	s15, [r4, #4]
 80088fa:	e779      	b.n	80087f0 <__ieee754_rem_pio2f+0x130>
 80088fc:	2303      	movs	r3, #3
 80088fe:	e7e5      	b.n	80088cc <__ieee754_rem_pio2f+0x20c>
 8008900:	3f490fd8 	.word	0x3f490fd8
 8008904:	4016cbe3 	.word	0x4016cbe3
 8008908:	3fc90f80 	.word	0x3fc90f80
 800890c:	3fc90fd0 	.word	0x3fc90fd0
 8008910:	37354443 	.word	0x37354443
 8008914:	37354400 	.word	0x37354400
 8008918:	2e85a308 	.word	0x2e85a308
 800891c:	43490f80 	.word	0x43490f80
 8008920:	3f22f984 	.word	0x3f22f984
 8008924:	080097ac 	.word	0x080097ac
 8008928:	2e85a300 	.word	0x2e85a300
 800892c:	248d3132 	.word	0x248d3132
 8008930:	43800000 	.word	0x43800000
 8008934:	0800982c 	.word	0x0800982c

08008938 <__kernel_cosf>:
 8008938:	ee10 3a10 	vmov	r3, s0
 800893c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008940:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8008944:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8008948:	da05      	bge.n	8008956 <__kernel_cosf+0x1e>
 800894a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800894e:	ee17 2a90 	vmov	r2, s15
 8008952:	2a00      	cmp	r2, #0
 8008954:	d03d      	beq.n	80089d2 <__kernel_cosf+0x9a>
 8008956:	ee60 5a00 	vmul.f32	s11, s0, s0
 800895a:	eddf 7a1f 	vldr	s15, [pc, #124]	; 80089d8 <__kernel_cosf+0xa0>
 800895e:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 80089dc <__kernel_cosf+0xa4>
 8008962:	eddf 6a1f 	vldr	s13, [pc, #124]	; 80089e0 <__kernel_cosf+0xa8>
 8008966:	4a1f      	ldr	r2, [pc, #124]	; (80089e4 <__kernel_cosf+0xac>)
 8008968:	eea5 7aa7 	vfma.f32	s14, s11, s15
 800896c:	4293      	cmp	r3, r2
 800896e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80089e8 <__kernel_cosf+0xb0>
 8008972:	eee7 7a25 	vfma.f32	s15, s14, s11
 8008976:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 80089ec <__kernel_cosf+0xb4>
 800897a:	eea7 7aa5 	vfma.f32	s14, s15, s11
 800897e:	eddf 7a1c 	vldr	s15, [pc, #112]	; 80089f0 <__kernel_cosf+0xb8>
 8008982:	eee7 7a25 	vfma.f32	s15, s14, s11
 8008986:	eeb0 7a66 	vmov.f32	s14, s13
 800898a:	eea7 7aa5 	vfma.f32	s14, s15, s11
 800898e:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8008992:	ee65 7aa6 	vmul.f32	s15, s11, s13
 8008996:	ee67 6a25 	vmul.f32	s13, s14, s11
 800899a:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 800899e:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80089a2:	dc04      	bgt.n	80089ae <__kernel_cosf+0x76>
 80089a4:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80089a8:	ee36 0a47 	vsub.f32	s0, s12, s14
 80089ac:	4770      	bx	lr
 80089ae:	4a11      	ldr	r2, [pc, #68]	; (80089f4 <__kernel_cosf+0xbc>)
 80089b0:	4293      	cmp	r3, r2
 80089b2:	bfda      	itte	le
 80089b4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 80089b8:	ee06 3a90 	vmovle	s13, r3
 80089bc:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 80089c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80089c4:	ee36 0a66 	vsub.f32	s0, s12, s13
 80089c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80089cc:	ee30 0a67 	vsub.f32	s0, s0, s15
 80089d0:	4770      	bx	lr
 80089d2:	eeb0 0a46 	vmov.f32	s0, s12
 80089d6:	4770      	bx	lr
 80089d8:	ad47d74e 	.word	0xad47d74e
 80089dc:	310f74f6 	.word	0x310f74f6
 80089e0:	3d2aaaab 	.word	0x3d2aaaab
 80089e4:	3e999999 	.word	0x3e999999
 80089e8:	b493f27c 	.word	0xb493f27c
 80089ec:	37d00d01 	.word	0x37d00d01
 80089f0:	bab60b61 	.word	0xbab60b61
 80089f4:	3f480000 	.word	0x3f480000

080089f8 <__kernel_rem_pio2f>:
 80089f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80089fc:	ed2d 8b04 	vpush	{d8-d9}
 8008a00:	b0d9      	sub	sp, #356	; 0x164
 8008a02:	4688      	mov	r8, r1
 8008a04:	9002      	str	r0, [sp, #8]
 8008a06:	49bb      	ldr	r1, [pc, #748]	; (8008cf4 <__kernel_rem_pio2f+0x2fc>)
 8008a08:	9866      	ldr	r0, [sp, #408]	; 0x198
 8008a0a:	9301      	str	r3, [sp, #4]
 8008a0c:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8008a10:	f8dd e19c 	ldr.w	lr, [sp, #412]	; 0x19c
 8008a14:	1e59      	subs	r1, r3, #1
 8008a16:	1d13      	adds	r3, r2, #4
 8008a18:	db27      	blt.n	8008a6a <__kernel_rem_pio2f+0x72>
 8008a1a:	f1b2 0b03 	subs.w	fp, r2, #3
 8008a1e:	bf48      	it	mi
 8008a20:	f102 0b04 	addmi.w	fp, r2, #4
 8008a24:	ea4f 00eb 	mov.w	r0, fp, asr #3
 8008a28:	1c45      	adds	r5, r0, #1
 8008a2a:	00ec      	lsls	r4, r5, #3
 8008a2c:	1a47      	subs	r7, r0, r1
 8008a2e:	ed9f 7ab5 	vldr	s14, [pc, #724]	; 8008d04 <__kernel_rem_pio2f+0x30c>
 8008a32:	9403      	str	r4, [sp, #12]
 8008a34:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8008a38:	eb0a 0c01 	add.w	ip, sl, r1
 8008a3c:	ae1c      	add	r6, sp, #112	; 0x70
 8008a3e:	eb0e 0987 	add.w	r9, lr, r7, lsl #2
 8008a42:	2400      	movs	r4, #0
 8008a44:	4564      	cmp	r4, ip
 8008a46:	dd12      	ble.n	8008a6e <__kernel_rem_pio2f+0x76>
 8008a48:	9b01      	ldr	r3, [sp, #4]
 8008a4a:	ac1c      	add	r4, sp, #112	; 0x70
 8008a4c:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8008a50:	f50d 7b88 	add.w	fp, sp, #272	; 0x110
 8008a54:	f04f 0c00 	mov.w	ip, #0
 8008a58:	45d4      	cmp	ip, sl
 8008a5a:	dc27      	bgt.n	8008aac <__kernel_rem_pio2f+0xb4>
 8008a5c:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8008a60:	eddf 7aa8 	vldr	s15, [pc, #672]	; 8008d04 <__kernel_rem_pio2f+0x30c>
 8008a64:	4627      	mov	r7, r4
 8008a66:	2600      	movs	r6, #0
 8008a68:	e016      	b.n	8008a98 <__kernel_rem_pio2f+0xa0>
 8008a6a:	2000      	movs	r0, #0
 8008a6c:	e7dc      	b.n	8008a28 <__kernel_rem_pio2f+0x30>
 8008a6e:	42e7      	cmn	r7, r4
 8008a70:	bf5d      	ittte	pl
 8008a72:	f859 3024 	ldrpl.w	r3, [r9, r4, lsl #2]
 8008a76:	ee07 3a90 	vmovpl	s15, r3
 8008a7a:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8008a7e:	eef0 7a47 	vmovmi.f32	s15, s14
 8008a82:	ece6 7a01 	vstmia	r6!, {s15}
 8008a86:	3401      	adds	r4, #1
 8008a88:	e7dc      	b.n	8008a44 <__kernel_rem_pio2f+0x4c>
 8008a8a:	ecf9 6a01 	vldmia	r9!, {s13}
 8008a8e:	ed97 7a00 	vldr	s14, [r7]
 8008a92:	eee6 7a87 	vfma.f32	s15, s13, s14
 8008a96:	3601      	adds	r6, #1
 8008a98:	428e      	cmp	r6, r1
 8008a9a:	f1a7 0704 	sub.w	r7, r7, #4
 8008a9e:	ddf4      	ble.n	8008a8a <__kernel_rem_pio2f+0x92>
 8008aa0:	eceb 7a01 	vstmia	fp!, {s15}
 8008aa4:	f10c 0c01 	add.w	ip, ip, #1
 8008aa8:	3404      	adds	r4, #4
 8008aaa:	e7d5      	b.n	8008a58 <__kernel_rem_pio2f+0x60>
 8008aac:	ab08      	add	r3, sp, #32
 8008aae:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8008ab2:	eddf 8a93 	vldr	s17, [pc, #588]	; 8008d00 <__kernel_rem_pio2f+0x308>
 8008ab6:	ed9f 9a91 	vldr	s18, [pc, #580]	; 8008cfc <__kernel_rem_pio2f+0x304>
 8008aba:	9304      	str	r3, [sp, #16]
 8008abc:	eb0e 0b80 	add.w	fp, lr, r0, lsl #2
 8008ac0:	4656      	mov	r6, sl
 8008ac2:	00b3      	lsls	r3, r6, #2
 8008ac4:	9305      	str	r3, [sp, #20]
 8008ac6:	ab58      	add	r3, sp, #352	; 0x160
 8008ac8:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8008acc:	ac08      	add	r4, sp, #32
 8008ace:	ab44      	add	r3, sp, #272	; 0x110
 8008ad0:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8008ad4:	46a4      	mov	ip, r4
 8008ad6:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8008ada:	4637      	mov	r7, r6
 8008adc:	2f00      	cmp	r7, #0
 8008ade:	f1a0 0004 	sub.w	r0, r0, #4
 8008ae2:	dc4f      	bgt.n	8008b84 <__kernel_rem_pio2f+0x18c>
 8008ae4:	4628      	mov	r0, r5
 8008ae6:	e9cd 1206 	strd	r1, r2, [sp, #24]
 8008aea:	f000 fb65 	bl	80091b8 <scalbnf>
 8008aee:	eeb0 8a40 	vmov.f32	s16, s0
 8008af2:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8008af6:	ee28 0a00 	vmul.f32	s0, s16, s0
 8008afa:	f000 fb1b 	bl	8009134 <floorf>
 8008afe:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8008b02:	eea0 8a67 	vfms.f32	s16, s0, s15
 8008b06:	2d00      	cmp	r5, #0
 8008b08:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8008b0c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8008b10:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8008b14:	ee17 9a90 	vmov	r9, s15
 8008b18:	ee38 8a40 	vsub.f32	s16, s16, s0
 8008b1c:	dd44      	ble.n	8008ba8 <__kernel_rem_pio2f+0x1b0>
 8008b1e:	f106 3cff 	add.w	ip, r6, #4294967295
 8008b22:	ab08      	add	r3, sp, #32
 8008b24:	f1c5 0e08 	rsb	lr, r5, #8
 8008b28:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8008b2c:	fa47 f00e 	asr.w	r0, r7, lr
 8008b30:	4481      	add	r9, r0
 8008b32:	fa00 f00e 	lsl.w	r0, r0, lr
 8008b36:	1a3f      	subs	r7, r7, r0
 8008b38:	f1c5 0007 	rsb	r0, r5, #7
 8008b3c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8008b40:	4107      	asrs	r7, r0
 8008b42:	2f00      	cmp	r7, #0
 8008b44:	dd3f      	ble.n	8008bc6 <__kernel_rem_pio2f+0x1ce>
 8008b46:	f04f 0e00 	mov.w	lr, #0
 8008b4a:	f109 0901 	add.w	r9, r9, #1
 8008b4e:	4673      	mov	r3, lr
 8008b50:	4576      	cmp	r6, lr
 8008b52:	dc6b      	bgt.n	8008c2c <__kernel_rem_pio2f+0x234>
 8008b54:	2d00      	cmp	r5, #0
 8008b56:	dd04      	ble.n	8008b62 <__kernel_rem_pio2f+0x16a>
 8008b58:	2d01      	cmp	r5, #1
 8008b5a:	d078      	beq.n	8008c4e <__kernel_rem_pio2f+0x256>
 8008b5c:	2d02      	cmp	r5, #2
 8008b5e:	f000 8081 	beq.w	8008c64 <__kernel_rem_pio2f+0x26c>
 8008b62:	2f02      	cmp	r7, #2
 8008b64:	d12f      	bne.n	8008bc6 <__kernel_rem_pio2f+0x1ce>
 8008b66:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8008b6a:	ee30 8a48 	vsub.f32	s16, s0, s16
 8008b6e:	b353      	cbz	r3, 8008bc6 <__kernel_rem_pio2f+0x1ce>
 8008b70:	4628      	mov	r0, r5
 8008b72:	e9cd 1206 	strd	r1, r2, [sp, #24]
 8008b76:	f000 fb1f 	bl	80091b8 <scalbnf>
 8008b7a:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8008b7e:	ee38 8a40 	vsub.f32	s16, s16, s0
 8008b82:	e020      	b.n	8008bc6 <__kernel_rem_pio2f+0x1ce>
 8008b84:	ee60 7a28 	vmul.f32	s15, s0, s17
 8008b88:	3f01      	subs	r7, #1
 8008b8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b8e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008b92:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8008b96:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008b9a:	ecac 0a01 	vstmia	ip!, {s0}
 8008b9e:	ed90 0a00 	vldr	s0, [r0]
 8008ba2:	ee37 0a80 	vadd.f32	s0, s15, s0
 8008ba6:	e799      	b.n	8008adc <__kernel_rem_pio2f+0xe4>
 8008ba8:	d105      	bne.n	8008bb6 <__kernel_rem_pio2f+0x1be>
 8008baa:	1e70      	subs	r0, r6, #1
 8008bac:	ab08      	add	r3, sp, #32
 8008bae:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8008bb2:	11ff      	asrs	r7, r7, #7
 8008bb4:	e7c5      	b.n	8008b42 <__kernel_rem_pio2f+0x14a>
 8008bb6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8008bba:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8008bbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bc2:	da31      	bge.n	8008c28 <__kernel_rem_pio2f+0x230>
 8008bc4:	2700      	movs	r7, #0
 8008bc6:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8008bca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bce:	f040 809b 	bne.w	8008d08 <__kernel_rem_pio2f+0x310>
 8008bd2:	1e74      	subs	r4, r6, #1
 8008bd4:	46a4      	mov	ip, r4
 8008bd6:	2000      	movs	r0, #0
 8008bd8:	45d4      	cmp	ip, sl
 8008bda:	da4a      	bge.n	8008c72 <__kernel_rem_pio2f+0x27a>
 8008bdc:	2800      	cmp	r0, #0
 8008bde:	d07a      	beq.n	8008cd6 <__kernel_rem_pio2f+0x2de>
 8008be0:	ab08      	add	r3, sp, #32
 8008be2:	3d08      	subs	r5, #8
 8008be4:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8008be8:	2b00      	cmp	r3, #0
 8008bea:	f000 8081 	beq.w	8008cf0 <__kernel_rem_pio2f+0x2f8>
 8008bee:	4628      	mov	r0, r5
 8008bf0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8008bf4:	00a5      	lsls	r5, r4, #2
 8008bf6:	f000 fadf 	bl	80091b8 <scalbnf>
 8008bfa:	aa44      	add	r2, sp, #272	; 0x110
 8008bfc:	1d2b      	adds	r3, r5, #4
 8008bfe:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8008d00 <__kernel_rem_pio2f+0x308>
 8008c02:	18d1      	adds	r1, r2, r3
 8008c04:	4622      	mov	r2, r4
 8008c06:	2a00      	cmp	r2, #0
 8008c08:	f280 80ae 	bge.w	8008d68 <__kernel_rem_pio2f+0x370>
 8008c0c:	4622      	mov	r2, r4
 8008c0e:	2a00      	cmp	r2, #0
 8008c10:	f2c0 80cc 	blt.w	8008dac <__kernel_rem_pio2f+0x3b4>
 8008c14:	a944      	add	r1, sp, #272	; 0x110
 8008c16:	eb01 0682 	add.w	r6, r1, r2, lsl #2
 8008c1a:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 8008cf8 <__kernel_rem_pio2f+0x300>
 8008c1e:	eddf 7a39 	vldr	s15, [pc, #228]	; 8008d04 <__kernel_rem_pio2f+0x30c>
 8008c22:	2000      	movs	r0, #0
 8008c24:	1aa1      	subs	r1, r4, r2
 8008c26:	e0b6      	b.n	8008d96 <__kernel_rem_pio2f+0x39e>
 8008c28:	2702      	movs	r7, #2
 8008c2a:	e78c      	b.n	8008b46 <__kernel_rem_pio2f+0x14e>
 8008c2c:	6820      	ldr	r0, [r4, #0]
 8008c2e:	b94b      	cbnz	r3, 8008c44 <__kernel_rem_pio2f+0x24c>
 8008c30:	b118      	cbz	r0, 8008c3a <__kernel_rem_pio2f+0x242>
 8008c32:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8008c36:	6020      	str	r0, [r4, #0]
 8008c38:	2001      	movs	r0, #1
 8008c3a:	f10e 0e01 	add.w	lr, lr, #1
 8008c3e:	3404      	adds	r4, #4
 8008c40:	4603      	mov	r3, r0
 8008c42:	e785      	b.n	8008b50 <__kernel_rem_pio2f+0x158>
 8008c44:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8008c48:	6020      	str	r0, [r4, #0]
 8008c4a:	4618      	mov	r0, r3
 8008c4c:	e7f5      	b.n	8008c3a <__kernel_rem_pio2f+0x242>
 8008c4e:	1e74      	subs	r4, r6, #1
 8008c50:	a808      	add	r0, sp, #32
 8008c52:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008c56:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8008c5a:	f10d 0c20 	add.w	ip, sp, #32
 8008c5e:	f84c 0024 	str.w	r0, [ip, r4, lsl #2]
 8008c62:	e77e      	b.n	8008b62 <__kernel_rem_pio2f+0x16a>
 8008c64:	1e74      	subs	r4, r6, #1
 8008c66:	a808      	add	r0, sp, #32
 8008c68:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008c6c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8008c70:	e7f3      	b.n	8008c5a <__kernel_rem_pio2f+0x262>
 8008c72:	ab08      	add	r3, sp, #32
 8008c74:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8008c78:	f10c 3cff 	add.w	ip, ip, #4294967295
 8008c7c:	4318      	orrs	r0, r3
 8008c7e:	e7ab      	b.n	8008bd8 <__kernel_rem_pio2f+0x1e0>
 8008c80:	f10c 0c01 	add.w	ip, ip, #1
 8008c84:	f850 4d04 	ldr.w	r4, [r0, #-4]!
 8008c88:	2c00      	cmp	r4, #0
 8008c8a:	d0f9      	beq.n	8008c80 <__kernel_rem_pio2f+0x288>
 8008c8c:	9b05      	ldr	r3, [sp, #20]
 8008c8e:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8008c92:	eb0d 0003 	add.w	r0, sp, r3
 8008c96:	9b01      	ldr	r3, [sp, #4]
 8008c98:	18f4      	adds	r4, r6, r3
 8008c9a:	ab1c      	add	r3, sp, #112	; 0x70
 8008c9c:	1c77      	adds	r7, r6, #1
 8008c9e:	384c      	subs	r0, #76	; 0x4c
 8008ca0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8008ca4:	4466      	add	r6, ip
 8008ca6:	42be      	cmp	r6, r7
 8008ca8:	f6ff af0b 	blt.w	8008ac2 <__kernel_rem_pio2f+0xca>
 8008cac:	f85b 3027 	ldr.w	r3, [fp, r7, lsl #2]
 8008cb0:	f8dd e008 	ldr.w	lr, [sp, #8]
 8008cb4:	ee07 3a90 	vmov	s15, r3
 8008cb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008cbc:	f04f 0c00 	mov.w	ip, #0
 8008cc0:	ece4 7a01 	vstmia	r4!, {s15}
 8008cc4:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8008d04 <__kernel_rem_pio2f+0x30c>
 8008cc8:	46a1      	mov	r9, r4
 8008cca:	458c      	cmp	ip, r1
 8008ccc:	dd07      	ble.n	8008cde <__kernel_rem_pio2f+0x2e6>
 8008cce:	ece0 7a01 	vstmia	r0!, {s15}
 8008cd2:	3701      	adds	r7, #1
 8008cd4:	e7e7      	b.n	8008ca6 <__kernel_rem_pio2f+0x2ae>
 8008cd6:	9804      	ldr	r0, [sp, #16]
 8008cd8:	f04f 0c01 	mov.w	ip, #1
 8008cdc:	e7d2      	b.n	8008c84 <__kernel_rem_pio2f+0x28c>
 8008cde:	ecfe 6a01 	vldmia	lr!, {s13}
 8008ce2:	ed39 7a01 	vldmdb	r9!, {s14}
 8008ce6:	f10c 0c01 	add.w	ip, ip, #1
 8008cea:	eee6 7a87 	vfma.f32	s15, s13, s14
 8008cee:	e7ec      	b.n	8008cca <__kernel_rem_pio2f+0x2d2>
 8008cf0:	3c01      	subs	r4, #1
 8008cf2:	e775      	b.n	8008be0 <__kernel_rem_pio2f+0x1e8>
 8008cf4:	08009b70 	.word	0x08009b70
 8008cf8:	08009b44 	.word	0x08009b44
 8008cfc:	43800000 	.word	0x43800000
 8008d00:	3b800000 	.word	0x3b800000
 8008d04:	00000000 	.word	0x00000000
 8008d08:	9b03      	ldr	r3, [sp, #12]
 8008d0a:	eeb0 0a48 	vmov.f32	s0, s16
 8008d0e:	1a98      	subs	r0, r3, r2
 8008d10:	f000 fa52 	bl	80091b8 <scalbnf>
 8008d14:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8008cfc <__kernel_rem_pio2f+0x304>
 8008d18:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8008d1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d20:	db19      	blt.n	8008d56 <__kernel_rem_pio2f+0x35e>
 8008d22:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8008d00 <__kernel_rem_pio2f+0x308>
 8008d26:	ee60 7a27 	vmul.f32	s15, s0, s15
 8008d2a:	aa08      	add	r2, sp, #32
 8008d2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d30:	1c74      	adds	r4, r6, #1
 8008d32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d36:	3508      	adds	r5, #8
 8008d38:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8008d3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d40:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008d44:	ee10 3a10 	vmov	r3, s0
 8008d48:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8008d4c:	ee17 3a90 	vmov	r3, s15
 8008d50:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8008d54:	e74b      	b.n	8008bee <__kernel_rem_pio2f+0x1f6>
 8008d56:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8008d5a:	aa08      	add	r2, sp, #32
 8008d5c:	ee10 3a10 	vmov	r3, s0
 8008d60:	4634      	mov	r4, r6
 8008d62:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8008d66:	e742      	b.n	8008bee <__kernel_rem_pio2f+0x1f6>
 8008d68:	a808      	add	r0, sp, #32
 8008d6a:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 8008d6e:	9001      	str	r0, [sp, #4]
 8008d70:	ee07 0a90 	vmov	s15, r0
 8008d74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d78:	3a01      	subs	r2, #1
 8008d7a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8008d7e:	ee20 0a07 	vmul.f32	s0, s0, s14
 8008d82:	ed61 7a01 	vstmdb	r1!, {s15}
 8008d86:	e73e      	b.n	8008c06 <__kernel_rem_pio2f+0x20e>
 8008d88:	ecfc 6a01 	vldmia	ip!, {s13}
 8008d8c:	ecb6 7a01 	vldmia	r6!, {s14}
 8008d90:	eee6 7a87 	vfma.f32	s15, s13, s14
 8008d94:	3001      	adds	r0, #1
 8008d96:	4550      	cmp	r0, sl
 8008d98:	dc01      	bgt.n	8008d9e <__kernel_rem_pio2f+0x3a6>
 8008d9a:	4288      	cmp	r0, r1
 8008d9c:	ddf4      	ble.n	8008d88 <__kernel_rem_pio2f+0x390>
 8008d9e:	a858      	add	r0, sp, #352	; 0x160
 8008da0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8008da4:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 8008da8:	3a01      	subs	r2, #1
 8008daa:	e730      	b.n	8008c0e <__kernel_rem_pio2f+0x216>
 8008dac:	9a66      	ldr	r2, [sp, #408]	; 0x198
 8008dae:	2a02      	cmp	r2, #2
 8008db0:	dc09      	bgt.n	8008dc6 <__kernel_rem_pio2f+0x3ce>
 8008db2:	2a00      	cmp	r2, #0
 8008db4:	dc2a      	bgt.n	8008e0c <__kernel_rem_pio2f+0x414>
 8008db6:	d043      	beq.n	8008e40 <__kernel_rem_pio2f+0x448>
 8008db8:	f009 0007 	and.w	r0, r9, #7
 8008dbc:	b059      	add	sp, #356	; 0x164
 8008dbe:	ecbd 8b04 	vpop	{d8-d9}
 8008dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008dc6:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8008dc8:	2b03      	cmp	r3, #3
 8008dca:	d1f5      	bne.n	8008db8 <__kernel_rem_pio2f+0x3c0>
 8008dcc:	ab30      	add	r3, sp, #192	; 0xc0
 8008dce:	442b      	add	r3, r5
 8008dd0:	461a      	mov	r2, r3
 8008dd2:	4619      	mov	r1, r3
 8008dd4:	4620      	mov	r0, r4
 8008dd6:	2800      	cmp	r0, #0
 8008dd8:	f1a1 0104 	sub.w	r1, r1, #4
 8008ddc:	dc51      	bgt.n	8008e82 <__kernel_rem_pio2f+0x48a>
 8008dde:	4621      	mov	r1, r4
 8008de0:	2901      	cmp	r1, #1
 8008de2:	f1a2 0204 	sub.w	r2, r2, #4
 8008de6:	dc5c      	bgt.n	8008ea2 <__kernel_rem_pio2f+0x4aa>
 8008de8:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8008d04 <__kernel_rem_pio2f+0x30c>
 8008dec:	3304      	adds	r3, #4
 8008dee:	2c01      	cmp	r4, #1
 8008df0:	dc67      	bgt.n	8008ec2 <__kernel_rem_pio2f+0x4ca>
 8008df2:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8008df6:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8008dfa:	2f00      	cmp	r7, #0
 8008dfc:	d167      	bne.n	8008ece <__kernel_rem_pio2f+0x4d6>
 8008dfe:	edc8 6a00 	vstr	s13, [r8]
 8008e02:	ed88 7a01 	vstr	s14, [r8, #4]
 8008e06:	edc8 7a02 	vstr	s15, [r8, #8]
 8008e0a:	e7d5      	b.n	8008db8 <__kernel_rem_pio2f+0x3c0>
 8008e0c:	aa30      	add	r2, sp, #192	; 0xc0
 8008e0e:	ed1f 7a43 	vldr	s14, [pc, #-268]	; 8008d04 <__kernel_rem_pio2f+0x30c>
 8008e12:	4413      	add	r3, r2
 8008e14:	4622      	mov	r2, r4
 8008e16:	2a00      	cmp	r2, #0
 8008e18:	da24      	bge.n	8008e64 <__kernel_rem_pio2f+0x46c>
 8008e1a:	b34f      	cbz	r7, 8008e70 <__kernel_rem_pio2f+0x478>
 8008e1c:	eef1 7a47 	vneg.f32	s15, s14
 8008e20:	edc8 7a00 	vstr	s15, [r8]
 8008e24:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8008e28:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008e2c:	aa31      	add	r2, sp, #196	; 0xc4
 8008e2e:	2301      	movs	r3, #1
 8008e30:	429c      	cmp	r4, r3
 8008e32:	da20      	bge.n	8008e76 <__kernel_rem_pio2f+0x47e>
 8008e34:	b10f      	cbz	r7, 8008e3a <__kernel_rem_pio2f+0x442>
 8008e36:	eef1 7a67 	vneg.f32	s15, s15
 8008e3a:	edc8 7a01 	vstr	s15, [r8, #4]
 8008e3e:	e7bb      	b.n	8008db8 <__kernel_rem_pio2f+0x3c0>
 8008e40:	aa30      	add	r2, sp, #192	; 0xc0
 8008e42:	ed5f 7a50 	vldr	s15, [pc, #-320]	; 8008d04 <__kernel_rem_pio2f+0x30c>
 8008e46:	4413      	add	r3, r2
 8008e48:	2c00      	cmp	r4, #0
 8008e4a:	da05      	bge.n	8008e58 <__kernel_rem_pio2f+0x460>
 8008e4c:	b10f      	cbz	r7, 8008e52 <__kernel_rem_pio2f+0x45a>
 8008e4e:	eef1 7a67 	vneg.f32	s15, s15
 8008e52:	edc8 7a00 	vstr	s15, [r8]
 8008e56:	e7af      	b.n	8008db8 <__kernel_rem_pio2f+0x3c0>
 8008e58:	ed33 7a01 	vldmdb	r3!, {s14}
 8008e5c:	3c01      	subs	r4, #1
 8008e5e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008e62:	e7f1      	b.n	8008e48 <__kernel_rem_pio2f+0x450>
 8008e64:	ed73 7a01 	vldmdb	r3!, {s15}
 8008e68:	3a01      	subs	r2, #1
 8008e6a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8008e6e:	e7d2      	b.n	8008e16 <__kernel_rem_pio2f+0x41e>
 8008e70:	eef0 7a47 	vmov.f32	s15, s14
 8008e74:	e7d4      	b.n	8008e20 <__kernel_rem_pio2f+0x428>
 8008e76:	ecb2 7a01 	vldmia	r2!, {s14}
 8008e7a:	3301      	adds	r3, #1
 8008e7c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008e80:	e7d6      	b.n	8008e30 <__kernel_rem_pio2f+0x438>
 8008e82:	edd1 7a00 	vldr	s15, [r1]
 8008e86:	edd1 6a01 	vldr	s13, [r1, #4]
 8008e8a:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8008e8e:	3801      	subs	r0, #1
 8008e90:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008e94:	ed81 7a00 	vstr	s14, [r1]
 8008e98:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008e9c:	edc1 7a01 	vstr	s15, [r1, #4]
 8008ea0:	e799      	b.n	8008dd6 <__kernel_rem_pio2f+0x3de>
 8008ea2:	edd2 7a00 	vldr	s15, [r2]
 8008ea6:	edd2 6a01 	vldr	s13, [r2, #4]
 8008eaa:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8008eae:	3901      	subs	r1, #1
 8008eb0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8008eb4:	ed82 7a00 	vstr	s14, [r2]
 8008eb8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008ebc:	edc2 7a01 	vstr	s15, [r2, #4]
 8008ec0:	e78e      	b.n	8008de0 <__kernel_rem_pio2f+0x3e8>
 8008ec2:	ed33 7a01 	vldmdb	r3!, {s14}
 8008ec6:	3c01      	subs	r4, #1
 8008ec8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ecc:	e78f      	b.n	8008dee <__kernel_rem_pio2f+0x3f6>
 8008ece:	eef1 6a66 	vneg.f32	s13, s13
 8008ed2:	eeb1 7a47 	vneg.f32	s14, s14
 8008ed6:	edc8 6a00 	vstr	s13, [r8]
 8008eda:	ed88 7a01 	vstr	s14, [r8, #4]
 8008ede:	eef1 7a67 	vneg.f32	s15, s15
 8008ee2:	e790      	b.n	8008e06 <__kernel_rem_pio2f+0x40e>

08008ee4 <__kernel_sinf>:
 8008ee4:	ee10 3a10 	vmov	r3, s0
 8008ee8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8008eec:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8008ef0:	da04      	bge.n	8008efc <__kernel_sinf+0x18>
 8008ef2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8008ef6:	ee17 3a90 	vmov	r3, s15
 8008efa:	b35b      	cbz	r3, 8008f54 <__kernel_sinf+0x70>
 8008efc:	ee20 7a00 	vmul.f32	s14, s0, s0
 8008f00:	eddf 7a15 	vldr	s15, [pc, #84]	; 8008f58 <__kernel_sinf+0x74>
 8008f04:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8008f5c <__kernel_sinf+0x78>
 8008f08:	eea7 6a27 	vfma.f32	s12, s14, s15
 8008f0c:	eddf 7a14 	vldr	s15, [pc, #80]	; 8008f60 <__kernel_sinf+0x7c>
 8008f10:	eee6 7a07 	vfma.f32	s15, s12, s14
 8008f14:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8008f64 <__kernel_sinf+0x80>
 8008f18:	eea7 6a87 	vfma.f32	s12, s15, s14
 8008f1c:	eddf 7a12 	vldr	s15, [pc, #72]	; 8008f68 <__kernel_sinf+0x84>
 8008f20:	ee60 6a07 	vmul.f32	s13, s0, s14
 8008f24:	eee6 7a07 	vfma.f32	s15, s12, s14
 8008f28:	b930      	cbnz	r0, 8008f38 <__kernel_sinf+0x54>
 8008f2a:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8008f6c <__kernel_sinf+0x88>
 8008f2e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8008f32:	eea6 0a26 	vfma.f32	s0, s12, s13
 8008f36:	4770      	bx	lr
 8008f38:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8008f3c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8008f40:	eee0 7a86 	vfma.f32	s15, s1, s12
 8008f44:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8008f48:	eddf 7a09 	vldr	s15, [pc, #36]	; 8008f70 <__kernel_sinf+0x8c>
 8008f4c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8008f50:	ee30 0a60 	vsub.f32	s0, s0, s1
 8008f54:	4770      	bx	lr
 8008f56:	bf00      	nop
 8008f58:	2f2ec9d3 	.word	0x2f2ec9d3
 8008f5c:	b2d72f34 	.word	0xb2d72f34
 8008f60:	3638ef1b 	.word	0x3638ef1b
 8008f64:	b9500d01 	.word	0xb9500d01
 8008f68:	3c088889 	.word	0x3c088889
 8008f6c:	be2aaaab 	.word	0xbe2aaaab
 8008f70:	3e2aaaab 	.word	0x3e2aaaab

08008f74 <__kernel_tanf>:
 8008f74:	b508      	push	{r3, lr}
 8008f76:	ee10 3a10 	vmov	r3, s0
 8008f7a:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8008f7e:	f1b2 5f46 	cmp.w	r2, #830472192	; 0x31800000
 8008f82:	eef0 7a40 	vmov.f32	s15, s0
 8008f86:	da17      	bge.n	8008fb8 <__kernel_tanf+0x44>
 8008f88:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8008f8c:	ee17 1a10 	vmov	r1, s14
 8008f90:	bb41      	cbnz	r1, 8008fe4 <__kernel_tanf+0x70>
 8008f92:	1c43      	adds	r3, r0, #1
 8008f94:	4313      	orrs	r3, r2
 8008f96:	d108      	bne.n	8008faa <__kernel_tanf+0x36>
 8008f98:	f7ff fa76 	bl	8008488 <fabsf>
 8008f9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8008fa0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8008fa4:	eeb0 0a67 	vmov.f32	s0, s15
 8008fa8:	bd08      	pop	{r3, pc}
 8008faa:	2801      	cmp	r0, #1
 8008fac:	d0fa      	beq.n	8008fa4 <__kernel_tanf+0x30>
 8008fae:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8008fb2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8008fb6:	e7f5      	b.n	8008fa4 <__kernel_tanf+0x30>
 8008fb8:	494c      	ldr	r1, [pc, #304]	; (80090ec <__kernel_tanf+0x178>)
 8008fba:	428a      	cmp	r2, r1
 8008fbc:	db12      	blt.n	8008fe4 <__kernel_tanf+0x70>
 8008fbe:	2b00      	cmp	r3, #0
 8008fc0:	bfb8      	it	lt
 8008fc2:	eef1 7a40 	vneglt.f32	s15, s0
 8008fc6:	ed9f 0a4a 	vldr	s0, [pc, #296]	; 80090f0 <__kernel_tanf+0x17c>
 8008fca:	ee70 7a67 	vsub.f32	s15, s0, s15
 8008fce:	ed9f 0a49 	vldr	s0, [pc, #292]	; 80090f4 <__kernel_tanf+0x180>
 8008fd2:	bfb8      	it	lt
 8008fd4:	eef1 0a60 	vneglt.f32	s1, s1
 8008fd8:	ee70 0a60 	vsub.f32	s1, s0, s1
 8008fdc:	ee70 7aa7 	vadd.f32	s15, s1, s15
 8008fe0:	eddf 0a45 	vldr	s1, [pc, #276]	; 80090f8 <__kernel_tanf+0x184>
 8008fe4:	eddf 5a45 	vldr	s11, [pc, #276]	; 80090fc <__kernel_tanf+0x188>
 8008fe8:	ed9f 6a45 	vldr	s12, [pc, #276]	; 8009100 <__kernel_tanf+0x18c>
 8008fec:	ed9f 5a45 	vldr	s10, [pc, #276]	; 8009104 <__kernel_tanf+0x190>
 8008ff0:	493e      	ldr	r1, [pc, #248]	; (80090ec <__kernel_tanf+0x178>)
 8008ff2:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8008ff6:	428a      	cmp	r2, r1
 8008ff8:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8008ffc:	eea7 6a25 	vfma.f32	s12, s14, s11
 8009000:	eddf 5a41 	vldr	s11, [pc, #260]	; 8009108 <__kernel_tanf+0x194>
 8009004:	eee6 5a07 	vfma.f32	s11, s12, s14
 8009008:	ed9f 6a40 	vldr	s12, [pc, #256]	; 800910c <__kernel_tanf+0x198>
 800900c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8009010:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8009110 <__kernel_tanf+0x19c>
 8009014:	eee6 5a07 	vfma.f32	s11, s12, s14
 8009018:	ed9f 6a3e 	vldr	s12, [pc, #248]	; 8009114 <__kernel_tanf+0x1a0>
 800901c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8009020:	eddf 5a3d 	vldr	s11, [pc, #244]	; 8009118 <__kernel_tanf+0x1a4>
 8009024:	eee7 5a05 	vfma.f32	s11, s14, s10
 8009028:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 800911c <__kernel_tanf+0x1a8>
 800902c:	eea5 5a87 	vfma.f32	s10, s11, s14
 8009030:	eddf 5a3b 	vldr	s11, [pc, #236]	; 8009120 <__kernel_tanf+0x1ac>
 8009034:	eee5 5a07 	vfma.f32	s11, s10, s14
 8009038:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 8009124 <__kernel_tanf+0x1b0>
 800903c:	eea5 5a87 	vfma.f32	s10, s11, s14
 8009040:	eddf 5a39 	vldr	s11, [pc, #228]	; 8009128 <__kernel_tanf+0x1b4>
 8009044:	eee5 5a07 	vfma.f32	s11, s10, s14
 8009048:	eeb0 7a46 	vmov.f32	s14, s12
 800904c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8009050:	ee27 5aa6 	vmul.f32	s10, s15, s13
 8009054:	eeb0 6a60 	vmov.f32	s12, s1
 8009058:	eea7 6a05 	vfma.f32	s12, s14, s10
 800905c:	ed9f 7a33 	vldr	s14, [pc, #204]	; 800912c <__kernel_tanf+0x1b8>
 8009060:	eee6 0a26 	vfma.f32	s1, s12, s13
 8009064:	eee5 0a07 	vfma.f32	s1, s10, s14
 8009068:	ee37 7aa0 	vadd.f32	s14, s15, s1
 800906c:	db1d      	blt.n	80090aa <__kernel_tanf+0x136>
 800906e:	ee06 0a90 	vmov	s13, r0
 8009072:	eeb8 0ae6 	vcvt.f32.s32	s0, s13
 8009076:	ee27 6a07 	vmul.f32	s12, s14, s14
 800907a:	ee37 7a00 	vadd.f32	s14, s14, s0
 800907e:	179b      	asrs	r3, r3, #30
 8009080:	eec6 6a07 	vdiv.f32	s13, s12, s14
 8009084:	f003 0302 	and.w	r3, r3, #2
 8009088:	f1c3 0301 	rsb	r3, r3, #1
 800908c:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 8009090:	ee76 0ae0 	vsub.f32	s1, s13, s1
 8009094:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8009098:	eea7 0ac7 	vfms.f32	s0, s15, s14
 800909c:	ee07 3a90 	vmov	s15, r3
 80090a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090a4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80090a8:	e77c      	b.n	8008fa4 <__kernel_tanf+0x30>
 80090aa:	2801      	cmp	r0, #1
 80090ac:	d01b      	beq.n	80090e6 <__kernel_tanf+0x172>
 80090ae:	4b20      	ldr	r3, [pc, #128]	; (8009130 <__kernel_tanf+0x1bc>)
 80090b0:	ee17 2a10 	vmov	r2, s14
 80090b4:	401a      	ands	r2, r3
 80090b6:	ee06 2a10 	vmov	s12, r2
 80090ba:	ee76 7a67 	vsub.f32	s15, s12, s15
 80090be:	ee70 0ae7 	vsub.f32	s1, s1, s15
 80090c2:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80090c6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80090ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80090ce:	ee16 2a90 	vmov	r2, s13
 80090d2:	4013      	ands	r3, r2
 80090d4:	ee07 3a90 	vmov	s15, r3
 80090d8:	eea6 7a27 	vfma.f32	s14, s12, s15
 80090dc:	eea0 7aa7 	vfma.f32	s14, s1, s15
 80090e0:	eee7 7a26 	vfma.f32	s15, s14, s13
 80090e4:	e75e      	b.n	8008fa4 <__kernel_tanf+0x30>
 80090e6:	eef0 7a47 	vmov.f32	s15, s14
 80090ea:	e75b      	b.n	8008fa4 <__kernel_tanf+0x30>
 80090ec:	3f2ca140 	.word	0x3f2ca140
 80090f0:	3f490fda 	.word	0x3f490fda
 80090f4:	33222168 	.word	0x33222168
 80090f8:	00000000 	.word	0x00000000
 80090fc:	b79bae5f 	.word	0xb79bae5f
 8009100:	38a3f445 	.word	0x38a3f445
 8009104:	37d95384 	.word	0x37d95384
 8009108:	3a1a26c8 	.word	0x3a1a26c8
 800910c:	3b6b6916 	.word	0x3b6b6916
 8009110:	3cb327a4 	.word	0x3cb327a4
 8009114:	3e088889 	.word	0x3e088889
 8009118:	3895c07a 	.word	0x3895c07a
 800911c:	398137b9 	.word	0x398137b9
 8009120:	3abede48 	.word	0x3abede48
 8009124:	3c11371f 	.word	0x3c11371f
 8009128:	3d5d0dd1 	.word	0x3d5d0dd1
 800912c:	3eaaaaab 	.word	0x3eaaaaab
 8009130:	fffff000 	.word	0xfffff000

08009134 <floorf>:
 8009134:	ee10 3a10 	vmov	r3, s0
 8009138:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 800913c:	3a7f      	subs	r2, #127	; 0x7f
 800913e:	2a16      	cmp	r2, #22
 8009140:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8009144:	dc2a      	bgt.n	800919c <floorf+0x68>
 8009146:	2a00      	cmp	r2, #0
 8009148:	da11      	bge.n	800916e <floorf+0x3a>
 800914a:	eddf 7a18 	vldr	s15, [pc, #96]	; 80091ac <floorf+0x78>
 800914e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8009152:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8009156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800915a:	dd05      	ble.n	8009168 <floorf+0x34>
 800915c:	2b00      	cmp	r3, #0
 800915e:	da23      	bge.n	80091a8 <floorf+0x74>
 8009160:	4a13      	ldr	r2, [pc, #76]	; (80091b0 <floorf+0x7c>)
 8009162:	2900      	cmp	r1, #0
 8009164:	bf18      	it	ne
 8009166:	4613      	movne	r3, r2
 8009168:	ee00 3a10 	vmov	s0, r3
 800916c:	4770      	bx	lr
 800916e:	4911      	ldr	r1, [pc, #68]	; (80091b4 <floorf+0x80>)
 8009170:	4111      	asrs	r1, r2
 8009172:	420b      	tst	r3, r1
 8009174:	d0fa      	beq.n	800916c <floorf+0x38>
 8009176:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80091ac <floorf+0x78>
 800917a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800917e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8009182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009186:	ddef      	ble.n	8009168 <floorf+0x34>
 8009188:	2b00      	cmp	r3, #0
 800918a:	bfbe      	ittt	lt
 800918c:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8009190:	fa40 f202 	asrlt.w	r2, r0, r2
 8009194:	189b      	addlt	r3, r3, r2
 8009196:	ea23 0301 	bic.w	r3, r3, r1
 800919a:	e7e5      	b.n	8009168 <floorf+0x34>
 800919c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80091a0:	d3e4      	bcc.n	800916c <floorf+0x38>
 80091a2:	ee30 0a00 	vadd.f32	s0, s0, s0
 80091a6:	4770      	bx	lr
 80091a8:	2300      	movs	r3, #0
 80091aa:	e7dd      	b.n	8009168 <floorf+0x34>
 80091ac:	7149f2ca 	.word	0x7149f2ca
 80091b0:	bf800000 	.word	0xbf800000
 80091b4:	007fffff 	.word	0x007fffff

080091b8 <scalbnf>:
 80091b8:	ee10 3a10 	vmov	r3, s0
 80091bc:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 80091c0:	d025      	beq.n	800920e <scalbnf+0x56>
 80091c2:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80091c6:	d302      	bcc.n	80091ce <scalbnf+0x16>
 80091c8:	ee30 0a00 	vadd.f32	s0, s0, s0
 80091cc:	4770      	bx	lr
 80091ce:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 80091d2:	d122      	bne.n	800921a <scalbnf+0x62>
 80091d4:	4b2a      	ldr	r3, [pc, #168]	; (8009280 <scalbnf+0xc8>)
 80091d6:	eddf 7a2b 	vldr	s15, [pc, #172]	; 8009284 <scalbnf+0xcc>
 80091da:	4298      	cmp	r0, r3
 80091dc:	ee20 0a27 	vmul.f32	s0, s0, s15
 80091e0:	db16      	blt.n	8009210 <scalbnf+0x58>
 80091e2:	ee10 3a10 	vmov	r3, s0
 80091e6:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80091ea:	3a19      	subs	r2, #25
 80091ec:	4402      	add	r2, r0
 80091ee:	2afe      	cmp	r2, #254	; 0xfe
 80091f0:	dd15      	ble.n	800921e <scalbnf+0x66>
 80091f2:	ee10 3a10 	vmov	r3, s0
 80091f6:	eddf 7a24 	vldr	s15, [pc, #144]	; 8009288 <scalbnf+0xd0>
 80091fa:	eddf 6a24 	vldr	s13, [pc, #144]	; 800928c <scalbnf+0xd4>
 80091fe:	2b00      	cmp	r3, #0
 8009200:	eeb0 7a67 	vmov.f32	s14, s15
 8009204:	bfb8      	it	lt
 8009206:	eef0 7a66 	vmovlt.f32	s15, s13
 800920a:	ee27 0a27 	vmul.f32	s0, s14, s15
 800920e:	4770      	bx	lr
 8009210:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8009290 <scalbnf+0xd8>
 8009214:	ee20 0a27 	vmul.f32	s0, s0, s15
 8009218:	4770      	bx	lr
 800921a:	0dd2      	lsrs	r2, r2, #23
 800921c:	e7e6      	b.n	80091ec <scalbnf+0x34>
 800921e:	2a00      	cmp	r2, #0
 8009220:	dd06      	ble.n	8009230 <scalbnf+0x78>
 8009222:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8009226:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 800922a:	ee00 3a10 	vmov	s0, r3
 800922e:	4770      	bx	lr
 8009230:	f112 0f16 	cmn.w	r2, #22
 8009234:	da1a      	bge.n	800926c <scalbnf+0xb4>
 8009236:	f24c 3350 	movw	r3, #50000	; 0xc350
 800923a:	4298      	cmp	r0, r3
 800923c:	ee10 3a10 	vmov	r3, s0
 8009240:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8009244:	dd0a      	ble.n	800925c <scalbnf+0xa4>
 8009246:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8009288 <scalbnf+0xd0>
 800924a:	ed9f 7a10 	vldr	s14, [pc, #64]	; 800928c <scalbnf+0xd4>
 800924e:	eef0 7a40 	vmov.f32	s15, s0
 8009252:	2b00      	cmp	r3, #0
 8009254:	bf18      	it	ne
 8009256:	eeb0 0a47 	vmovne.f32	s0, s14
 800925a:	e7db      	b.n	8009214 <scalbnf+0x5c>
 800925c:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 8009290 <scalbnf+0xd8>
 8009260:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 8009294 <scalbnf+0xdc>
 8009264:	eef0 7a40 	vmov.f32	s15, s0
 8009268:	2b00      	cmp	r3, #0
 800926a:	e7f3      	b.n	8009254 <scalbnf+0x9c>
 800926c:	3219      	adds	r2, #25
 800926e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8009272:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8009276:	eddf 7a08 	vldr	s15, [pc, #32]	; 8009298 <scalbnf+0xe0>
 800927a:	ee07 3a10 	vmov	s14, r3
 800927e:	e7c4      	b.n	800920a <scalbnf+0x52>
 8009280:	ffff3cb0 	.word	0xffff3cb0
 8009284:	4c000000 	.word	0x4c000000
 8009288:	7149f2ca 	.word	0x7149f2ca
 800928c:	f149f2ca 	.word	0xf149f2ca
 8009290:	0da24260 	.word	0x0da24260
 8009294:	8da24260 	.word	0x8da24260
 8009298:	33000000 	.word	0x33000000

0800929c <_init>:
 800929c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800929e:	bf00      	nop
 80092a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80092a2:	bc08      	pop	{r3}
 80092a4:	469e      	mov	lr, r3
 80092a6:	4770      	bx	lr

080092a8 <_fini>:
 80092a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80092aa:	bf00      	nop
 80092ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80092ae:	bc08      	pop	{r3}
 80092b0:	469e      	mov	lr, r3
 80092b2:	4770      	bx	lr
